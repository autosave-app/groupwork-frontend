{"version":3,"file":"static/chunks/1861-5b7e81a014bcbd77.js","mappings":"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","sources":["webpack://_N_E/./components/CollectivePickerInviteMenu.js","webpack://_N_E/./components/CollectiveTypePicker.js","webpack://_N_E/./components/CollectivePicker.js","webpack://_N_E/./components/CreateCollectiveMiniForm.tsx","webpack://_N_E/./lib/geolocation_api.js","webpack://_N_E/./components/InputTypeCountry.js","webpack://_N_E/./components/StyledInputFormikField.js","webpack://_N_E/./lib/form-utils.js","webpack://_N_E/./lib/i18n/index.js","webpack://_N_E/./lib/react-utils.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PlusCircle } from '@styled-icons/feather/PlusCircle';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Box, Flex } from './Grid';\nimport Image from './Image';\nimport StyledButton from './StyledButton';\nimport { Span } from './Text';\n\nexport const InviteCollectiveDropdownOption = ({ onClick, isSearching }) => (\n  <Flex flexDirection=\"column\">\n    {isSearching && (\n      <Flex mb=\"16px\">\n        <Image alt=\"\" width={48} height={48} src=\"/static/images/magnifier.png\" />\n        <Box ml=\"16px\">\n          <Span fontSize=\"12px\" fontWeight=\"700\" color=\"black.800\">\n            <FormattedMessage\n              id=\"CollectivePicker.InviteMenu.Description\"\n              defaultMessage=\"Not found. You can invite or create a new profile.\"\n            />\n          </Span>\n        </Box>\n      </Flex>\n    )}\n    <StyledButton borderRadius=\"14px\" onClick={onClick} data-cy=\"collective-picker-invite-button\">\n      <Flex alignItems=\"center\">\n        <PlusCircle size={24} />\n        <Box ml=\"16px\" fontSize=\"11px\">\n          <FormattedMessage\n            id=\"CollectivePicker.InviteMenu.ButtonLabel\"\n            defaultMessage=\"Invite someone to submit an expense\"\n          />\n        </Box>\n      </Flex>\n    </StyledButton>\n  </Flex>\n);\n\nInviteCollectiveDropdownOption.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  isSearching: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PlusCircle } from '@styled-icons/feather/PlusCircle';\nimport { FormattedMessage } from 'react-intl';\n\nimport { CollectiveType } from '../lib/constants/collectives';\n\nimport { Box, Flex, Grid } from './Grid';\nimport StyledButton from './StyledButton';\n\n/** Return the caption associated to a given collective type */\nconst getTypeCaption = type => {\n  if (type === CollectiveType.USER) {\n    return <FormattedMessage id=\"User.InviteNew\" defaultMessage=\"Invite new User\" />;\n  } else if (type === CollectiveType.ORGANIZATION) {\n    return <FormattedMessage id=\"organization.create\" defaultMessage=\"Create Organization\" />;\n  } else if (type === CollectiveType.COLLECTIVE) {\n    return <FormattedMessage id=\"collective.create\" defaultMessage=\"Create Collective\" />;\n  } else {\n    return null;\n  }\n};\n\n/**\n * A component showing big buttons to pick between collective types (user, org...etc)\n */\nconst CollectiveTypePicker = ({ types, onChange }) => {\n  const isSingleType = types.length === 1;\n  return (\n    <Grid gridGap={1} gridTemplateColumns={`repeat(${types.length}, 1fr)`}>\n      {types.map(type => (\n        <StyledButton\n          key={type}\n          borderRadius=\"14px\"\n          onClick={() => onChange(type)}\n          data-cy={`collective-type-picker-${type}`}\n        >\n          <Flex alignItems=\"center\" flexDirection={isSingleType ? 'row' : 'column'}>\n            <PlusCircle size={24} />\n            <Box ml={isSingleType ? '16px' : 0} fontSize=\"11px\">\n              {getTypeCaption(type)}\n            </Box>\n          </Flex>\n        </StyledButton>\n      ))}\n    </Grid>\n  );\n};\n\nCollectiveTypePicker.propTypes = {\n  /** List of allowed types for this collective creator */\n  types: PropTypes.arrayOf(PropTypes.oneOf(Object.values(CollectiveType))).isRequired,\n  /** Called when user pick a button */\n  onChange: PropTypes.func.isRequired,\n};\n\nCollectiveTypePicker.defaultProps = {\n  types: [CollectiveType.USER, CollectiveType.COLLECTIVE, CollectiveType.ORGANIZATION],\n};\n\nexport default CollectiveTypePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { groupBy, intersection, isEqual, last, sortBy, truncate } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport ReactDOM from 'react-dom';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Manager, Popper, Reference } from 'react-popper';\nimport styled from 'styled-components';\nimport { isEmail } from 'validator';\n\nimport { CollectiveType } from '../lib/constants/collectives';\nimport { mergeRefs } from '../lib/react-utils';\n\nimport Avatar from './Avatar';\nimport { InviteCollectiveDropdownOption } from './CollectivePickerInviteMenu';\nimport CollectiveTypePicker from './CollectiveTypePicker';\nimport Container from './Container';\nimport CreateCollectiveMiniForm from './CreateCollectiveMiniForm';\nimport { Flex } from './Grid';\nimport StyledCard from './StyledCard';\nimport StyledSelect from './StyledSelect';\nimport { Span } from './Text';\n\nconst CollectiveTypesI18n = defineMessages({\n  [CollectiveType.COLLECTIVE]: {\n    id: 'collective.types.collective',\n    defaultMessage: '{n, plural, one {Collective} other {Collectives}}',\n  },\n  [CollectiveType.ORGANIZATION]: {\n    id: 'collective.types.organization',\n    defaultMessage: '{n, plural, one {Organization} other {Organizations}}',\n  },\n  [CollectiveType.USER]: {\n    id: 'collective.types.user',\n    defaultMessage: '{n, plural, one {person} other {people}}',\n  },\n});\n\nconst Messages = defineMessages({\n  createNew: {\n    id: 'CollectivePicker.CreateNew',\n    defaultMessage: 'Create new',\n  },\n  inviteNew: {\n    id: 'CollectivePicker.InviteNew',\n    defaultMessage: 'Invite new',\n  },\n});\n\nconst CollectiveLabelTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  margin-left: 8px;\n`;\n\n/**\n * Default label builder used to render a collective. For sections titles and custom options,\n * this will just return the default label.\n */\nexport const DefaultCollectiveLabel = ({ value: collective }) => (\n  <Flex alignItems=\"center\">\n    <Avatar collective={collective} radius={16} />\n    <CollectiveLabelTextContainer>\n      <Span fontSize=\"12px\" fontWeight=\"500\" lineHeight=\"18px\" color=\"black.700\">\n        {truncate(collective.name, { length: 40 })}\n      </Span>\n      <Span fontSize=\"11px\" lineHeight=\"13px\" color=\"black.500\">\n        {collective.slug ? `@${collective.slug}` : collective.email || ''}\n      </Span>\n    </CollectiveLabelTextContainer>\n  </Flex>\n);\n\nDefaultCollectiveLabel.propTypes = {\n  value: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.string,\n    name: PropTypes.string,\n    slug: PropTypes.string,\n    imageUrl: PropTypes.string,\n    email: PropTypes.string,\n  }),\n};\n\n// Some flags to differentiate options in the picker\nexport const FLAG_COLLECTIVE_PICKER_COLLECTIVE = '__collective_picker_collective__';\nexport const FLAG_NEW_COLLECTIVE = '__collective_picker_new__';\nconst FLAG_INVITE_NEW = '__collective_picker_invite_new__';\n\nexport const CUSTOM_OPTIONS_POSITION = {\n  TOP: 'TOP',\n  BOTTOM: 'BOTTOM',\n};\n\nconst { USER, ORGANIZATION, COLLECTIVE, FUND, EVENT, PROJECT } = CollectiveType;\n\nconst sortedAccountTypes = ['INDIVIDUAL', USER, ORGANIZATION, COLLECTIVE, FUND, EVENT, PROJECT];\n\n/**\n * An overset og `StyledSelect` specialized to display, filter and pick a collective from a given list.\n * Accepts all the props from [StyledSelect](#!/StyledSelect).\n *\n * If you want the collectives to be automatically loaded from the API, check `CollectivePickerAsync`.\n */\nclass CollectivePicker extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.containerRef = React.createRef();\n    this.state = {\n      createFormCollectiveType: null,\n      displayInviteMenu: null,\n      menuIsOpen: props.menuIsOpen,\n      createdCollectives: [],\n      searchText: '',\n    };\n  }\n\n  /**\n   * Function to generate a single select option\n   */\n  buildCollectiveOption(collective) {\n    if (collective === null) {\n      return null;\n    } else {\n      return { value: collective, label: collective.name, [FLAG_COLLECTIVE_PICKER_COLLECTIVE]: true };\n    }\n  }\n\n  /**\n   * From a collectives list, returns a list of options that can be provided to a `StyledSelect`.\n   *\n   * @param {Array|null} collectives\n   * @param {Boolean} groupByType\n   * @param {function} sortFunc\n   * @param {object} intl\n   */\n  getOptionsFromCollectives = memoizeOne((collectives, groupByType, sortFunc, intl) => {\n    if (!collectives || collectives.length === 0) {\n      return [];\n    }\n\n    // If not grouped, just sort the collectives by names and return their options\n    if (!groupByType) {\n      return sortFunc(collectives).map(this.buildCollectiveOption);\n    }\n\n    // Group collectives under categories, sort the categories labels and the collectives inside them\n    const collectivesByTypes = groupBy(collectives, 'type');\n    const sortedActiveTypes = intersection(sortedAccountTypes, Object.keys(collectivesByTypes));\n\n    return sortedActiveTypes.map(type => {\n      const sectionI18n = CollectiveTypesI18n[type];\n      const sortedCollectives = sortFunc(collectivesByTypes[type]);\n      const sectionLabel = sectionI18n ? intl.formatMessage(sectionI18n, { n: sortedCollectives.length }) : type;\n      return {\n        label: sectionLabel || '',\n        options: sortedCollectives.map(this.buildCollectiveOption),\n      };\n    });\n  });\n\n  getAllOptions = memoizeOne((collectivesOptions, customOptions, createdCollectives) => {\n    const { creatable, invitable, intl, customOptionsPosition } = this.props;\n    let options = collectivesOptions;\n\n    if (createdCollectives.length > 0) {\n      options = [...createdCollectives.map(this.buildCollectiveOption), ...options];\n    }\n\n    if (customOptions && customOptions.length > 0) {\n      options =\n        customOptionsPosition === CUSTOM_OPTIONS_POSITION.TOP\n          ? [...customOptions, ...options]\n          : [...options, ...customOptions];\n    }\n\n    if (invitable) {\n      options = [\n        ...options,\n        {\n          label: intl.formatMessage(Messages.inviteNew).toUpperCase(),\n          options: [\n            {\n              label: null,\n              value: null,\n              isDisabled: true,\n              [FLAG_INVITE_NEW]: true,\n              __background__: 'white',\n            },\n          ],\n        },\n      ];\n    }\n    if (creatable) {\n      const isOnlyForUser = isEqual(this.props.types, [CollectiveType.USER]);\n      options = [\n        ...options,\n        {\n          label: isOnlyForUser\n            ? intl.formatMessage(Messages.inviteNew).toUpperCase()\n            : intl.formatMessage(Messages.createNew).toUpperCase(),\n          options: [\n            {\n              label: null,\n              value: null,\n              isDisabled: true,\n              [FLAG_NEW_COLLECTIVE]: true,\n              __background__: 'white',\n            },\n          ],\n        },\n      ];\n    }\n\n    return options;\n  });\n\n  onChange = (...args) => {\n    this.props.onChange(...args);\n    if (this.state.showCreatedCollective) {\n      this.setState({ showCreatedCollective: false });\n    }\n  };\n\n  onInputChange = newTerm => {\n    this.props.onInputChange?.(newTerm);\n    this.setState({ searchText: newTerm });\n  };\n\n  setCreateFormCollectiveType = type => {\n    this.setState({ createFormCollectiveType: type || null });\n  };\n\n  getMenuIsOpen(menuIsOpenFromProps) {\n    if (this.state.createFormCollectiveType || this.props.isDisabled) {\n      return false;\n    } else if (typeof menuIsOpenFromProps !== 'undefined') {\n      return menuIsOpenFromProps;\n    } else {\n      return this.state.menuIsOpen;\n    }\n  }\n\n  openMenu = () => this.setState({ menuIsOpen: true });\n\n  closeMenu = () => this.setState({ menuIsOpen: false });\n\n  getDefaultOption = (getDefaultOptionsFromProps, allOptions) => {\n    if (this.state.createdCollective) {\n      return this.buildCollectiveOption(this.state.createdCollective);\n    } else if (getDefaultOptionsFromProps) {\n      return getDefaultOptionsFromProps(this.buildCollectiveOption, allOptions);\n    }\n  };\n\n  getValue = () => {\n    if (this.props.collective !== undefined) {\n      return this.buildCollectiveOption(this.props.collective);\n    } else if (this.state.showCreatedCollective) {\n      return this.buildCollectiveOption(last(this.state.createdCollectives));\n    } else {\n      return this.props.getOptions(this.buildCollectiveOption);\n    }\n  };\n\n  render() {\n    const {\n      inputId,\n      intl,\n      collectives,\n      customOptions,\n      formatOptionLabel,\n      getDefaultOptions,\n      groupByType,\n      onChange,\n      onInvite,\n      sortFunc,\n      types,\n      isDisabled,\n      menuIsOpen,\n      minWidth,\n      maxWidth,\n      width,\n      addLoggedInUserAsAdmin,\n      renderNewCollectiveOption,\n      isSearchable,\n      ...props\n    } = this.props;\n    const { createFormCollectiveType, createdCollectives, displayInviteMenu, searchText } = this.state;\n    const collectiveOptions = this.getOptionsFromCollectives(collectives, groupByType, sortFunc, intl);\n    const allOptions = this.getAllOptions(collectiveOptions, customOptions, createdCollectives);\n    const prefillValue = isEmail(searchText) ? { email: searchText } : { name: searchText };\n\n    return (\n      <Manager>\n        <Reference>\n          {({ ref }) => (\n            <Container\n              position=\"relative\"\n              minWidth={minWidth}\n              maxWidth={maxWidth}\n              width={width}\n              ref={mergeRefs([this.containerRef, ref])}\n            >\n              <StyledSelect\n                inputId={inputId}\n                options={allOptions}\n                defaultValue={getDefaultOptions && getDefaultOptions(this.buildCollectiveOption, allOptions)}\n                menuIsOpen={this.getMenuIsOpen(menuIsOpen)}\n                isDisabled={Boolean(createFormCollectiveType) || displayInviteMenu || isDisabled}\n                onMenuOpen={this.openMenu}\n                onMenuClose={this.closeMenu}\n                value={this.getValue()}\n                onChange={this.onChange}\n                noOptionsMessage={searchText ? undefined : () => null}\n                isSearchable={isSearchable ?? true}\n                formatOptionLabel={(option, context) => {\n                  if (option[FLAG_COLLECTIVE_PICKER_COLLECTIVE]) {\n                    return formatOptionLabel(option, context, intl);\n                  } else if (option[FLAG_NEW_COLLECTIVE]) {\n                    return renderNewCollectiveOption ? (\n                      renderNewCollectiveOption()\n                    ) : (\n                      <CollectiveTypePicker onChange={this.setCreateFormCollectiveType} types={option.types || types} />\n                    );\n                  } else if (option[FLAG_INVITE_NEW]) {\n                    return (\n                      <InviteCollectiveDropdownOption\n                        isSearching={!!searchText && !collectives.length}\n                        onClick={() => {\n                          onInvite?.(true);\n                          onChange?.({ label: null, value: null });\n                          this.setState({ menuIsOpen: false });\n                        }}\n                      />\n                    );\n                  } else {\n                    return option.label;\n                  }\n                }}\n                {...props}\n                onInputChange={this.onInputChange}\n              />\n            </Container>\n          )}\n        </Reference>\n        {createFormCollectiveType &&\n          ReactDOM.createPortal(\n            <Popper placement=\"bottom\">\n              {({ placement, ref, style }) => (\n                <div\n                  data-placement={placement}\n                  ref={ref}\n                  style={{\n                    ...style,\n                    width: this.containerRef.current.clientWidth,\n                    zIndex: 9999,\n                  }}\n                >\n                  <StyledCard\n                    p={3}\n                    my={1}\n                    boxShadow=\"-2px 4px 7px 0 rgba(78, 78, 78, 14%)\"\n                    maxHeight={315}\n                    overflowY=\"auto\"\n                    data-cy=\"collective-mini-form-scroll\"\n                    {...this.props.styles?.menu}\n                  >\n                    {createFormCollectiveType && (\n                      <CreateCollectiveMiniForm\n                        type={createFormCollectiveType}\n                        onCancel={this.setCreateFormCollectiveType}\n                        addLoggedInUserAsAdmin={addLoggedInUserAsAdmin}\n                        excludeAdminFields={this.props.excludeAdminFields}\n                        optionalFields={this.props.createCollectiveOptionalFields}\n                        onSuccess={collective => {\n                          if (onChange) {\n                            onChange({ label: collective.name, value: collective, isNew: true });\n                          }\n                          this.setState(state => ({\n                            menuIsOpen: false,\n                            createFormCollectiveType: null,\n                            createdCollectives: [...state.createdCollectives, collective],\n                            showCreatedCollective: true,\n                          }));\n                        }}\n                        {...prefillValue}\n                      />\n                    )}\n                  </StyledCard>\n                </div>\n              )}\n            </Popper>,\n            document.body,\n          )}\n      </Manager>\n    );\n  }\n}\n\nCollectivePicker.propTypes = {\n  ...StyledSelect.propTypes,\n  /** The id of the search input */\n  inputId: PropTypes.string.isRequired,\n  /** The list of collectives to display */\n  collectives: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      type: PropTypes.string,\n      name: PropTypes.string,\n    }),\n  ),\n  /** Custom options to be passed to styled select */\n  customOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.node,\n      value: PropTypes.any,\n    }),\n  ),\n  /** Defines if custom options are listed in the top of the list or the bottom */\n  customOptionsPosition: PropTypes.oneOf(Object.values(CUSTOM_OPTIONS_POSITION)),\n  /** Function to sort collectives. Default to sorty by name */\n  sortFunc: PropTypes.func,\n  /** Called when value changes */\n  onChange: PropTypes.func.isRequired,\n  /** Called when search input text changes  */\n  onInputChange: PropTypes.func,\n  /** Get passed the options list, returns the default one */\n  getDefaultOptions: PropTypes.func.isRequired,\n  /** Use this to control the component */\n  getOptions: PropTypes.func.isRequired,\n  /** Function to generate a label from the collective + index */\n  formatOptionLabel: PropTypes.func.isRequired,\n  /** Whether we should group collectives by type */\n  groupByType: PropTypes.bool,\n  /** If true, a permanent option to create a collective will be displayed in the select */\n  creatable: PropTypes.bool,\n  /** If creatable is true, this will be used to render the \"Create new ...\" */\n  renderNewCollectiveOption: PropTypes.node,\n  /** If true, a permanent option to invite a new user will be displayed in the select */\n  invitable: PropTypes.bool,\n  onInvite: PropTypes.func,\n  /** If true, logged in user will be added as an admin of the created account */\n  addLoggedInUserAsAdmin: PropTypes.bool,\n  excludeAdminFields: PropTypes.bool,\n  /** Force menu to be open. Ignored during collective creation */\n  menuIsOpen: PropTypes.bool,\n  /** Disabled */\n  isDisabled: PropTypes.bool,\n  /** Component min width */\n  minWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Component max width */\n  maxWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Component width */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** If creatable is true, only these types will be displayed in the create form */\n  types: PropTypes.arrayOf(PropTypes.oneOf(Object.values(CollectiveType))),\n  /** @ignore from injectIntl */\n  intl: PropTypes.object,\n  /** Use this to control the value of the component */\n  collective: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  /** A list of optional fields to include in the form */\n  createCollectiveOptionalFields: PropTypes.array,\n  /** StyledSelect pass-through property */\n  styles: PropTypes.object,\n};\n\nCollectivePicker.defaultProps = {\n  groupByType: true,\n  getDefaultOptions: () => undefined,\n  getOptions: () => undefined,\n  formatOptionLabel: DefaultCollectiveLabel,\n  sortFunc: collectives => sortBy(collectives, 'name'),\n};\n\nexport default injectIntl(CollectivePicker);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/client';\nimport { Field, Form, Formik } from 'formik';\nimport { assign, cloneDeep, get, pick } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { CollectiveType } from '../lib/constants/collectives';\nimport roles from '../lib/constants/roles';\nimport { i18nGraphqlException } from '../lib/errors';\nimport { gqlV1 } from '../lib/graphql/helpers';\nimport { isValidEmail } from '../lib/utils';\n\nimport Container from './Container';\nimport { Box } from './Grid';\nimport InputTypeCountry from './InputTypeCountry';\nimport MessageBox from './MessageBox';\nimport StyledButton from './StyledButton';\nimport StyledInput from './StyledInput';\nimport StyledInputField from './StyledInputField';\nimport StyledInputFormikField from './StyledInputFormikField';\nimport StyledTextarea from './StyledTextarea';\nimport { H5 } from './Text';\nimport { withUser } from './UserProvider';\n\nconst CreateNewMessages = defineMessages({\n  [CollectiveType.COLLECTIVE]: {\n    id: 'Collective.CreateNew',\n    defaultMessage: 'Create new Collective',\n  },\n  [CollectiveType.USER]: {\n    id: 'User.InviteNew',\n    defaultMessage: 'Invite new User',\n  },\n  [CollectiveType.EVENT]: {\n    id: 'Event.CreateNew',\n    defaultMessage: 'Create new Event',\n  },\n  [CollectiveType.ORGANIZATION]: {\n    id: 'Organization.CreateNew',\n    defaultMessage: 'Create new Organization',\n  },\n});\n\nconst msg = defineMessages({\n  emailTitle: {\n    id: 'User.EmailAddress',\n    defaultMessage: 'Email address',\n  },\n  adminEmail: {\n    id: 'NewOrganization.Admin.Email',\n    defaultMessage: 'Admin email address',\n  },\n  adminName: {\n    id: 'NewOrganization.Admin.Name',\n    defaultMessage: 'Admin name',\n  },\n  legalName: {\n    id: 'LegalName',\n    defaultMessage: 'Legal Name',\n  },\n  displayName: {\n    id: 'Fields.displayName',\n    defaultMessage: 'Display name',\n  },\n  website: {\n    id: 'Fields.website',\n    defaultMessage: 'Website',\n  },\n  cancel: {\n    id: 'actions.cancel',\n    defaultMessage: 'Cancel',\n  },\n  save: {\n    id: 'save',\n    defaultMessage: 'Save',\n  },\n  saveUser: {\n    id: 'InviteUser',\n    defaultMessage: 'Invite user',\n  },\n  invalidEmail: {\n    id: 'error.email.invalid',\n    defaultMessage: 'Invalid email address',\n  },\n  invalidWebsite: {\n    id: 'error.website.invalid',\n    defaultMessage: 'Invalid website address',\n  },\n  invalidName: {\n    id: 'error.name.invalid',\n    defaultMessage: 'Name is required',\n  },\n  examples: {\n    id: 'examples',\n    defaultMessage: 'e.g., {examples}',\n  },\n});\n\nconst labels = defineMessages({\n  'location.address': {\n    id: 'collective.address.label',\n    defaultMessage: 'Address',\n  },\n  'location.country': {\n    id: 'collective.country.label',\n    defaultMessage: 'Country',\n  },\n});\n\n/** Prepare mutation variables based on collective type */\nconst prepareMutationVariables = collective => {\n  const includeLocation = collective.location?.address || collective.location?.country;\n  const locationFields = includeLocation ? ['location.address', 'location.country'] : [];\n\n  if (collective.type === CollectiveType.USER) {\n    return { user: pick(collective, ['name', 'legalName', 'email', ...locationFields]) };\n  } else if (collective.type === CollectiveType.ORGANIZATION) {\n    collective.members.forEach(member => (member.role = roles.ADMIN));\n    return { collective: pick(collective, ['name', 'legalName', 'type', 'website', 'members', ...locationFields]) };\n  } else {\n    return { collective: pick(collective, ['name', 'type', 'website', ...locationFields]) };\n  }\n};\n\nconst createCollectiveMutation = gqlV1`\n  mutation CreateCollective($collective: CollectiveInputType!) {\n    createCollective(collective: $collective) {\n      id\n      name\n      legalName\n      slug\n      type\n      imageUrl(height: 64)\n      location {\n        id\n        address\n        country\n      }\n      members {\n        id\n        role\n        member {\n          id\n          slug\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst createUserMutation = gqlV1`\n  mutation CreateUser($user: UserInputType!) {\n    createUser(user: $user, throwIfExists: false, sendSignInLink: false) {\n      user {\n        id\n        collective {\n          id\n          name\n          legalName\n          slug\n          type\n          location {\n            id\n            address\n            country\n          }\n          imageUrl(height: 64)\n          ... on User {\n            email\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * A mini-form to create collectives/orgs/users. Meant to be embed in popups or\n * small component where we want to provide just the essential fields.\n */\nconst CreateCollectiveMiniForm = ({\n  type,\n  onCancel,\n  onSuccess,\n  addLoggedInUserAsAdmin,\n  LoggedInUser,\n  refetchLoggedInUser,\n  excludeAdminFields,\n  optionalFields,\n  email = '',\n  name = '',\n}) => {\n  const isUser = type === CollectiveType.USER;\n  const isCollective = type === CollectiveType.COLLECTIVE;\n  const isOrganization = type === CollectiveType.ORGANIZATION;\n  const noAdminFields = isOrganization && excludeAdminFields;\n  const mutation = isUser ? createUserMutation : createCollectiveMutation;\n  const [createCollective, { error: submitError }] = useMutation(mutation);\n  const intl = useIntl();\n  const { formatMessage } = intl;\n\n  const initialValues = {\n    members: [{ member: { email, name } }],\n    email,\n    name,\n    website: '',\n  };\n\n  const validate = values => {\n    const errors: Record<string, unknown> = {};\n\n    if (isOrganization && !excludeAdminFields) {\n      if (!get(values, 'members[0].member.email') || !isValidEmail(get(values, 'members[0].member.email'))) {\n        errors.members = [{ member: { email: formatMessage(msg.invalidEmail) } }];\n      }\n      if (!get(values, 'members[0].member.name')) {\n        errors.members\n          ? (errors.members[0].member.name = formatMessage(msg.invalidName))\n          : [{ member: { name: formatMessage(msg.invalidName) } }];\n      }\n    } else if (isUser) {\n      if (!values.email || !isValidEmail(values.email)) {\n        errors.email = formatMessage(msg.invalidEmail);\n      }\n    }\n    if (!values.name) {\n      errors.name = formatMessage(msg.invalidName);\n    }\n\n    return errors;\n  };\n\n  const submit = formValues => {\n    let values;\n    if (excludeAdminFields) {\n      const clonedValues = cloneDeep({ ...formValues, type });\n      const assignAdmin = pick(clonedValues, ['name', 'legalName', 'website', 'type']);\n      values = assign(assignAdmin, { members: [{ member: { id: LoggedInUser.CollectiveId } }] });\n    } else {\n      values = cloneDeep({ ...formValues, type });\n      if (addLoggedInUserAsAdmin && LoggedInUser && values.members) {\n        values.members.push({ member: { id: LoggedInUser.CollectiveId } });\n      }\n    }\n    return createCollective({ variables: prepareMutationVariables(values) }).then(({ data }) => {\n      if (addLoggedInUserAsAdmin) {\n        refetchLoggedInUser();\n      }\n\n      return onSuccess(isUser ? data.createUser.user.collective : data.createCollective);\n    });\n  };\n\n  return (\n    <Formik validate={validate} initialValues={initialValues} onSubmit={submit} validateOnChange={true}>\n      {formik => {\n        const { values, errors, touched, isSubmitting } = formik;\n\n        return (\n          <Form data-cy=\"create-collective-mini-form\">\n            <H5 fontWeight={600}>{CreateNewMessages[type] ? formatMessage(CreateNewMessages[type]) : null}</H5>\n            <Box mt={3}>\n              {(isUser || isOrganization) && !noAdminFields && (\n                <StyledInputField\n                  name={isOrganization ? 'members[0].member.email' : 'email'}\n                  htmlFor={isOrganization ? 'members[0].member.email' : 'email'}\n                  label={formatMessage(isOrganization ? msg.adminEmail : msg.emailTitle)}\n                  error={\n                    isOrganization\n                      ? get(touched, 'members[0].member.email') && get(errors, 'members[0].member.email')\n                      : touched.email && errors.email\n                  }\n                  mt={3}\n                  value={isOrganization ? get(values, 'members[0].member.email') : values.email}\n                >\n                  {inputProps => (\n                    <Field\n                      as={StyledInput}\n                      {...inputProps}\n                      type=\"email\"\n                      width=\"100%\"\n                      placeholder=\"e.g., jane-doe@youremail.com\"\n                      data-cy=\"mini-form-email-field\"\n                    />\n                  )}\n                </StyledInputField>\n              )}\n              {isOrganization && !noAdminFields && (\n                <StyledInputField\n                  autoFocus\n                  name=\"members[0].member.name\"\n                  htmlFor=\"members[0].member.name\"\n                  label={formatMessage(msg.adminName)}\n                  error={get(touched, 'members[0].member.name') && get(errors, 'members[0].member.name')}\n                  mt={3}\n                  value={get(values, 'members[0].member.name')}\n                >\n                  {inputProps => (\n                    <Field as={StyledInput} {...inputProps} width=\"100%\" placeholder=\"e.g., Jane Doe, Frank Zappa\" />\n                  )}\n                </StyledInputField>\n              )}\n              <StyledInputField\n                autoFocus\n                name=\"name\"\n                htmlFor=\"name\"\n                label={formatMessage(msg.displayName)}\n                error={touched.name && errors.name}\n                mt={3}\n                value={values.name}\n              >\n                {inputProps => (\n                  <Field\n                    as={StyledInput}\n                    {...inputProps}\n                    width=\"100%\"\n                    placeholder={\n                      isUser\n                        ? 'e.g., Jane Doe, Frank Zappa'\n                        : isCollective\n                        ? 'e.g., Webpack, Babel'\n                        : 'e.g., AirBnb, TripleByte'\n                    }\n                    data-cy=\"mini-form-name-field\"\n                  />\n                )}\n              </StyledInputField>\n              {(isUser || isOrganization) && (\n                <StyledInputField\n                  name=\"legalName\"\n                  htmlFor=\"legalName\"\n                  required={false}\n                  label={formatMessage(msg.legalName)}\n                  mt={3}\n                  value={values.legalName}\n                  isPrivate={isUser}\n                  hint={\n                    <FormattedMessage\n                      id=\"editCollective.legalName.description\"\n                      defaultMessage=\"Legal names are private and used in receipts, tax forms, payment details on expenses, and other non-public contexts. Legal names are only visible to admins.\"\n                    />\n                  }\n                >\n                  {inputProps => (\n                    <Field\n                      as={StyledInput}\n                      {...inputProps}\n                      placeholder={intl.formatMessage(msg.examples, {\n                        examples: isUser ? 'Jane Mary Doe, Frank Vincent Zappa' : 'Open Collective Inc.',\n                      })}\n                      width=\"100%\"\n                      data-cy=\"mini-form-legalName-field\"\n                    />\n                  )}\n                </StyledInputField>\n              )}\n              {!isUser && (\n                <StyledInputField\n                  name=\"website\"\n                  htmlFor=\"website\"\n                  label={formatMessage(msg.website)}\n                  error={errors.website}\n                  mt={3}\n                  value={values.website}\n                >\n                  {inputProps => (\n                    <Field\n                      as={StyledInput}\n                      {...inputProps}\n                      placeholder=\"e.g., opencollective.com\"\n                      width=\"100%\"\n                      data-cy=\"mini-form-website-field\"\n                    />\n                  )}\n                </StyledInputField>\n              )}\n              {optionalFields?.map(name => (\n                <StyledInputFormikField\n                  key={name}\n                  name={name}\n                  htmlFor={`createCollectiveMiniForm-${name}`}\n                  label={formatMessage(labels[name])}\n                  required={false}\n                  mt={3}\n                >\n                  {({ field, form }) => {\n                    switch (field.name) {\n                      case 'location.address':\n                        return <StyledTextarea {...field} />;\n                      case 'location.country':\n                        return (\n                          <InputTypeCountry\n                            {...field}\n                            inputId=\"location.country\"\n                            onChange={country => form.setFieldValue(name, country)}\n                            maxMenuHeight={95}\n                          />\n                        );\n                      default:\n                        return null;\n                    }\n                  }}\n                </StyledInputFormikField>\n              ))}\n            </Box>\n            {submitError && (\n              <MessageBox type=\"error\" withIcon mt={2}>\n                {i18nGraphqlException(intl, submitError)}\n              </MessageBox>\n            )}\n            <Container\n              display=\"flex\"\n              flexWrap=\"wrap\"\n              justifyContent=\"flex-end\"\n              borderTop=\"1px solid #D7DBE0\"\n              mt={4}\n              pt={3}\n            >\n              <StyledButton mr={2} minWidth={100} onClick={() => onCancel()} disabled={isSubmitting}>\n                {formatMessage(msg.cancel)}\n              </StyledButton>\n              <StyledButton\n                type=\"submit\"\n                buttonStyle=\"primary\"\n                minWidth={100}\n                loading={isSubmitting}\n                data-cy=\"mini-form-save-button\"\n              >\n                {isUser ? formatMessage(msg.saveUser) : formatMessage(msg.save)}\n              </StyledButton>\n            </Container>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nCreateCollectiveMiniForm.propTypes = {\n  /** The collective type to create */\n  type: PropTypes.oneOf(Object.values(CollectiveType)).isRequired,\n  /** Called when cancel is clicked */\n  onCancel: PropTypes.func.isRequired,\n  /** Called with the collective created when the function succeed */\n  onSuccess: PropTypes.func.isRequired,\n  /** If true, the logged in user will be added as an admin of the collective */\n  addLoggedInUserAsAdmin: PropTypes.bool,\n  /** @ignore from withUser */\n  LoggedInUser: PropTypes.object,\n  /** @ignore from withUser */\n  refetchLoggedInUser: PropTypes.func,\n  /** If true, this does not render the 'admin name' and 'admin email' for create org form */\n  excludeAdminFields: PropTypes.bool,\n  /** The collective email */\n  email: PropTypes.string,\n  /** The collective name */\n  name: PropTypes.string,\n  /** A list of optional fields to include in the form */\n  optionalFields: PropTypes.arrayOf(PropTypes.oneOf(['location.address', 'location.country'])),\n};\n\nexport default withUser(CreateCollectiveMiniForm);\n","/**\n * Fetch user geolocation from third party API. It is only meant to be used on\n * client side. If called from server side, this function returns null;\n *\n * @returns countryCode: {string} two-letters ISO code or null if any error occurs\n */\nconst fetchGeoLocation = async () => {\n  if (!process.browser) {\n    return null;\n  }\n\n  try {\n    const response = await fetch('https://wtfismyip.com/json');\n    const body = await response.json();\n    return body.YourFuckingCountryCode;\n  } catch (e) {\n    // Ignore errors\n    return null;\n  }\n};\n\nexport default fetchGeoLocation;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { countryData, getEmojiByCountryCode } from 'country-currency-emoji-flags';\nimport { isUndefined, orderBy } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport fetchGeoLocation from '../lib/geolocation_api';\nimport { getIntlDisplayNames } from '../lib/i18n';\n\nimport { Flex } from './Grid';\nimport StyledSelect from './StyledSelect';\nimport { Span } from './Text';\n\nclass InputTypeCountry extends Component {\n  static propTypes = {\n    /** The id of the search input */\n    inputId: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    name: PropTypes.string,\n    /** To force a specific locale */\n    locale: PropTypes.string,\n    fontSize: PropTypes.string,\n    defaultValue: PropTypes.string,\n    /** Use this to control the component state */\n    value: PropTypes.string,\n    /** Switch between display modes */\n    mode: PropTypes.oneOf(['select', 'underlined']),\n    /** If true, we'll try to autodetect country form the IP */\n    autoDetect: PropTypes.bool,\n    /** From injectIntl */\n    intl: PropTypes.object.isRequired,\n    /** Is this input required? */\n    required: PropTypes.bool,\n    /** Custom options **/\n    customOptions: PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.node,\n        value: PropTypes.any,\n      }),\n    ),\n  };\n\n  static defaultProps = { name: 'country', customOptions: [], fontSize: '14px' };\n\n  constructor(props) {\n    super(props);\n    this.countryNames = getIntlDisplayNames(props.intl.locale, 'region');\n  }\n\n  async componentDidMount() {\n    if (this.props.autoDetect && !this.props.value && !this.props.defaultValue) {\n      const country = await fetchGeoLocation();\n\n      // Country may have been changed by the user by the time geolocation API respond\n      if (country && !this.props.value && !this.props.defaultValue) {\n        this.props.onChange(country);\n      }\n    }\n  }\n\n  generateCountryLabel(locale, countryCode) {\n    const countryName = this.countryNames.of(countryCode);\n    const emoji = getEmojiByCountryCode(countryCode);\n    return (\n      <Flex fontSize={this.props.fontSize} lineHeight=\"20px\" fontWeight=\"500\" title={countryName}>\n        {emoji && <Span>{emoji}</Span>}\n        &nbsp;&nbsp;\n        <Span color=\"black.800\">{countryName}</Span>\n      </Flex>\n    );\n  }\n\n  getOptions = memoizeOne(locale => {\n    const options = Object.keys(countryData).map(code => {\n      return {\n        value: code,\n        country: this.countryNames.of(code),\n        label: this.generateCountryLabel(locale, code),\n      };\n    });\n\n    return [...this.props.customOptions, ...orderBy(options, 'country')];\n  });\n\n  getSelectedOption = memoizeOne((locale, country) => {\n    if (!country) {\n      return null;\n    }\n\n    const code = country.toUpperCase();\n    const customOption = this.props.customOptions.find(customOption => customOption.value === code);\n    return (\n      customOption || {\n        value: code,\n        label: this.generateCountryLabel(locale, code),\n      }\n    );\n  });\n\n  filterOptions(candidate, input) {\n    if (input) {\n      return (\n        candidate.data.country?.toLowerCase()?.includes(input.toLowerCase()) ||\n        candidate.data.value?.toLowerCase() === input.toLowerCase()\n      );\n    }\n    return true;\n  }\n\n  render() {\n    const { defaultValue, value, intl, onChange, locale, name, inputId, ...props } = this.props;\n    return (\n      <StyledSelect\n        name={name}\n        inputId={inputId}\n        minWidth={150}\n        options={this.getOptions(locale || intl.locale, defaultValue)}\n        filterOption={this.filterOptions}\n        onChange={({ value }) => onChange(value)}\n        value={!isUndefined(value) ? this.getSelectedOption(locale || intl.locale, value) : undefined}\n        defaultValue={defaultValue ? this.getSelectedOption(locale || intl.locale, defaultValue) : undefined}\n        placeholder={<FormattedMessage id=\"InputTypeCountry.placeholder\" defaultMessage=\"Please select your country\" />}\n        data-cy=\"country-select\"\n        {...props}\n      />\n    );\n  }\n}\n\nexport default injectIntl(InputTypeCountry);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FastField, Field } from 'formik';\nimport { useIntl } from 'react-intl';\n\nimport { isOCError } from '../lib/errors';\nimport { formatFormErrorMessage } from '../lib/form-utils';\n\nimport Container from './Container';\nimport StyledInputField from './StyledInputField';\nimport { P } from './Text';\n\n/**\n * A special wrapper around `StyledInputField` + Formik's `Field` component.\n * Accept all props from `StyledInputField`.\n */\nconst StyledInputFormikField = ({\n  name,\n  children,\n  validate = undefined,\n  isFastField = false,\n  flex = undefined,\n  width = undefined,\n  display = undefined,\n  ...props\n}) => {\n  const intl = useIntl();\n  const FieldComponent = isFastField ? FastField : Field;\n  const htmlFor = props.htmlFor || `input-${name}`;\n  return (\n    <FieldComponent name={name} validate={validate}>\n      {({ field, form, meta }) => (\n        <Container flex={flex} width={width} display={display}>\n          <StyledInputField error={Boolean(meta.error)} {...props} htmlFor={htmlFor}>\n            <React.Fragment>\n              {children({\n                form,\n                meta,\n                field: {\n                  ...field,\n                  name: name || htmlFor,\n                  id: htmlFor,\n                  type: props.inputType,\n                  disabled: props.disabled,\n                  required: props.required,\n                  error: Boolean(meta.touched && meta.error),\n                },\n              })}\n              {meta.touched && meta.error && (\n                <P display=\"block\" color=\"red.500\" pt={2} fontSize=\"10px\">\n                  {isOCError(meta.error) ? formatFormErrorMessage(intl, meta.error) : meta.error}\n                </P>\n              )}\n            </React.Fragment>\n          </StyledInputField>\n        </Container>\n      )}\n    </FieldComponent>\n  );\n};\n\nStyledInputFormikField.propTypes = {\n  name: PropTypes.string.isRequired,\n  validate: PropTypes.func,\n  isFastField: PropTypes.func,\n  children: PropTypes.func,\n  /** the label's 'for' attribute to be used as the 'name' and 'id' for the input */\n  htmlFor: PropTypes.string,\n  id: PropTypes.string,\n  /** Passed to input as `type`. Adapts layout for checkboxes */\n  inputType: PropTypes.string,\n  /** Show disabled state for field */\n  disabled: PropTypes.bool,\n  /** If set to false, the field will be marked as optional */\n  required: PropTypes.bool,\n  flex: PropTypes.any,\n  display: PropTypes.any,\n  width: PropTypes.any,\n};\n\nexport default StyledInputFormikField;\n","import { get, set } from 'lodash';\nimport { defineMessages } from 'react-intl';\nimport { isEmail, isURL } from 'validator';\n\nimport { createError, ERROR, formatErrorMessage } from './errors';\n\nconst messages = defineMessages({\n  minLength: {\n    id: 'FormError.minLengthRich',\n    defaultMessage: 'Please use more than {count} characters',\n  },\n  maxLength: {\n    id: 'FormError.maxLengthRich',\n    defaultMessage: 'Please use fewer than {count} characters',\n  },\n  notInRange: {\n    defaultMessage: 'Value must be between {min} and {max}',\n  },\n});\n\nconst isEmpty = value => {\n  if (!value) {\n    return true;\n  } else if (Array.isArray(value) && value.length === 0) {\n    return true;\n  } else if (typeof value === 'string' && !value.trim()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * Will return an object of errors for all fields defined in `requiredFields`\n * that are not in `data`.\n */\nexport const requireFields = (data, requiredFields, { stopOnFirstError = false } = {}) => {\n  const errors = {};\n\n  for (const field of requiredFields) {\n    const value = get(data, field);\n    if (isEmpty(value)) {\n      set(errors, field, createError(ERROR.FORM_FIELD_REQUIRED));\n      if (stopOnFirstError) {\n        return errors;\n      }\n    }\n  }\n\n  return errors;\n};\n\nexport const verifyFieldLength = (intl, errors, data, field, min, max) => {\n  // Ignore if there's already an error on the field\n  if (!errors[field]) {\n    const length = get(data, field)?.length || 0;\n    if (length < min) {\n      const message = intl.formatMessage(messages.minLength, { count: min });\n      set(errors, field, createError(ERROR.FORM_FIELD_MIN_LENGTH, { message, hasI18nMessage: true }));\n    } else if (length > max) {\n      const message = intl.formatMessage(messages.maxLength, { count: max });\n      set(errors, field, createError(ERROR.FORM_FIELD_MAX_LENGTH, { message, hasI18nMessage: true }));\n    }\n  }\n\n  return errors;\n};\n\nexport const verifyValueInRange = (intl, errors, data, field, min, max) => {\n  const value = get(data, field);\n\n  // Ignore if there's already an error on the field\n  if (!errors[field] && (value < min || value > max)) {\n    const message = intl.formatMessage(messages.notInRange, { min, max });\n    set(errors, field, createError(ERROR.FORM_FIELD_VALUE_NOT_IN_RANGE, { message, hasI18nMessage: true }));\n  }\n\n  return errors;\n};\n\nexport const verifyChecked = (errors, data, field) => {\n  // Ignore if there's already an error on the field\n  if (!errors[field] && !data[field]) {\n    set(errors, field, createError(ERROR.FORM_FIELD_CHECK_REQUIRED));\n  }\n\n  return errors;\n};\n\nexport const verifyEmailPattern = (errors, data, field) => {\n  const value = get(data, field);\n  if (!errors[field] && value && !isEmail(value)) {\n    set(errors, field, createError(ERROR.FORM_FIELD_PATTERN));\n  }\n\n  return errors;\n};\n\nexport const verifyURLPattern = (errors, data, field) => {\n  const value = get(data, field);\n  if (!errors[field] && value && !isURL(value)) {\n    set(errors, field, createError(ERROR.FORM_FIELD_PATTERN));\n  }\n\n  return errors;\n};\n\n/**\n * A superset of `formatErrorMessage` that fallsback on `FORM_FIELD_INVALID_VALUE` for unknown errors.\n */\nexport const formatFormErrorMessage = (intl, error) => {\n  return formatErrorMessage(intl, error, ERROR.FORM_FIELD_INVALID_VALUE);\n};\n","/**\n * A dummy polyfill for `Intl.DisplayNames`. If falling back to the default string is not an acceptable option\n * feel free to add a [real polyfill](https://formatjs.io/docs/polyfills/intl-displaynames/) and remove this helper.\n */\nexport const getIntlDisplayNames = (locale, type) => {\n  try {\n    return new Intl.DisplayNames(locale, { type });\n  } catch {\n    return { of: str => str };\n  }\n};\n","/**\n * Merge react refs.\n * Adapted from https://github.com/smooth-code/react-merge-refs\n */\nexport const mergeRefs = refs => {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref !== null) {\n        ref.current = value;\n      }\n    });\n  };\n};\n"],"names":["React","PlusCircle","FormattedMessage","Box","Flex","Image","StyledButton","Span","InviteCollectiveDropdownOption","onClick","isSearching","CollectiveType","Grid","getTypeCaption","type","USER","ORGANIZATION","COLLECTIVE","CollectiveTypePicker","types","onChange","isSingleType","length","map","defaultProps","memoizeOne","ReactDOM","defineMessages","injectIntl","Manager","Popper","Reference","styled","isEmail","mergeRefs","Avatar","Container","CreateCollectiveMiniForm","StyledCard","StyledSelect","CollectiveTypesI18n","id","defaultMessage","Messages","createNew","inviteNew","CollectiveLabelTextContainer","div","DefaultCollectiveLabel","collective","value","name","slug","email","FLAG_COLLECTIVE_PICKER_COLLECTIVE","FLAG_NEW_COLLECTIVE","FLAG_INVITE_NEW","CUSTOM_OPTIONS_POSITION","TOP","BOTTOM","FUND","EVENT","PROJECT","sortedAccountTypes","CollectivePicker","props","collectives","groupByType","sortFunc","intl","buildCollectiveOption","collectivesByTypes","sortedActiveTypes","Object","keys","sectionI18n","sortedCollectives","sectionLabel","formatMessage","n","label","options","collectivesOptions","customOptions","createdCollectives","creatable","invitable","customOptionsPosition","toUpperCase","isDisabled","isOnlyForUser","state","showCreatedCollective","setState","newTerm","onInputChange","searchText","createFormCollectiveType","menuIsOpen","getDefaultOptionsFromProps","allOptions","createdCollective","undefined","getOptions","containerRef","createRef","displayInviteMenu","menuIsOpenFromProps","inputId","formatOptionLabel","getDefaultOptions","onInvite","minWidth","maxWidth","width","addLoggedInUserAsAdmin","renderNewCollectiveOption","isSearchable","collectiveOptions","getOptionsFromCollectives","getAllOptions","prefillValue","ref","getMenuIsOpen","Boolean","openMenu","closeMenu","getValue","option","context","setCreateFormCollectiveType","createPortal","placement","style","current","clientWidth","zIndex","styles","menu","excludeAdminFields","createCollectiveOptionalFields","isNew","document","body","PureComponent","useMutation","Field","Form","Formik","useIntl","roles","i18nGraphqlException","gqlV1","isValidEmail","InputTypeCountry","MessageBox","StyledInput","StyledInputField","StyledInputFormikField","StyledTextarea","H5","withUser","CreateNewMessages","msg","emailTitle","adminEmail","adminName","legalName","displayName","website","cancel","save","saveUser","invalidEmail","invalidWebsite","invalidName","examples","labels","prepareMutationVariables","includeLocation","location","address","country","locationFields","user","members","forEach","member","role","ADMIN","createCollectiveMutation","createUserMutation","onCancel","onSuccess","LoggedInUser","refetchLoggedInUser","optionalFields","isUser","isCollective","isOrganization","noAdminFields","mutation","createCollective","submitError","error","initialValues","validate","values","errors","submit","formValues","clonedValues","assignAdmin","CollectiveId","push","variables","then","data","createUser","formik","touched","isSubmitting","inputProps","field","form","setFieldValue","fetchGeoLocation","fetch","response","json","YourFuckingCountryCode","Component","countryData","getEmojiByCountryCode","getIntlDisplayNames","locale","code","countryNames","of","generateCountryLabel","customOption","find","autoDetect","defaultValue","countryCode","countryName","emoji","fontSize","candidate","input","toLowerCase","includes","filterOptions","getSelectedOption","FastField","isOCError","formatFormErrorMessage","P","children","isFastField","flex","display","FieldComponent","htmlFor","meta","inputType","disabled","required","isURL","createError","ERROR","formatErrorMessage","messages","minLength","maxLength","notInRange","isEmpty","Array","isArray","trim","requireFields","requiredFields","stopOnFirstError","FORM_FIELD_REQUIRED","verifyFieldLength","min","max","message","count","FORM_FIELD_MIN_LENGTH","hasI18nMessage","FORM_FIELD_MAX_LENGTH","verifyValueInRange","FORM_FIELD_VALUE_NOT_IN_RANGE","verifyChecked","FORM_FIELD_CHECK_REQUIRED","verifyEmailPattern","FORM_FIELD_PATTERN","verifyURLPattern","FORM_FIELD_INVALID_VALUE","Intl","DisplayNames","str","refs"],"sourceRoot":""}