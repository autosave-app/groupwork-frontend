{"version":3,"file":"static/chunks/6856-186e7cd62ec64fb5.js","mappings":"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","sources":["webpack://_N_E/./components/CollectiveTagsInput.tsx","webpack://_N_E/./components/collectives/HomeNextIllustration.js","webpack://_N_E/./components/create-collective/CreateCollectiveForm.js"],"sourcesContent":["import React, { Fragment, MouseEventHandler, useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { DndContext, DragOverlay } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { debounce } from 'lodash';\nimport AnimateHeight from 'react-animate-height';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport {\n  components as ReactSelectComponents,\n  ContainerProps,\n  InputProps,\n  MultiValueProps,\n  OptionProps,\n} from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\n\nimport { IGNORED_TAGS } from '../lib/constants/collectives';\nimport { API_V2_CONTEXT } from '../lib/graphql/helpers';\nimport colors from '../lib/theme/colors';\n\nimport { Flex } from './Grid';\nimport StyledTag from './StyledTag';\nimport { Span } from './Text';\n\nexport const searchTagsQuery = gql`\n  query SearchTags($term: String) {\n    tagStats(tagSearchTerm: $term) {\n      nodes {\n        id\n        tag\n      }\n    }\n  }\n`;\n\ntype TagOption = {\n  label: string;\n  value: string;\n};\n\nconst MultiValue = (props: MultiValueProps<TagOption>) => {\n  // This prevents the menu from being opened/closed when the user clicks\n  // on a value to begin dragging it\n  const onMouseDown: MouseEventHandler<HTMLDivElement> = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const { attributes, isDragging, listeners, setNodeRef, transform, transition } = useSortable({\n    id: props.data.value,\n  });\n\n  const style = {\n    transform: CSS.Translate.toString(transform),\n    transition,\n    opacity: isDragging ? '0.4' : undefined,\n  };\n\n  return (\n    <div style={style} ref={setNodeRef} {...attributes} {...listeners}>\n      <StyledTag\n        m=\"4px\"\n        variant=\"rounded-right\"\n        maxHeight=\"none\"\n        style={{ cursor: 'grab' }}\n        onMouseDown={onMouseDown}\n        closeButtonProps={{ ...props.removeProps, isFocused: props.isFocused, onPointerDown: e => e.stopPropagation() }}\n      >\n        {props.children}\n      </StyledTag>\n    </div>\n  );\n};\n\nconst Input = (props: InputProps) => {\n  return <ReactSelectComponents.Input {...props} data-cy={'tags-select-input'} />;\n};\n\nconst Option = ({ innerProps, ...props }: OptionProps) => {\n  return (\n    <ReactSelectComponents.Option\n      {...props}\n      innerProps={\n        {\n          ...innerProps,\n          'data-cy': `tags-select-option-${props.data['value']}`,\n        } as React.HTMLProps<HTMLDivElement>\n      }\n    />\n  );\n};\n\nconst SelectContainer = ({ innerProps, ...props }: ContainerProps) => (\n  <ReactSelectComponents.SelectContainer\n    {...props}\n    innerProps={{ ...innerProps, 'data-cy': 'tags-select' } as React.HTMLProps<HTMLDivElement>}\n  />\n);\n\nconst debouncedSearch = debounce((searchFunc, variables) => {\n  return searchFunc({ variables });\n}, 500);\n\nfunction CollectiveTagsInput({ defaultValue = [], onChange, suggestedTags = [] }) {\n  const intl = useIntl();\n  const [searchTags, { loading: fetching, data }] = useLazyQuery(searchTagsQuery, {\n    context: API_V2_CONTEXT,\n  });\n  const [debouncing, setDebouncing] = useState<boolean>(false);\n  const loading = fetching || debouncing;\n  const [input, setInput] = useState<string>('');\n  const [options, setOptions] = useState<TagOption[]>([]);\n  const [selected, setSelected] = useState<TagOption[]>(defaultValue?.map(tag => ({ label: tag, value: tag })) || []);\n  const [draggingTag, setDraggingTag] = useState<string | null>(null);\n\n  useEffect(() => {\n    onChange(selected);\n  }, [selected]);\n\n  useEffect(() => {\n    if (input?.length) {\n      setDebouncing(true);\n      debouncedSearch(searchTags, {\n        term: input,\n      });\n    } else {\n      // Skip debouncing when input is empty (on initial load for instance)\n      searchTags();\n    }\n  }, [input]);\n\n  useEffect(() => {\n    if (!fetching) {\n      setOptions(\n        data?.tagStats?.nodes\n          .filter(({ tag }) => !IGNORED_TAGS.includes(tag))\n          .map(({ tag }) => ({\n            label: tag,\n            value: tag,\n          })) || [],\n      );\n      setDebouncing(false);\n    }\n  }, [fetching, data]);\n\n  function handleDragOver(event) {\n    const { active, over } = event;\n\n    if (over && active.id !== over.id) {\n      setSelected(selected => {\n        const oldIndex = selected.findIndex(item => item.value === active.id);\n        const newIndex = selected.findIndex(item => item.value === over.id);\n        return arrayMove(selected, oldIndex, newIndex);\n      });\n    }\n  }\n\n  // Fix to avoid infinite loop caused by dragging over two items with variable sizes: https://github.com/clauderic/dnd-kit/issues/44#issuecomment-1018686592\n  const debouncedDragOver = useCallback(\n    debounce(handleDragOver, 40, {\n      trailing: false,\n      leading: true,\n    }),\n    [],\n  );\n\n  function handleDragStart(event) {\n    setDraggingTag(event.active.id);\n  }\n\n  function handleDragEnd() {\n    setDraggingTag(null);\n  }\n\n  return (\n    <Fragment>\n      <DndContext\n        onDragStart={handleDragStart}\n        onDragOver={debouncedDragOver}\n        onDragEnd={handleDragEnd}\n        onDragCancel={handleDragEnd}\n      >\n        <SortableContext items={selected.map(o => o.value)}>\n          <CreatableSelect\n            openMenuOnFocus\n            placeholder={intl.formatMessage({ id: 'collective.tags.input.placeholder', defaultMessage: '+ Add tags' })}\n            isMulti\n            value={selected}\n            menuPortalTarget={document.body}\n            components={{\n              MultiValue,\n              SelectContainer,\n              Input,\n              Option,\n            }}\n            onKeyDown={e => {\n              // Stop enter key from closing the menu and submitting the form when it's loading and there are no options\n              if (e.key === 'Enter' && loading && options.length === 0) {\n                e.preventDefault();\n              }\n            }}\n            onInputChange={value => setInput(value)}\n            options={options}\n            isLoading={loading}\n            onChange={(selectedOptions: TagOption[]) => setSelected(selectedOptions)}\n            styles={{\n              menuPortal: styles => ({ ...styles, zIndex: 9999 }),\n              control: (baseStyles, state) => ({\n                ...baseStyles,\n                boxShadow: `inset 0px 2px 2px ${colors.primary[50]}`,\n                borderColor: state.isFocused ? colors.primary[500] : colors.black[300],\n                '&:hover': {\n                  borderColor: state.isFocused ? colors.primary[500] : colors.primary[300],\n                },\n              }),\n            }}\n          />\n        </SortableContext>\n        <DragOverlay>\n          {draggingTag ? (\n            <StyledTag\n              m=\"4px\"\n              variant=\"rounded-right\"\n              style={{ cursor: 'grabbing', color: 'black' }}\n              maxHeight=\"none\"\n              backgroundColor=\"black.200\"\n              closeButtonProps={true}\n            >\n              {draggingTag}\n            </StyledTag>\n          ) : null}\n        </DragOverlay>\n      </DndContext>\n      <AnimateHeight height={suggestedTags?.length > 0 ? 'auto' : 0}>\n        <Flex mt={2} gap={'6px'} flexWrap=\"wrap\" alignItems={'center'}>\n          {suggestedTags && (\n            <Span color=\"black.600\" mr={1}>\n              <FormattedMessage defaultMessage=\"Popular tags:\" />\n            </Span>\n          )}\n\n          {suggestedTags?.map(tag => {\n            const isSelected = selected.some(({ value }) => value === tag);\n            return (\n              <StyledTag\n                variant=\"rounded-right\"\n                type=\"button\"\n                tabIndex={-1}\n                key={tag}\n                closeButtonProps={false}\n                style={{ opacity: isSelected ? 0.5 : 1, cursor: 'pointer' }}\n                onClick={() =>\n                  isSelected\n                    ? setSelected(selected.filter(({ value }) => value !== tag))\n                    : setSelected([...selected, { value: tag, label: tag }])\n                }\n              >\n                {tag}\n              </StyledTag>\n            );\n          })}\n        </Flex>\n      </AnimateHeight>\n    </Fragment>\n  );\n}\n\nCollectiveTagsInput.propTypes = {\n  defaultValue: PropTypes.arrayOf(PropTypes.string),\n  suggestedTags: PropTypes.arrayOf(PropTypes.string),\n  onChange: PropTypes.func,\n  preload: PropTypes.bool,\n};\n\nexport default CollectiveTagsInput;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport { Box } from '../Grid';\nimport Image from '../Image';\n\n/*\n * Illustrations that use the next/image component.\n */\n\nfunction NextIllustration({ display, ...props }) {\n  return (\n    <Box display={display}>\n      <Image {...props} />\n    </Box>\n  );\n}\n\nNextIllustration.propTypes = {\n  display: PropTypes.array,\n  src: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nexport default NextIllustration;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { themeGet } from '@styled-system/theme-get';\nimport { Form, Formik } from 'formik';\nimport { get, trim } from 'lodash';\nimport { withRouter } from 'next/router';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { suggestSlug } from '../../lib/collective.lib';\nimport { requireFields, verifyChecked, verifyFieldLength } from '../../lib/form-utils';\nimport withData from '../../lib/withData';\n\nimport Avatar from '../Avatar';\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport NextIllustration from '../collectives/HomeNextIllustration';\nimport CollectiveTagsInput from '../CollectiveTagsInput';\nimport Container from '../Container';\nimport { Box, Flex, Grid } from '../Grid';\nimport { getI18nLink } from '../I18nFormatters';\nimport MessageBox from '../MessageBox';\nimport OnboardingProfileCard from '../onboarding-modal/OnboardingProfileCard';\nimport StyledButton from '../StyledButton';\nimport StyledCheckbox from '../StyledCheckbox';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputFormikField from '../StyledInputFormikField';\nimport StyledInputGroup from '../StyledInputGroup';\nimport StyledLink from '../StyledLink';\nimport StyledTextarea from '../StyledTextarea';\nimport { H1, P } from '../Text';\n\nexport const BackButton = styled(StyledButton)`\n  color: ${themeGet('colors.black.600')};\n  font-size: 14px;\n`;\n\nconst ContainerWithImage = styled(Container)`\n  width: 100%;\n  @media screen and (min-width: 40em) {\n    background: url('/static/images/create-collective/formIllustration.png');\n    background-repeat: no-repeat;\n    background-size: 40%;\n    background-position: right 17px bottom;\n  }\n`;\n\nconst placeholders = {\n  name: 'Agora Collective',\n  slug: 'agora',\n};\n\nconst messages = defineMessages({\n  nameLabel: { id: 'createCollective.form.nameLabel', defaultMessage: 'Collective name' },\n  slugLabel: { id: 'createCollective.form.slugLabel', defaultMessage: 'Set your URL' },\n  suggestedLabel: { id: 'createCollective.form.suggestedLabel', defaultMessage: 'Suggested' },\n  descriptionLabel: {\n    id: 'createCollective.form.descriptionLabel',\n    defaultMessage: 'What does your Collective do?',\n  },\n  tagsLabel: { id: 'Tags', defaultMessage: 'Tags' },\n  descriptionHint: {\n    id: 'createCollective.form.descriptionHint',\n    defaultMessage: 'Write a short description (150 characters max)',\n  },\n  descriptionPlaceholder: {\n    id: 'create.collective.placeholder',\n    defaultMessage: 'Making the world a better place',\n  },\n  errorSlugHyphen: {\n    id: 'createCollective.form.error.slug.hyphen',\n    defaultMessage: 'Collective slug URL cannot start or end with a hyphen',\n  },\n});\n\nconst LABEL_STYLES = { fontWeight: 500, fontSize: '14px', lineHeight: '17px' };\n\nclass CreateCollectiveForm extends React.Component {\n  static propTypes = {\n    error: PropTypes.string,\n    host: PropTypes.object,\n    loading: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    router: PropTypes.object.isRequired,\n    loggedInUser: PropTypes.object,\n    popularTags: PropTypes.arrayOf(PropTypes.string),\n  };\n\n  hasHostTerms() {\n    if (!this.props.host) {\n      return false;\n    } else {\n      return Boolean(this.props.host.termsUrl);\n    }\n  }\n\n  render() {\n    const { intl, error, host, loading, popularTags, loggedInUser } = this.props;\n    const hasHostTerms = this.hasHostTerms();\n\n    const initialValues = {\n      name: '',\n      description: '',\n      slug: '',\n      message: '',\n      tos: false,\n      hostTos: false,\n      inviteMembers: [],\n    };\n\n    const validate = values => {\n      const errors = requireFields(values, ['name', 'slug', 'description']);\n\n      if (values.slug !== trim(values.slug, '-')) {\n        errors.slug = intl.formatMessage(messages.errorSlugHyphen);\n      }\n\n      verifyFieldLength(intl, errors, values, 'name', 1, 50);\n      verifyFieldLength(intl, errors, values, 'slug', 1, 30);\n      verifyFieldLength(intl, errors, values, 'description', 1, 160);\n      verifyFieldLength(intl, errors, values, 'message', 0, 3000);\n\n      verifyChecked(errors, values, 'tos');\n      if (hasHostTerms) {\n        verifyChecked(errors, values, 'hostTos');\n      }\n\n      return errors;\n    };\n\n    const submit = values => {\n      const { description, name, slug, message, tags, inviteMembers } = values;\n      this.props.onSubmit({ collective: { name, description, slug, tags }, message, inviteMembers });\n    };\n\n    return (\n      <Grid gridTemplateColumns={['1fr', null, null, '1fr 576px 1fr']} pt={48}>\n        <Container\n          display={['none', null, null, 'flex']}\n          minHeight=\"32px\"\n          justifyContent=\"center\"\n          alignItems=\"flex-start\"\n        >\n          <BackButton asLink onClick={() => window && window.history.back()}>\n            ←&nbsp;\n            <FormattedMessage id=\"Back\" defaultMessage=\"Back\" />\n          </BackButton>\n        </Container>\n        <Box>\n          <Flex flexDirection=\"column\" mb={[2, 4, 48]} px={2} pt={2}>\n            {host ? (\n              <Flex justifyContent=\"center\" alignItems=\"center\">\n                <Box mr={3}>\n                  <Avatar radius={96} collective={host} />\n                </Box>\n                <Box maxWidth={345}>\n                  <H1\n                    fontSize={['20px', '32px']}\n                    lineHeight={['24px', '40px']}\n                    fontWeight=\"500\"\n                    textAlign=\"left\"\n                    color=\"black.900\"\n                  >\n                    <FormattedMessage\n                      id=\"host.applyTo\"\n                      defaultMessage=\"Apply to {hostName}\"\n                      values={{ hostName: host.name }}\n                    />\n                  </H1>\n                </Box>\n              </Flex>\n            ) : (\n              <div>\n                <Box mb={[2, 3]}>\n                  <H1\n                    fontSize={['20px', '32px']}\n                    lineHeight={['24px', '36px']}\n                    fontWeight=\"bold\"\n                    textAlign=\"center\"\n                    color=\"black.900\"\n                  >\n                    <FormattedMessage id=\"home.create\" defaultMessage=\"Create a Collective\" />\n                  </H1>\n                </Box>\n                <P fontSize=\"16px\" color=\"black.600\" textAlign=\"center\" mb={2}>\n                  <FormattedMessage\n                    id=\"createCollective.subtitle.introduce\"\n                    defaultMessage=\"Introduce your Collective to the community.\"\n                  />\n                </P>\n              </div>\n            )}\n          </Flex>\n          {error && (\n            <Flex alignItems=\"center\" justifyContent=\"center\">\n              <MessageBox type=\"error\" withIcon mb={[1, 3]} data-cy=\"ccf-error-message\">\n                {error}\n              </MessageBox>\n            </Flex>\n          )}\n          <Flex alignItems=\"center\" justifyContent=\"center\">\n            <ContainerWithImage\n              mb={[1, 5]}\n              border={[null, '1px solid #E6E8EB']}\n              borderRadius={[0, '8px']}\n              maxWidth={576}\n              px={[2, 4]}\n              pb={[0, 90]}\n            >\n              <Formik validate={validate} initialValues={initialValues} onSubmit={submit} validateOnChange={true}>\n                {formik => {\n                  const { values, handleSubmit, touched, setFieldValue } = formik;\n\n                  const handleSlugChange = e => {\n                    if (!touched.slug) {\n                      setFieldValue('slug', suggestSlug(e.target.value));\n                    }\n                  };\n\n                  return (\n                    <Form data-cy=\"ccf-form\">\n                      <StyledInputFormikField\n                        name=\"name\"\n                        htmlFor=\"collective-name-input\"\n                        labelProps={LABEL_STYLES}\n                        label={intl.formatMessage(messages.nameLabel)}\n                        onChange={handleSlugChange}\n                        required\n                        mt={4}\n                        mb={3}\n                        data-cy=\"ccf-form-name\"\n                      >\n                        {({ field }) => <StyledInput {...field} placeholder={placeholders.name} />}\n                      </StyledInputFormikField>\n                      <StyledInputFormikField\n                        name=\"slug\"\n                        htmlFor=\"collective-slug-input\"\n                        labelProps={LABEL_STYLES}\n                        label={intl.formatMessage(messages.slugLabel)}\n                        value={values.slug}\n                        required\n                        mt={3}\n                        mb={2}\n                        data-cy=\"ccf-form-slug\"\n                      >\n                        {({ field }) => (\n                          <StyledInputGroup\n                            onChange={e => setFieldValue('slug', e.target.value)}\n                            {...field}\n                            prepend=\"opencollective.com/\"\n                            placeholder={placeholders.slug}\n                          />\n                        )}\n                      </StyledInputFormikField>\n                      {values.name.length > 0 && !touched.slug && (\n                        <P fontSize=\"10px\" color=\"black.600\" fontStyle=\"italic\">\n                          {intl.formatMessage(messages.suggestedLabel)}\n                        </P>\n                      )}\n                      <StyledInputFormikField\n                        name=\"description\"\n                        htmlFor=\"description\"\n                        labelProps={LABEL_STYLES}\n                        label={intl.formatMessage(messages.descriptionLabel)}\n                        value={values.description}\n                        required\n                        mt={3}\n                        mb={2}\n                        data-cy=\"ccf-form-description\"\n                      >\n                        {({ field }) => (\n                          <StyledInput {...field} placeholder={intl.formatMessage(messages.descriptionPlaceholder)} />\n                        )}\n                      </StyledInputFormikField>\n                      <P fontSize=\"11px\" color=\"black.600\">\n                        {intl.formatMessage(messages.descriptionHint)}\n                      </P>\n                      {host && (\n                        <Box mt={3} mb={2}>\n                          <P {...LABEL_STYLES}>\n                            <FormattedMessage id=\"onboarding.admins.header\" defaultMessage=\"Add administrators\" />\n                          </P>\n                          <Flex mt={1} width=\"100%\">\n                            <P my={2} fontSize=\"9px\" textTransform=\"uppercase\" color=\"black.700\" letterSpacing=\"0.06em\">\n                              <FormattedMessage id=\"AddedAdministrators\" defaultMessage=\"Added Administrators\" />\n                              {host?.policies?.COLLECTIVE_MINIMUM_ADMINS &&\n                                ` (${1 + values.inviteMembers.length}/${\n                                  host.policies.COLLECTIVE_MINIMUM_ADMINS.numberOfAdmins\n                                })`}\n                            </P>\n                            <Flex flexGrow={1} alignItems=\"center\">\n                              <StyledHr width=\"100%\" ml={2} borderColor=\"black.300\" />\n                            </Flex>\n                          </Flex>\n                          <Flex width=\"100%\" flexWrap=\"wrap\" data-cy=\"profile-card\">\n                            <OnboardingProfileCard\n                              key={loggedInUser.collective.id}\n                              collective={loggedInUser.collective}\n                            />\n                            {values.inviteMembers?.map(invite => (\n                              <OnboardingProfileCard\n                                key={invite.memberAccount.id}\n                                collective={invite.memberAccount}\n                                removeAdmin={() =>\n                                  setFieldValue(\n                                    'inviteMembers',\n                                    values.inviteMembers.filter(i => i.memberAccount.id !== invite.memberAccount.id),\n                                  )\n                                }\n                              />\n                            ))}\n                          </Flex>\n                          <Flex mt={1} width=\"100%\">\n                            <P my={2} fontSize=\"9px\" textTransform=\"uppercase\" color=\"black.700\" letterSpacing=\"0.06em\">\n                              <FormattedMessage id=\"InviteAdministrators\" defaultMessage=\"Invite Administrators\" />\n                            </P>\n                            <Flex flexGrow={1} alignItems=\"center\">\n                              <StyledHr width=\"100%\" ml={2} borderColor=\"black.300\" />\n                            </Flex>\n                          </Flex>\n                          <Box>\n                            <CollectivePickerAsync\n                              inputId=\"onboarding-admin-picker\"\n                              creatable\n                              collective={null}\n                              types={['USER']}\n                              data-cy=\"admin-picker\"\n                              filterResults={collectives =>\n                                collectives.filter(\n                                  collective =>\n                                    !values.inviteMembers.some(invite => invite.memberAccount.id === collective.id),\n                                )\n                              }\n                              onChange={option => {\n                                setFieldValue('inviteMembers', [\n                                  ...values.inviteMembers,\n                                  { role: 'ADMIN', memberAccount: option.value },\n                                ]);\n                              }}\n                            />\n                          </Box>\n\n                          {host?.policies?.COLLECTIVE_MINIMUM_ADMINS && (\n                            <MessageBox type=\"info\" mt={3} fontSize=\"13px\">\n                              <FormattedMessage\n                                defaultMessage=\"Your selected Fiscal Host requires you to add a minimum of {numberOfAdmins, plural, one {# admin} other {# admins} }. You can manage your admins from the Collective Settings.\"\n                                values={host.policies.COLLECTIVE_MINIMUM_ADMINS}\n                              />\n                            </MessageBox>\n                          )}\n                        </Box>\n                      )}\n                      <StyledInputFormikField\n                        name=\"tags\"\n                        htmlFor=\"tags\"\n                        labelProps={LABEL_STYLES}\n                        label={intl.formatMessage(messages.tagsLabel)}\n                        value={values.tags}\n                        required\n                        mt={3}\n                        mb={2}\n                        data-cy=\"ccf-form-tags\"\n                      >\n                        {({ field }) => (\n                          <CollectiveTagsInput\n                            {...field}\n                            onChange={tags => {\n                              formik.setFieldValue(\n                                'tags',\n                                tags.map(t => t.value.toLowerCase()),\n                              );\n                            }}\n                            suggestedTags={popularTags}\n                          />\n                        )}\n                      </StyledInputFormikField>\n                      <MessageBox type=\"info\" mt={3}>\n                        <FormattedMessage\n                          id=\"collective.tags.info\"\n                          defaultMessage=\"Tags help you improve your group’s discoverability and connect with similar initiatives across the world.\"\n                        />\n                      </MessageBox>\n                      {host && (\n                        <StyledInputFormikField\n                          name=\"message\"\n                          htmlFor=\"apply-create-message\"\n                          labelProps={LABEL_STYLES}\n                          required={false}\n                          mt={24}\n                          label={\n                            get(host, 'settings.applyMessage') || (\n                              <FormattedMessage\n                                id=\"ApplyToHost.WriteMessage\"\n                                defaultMessage=\"Message to the Fiscal Host\"\n                              />\n                            )\n                          }\n                        >\n                          {({ field }) => (\n                            <StyledTextarea {...field} width=\"100%\" minHeight={76} maxLength={3000} showCount />\n                          )}\n                        </StyledInputFormikField>\n                      )}\n\n                      <Box mx={1} my={3}>\n                        <StyledInputFormikField name=\"tos\" required>\n                          {({ field }) => (\n                            <StyledCheckbox\n                              name={field.name}\n                              required={field.required}\n                              checked={field.value}\n                              onChange={({ checked }) => setFieldValue(field.name, checked)}\n                              error={field.error}\n                              label={\n                                <FormattedMessage\n                                  id=\"createcollective.tos.label\"\n                                  defaultMessage=\"I agree with the {toslink} of Open Collective.\"\n                                  values={{\n                                    toslink: (\n                                      <StyledLink href=\"/tos\" openInNewTab>\n                                        <FormattedMessage id=\"tos\" defaultMessage=\"terms of service\" />\n                                      </StyledLink>\n                                    ),\n                                  }}\n                                />\n                              }\n                            />\n                          )}\n                        </StyledInputFormikField>\n                        {hasHostTerms && (\n                          <StyledInputFormikField name=\"hostTos\" required mt={2}>\n                            {({ field }) => (\n                              <StyledCheckbox\n                                name={field.name}\n                                required={field.required}\n                                checked={field.value}\n                                onChange={({ checked }) => setFieldValue(field.name, checked)}\n                                error={field.error}\n                                label={\n                                  <FormattedMessage\n                                    id=\"Host.TOSCheckbox\"\n                                    defaultMessage=\"I agree with the <TOSLink>terms of service</TOSLink> of {hostName}\"\n                                    values={{\n                                      hostName: host.name,\n                                      TOSLink: getI18nLink({\n                                        href: host.termsUrl,\n                                        openInNewTabNoFollow: true,\n                                        onClick: e => e.stopPropagation(), // don't check the checkbox when clicking on the link\n                                      }),\n                                    }}\n                                  />\n                                }\n                              />\n                            )}\n                          </StyledInputFormikField>\n                        )}\n                      </Box>\n\n                      <Flex justifyContent={['center', 'left']} mb={4}>\n                        <StyledButton\n                          fontSize=\"13px\"\n                          minWidth=\"148px\"\n                          minHeight=\"36px\"\n                          buttonStyle=\"primary\"\n                          type=\"submit\"\n                          loading={loading}\n                          onSubmit={handleSubmit}\n                          data-cy=\"ccf-form-submit\"\n                        >\n                          <FormattedMessage id=\"collective.create\" defaultMessage=\"Create Collective\" />\n                        </StyledButton>\n                      </Flex>\n                    </Form>\n                  );\n                }}\n              </Formik>\n              <Container justifyContent=\"center\" mb={4} display={['flex', 'none']}>\n                <NextIllustration src=\"/static/images/create-collective/mobileForm.png\" width=\"320px\" height=\"200px\" />\n              </Container>\n            </ContainerWithImage>\n          </Flex>\n        </Box>\n        <div />\n      </Grid>\n    );\n  }\n}\n\nexport default injectIntl(withData(withRouter(CreateCollectiveForm)));\n"],"names":["React","Fragment","useCallback","useEffect","useState","gql","useLazyQuery","DndContext","DragOverlay","arrayMove","SortableContext","useSortable","CSS","AnimateHeight","FormattedMessage","useIntl","components","ReactSelectComponents","CreatableSelect","IGNORED_TAGS","API_V2_CONTEXT","colors","Flex","StyledTag","Span","searchTagsQuery","MultiValue","props","onMouseDown","e","preventDefault","stopPropagation","id","data","value","attributes","isDragging","listeners","setNodeRef","transform","transition","style","Translate","toString","opacity","undefined","cursor","removeProps","isFocused","onPointerDown","children","Input","Option","innerProps","SelectContainer","debouncedSearch","searchFunc","variables","CollectiveTagsInput","defaultValue","onChange","suggestedTags","intl","context","searchTags","fetching","loading","debouncing","setDebouncing","input","setInput","options","setOptions","map","tag","label","selected","setSelected","draggingTag","setDraggingTag","length","term","tagStats","nodes","filter","includes","handleDragOver","event","active","over","oldIndex","findIndex","item","newIndex","debouncedDragOver","trailing","leading","handleDragStart","handleDragEnd","o","formatMessage","defaultMessage","document","body","key","selectedOptions","menuPortal","styles","zIndex","control","baseStyles","state","boxShadow","primary","borderColor","black","color","isSelected","some","Box","Image","NextIllustration","display","themeGet","Form","Formik","withRouter","defineMessages","injectIntl","styled","suggestSlug","requireFields","verifyChecked","verifyFieldLength","withData","Avatar","CollectivePickerAsync","Container","Grid","getI18nLink","MessageBox","OnboardingProfileCard","StyledButton","StyledCheckbox","StyledHr","StyledInput","StyledInputFormikField","StyledInputGroup","StyledLink","StyledTextarea","H1","P","BackButton","ContainerWithImage","placeholders","name","slug","messages","nameLabel","slugLabel","suggestedLabel","descriptionLabel","tagsLabel","descriptionHint","descriptionPlaceholder","errorSlugHyphen","LABEL_STYLES","fontWeight","fontSize","lineHeight","CreateCollectiveForm","host","Boolean","termsUrl","error","popularTags","loggedInUser","hasHostTerms","initialValues","description","message","tos","hostTos","inviteMembers","validate","values","errors","submit","tags","onSubmit","collective","window","history","back","hostName","formik","handleSubmit","touched","setFieldValue","handleSlugChange","target","field","policies","COLLECTIVE_MINIMUM_ADMINS","numberOfAdmins","invite","memberAccount","i","collectives","option","role","t","toLowerCase","required","checked","toslink","TOSLink","href","openInNewTabNoFollow","onClick","Component"],"sourceRoot":""}