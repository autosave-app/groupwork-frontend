{"version":3,"file":"static/chunks/2750-cf770fc817000c46.js","mappings":"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","sources":["webpack://_N_E/./public/static/images/grant-animation.gif","webpack://_N_E/./public/static/images/grant.gif","webpack://_N_E/./public/static/images/invoice-animation-static.jpg","webpack://_N_E/./public/static/images/invoice-animation.gif","webpack://_N_E/./public/static/images/receipt-animation-static.jpg","webpack://_N_E/./public/static/images/receipt-animation.gif","webpack://_N_E/./components/I18nAddressFields.js","webpack://_N_E/./components/LocationAddress.js","webpack://_N_E/./components/StyledDropzone.js","webpack://_N_E/./components/StyledInputLocation.js","webpack://_N_E/./components/expenses/ExpenseAmountBreakdown.js","webpack://_N_E/./components/expenses/ExpenseAttachedFiles.js","webpack://_N_E/./components/expenses/lib/attachments.js","webpack://_N_E/./components/expenses/AddNewAttachedFilesButton.js","webpack://_N_E/./components/expenses/ExpenseAttachedFilesForm.js","webpack://_N_E/./components/expenses/ExpenseItemForm.js","webpack://_N_E/./components/expenses/ExpenseFormItems.js","webpack://_N_E/./components/expenses/PayoutMethodForm.js","webpack://_N_E/./components/expenses/PayoutMethodSelect.js","webpack://_N_E/./components/expenses/ExpenseFormPayeeInviteNewStep.js","webpack://_N_E/./components/expenses/ExpenseFormPayeeSignUpStep.js","webpack://_N_E/./components/expenses/ExpenseFormPayeeStep.js","webpack://_N_E/./components/expenses/ExpenseTypeRadioSelect.tsx","webpack://_N_E/./components/expenses/ExpenseForm.js","webpack://_N_E/./components/faqs/CreateExpenseFAQ.js","webpack://_N_E/./components/expenses/ExpandableExpensePolicies.js","webpack://_N_E/./components/expenses/ExpenseInfoSidebar.js","webpack://_N_E/./components/expenses/ExpenseNotesForm.js","webpack://_N_E/./components/expenses/ExpensePayeeDetails.js","webpack://_N_E/./components/expenses/ExpenseRecurringBanner.js","webpack://_N_E/./components/expenses/ExpenseMoreActionsButton.js","webpack://_N_E/./components/expenses/ExpenseSummary.js","webpack://_N_E/./components/expenses/MobileCollectiveInfoStickyBar.js","webpack://_N_E/./components/expenses/PayoutBankInformationForm.js","webpack://_N_E/./components/faqs/FAQ.js","webpack://_N_E/./lib/hooks/useImageUploader.js","webpack://_N_E/./lib/hooks/usePrevious.js"],"sourcesContent":["module.exports = \"/_next/static/images/grant-animation-80f44cc9e0c84be4ac8cede79778bacb.gif\";","module.exports = \"/_next/static/images/grant-88724b5d7fb1ef87ec017bd1561f0049.gif\";","module.exports = \"/_next/static/images/invoice-animation-static-7d2e364d862b68365ce16d5ec80c28a5.jpg\";","module.exports = \"/_next/static/images/invoice-animation-55433eff19a59893abf3966cd185dae7.gif\";","module.exports = \"/_next/static/images/receipt-animation-static-2e1a1ab8c1ddff1f1f893a06bc0f10b7.jpg\";","module.exports = \"/_next/static/images/receipt-animation-66f14349930a4b1d5eae7d019b0cacf7.gif\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddressFormatter from '@shopify/address';\nimport { Field } from 'formik';\nimport { cloneDeep, get, isEmpty, isNil, orderBy, pick, set, truncate } from 'lodash';\nimport { useIntl } from 'react-intl';\n\nimport LoadingPlaceholder from './LoadingPlaceholder';\nimport StyledInput from './StyledInput';\nimport StyledInputField from './StyledInputField';\nimport StyledSelect from './StyledSelect';\n\n/** Constants */\n\n/** Countries present in InputTypeCountry dropdown but not Shopify's API.\n * All except Antarctica (AQ) are U.S. territories and use that address format.\n * The Shopify default address format is also U.S. format therefore for all\n * of these we use the U.S. default.\n * All language codes in locales.js are supported by the Shopify API 👍\n */\nconst missingCountries = ['AS', 'AQ', 'GU', 'MH', 'FM', 'MP', 'PW', 'PR', 'VI'];\nconst addressFormatter = new AddressFormatter('EN');\n\nconst wrangleAddressData = addressInfo => {\n  if (typeof addressInfo !== 'object') {\n    return addressInfo;\n  }\n  const formLayout = addressInfo.formatting.edit;\n  const necessaryFields = ['address1', 'address2', 'city', 'zip', 'province'];\n\n  // Get form fields in correct order for the chosen country\n  const matches = formLayout.match(/([A-Za-z])\\w+/g).filter(match => necessaryFields.includes(match));\n\n  // Change field names to match https://github.com/Shopify/quilt/blob/master/packages/address/src/utilities.ts\n  const mappedMatches = matches.map(match => {\n    if (match === 'zip') {\n      return 'postalCode';\n    } else if (match === 'province') {\n      return 'zone';\n    } else {\n      return match;\n    }\n  });\n\n  const addressFormFields = Object.entries(addressInfo.labels)\n    .filter(entry => mappedMatches.includes(entry[0]))\n    .sort((a, b) => {\n      return mappedMatches.indexOf(a[0]) - mappedMatches.indexOf(b[0]);\n    });\n\n  // Check if we need to render drop-down list of \"zones\" (i.e. provinces, states, etc.)\n  const zones = get(addressInfo, 'zones', []);\n  if (mappedMatches.includes('zone') && !isEmpty(zones)) {\n    const zoneIndex = addressFormFields.find(idx => idx[0] === 'zone');\n    zoneIndex.push(addressInfo.zones);\n  }\n\n  return addressFormFields;\n};\n\nexport const serializeAddress = address => {\n  return Object.keys(address)\n    .sort()\n    .map(k => address[k])\n    .join('\\n');\n};\n\n/** Upon changing selectedCountry, if previous address fields are no longer needed,\n * it clears them i.e. changing from Canada to Germany in the Expense form we no\n * longer need 'zone' in our payeeLocation.address object.\n */\nconst getAddressFieldDifferences = (formAddressValues, addressFields) => {\n  const addressFieldsArray = addressFields.map(field => field[0]);\n  const differenceInAddressFields = !isEmpty(\n    Object.keys(formAddressValues).filter(key => !addressFieldsArray.includes(key)),\n  );\n  if (differenceInAddressFields) {\n    return pick(formAddressValues, addressFieldsArray);\n  } else {\n    return formAddressValues;\n  }\n};\n\nconst buildZoneOption = zone => {\n  return { value: zone.name, label: `${truncate(zone.name, { length: 30 })} - ${zone.code}` };\n};\n\nconst ZoneSelect = ({ info, required, value, name, label, onChange, id, error, ...props }) => {\n  const zones = info || [];\n  const zoneOptions = React.useMemo(() => orderBy(zones.map(buildZoneOption), 'label'), [zones]);\n\n  // Reset zone if not supported\n  React.useEffect(() => {\n    if (zoneOptions) {\n      const formValueZone = value;\n      if (formValueZone && !zoneOptions.find(option => option.value === formValueZone)) {\n        onChange({ target: { name: name, value: null } });\n      }\n    }\n  }, [zoneOptions]);\n\n  return (\n    <StyledSelect\n      {...{ name, required, ...props }}\n      inputId={id}\n      minWidth={150}\n      options={zoneOptions}\n      error={error}\n      placeholder={`Please select your ${label}`} // TODO i18n\n      data-cy={`address-${name}`} // TODO: Should not be locked on payee-address\n      value={zoneOptions.find(option => option?.value === value) || null}\n      onChange={v => {\n        onChange({ target: { name: name, value: v.value } });\n      }}\n    />\n  );\n};\n\nZoneSelect.propTypes = {\n  info: PropTypes.array,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.any,\n  required: PropTypes.bool,\n  id: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport const FormikLocationFieldRenderer = ({ name, label, required, prefix, info }) => {\n  const validate = required ? value => (value ? undefined : `${label} is required`) : undefined;\n  return (\n    <Field key={name} name={`${prefix}.${name}`} validate={validate}>\n      {({ field, meta }) => (\n        <StyledInputField name={field.name} label={label} labelFontSize=\"13px\" mt={3} error={meta.error}>\n          {inputProps => {\n            switch (name) {\n              case 'zone':\n                return (\n                  <ZoneSelect\n                    id={inputProps.id}\n                    name={inputProps.name}\n                    required={required}\n                    label={label}\n                    info={info}\n                    {...field}\n                  />\n                );\n              default:\n                return <StyledInput {...inputProps} {...field} error={meta.error} data-cy={`address-${name}`} />;\n            }\n          }}\n        </StyledInputField>\n      )}\n    </Field>\n  );\n};\n\nexport const SimpleLocationFieldRenderer = ({ name, label, required, prefix, value, info, onChange, fieldProps }) => {\n  const [isTouched, setIsTouched] = React.useState(false);\n  const error = required && isTouched && isNil(value) ? `${label} is required` : undefined;\n  const inputName = prefix ? `${prefix}.${name}` : name;\n  const dispatchOnChange = e => {\n    onChange(e);\n    if (!isTouched) {\n      setIsTouched(true);\n    }\n  };\n\n  return (\n    <StyledInputField\n      key={name}\n      name={inputName}\n      label={label}\n      labelFontSize=\"13px\"\n      mt={3}\n      error={error}\n      required={required}\n      {...fieldProps}\n    >\n      {inputProps => {\n        switch (name) {\n          case 'zone':\n            return (\n              <ZoneSelect\n                id={inputProps.id}\n                name={inputProps.name}\n                required={required}\n                label={label}\n                onChange={dispatchOnChange}\n                error={error}\n                info={info}\n                value={value}\n              />\n            );\n          default:\n            return (\n              <StyledInput\n                {...inputProps}\n                value={value}\n                error={error}\n                onChange={dispatchOnChange}\n                data-cy={`address-${name}`}\n              />\n            );\n        }\n      }}\n    </StyledInputField>\n  );\n};\n\nconst fieldRenderPropTypes = {\n  info: PropTypes.array,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  prefix: PropTypes.string,\n  required: PropTypes.bool,\n  fieldProps: PropTypes.object,\n};\n\nFormikLocationFieldRenderer.propTypes = fieldRenderPropTypes;\nSimpleLocationFieldRenderer.propTypes = fieldRenderPropTypes;\n\n/**\n * This component aims to create a responsive address form based on the user's country that they select.\n * Shopify has a good article about internationalizing address forms: https://ux.shopify.com/designing-address-forms-for-everyone-everywhere-f481f6baf513\n * And they also have an API and npm package to tell you what address fields a country uses, and in what order https://github.com/Shopify/quilt/tree/master/packages/address\n * Additional material:\n * Shopify API country codes (\"ISO 3166-1 alpha-2 country codes with some differences\"): https://shopify.dev/docs/admin-api/graphql/reference/common-objects/countrycode\n * Shopify locale code uses ISO locale codes: https://shopify.dev/docs/admin-api/graphql/reference/translations/locale\n * How Etsy Localizes addresses https://codeascraft.com/2018/09/26/how-etsy-localizes-addresses/\n * Form i18n techniques https://medium.com/flexport-design/form-internationalization-techniques-3e4d394cd7e5\n */\nconst I18nAddressFields = ({\n  selectedCountry,\n  value,\n  onCountryChange,\n  required,\n  prefix,\n  onLoadError,\n  Component,\n  fieldProps,\n}) => {\n  const intl = useIntl();\n  /** If country chosen from InputTypeCountry is one of missingCountries, use 'US' instead */\n  const country = missingCountries.includes(selectedCountry) ? 'US' : selectedCountry;\n\n  /** Prepare the address form data */\n  const [data, setData] = React.useState(null);\n  const [fields, setFields] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n\n  /** Pass user's chosen locale to AddressFormatter if present. */\n  React.useEffect(() => {\n    if (intl.locale) {\n      addressFormatter.updateLocale(intl.locale);\n    }\n  }, [intl.locale]);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await addressFormatter.getCountry(country);\n        setData(pick(response, ['formatting', 'labels', 'optionalLabels', 'zones']));\n        const countryInfo = pick(response, ['formatting', 'labels', 'optionalLabels', 'zones']);\n        const addressFields = wrangleAddressData(countryInfo);\n        setFields(addressFields);\n        onCountryChange(getAddressFieldDifferences(value, addressFields));\n      } catch (e) {\n        onLoadError?.();\n        // eslint-disable-next-line no-console\n        console.warn('Call to Shopify API failed. Falling back to plain address form. Error: ', e.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [selectedCountry]);\n\n  if (!selectedCountry) {\n    return null;\n  }\n\n  if (loading || !fields) {\n    return <LoadingPlaceholder width=\"100%\" height={163} mt={3} />;\n  }\n\n  return (\n    <React.Fragment>\n      {fields.map(([fieldName, fieldLabel, fieldInfo]) => (\n        <Component\n          key={fieldName}\n          prefix={prefix}\n          name={fieldName}\n          label={fieldLabel}\n          info={fieldInfo}\n          value={value?.[fieldName]}\n          required={required === false ? false : !Object.keys(data?.optionalLabels).includes(fieldName)}\n          fieldProps={fieldProps}\n          onChange={({ target: { name, value: fieldValue } }) =>\n            onCountryChange(set(cloneDeep(value || {}), name, fieldValue))\n          }\n        />\n      ))}\n    </React.Fragment>\n  );\n};\n\nI18nAddressFields.propTypes = {\n  /** ISO country code passed down from ExpenseFormPayeeStep. */\n  selectedCountry: PropTypes.string,\n  name: PropTypes.string,\n  prefix: PropTypes.string,\n  required: PropTypes.bool,\n  /** String if using old address textarea; object if using new address fields. */\n  value: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  onCountryChange: PropTypes.func.isRequired, // TODO Rename this prop, it's not doing what the name implies\n  /** Called when the call to the Shopify API fails */\n  onLoadError: PropTypes.func,\n  /** A function used to render the field */\n  Component: PropTypes.func,\n  /** Additional props to be passed to `Component` */\n  fieldProps: PropTypes.object,\n};\n\nI18nAddressFields.defaultProps = {\n  Component: FormikLocationFieldRenderer, // For legacy compatibility\n};\n\nexport default I18nAddressFields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport LoadingPlaceholder from './LoadingPlaceholder';\nimport { Span } from './Text';\n\n/**\n * Displays a location object\n */\nconst LocationAddress = ({ location, isLoading, showMessageIfEmpty }) => {\n  if (isLoading) {\n    return (\n      <div>\n        <LoadingPlaceholder height=\"1em\" mb=\"0.5em\" />\n        <LoadingPlaceholder height=\"1em\" mb=\"0.5em\" />\n        <LoadingPlaceholder height=\"1em\" />\n      </div>\n    );\n  } else if (!location || (!location.address && !location.country)) {\n    return !showMessageIfEmpty ? null : (\n      <Span fontStyle=\"italic\">\n        <FormattedMessage id=\"LocationAddress.empty\" defaultMessage=\"No address configured yet\" />\n      </Span>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {location.address}\n      <br />\n      {location.country}\n    </React.Fragment>\n  );\n};\n\nLocationAddress.propTypes = {\n  location: PropTypes.shape({\n    address: PropTypes.string,\n    country: PropTypes.string,\n  }),\n  isLoading: PropTypes.bool,\n  showMessageIfEmpty: PropTypes.bool,\n};\n\nexport default LocationAddress;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ExclamationCircle } from '@styled-icons/fa-solid/ExclamationCircle';\nimport { Download as DownloadIcon } from '@styled-icons/feather/Download';\nimport { isNil, omit } from 'lodash';\nimport { useDropzone } from 'react-dropzone';\nimport { FormattedMessage } from 'react-intl';\nimport styled, { css } from 'styled-components';\nimport { v4 as uuid } from 'uuid';\n\nimport { useImageUploader } from '../lib/hooks/useImageUploader';\n\nimport Container from './Container';\nimport { Box } from './Grid';\nimport { getI18nLink } from './I18nFormatters';\nimport StyledSpinner from './StyledSpinner';\nimport { P, Span } from './Text';\nimport UploadedFilePreview from './UploadedFilePreview';\n\nexport const DROPZONE_ACCEPT_IMAGES = { 'image/*': ['.jpeg', '.png'] };\nexport const DROPZONE_ACCEPT_PDF = { 'application/pdf': ['.pdf'] };\nexport const DROPZONE_ACCEPT_ALL = { ...DROPZONE_ACCEPT_IMAGES, ...DROPZONE_ACCEPT_PDF };\n\nconst Dropzone = styled(Container)`\n  border: 1px dashed #c4c7cc;\n  border-radius: 10px;\n  text-align: center;\n  background: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n\n  ${props =>\n    props.onClick &&\n    css`\n      cursor: pointer;\n\n      &:hover:not(:disabled) {\n        background: #f9f9f9;\n        border-color: ${props => props.theme.colors.primary[300]};\n      }\n\n      &:focus {\n        outline: 0;\n        border-color: ${props => props.theme.colors.primary[500]};\n      }\n    `}\n\n  ${props =>\n    props.error &&\n    css`\n      border: 1px solid ${props.theme.colors.red[500]};\n    `}\n\n  img {\n    max-height: 100%;\n    max-width: 100%;\n  }\n`;\n\nconst ReplaceContainer = styled.div`\n  box-sizing: border-box;\n  background: rgba(49, 50, 51, 0.5);\n  color: #ffffff;\n  cursor: pointer;\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 24px;\n  padding: 8px;\n  margin-top: -24px;\n  font-size: 12px;\n  line-height: 1em;\n\n  &:hover {\n    background: rgba(49, 50, 51, 0.6);\n  }\n`;\n\n/**\n * A dropzone to upload one or multiple files\n */\nconst StyledDropzone = ({\n  onSuccess,\n  onReject,\n  children,\n  isLoading,\n  loadingProgress,\n  minHeight,\n  size,\n  fontSize,\n  mockImageGenerator,\n  accept,\n  minSize,\n  maxSize,\n  name,\n  error,\n  value,\n  isMulti,\n  kind,\n  ...props\n}) => {\n  const imgUploaderParams = { isMulti, mockImageGenerator, onSuccess, onReject, kind };\n  const { uploadFiles, isUploading, uploadProgress } = useImageUploader(imgUploaderParams);\n  const dropzoneParams = { accept, minSize, maxSize, multiple: isMulti, onDrop: uploadFiles };\n  const { getRootProps, getInputProps, isDragActive } = useDropzone(dropzoneParams);\n\n  minHeight = size || minHeight;\n  const innerMinHeight = minHeight - 2; // -2 To account for the borders\n  const dropProps = getRootProps();\n  return (\n    <Dropzone\n      {...props}\n      {...(value ? omit(dropProps, ['onClick']) : dropProps)}\n      minHeight={size || minHeight}\n      size={size}\n      error={error}\n    >\n      <input name={name} {...getInputProps()} />\n      {isLoading || isUploading ? (\n        <Container\n          position=\"relative\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          size=\"100%\"\n          minHeight={innerMinHeight}\n        >\n          <Container\n            position=\"absolute\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            size={innerMinHeight}\n          >\n            <StyledSpinner size=\"70%\" />\n          </Container>\n          {isUploading && <Container fontSize=\"9px\">{uploadProgress}%</Container>}\n          {isLoading && !isNil(loadingProgress) && <Container>{loadingProgress}%</Container>}\n        </Container>\n      ) : (\n        <Container position=\"relative\">\n          {isDragActive ? (\n            <Container color=\"primary.500\" fontSize=\"12px\">\n              <Box mb={2}>\n                <DownloadIcon size={20} />\n              </Box>\n              <FormattedMessage\n                id=\"StyledDropzone.DropMsg\"\n                defaultMessage=\"Drop {count,plural, one {file} other {files}} here\"\n                values={{ count: isMulti ? 2 : 1 }}\n              />\n            </Container>\n          ) : (\n            <React.Fragment>\n              {!value ? (\n                <P color={error ? 'red.500' : 'black.500'} px={2} fontSize={fontSize}>\n                  {error ? (\n                    <React.Fragment>\n                      <ExclamationCircle color=\"#E03F6A\" size={16} />\n                      <br />\n                      <Span fontWeight={600} ml={1}>\n                        {error}\n                      </Span>\n                      <br />\n                    </React.Fragment>\n                  ) : isMulti ? (\n                    <FormattedMessage\n                      id=\"DropZone.UploadBox\"\n                      defaultMessage=\"Drag and drop one or multiple files or <i18n-link>click here to select</i18n-link>.\"\n                      values={{ 'i18n-link': getI18nLink() }}\n                    />\n                  ) : (\n                    <FormattedMessage\n                      id=\"DragAndDropOrClickToUpload\"\n                      defaultMessage=\"Drag & drop or <i18n-link>click to upload</i18n-link>\"\n                      values={{ 'i18n-link': getI18nLink() }}\n                      tagName=\"span\"\n                    />\n                  )}\n                </P>\n              ) : (\n                <React.Fragment>\n                  <UploadedFilePreview size={size} url={value} border=\"none\" />\n                  <ReplaceContainer\n                    onClick={dropProps.onClick}\n                    role=\"button\"\n                    tabIndex={0}\n                    onKeyDown={event => {\n                      if (event.key === 'Enter') {\n                        event.preventDefault();\n                        dropProps.onClick();\n                      }\n                    }}\n                  >\n                    <FormattedMessage id=\"Image.Replace\" defaultMessage=\"Replace\" />\n                  </ReplaceContainer>\n                </React.Fragment>\n              )}\n              {children}\n            </React.Fragment>\n          )}\n        </Container>\n      )}\n    </Dropzone>\n  );\n};\n\nStyledDropzone.propTypes = {\n  /** Called back with the uploaded files on success */\n  onSuccess: PropTypes.func,\n  /** Name for the input */\n  name: PropTypes.string,\n  /** Called back with the rejectd files */\n  onReject: PropTypes.func,\n  /** Content to show inside the dropzone. Defaults to message \"Drag and drop one or...\" */\n  children: PropTypes.node,\n  /** Force loading state to be displayed */\n  isLoading: PropTypes.bool,\n  /** Use this to override the loading progress indicator */\n  loadingProgress: PropTypes.number,\n  /** Font size used for the default messages */\n  fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** Min height of the container */\n  minHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** To have square container */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  /** A function to generate mock images */\n  mockImageGenerator: PropTypes.func,\n  /** Whether the dropzone should accept multiple files */\n  isMulti: PropTypes.bool,\n  /** Filetypes to accept */\n  accept: PropTypes.object,\n  /** Min file size */\n  minSize: PropTypes.number,\n  /** Max file size */\n  maxSize: PropTypes.number,\n  /** A truthy/falsy value defining if the field has an error (ie. if it's required) */\n  error: PropTypes.any,\n  /** required field */\n  required: PropTypes.bool,\n  /** if set, the image will be displayed and a \"replace\" banner will be added */\n  value: PropTypes.string,\n  /** A unique identified for the category of uploaded files */\n  kind: PropTypes.string.isRequired,\n};\n\nStyledDropzone.defaultProps = {\n  minHeight: 96,\n  mockImageGenerator: () => `https://loremflickr.com/120/120?lock=${uuid()}`,\n  isMulti: true,\n  fontSize: '14px',\n};\n\nexport default StyledDropzone;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { pick } from 'lodash';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { formatFormErrorMessage } from '../lib/form-utils';\n\nimport I18nAddressFields, { SimpleLocationFieldRenderer } from './I18nAddressFields';\nimport InputTypeCountry from './InputTypeCountry';\nimport StyledInputField from './StyledInputField';\nimport StyledTextarea from './StyledTextarea';\n\nconst DEFAULT_LOCATION = {\n  country: null,\n  address: null,\n  structured: null,\n};\n\n/**\n * A component to input a location. It tries to use the structured address if available,\n * and fallbacks on the raw address if not.\n */\nconst StyledInputLocation = ({\n  name,\n  location,\n  autoDetectCountry,\n  labelFontSize,\n  labelFontWeight,\n  onChange,\n  errors,\n  prefix,\n  required,\n}) => {\n  const [useFallback, setUseFallback] = React.useState(false);\n  const intl = useIntl();\n  const forceLegacyFormat = Boolean(!location?.structured && location?.address);\n  const hasCountry = Boolean(location?.country);\n  return (\n    <div>\n      <StyledInputField\n        name={`${prefix}country`}\n        htmlFor={`${prefix}country`}\n        label={<FormattedMessage id=\"ExpenseForm.ChooseCountry\" defaultMessage=\"Choose country\" />}\n        labelFontSize={labelFontSize}\n        labelFontWeight={labelFontWeight}\n        error={formatFormErrorMessage(intl, errors?.country)}\n        required={required}\n      >\n        {({ id, ...inputProps }) => (\n          <InputTypeCountry\n            {...inputProps}\n            inputId={id}\n            value={location?.country}\n            autoDetect={autoDetectCountry}\n            onChange={country => {\n              onChange({ ...(location || DEFAULT_LOCATION), country });\n              if (setUseFallback) {\n                setUseFallback(false);\n              }\n            }}\n          />\n        )}\n      </StyledInputField>\n      {hasCountry && !useFallback && !forceLegacyFormat ? (\n        <I18nAddressFields\n          selectedCountry={location.country}\n          value={location.structured || {}}\n          onLoadError={() => setUseFallback(true)} // TODO convert from structured to raw\n          Component={SimpleLocationFieldRenderer}\n          fieldProps={{ labelFontSize, labelFontWeight }}\n          required={required}\n          onCountryChange={structured =>\n            onChange(\n              pick({ ...(location || DEFAULT_LOCATION), structured }, ['name', 'address', 'country', 'structured']),\n            )\n          }\n        />\n      ) : (\n        <StyledInputField\n          name={`${prefix}${name}`}\n          label={intl.formatMessage({ id: 'collective.address.label', defaultMessage: 'Address' })}\n          required\n          mt={3}\n          labelFontSize={labelFontSize}\n          labelFontWeight={labelFontWeight}\n        >\n          {inputProps => (\n            <StyledTextarea\n              {...inputProps}\n              disabled={!hasCountry}\n              data-cy={`${prefix}address`}\n              minHeight={100}\n              placeholder=\"P. Sherman 42&#10;Wallaby Way&#10;Sydney\"\n              defaultValue={location?.address || ''}\n              onChange={e => onChange({ ...(location || DEFAULT_LOCATION), address: e.target.value })}\n            />\n          )}\n        </StyledInputField>\n      )}\n    </div>\n  );\n};\n\nStyledInputLocation.propTypes = {\n  name: PropTypes.string,\n  prefix: PropTypes.string,\n  onChange: PropTypes.func,\n  autoDetectCountry: PropTypes.bool,\n  required: PropTypes.bool,\n  labelFontWeight: PropTypes.any,\n  labelFontSize: PropTypes.any,\n  location: PropTypes.shape({\n    structured: PropTypes.object,\n    address: PropTypes.string,\n    country: PropTypes.string,\n  }),\n  errors: PropTypes.object,\n};\n\nStyledInputLocation.defaultProps = {\n  required: true,\n  prefix: '',\n};\n\nexport default StyledInputLocation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { round } from 'lodash';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { i18nTaxType } from '../../lib/i18n/taxes';\nimport { computeExpenseAmounts, getTaxAmount, isTaxRateValid } from './lib/utils';\n\nimport Container from '../Container';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Flex } from '../Grid';\nimport StyledHr from '../StyledHr';\nimport { Span } from '../Text';\n\nconst AmountLine = styled.p`\n  font-size: 14px;\n  line-height: 20px;\n  color: ${props => props.theme.colors.black[900]};\n  white-space: nowrap;\n  margin: 0;\n  margin-bottom: 4px;\n  padding-left: 12px;\n`;\n\nconst TotalAmountLine = styled(AmountLine)`\n  font-size: 16px;\n  line-height: 24px;\n  font-weight: bold;\n`;\n\n/**\n * Displays the total amount for all the expense items.\n */\nconst ExpenseAmountBreakdown = ({ items, currency, taxes, expenseTotalAmount }) => {\n  const intl = useIntl();\n  const { hasTaxes, totalInvoiced, totalAmount } = computeExpenseAmounts(items, taxes);\n  return (\n    <Container textAlign=\"right\">\n      {hasTaxes && (\n        <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n          <AmountLine data-cy=\"expense-invoiced-amount\">\n            <Span textTransform=\"capitalize\" mr={3}>\n              <FormattedMessage defaultMessage=\"Subtotal\" />\n              {currency && ` (${currency})`}\n            </Span>\n            &nbsp;\n            <FormattedMoneyAmount\n              amount={totalInvoiced}\n              precision={2}\n              currency={currency}\n              showCurrencyCode={false}\n              amountStyles={null}\n            />\n          </AmountLine>\n          {taxes.map(tax => (\n            <AmountLine key={tax.type} data-cy={`tax-${tax.type}-expense-amount-line`}>\n              <Span textTransform=\"capitalize\" mr={3}>\n                {i18nTaxType(intl, tax.type, 'short')}\n                {isTaxRateValid(tax.rate) && ` (${round(tax.rate * 100, 2)}%)`}\n              </Span>\n              &nbsp;\n              <FormattedMoneyAmount\n                amount={!isTaxRateValid(tax.rate) ? null : getTaxAmount(totalInvoiced, tax)}\n                precision={2}\n                currency={currency}\n                showCurrencyCode={false}\n                amountStyles={null}\n              />\n            </AmountLine>\n          ))}\n          <StyledHr width=\"100%\" my=\"12px\" borderColor=\"black.500\" borderStyle=\"dotted\" />\n        </Flex>\n      )}\n      <TotalAmountLine>\n        <Span textTransform=\"capitalize\" mr={3}>\n          {intl.formatMessage({ id: 'TotalAmount', defaultMessage: 'Total amount' })}\n        </Span>\n        &nbsp;\n        <Span color=\"black.500\" fontSize=\"16px\" letterSpacing={0} data-cy=\"expense-items-total-amount\">\n          <FormattedMoneyAmount\n            amount={expenseTotalAmount ?? totalAmount}\n            precision={2}\n            currency={currency}\n            showCurrencyCode={false}\n          />\n        </Span>\n      </TotalAmountLine>\n    </Container>\n  );\n};\n\nExpenseAmountBreakdown.propTypes = {\n  /** The currency of the collective */\n  currency: PropTypes.string.isRequired,\n  /** Expense items */\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number,\n    }),\n  ).isRequired,\n  /** Taxes applied to the expense */\n  taxes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      rate: PropTypes.number,\n    }),\n  ),\n  /** Total amount coming from the expense */\n  expenseTotalAmount: PropTypes.number,\n};\n\nexport default React.memo(ExpenseAmountBreakdown);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport expenseTypes from '../../lib/constants/expenseTypes';\n\nimport { Box, Flex } from '../Grid';\nimport StyledLinkButton from '../StyledLinkButton';\nimport UploadedFilePreview from '../UploadedFilePreview';\n\nimport ExpenseInvoiceDownloadHelper from './ExpenseInvoiceDownloadHelper';\n\nconst getFileName = (intl, idx, totalNbFiles) => {\n  if (totalNbFiles === 1) {\n    return intl.formatMessage({ id: 'File.AttachedFile', defaultMessage: 'Attached file' });\n  } else {\n    return intl.formatMessage({ defaultMessage: 'Attached file {number}' }, { number: idx + 1 });\n  }\n};\n\nconst ExpenseAttachedFiles = ({ files, onRemove, showInvoice, collective, expense }) => {\n  const intl = useIntl();\n  return (\n    <Flex flexWrap=\"wrap\">\n      {showInvoice && [expenseTypes.INVOICE, expenseTypes.SETTLEMENT].includes(expense.type) && (\n        <Box mr={3} mb={3}>\n          <ExpenseInvoiceDownloadHelper expense={expense} collective={collective}>\n            {({ isLoading, downloadInvoice }) => (\n              <UploadedFilePreview\n                onClick={downloadInvoice}\n                isDownloading={isLoading}\n                size={88}\n                showFileName\n                fileName={intl.formatMessage({ defaultMessage: 'Download expense' })}\n              />\n            )}\n          </ExpenseInvoiceDownloadHelper>\n        </Box>\n      )}\n      {files.map((file, idx) => (\n        <Box key={file.id || file.url} mr={3} mb={3}>\n          <UploadedFilePreview\n            size={88}\n            url={file.url}\n            fileName={file.name || getFileName(intl, idx, files.length)}\n            fileSize={file.info?.size}\n            showFileName\n          />\n          {onRemove && (\n            <Box ml=\"4px\" mt=\"2px\">\n              <StyledLinkButton variant=\"danger\" fontSize=\"12px\" onClick={() => onRemove(idx)}>\n                <FormattedMessage id=\"Remove\" defaultMessage=\"Remove\" />\n              </StyledLinkButton>\n            </Box>\n          )}\n        </Box>\n      ))}\n    </Flex>\n  );\n};\n\nExpenseAttachedFiles.propTypes = {\n  showInvoice: PropTypes.bool,\n  /** Required if showInvoice is true */\n  expense: PropTypes.object,\n  /** Required if showInvoice is true */\n  collective: PropTypes.object,\n  files: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      url: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  /** If provided, a link to remove the file will be displayed */\n  onRemove: PropTypes.func,\n};\n\nexport default ExpenseAttachedFiles;\n","import expenseTypes from '../../../lib/constants/expenseTypes';\n\nimport { DROPZONE_ACCEPT_ALL } from '../../StyledDropzone';\n\nexport const attachmentDropzoneParams = {\n  accept: DROPZONE_ACCEPT_ALL,\n  minSize: 1024, // in bytes, =1ko\n  maxSize: 10000 * 1024, // in bytes, =10mo\n};\n\n/**\n * Returns true if the attachment require adding a file\n */\nexport const attachmentRequiresFile = expenseType => {\n  return expenseType === expenseTypes.RECEIPT || expenseType === expenseTypes.CHARGE;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport { FormattedMessage } from 'react-intl';\n\nimport { useImageUploader } from '../../lib/hooks/useImageUploader';\nimport { attachmentDropzoneParams } from './lib/attachments';\n\nimport StyledButton from '../StyledButton';\n\nconst AddNewAttachedFilesButton = ({ disabled, mockImageGenerator, onSuccess }) => {\n  const { isUploading, uploadFiles } = useImageUploader({\n    isMulti: true,\n    mockImageGenerator,\n    onSuccess,\n    kind: 'EXPENSE_ATTACHED_FILE',\n  });\n\n  return (\n    <Dropzone\n      {...attachmentDropzoneParams}\n      name=\"addAttachedFile\"\n      disabled={disabled}\n      multiple={true}\n      onDrop={uploadFiles}\n    >\n      {({ getRootProps, getInputProps }) => (\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n          <StyledButton\n            buttonSize=\"tiny\"\n            type=\"button\"\n            minWidth={135}\n            data-cy=\"expense-add-item-btn\"\n            disabled={disabled}\n            loading={isUploading}\n          >\n            +&nbsp;\n            <FormattedMessage id=\"ExpenseForm.AddAttachedFile\" defaultMessage=\"Add new document\" />\n          </StyledButton>\n        </div>\n      )}\n    </Dropzone>\n  );\n};\n\nAddNewAttachedFilesButton.propTypes = {\n  disabled: PropTypes.bool,\n  onSuccess: PropTypes.func,\n  mockImageGenerator: PropTypes.func,\n};\n\nexport default AddNewAttachedFilesButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { uniqBy } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport { attachmentDropzoneParams } from './lib/attachments';\n\nimport { Flex } from '../Grid';\nimport PrivateInfoIcon from '../icons/PrivateInfoIcon';\nimport StyledDropzone from '../StyledDropzone';\nimport StyledHr from '../StyledHr';\nimport { P, Span } from '../Text';\n\nimport AddNewAttachedFilesButton from './AddNewAttachedFilesButton';\nimport ExpenseAttachedFiles from './ExpenseAttachedFiles';\n\nconst ExpenseAttachedFilesForm = ({ onChange, disabled, defaultValue, title, description }) => {\n  const [files, setFiles] = React.useState(uniqBy(defaultValue, 'url'));\n\n  return (\n    <div>\n      <Flex alignItems=\"center\" my={16}>\n        <Span color=\"black.600\" fontSize=\"16px\" lineHeight=\"21px\">\n          <FormattedMessage\n            id=\"OptionalFieldLabel\"\n            defaultMessage=\"{field} (optional)\"\n            values={{\n              field: (\n                <Span color=\"black.900\" fontSize=\"16px\" fontWeight=\"bold\">\n                  {title}\n                </Span>\n              ),\n            }}\n          />\n          &nbsp;\n          <PrivateInfoIcon color=\"#969BA3\" size={12} />\n        </Span>\n        <StyledHr flex=\"1\" borderColor=\"black.300\" mx={2} />\n        {files?.length > 0 && (\n          <AddNewAttachedFilesButton\n            disabled={disabled}\n            onSuccess={newFiles => {\n              const uploadedFiles = [...files, ...newFiles];\n              setFiles(uploadedFiles);\n              onChange(uploadedFiles);\n            }}\n          />\n        )}\n      </Flex>\n      <P fontSize=\"13px\" color=\"black.600\" mb={16}>\n        {description}\n      </P>\n      {files?.length > 0 ? (\n        <ExpenseAttachedFiles\n          files={files}\n          onRemove={idx => {\n            const updatedFiles = [...files];\n            updatedFiles.splice(idx, 1);\n            setFiles(updatedFiles);\n            onChange(updatedFiles);\n          }}\n        />\n      ) : (\n        <StyledDropzone\n          {...attachmentDropzoneParams}\n          name=\"attachedFiles\"\n          kind=\"EXPENSE_ATTACHED_FILE\"\n          disabled={disabled}\n          minHeight={72}\n          onSuccess={uploadedFiles => {\n            setFiles(uploadedFiles);\n            onChange(uploadedFiles);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nExpenseAttachedFilesForm.propTypes = {\n  defaultValue: PropTypes.arrayOf(\n    PropTypes.shape({\n      url: PropTypes.string.isRequired,\n    }),\n  ),\n  title: PropTypes.element.isRequired,\n  description: PropTypes.element.isRequired,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nexport default ExpenseAttachedFilesForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FastField, Field } from 'formik';\nimport { escape, get, isEmpty, unescape } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport { isURL } from 'validator';\n\nimport expenseTypes from '../../lib/constants/expenseTypes';\nimport { createError, ERROR } from '../../lib/errors';\nimport { formatFormErrorMessage, requireFields } from '../../lib/form-utils';\nimport { attachmentDropzoneParams, attachmentRequiresFile } from './lib/attachments';\n\nimport { Box, Flex } from '../Grid';\nimport PrivateInfoIcon from '../icons/PrivateInfoIcon';\nimport RichTextEditor from '../RichTextEditor';\nimport StyledButton from '../StyledButton';\nimport StyledDropzone from '../StyledDropzone';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputAmount from '../StyledInputAmount';\nimport StyledInputField from '../StyledInputField';\nimport { Span } from '../Text';\n\nexport const msg = defineMessages({\n  previewImgAlt: {\n    id: 'ExpenseReceiptImagePreview.Alt',\n    defaultMessage: 'Expense receipt preview',\n  },\n  descriptionLabel: {\n    id: 'Fields.description',\n    defaultMessage: 'Description',\n  },\n  amountLabel: {\n    id: 'Fields.amount',\n    defaultMessage: 'Amount',\n  },\n  dateLabel: {\n    id: 'expense.incurredAt',\n    defaultMessage: 'Date',\n  },\n  removeReceipt: {\n    id: 'expense.RemoveReceipt',\n    defaultMessage: 'Remove receipt',\n  },\n  removeItem: {\n    id: 'expense.RemoveItem',\n    defaultMessage: 'Remove item',\n  },\n  receiptRequired: {\n    id: 'expense.ReceiptRequired',\n    defaultMessage: 'Receipt required',\n  },\n});\n\n/** Validates a single expense item, one field at a time (doesn't return multiple errors) */\nexport const validateExpenseItem = (expense, item) => {\n  const requiredFields = ['description', 'amount'];\n  if (expense.type !== expenseTypes.GRANT) {\n    requiredFields.push('incurredAt');\n  }\n  const errors = requireFields(item, requiredFields);\n\n  if (isNaN(item.amount)) {\n    errors.amount = createError(ERROR.FORM_FIELD_PATTERN);\n  }\n\n  if (!isEmpty(errors)) {\n    return errors;\n  }\n\n  // Attachment URL\n  if (attachmentRequiresFile(expense.type)) {\n    if (!item.url) {\n      errors.url = createError(ERROR.FORM_FIELD_REQUIRED);\n    } else if (!isURL(item.url)) {\n      errors.url = createError(ERROR.FORM_FIELD_PATTERN);\n    }\n  }\n\n  // Show the expense currency errors on the amount field, since it's displayed next to it\n  if (!expense.currency) {\n    errors.amount = createError(ERROR.FORM_FIELD_REQUIRED);\n  }\n\n  return errors;\n};\n\nconst AttachmentLabel = () => (\n  <Span fontSize=\"13px\" whiteSpace=\"nowrap\">\n    <FormattedMessage id=\"Expense.Attachment\" defaultMessage=\"Attachment\" />\n    &nbsp;&nbsp;\n    <PrivateInfoIcon color=\"#969BA3\" />\n  </Span>\n);\n\n/**\n * Form for a single attachment. Must be used with Formik.\n */\nconst ExpenseItemForm = ({\n  attachment,\n  errors,\n  onRemove,\n  onUploadError,\n  currency,\n  requireFile,\n  requireDate,\n  isRichText,\n  name,\n  isOptional,\n  editOnlyDescriptiveInfo,\n  hasMultiCurrency,\n  availableCurrencies,\n  onCurrencyChange,\n  isLastItem,\n}) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n  const attachmentKey = `attachment-${attachment.id || attachment.url}`;\n  const getFieldName = field => `${name}.${field}`;\n  const getError = field => formatFormErrorMessage(intl, get(errors, getFieldName(field)));\n\n  return (\n    <Box mb={18} data-cy=\"expense-attachment-form\">\n      <Flex flexWrap=\"wrap\">\n        {requireFile && (\n          <FastField name={getFieldName('url')}>\n            {({ field, form, meta }) => {\n              const hasValidUrl = field.value && isURL(field.value);\n              return (\n                <StyledInputField\n                  mr={[1, 4]}\n                  mt={2}\n                  htmlFor={attachmentKey}\n                  label={<AttachmentLabel />}\n                  data-cy=\"attachment-url-field\"\n                  required={!isOptional}\n                  error={meta.error?.type !== ERROR.FORM_FIELD_REQUIRED && formatFormErrorMessage(intl, meta.error)}\n                >\n                  <StyledDropzone\n                    {...attachmentDropzoneParams}\n                    kind=\"EXPENSE_ITEM\"\n                    data-cy={`${field.name}-dropzone`}\n                    name={field.name}\n                    isMulti={false}\n                    error={\n                      meta.error?.type === ERROR.FORM_FIELD_REQUIRED ? formatMessage(msg.receiptRequired) : meta.error\n                    }\n                    onSuccess={({ url }) => form.setFieldValue(field.name, url)}\n                    mockImageGenerator={() => `https://loremflickr.com/120/120/invoice?lock=${attachmentKey}`}\n                    fontSize=\"13px\"\n                    size={[84, 112]}\n                    value={hasValidUrl && field.value}\n                    onReject={onUploadError}\n                  />\n                </StyledInputField>\n              );\n            }}\n          </FastField>\n        )}\n        <Box flex=\"1 1\" minWidth={170} mt={2}>\n          <StyledInputField\n            name={getFieldName('description')}\n            error={getError('description')}\n            htmlFor={`${attachmentKey}-description`}\n            label={formatMessage(msg.descriptionLabel)}\n            labelFontSize=\"13px\"\n            required={!isOptional}\n          >\n            {inputProps =>\n              isRichText ? (\n                <Field\n                  as={RichTextEditor}\n                  {...inputProps}\n                  inputName={inputProps.name}\n                  withBorders\n                  version=\"simplified\"\n                />\n              ) : (\n                <Field name={inputProps.name}>\n                  {({ field, form: { setFieldValue } }) => (\n                    <StyledInput\n                      {...inputProps}\n                      value={unescape(field.value)}\n                      onChange={e => setFieldValue(inputProps.name, escape(e.target.value))}\n                    />\n                  )}\n                </Field>\n              )\n            }\n          </StyledInputField>\n          <Flex justifyContent=\"flex-end\" flexDirection={['column', 'row']}>\n            {requireDate && (\n              <StyledInputField\n                name={getFieldName('incurredAt')}\n                error={getError('incurredAt')}\n                htmlFor={`${attachmentKey}-incurredAt`}\n                inputType=\"date\"\n                required={!isOptional}\n                label={formatMessage(msg.dateLabel)}\n                labelFontSize=\"13px\"\n                flex={requireFile ? '1 1 44%' : '1 1 50%'}\n                mt={3}\n                mr={[0, '8px']}\n                disabled={editOnlyDescriptiveInfo}\n              >\n                {inputProps => (\n                  <Field maxHeight={39} {...inputProps}>\n                    {({ field }) => (\n                      <StyledInput\n                        {...inputProps}\n                        {...field}\n                        value={typeof field.value === 'string' ? field.value.split('T')[0] : field.value}\n                      />\n                    )}\n                  </Field>\n                )}\n              </StyledInputField>\n            )}\n            <StyledInputField\n              name={getFieldName('amount')}\n              error={getError('amount')}\n              htmlFor={`${attachmentKey}-amount`}\n              label={formatMessage(msg.amountLabel)}\n              required={!isOptional}\n              labelFontSize=\"13px\"\n              inputType=\"number\"\n              flex=\"1 1 30%\"\n              minWidth={150}\n              maxWidth={['100%', '40%']}\n              mt={3}\n              disabled={editOnlyDescriptiveInfo}\n            >\n              {inputProps => (\n                <Field name={inputProps.name}>\n                  {({ field, form: { setFieldValue } }) => (\n                    <StyledInputAmount\n                      {...field}\n                      {...inputProps}\n                      currency={currency}\n                      currencyDisplay=\"CODE\"\n                      min={isOptional ? undefined : 1}\n                      maxWidth=\"100%\"\n                      placeholder=\"0.00\"\n                      onChange={(value, e) => setFieldValue(e.target.name, value)}\n                      onCurrencyChange={onCurrencyChange}\n                      hasCurrencyPicker={hasMultiCurrency || !currency} // Makes sure user can re-select currency after a reset\n                      availableCurrencies={availableCurrencies}\n                    />\n                  )}\n                </Field>\n              )}\n            </StyledInputField>\n          </Flex>\n        </Box>\n      </Flex>\n      <Flex alignItems=\"center\" mt={3}>\n        {onRemove && !editOnlyDescriptiveInfo && (\n          <StyledButton\n            type=\"button\"\n            buttonStyle=\"dangerSecondary\"\n            buttonSize=\"tiny\"\n            isBorderless\n            ml={-10}\n            onClick={() => onRemove(attachment)}\n          >\n            {formatMessage(requireFile ? msg.removeReceipt : msg.removeItem)}\n          </StyledButton>\n        )}\n        {!isLastItem && <StyledHr flex=\"1\" borderStyle=\"dashed\" borderColor=\"black.200\" />}\n      </Flex>\n    </Box>\n  );\n};\n\nExpenseItemForm.propTypes = {\n  /** The currency of the collective */\n  currency: PropTypes.string,\n  /** ReactHookForm key */\n  name: PropTypes.string.isRequired,\n  /** Called when clicking on remove */\n  onRemove: PropTypes.func,\n  /** A map of errors for this object */\n  errors: PropTypes.object,\n  /** Whether a file is required for this attachment type */\n  requireFile: PropTypes.bool,\n  /** Whether a date is required for this expense type */\n  requireDate: PropTypes.bool,\n  /** Whether this whole item is optional */\n  isOptional: PropTypes.bool,\n  /** Whether this item is the first in the list */\n  hasMultiCurrency: PropTypes.bool,\n  /** True if description is HTML */\n  isRichText: PropTypes.bool,\n  /** Called when an attachment upload fails */\n  onUploadError: PropTypes.func.isRequired,\n  /** For multi-currency expenses: called when the expense's currency changes */\n  onCurrencyChange: PropTypes.func.isRequired,\n  /** For multi-currency expenses */\n  availableCurrencies: PropTypes.arrayOf(PropTypes.string),\n  /** the attachment data */\n  attachment: PropTypes.shape({\n    id: PropTypes.string,\n    url: PropTypes.string,\n    description: PropTypes.string,\n    incurredAt: PropTypes.string,\n    amount: PropTypes.number,\n  }).isRequired,\n  editOnlyDescriptiveInfo: PropTypes.bool,\n  isLastItem: PropTypes.bool,\n};\n\nExpenseItemForm.defaultProps = {\n  isOptional: false,\n};\n\nExpenseItemForm.whyDidYouRender = true;\n\nexport default React.memo(ExpenseItemForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { accountHasGST, accountHasVAT, TaxType } from '@opencollective/taxes';\nimport { isEmpty } from 'lodash';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { v4 as uuid } from 'uuid';\n\nimport expenseTypes from '../../lib/constants/expenseTypes';\nimport { toIsoDateStr } from '../../lib/date-utils';\nimport { formatErrorMessage } from '../../lib/errors';\nimport { i18nTaxType } from '../../lib/i18n/taxes';\nimport { attachmentDropzoneParams, attachmentRequiresFile } from './lib/attachments';\n\nimport { Box, Flex } from '../Grid';\nimport { I18nBold } from '../I18nFormatters';\nimport MessageBox from '../MessageBox';\nimport StyledCheckbox from '../StyledCheckbox';\nimport StyledDropzone from '../StyledDropzone';\nimport StyledHr from '../StyledHr';\nimport { P, Span } from '../Text';\n\nimport ExpenseAmountBreakdown from './ExpenseAmountBreakdown';\nimport ExpenseGSTFormikFields from './ExpenseGSTFormikFields';\nimport ExpenseItemForm from './ExpenseItemForm';\nimport ExpenseVATFormikFields from './ExpenseVATFormikFields';\n\n/** Init a new expense item with default attributes */\nconst newExpenseItem = attrs => ({\n  id: uuid(), // we generate it here to properly key lists, but it won't be submitted to API\n  incurredAt: toIsoDateStr(new Date()),\n  description: '',\n  amount: null,\n  url: '',\n  __isNew: true,\n  ...attrs,\n});\n\n/** Converts a list of filenames to expense item objects */\nconst filesListToItems = files => files.map(({ url }) => newExpenseItem({ url }));\n\n/** Helper to add a new item to the form */\nexport const addNewExpenseItem = (formik, defaultValues) => {\n  formik.setFieldValue('items', [...(formik.values.items || []), newExpenseItem(defaultValues)]);\n};\n\nclass ExpenseFormItems extends React.PureComponent {\n  static propTypes = {\n    collective: PropTypes.object,\n    availableCurrencies: PropTypes.arrayOf(PropTypes.string),\n    /** @ignore from injectIntl */\n    intl: PropTypes.object,\n    /** Array helper as provided by formik */\n    push: PropTypes.func.isRequired,\n    /** Array helper as provided by formik */\n    remove: PropTypes.func.isRequired,\n    /** Formik */\n    form: PropTypes.shape({\n      values: PropTypes.object.isRequired,\n      touched: PropTypes.object,\n      errors: PropTypes.object,\n      setFieldValue: PropTypes.func,\n      setFieldTouched: PropTypes.func,\n    }).isRequired,\n  };\n\n  state = { uploadErrors: null };\n\n  componentDidMount() {\n    const { values } = this.props.form;\n    if ([expenseTypes.INVOICE, expenseTypes.GRANT].includes(values.type)) {\n      this.addDefaultItem();\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    const { values, touched } = this.props.form;\n\n    if (oldProps.form.values.type !== values.type) {\n      if ([expenseTypes.INVOICE, expenseTypes.GRANT].includes(values.type)) {\n        this.addDefaultItem();\n      } else if (!touched.items && values.items?.length === 1) {\n        const firstItem = values.items[0];\n        if (!firstItem.url && !firstItem.description && !firstItem.amount) {\n          this.props.remove(0);\n        }\n      }\n    }\n  }\n\n  addDefaultItem() {\n    const { values } = this.props.form;\n    if (isEmpty(values.items)) {\n      this.props.push(newExpenseItem());\n    }\n  }\n\n  remove = item => {\n    const idx = this.props.form.values.items.findIndex(a => a.id === item.id);\n    if (idx !== -1) {\n      this.props.remove(idx);\n    }\n  };\n\n  renderErrors() {\n    const { uploadErrors } = this.state;\n    if (!uploadErrors?.length) {\n      return null;\n    } else {\n      return (\n        <MessageBox type=\"error\" withIcon mb={2}>\n          <strong>\n            <FormattedMessage\n              id=\"FilesUploadFailed\"\n              defaultMessage=\"{count, plural, one {The file} other {# files}} failed to upload\"\n              values={{ count: uploadErrors.length }}\n            />\n          </strong>\n          <P mt={1} pl={22}>\n            {formatErrorMessage(this.props.intl, uploadErrors[0]?.message)}\n          </P>\n        </MessageBox>\n      );\n    }\n  }\n\n  onCurrencyChange = async newCurrency => {\n    /* If we are calling setFieldValue in response to a field change and has validations\n     * we should set the field to touched; https://github.com/jaredpalmer/formik/issues/2059\n     */\n    await this.props.form.setFieldValue('currency', newCurrency);\n    this.props.form.setFieldTouched('currency', true);\n  };\n\n  getApplicableTaxType() {\n    const { collective, form } = this.props;\n    if (form.values.type === expenseTypes.INVOICE) {\n      if (accountHasVAT(collective, collective.host)) {\n        return TaxType.VAT;\n      } else if (accountHasGST(collective.host || collective)) {\n        return TaxType.GST;\n      }\n    }\n  }\n\n  renderTaxFormFields(taxType, isOptional) {\n    switch (taxType) {\n      case TaxType.VAT:\n        return <ExpenseVATFormikFields formik={this.props.form} isOptional={isOptional} />;\n      case TaxType.GST:\n        return <ExpenseGSTFormikFields formik={this.props.form} isOptional={isOptional} />;\n      default:\n        return `Tax not supported: ${taxType}`;\n    }\n  }\n\n  hasTaxFields(taxType) {\n    if (!taxType) {\n      return false;\n    }\n\n    const { values } = this.props.form;\n    if (!values.taxes) {\n      // If tax is not initialized (create expense) we render the fields by default\n      return true;\n    } else {\n      // If tax is initialized (edit expense) we render the fields only if there are values\n      return values.taxes[0] && !values.taxes[0].isDisabled;\n    }\n  }\n\n  render() {\n    const { availableCurrencies } = this.props;\n    const { values, errors, setFieldValue } = this.props.form;\n    const requireFile = attachmentRequiresFile(values.type);\n    const isGrant = values.type === expenseTypes.GRANT;\n    const isCreditCardCharge = values.type === expenseTypes.CHARGE;\n    const items = values.items || [];\n    const hasItems = items.length > 0;\n\n    if (!hasItems && requireFile) {\n      return (\n        <React.Fragment>\n          {this.renderErrors()}\n          <StyledDropzone\n            {...attachmentDropzoneParams}\n            kind=\"EXPENSE_ITEM\"\n            data-cy=\"expense-multi-attachments-dropzone\"\n            onSuccess={files => filesListToItems(files).map(this.props.push)}\n            onReject={uploadErrors => this.setState({ uploadErrors })}\n            mockImageGenerator={index => `https://loremflickr.com/120/120/invoice?lock=${index}`}\n            mb={3}\n          >\n            <P color=\"black.700\" mt={1} px={2}>\n              <FormattedMessage\n                id=\"MultipleAttachmentsDropzone.UploadWarning\"\n                defaultMessage=\"<i18n-bold>Important</i18n-bold>: Expenses will not be paid without a valid receipt.\"\n                values={{ 'i18n-bold': I18nBold }}\n              />\n            </P>\n          </StyledDropzone>\n        </React.Fragment>\n      );\n    }\n\n    const onRemove = requireFile || items.length > 1 ? this.remove : null;\n    const taxType = this.getApplicableTaxType();\n    const hasTaxFields = this.hasTaxFields(taxType);\n    return (\n      <Box>\n        {this.renderErrors()}\n        {items.map((attachment, index) => (\n          <ExpenseItemForm\n            key={`item-${attachment.id}`}\n            attachment={attachment}\n            currency={values.currency}\n            name={`items[${index}]`}\n            errors={errors}\n            onRemove={onRemove}\n            requireFile={requireFile}\n            requireDate={!isGrant}\n            isRichText={isGrant}\n            onUploadError={e => this.setState({ uploadErrors: [e] })}\n            isOptional={values.payee?.isInvite}\n            editOnlyDescriptiveInfo={isCreditCardCharge}\n            hasMultiCurrency={!index && availableCurrencies?.length > 1} // Only display currency picker for the first item\n            availableCurrencies={availableCurrencies}\n            onCurrencyChange={async value => await this.onCurrencyChange(value)}\n            isLastItem={index === items.length - 1}\n          />\n        ))}\n        {taxType && (\n          <div>\n            <Flex alignItems=\"center\" mt={24}>\n              <Span color=\"black.900\" fontSize=\"16px\" lineHeight=\"21px\" fontWeight=\"bold\">\n                <FormattedMessage defaultMessage=\"Tax and Total\" />\n              </Span>\n              <StyledHr flex=\"1\" borderColor=\"black.300\" mx={2} />\n            </Flex>\n            <Box mt=\"8px\" display=\"inline-block\">\n              <StyledCheckbox\n                name={`tax-${taxType}`}\n                checked={hasTaxFields}\n                onChange={({ checked }) => {\n                  // Using \"isDisabled\" flag rather than removing to preserve data when enabled/disabled\n                  if (checked) {\n                    const tax = { ...values.taxes?.[0], type: taxType, isDisabled: false };\n                    setFieldValue('taxes', [tax]);\n                  } else {\n                    setFieldValue('taxes.0.isDisabled', true);\n                  }\n                }}\n                label={\n                  <FormattedMessage\n                    defaultMessage=\"Apply {taxName}\"\n                    values={{ taxName: i18nTaxType(this.props.intl, taxType) }}\n                  />\n                }\n              />\n            </Box>\n          </div>\n        )}\n        {taxType && !hasTaxFields && <StyledHr borderColor=\"black.300\" borderStyle=\"dotted\" mb={24} mt={24} />}\n        <Flex justifyContent=\"space-between\" alignItems=\"flex-start\" flexWrap=\"wrap\" mt={24}>\n          <Box flexBasis={['100%', null, null, '50%']} mb={3}>\n            {hasTaxFields && this.renderTaxFormFields(taxType, Boolean(values.payee?.isInvite))}\n          </Box>\n          <Box mb={3} ml={[0, null, null, 4]} flexBasis={['100%', null, null, 'auto']}>\n            <ExpenseAmountBreakdown currency={values.currency} items={items} taxes={values.taxes} />\n          </Box>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default injectIntl(ExpenseFormItems);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'formik';\nimport { get, set } from 'lodash';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { isEmail } from 'validator';\n\nimport { PayoutMethodType } from '../../lib/constants/payout-method';\nimport { createError, ERROR } from '../../lib/errors';\nimport { formatFormErrorMessage } from '../../lib/form-utils';\n\nimport { Box } from '../Grid';\nimport StyledCheckbox from '../StyledCheckbox';\nimport StyledInput from '../StyledInput';\nimport StyledInputField from '../StyledInputField';\nimport StyledTextarea from '../StyledTextarea';\n\nimport PayoutBankInformationForm from './PayoutBankInformationForm';\n\nconst msg = defineMessages({\n  paypalEmail: {\n    id: 'Paypal.Email',\n    defaultMessage: 'PayPal email',\n  },\n  content: {\n    id: 'editCollective.menu.info',\n    defaultMessage: 'Info',\n  },\n  savePayout: {\n    id: 'ExpenseForm.SavePayout',\n    defaultMessage: 'Save this info for future payouts',\n  },\n});\n\n/** Use this function to validate the payout method */\nexport const validatePayoutMethod = payoutMethod => {\n  const errors = {};\n\n  if (!payoutMethod || !payoutMethod.type) {\n    set(errors, 'type', createError(ERROR.FORM_FIELD_REQUIRED));\n  } else if (payoutMethod.type === PayoutMethodType.PAYPAL) {\n    const email = get(payoutMethod, 'data.email');\n    if (!email) {\n      set(errors, 'data.email', createError(ERROR.FORM_FIELD_REQUIRED));\n    } else if (!isEmail(email)) {\n      set(errors, 'data.email', createError(ERROR.FORM_FIELD_PATTERN));\n    }\n  } else if (payoutMethod.type === PayoutMethodType.BANK_ACCOUNT) {\n    if (!payoutMethod.data.currency) {\n      set(errors, 'data.currency', createError(ERROR.FORM_FIELD_REQUIRED));\n    }\n    if (!payoutMethod.data.accountHolderName) {\n      set(errors, 'data.accountHolderName', createError(ERROR.FORM_FIELD_REQUIRED));\n    }\n  } else if (payoutMethod.type === PayoutMethodType.OTHER) {\n    const content = get(payoutMethod, 'data.content');\n    if (!content) {\n      set(errors, 'data.content', createError(ERROR.FORM_FIELD_MIN_LENGTH));\n    }\n  }\n\n  return errors;\n};\n\n/**\n * A form to fill infos for a new payout method or to edit an existing one.\n * This component is **fully controlled**, you need to call `validatePayoutMethod`\n * to proceed with the validation and pass the result with the `errors` prop.\n */\nconst PayoutMethodForm = ({ payoutMethod, fieldsPrefix, host, required }) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n  const isNew = !payoutMethod.id;\n\n  const fixedPrefix = fieldsPrefix ? `${fieldsPrefix}.` : '';\n  const getFieldName = field => `${fixedPrefix}${field}`;\n\n  return (\n    <Box>\n      {payoutMethod.type === PayoutMethodType.PAYPAL && (\n        <Field name={getFieldName('data.email')}>\n          {({ field, meta }) => (\n            <StyledInputField\n              name={field.name}\n              type=\"email\"\n              error={formatFormErrorMessage(intl, meta.error)}\n              label={formatMessage(msg.paypalEmail)}\n              labelFontSize=\"13px\"\n              disabled={!isNew}\n              required={required !== false}\n            >\n              {inputProps => <StyledInput placeholder=\"e.g., yourname@yourhost.com\" {...inputProps} {...field} />}\n            </StyledInputField>\n          )}\n        </Field>\n      )}\n      {payoutMethod.type === PayoutMethodType.OTHER && (\n        <Field name={getFieldName('data.content')}>\n          {({ field, meta }) => (\n            <StyledInputField\n              name={field.name}\n              error={formatFormErrorMessage(intl, meta.error)}\n              label={formatMessage(msg.content)}\n              labelFontSize=\"13px\"\n              disabled={!isNew}\n              data-cy=\"payout-other-info\"\n              required={required !== false}\n            >\n              {inputProps => <StyledTextarea minHeight={100} {...inputProps} {...field} />}\n            </StyledInputField>\n          )}\n        </Field>\n      )}\n      {payoutMethod.type === PayoutMethodType.BANK_ACCOUNT && (\n        <PayoutBankInformationForm\n          isNew={isNew}\n          getFieldName={getFieldName}\n          host={host}\n          optional={required === false}\n        />\n      )}\n      {isNew && (\n        <Box mt={3}>\n          <Field name={getFieldName('isSaved')}>\n            {({ field }) => (\n              <StyledCheckbox label={formatMessage(msg.savePayout)} fontSize=\"13px\" checked={field.value} {...field} />\n            )}\n          </Field>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nPayoutMethodForm.propTypes = {\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n  /** Set this to nil to create a new one */\n  payoutMethod: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.oneOf(Object.values(PayoutMethodType)).isRequired,\n    data: PropTypes.object,\n  }).isRequired,\n  /** Base name of the field in the form */\n  fieldsPrefix: PropTypes.string,\n  required: PropTypes.bool,\n};\n\nexport default React.memo(PayoutMethodForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { Times as RemoveIcon } from '@styled-icons/fa-solid/Times';\nimport { get, groupBy, isEmpty, truncate } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport { AccountTypesWithHost } from '../../lib/constants/collectives';\nimport { PayoutMethodType } from '../../lib/constants/payout-method';\nimport { EMPTY_ARRAY } from '../../lib/constants/utils';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport i18nPayoutMethodType from '../../lib/i18n/payout-method-type';\n\nimport ConfirmationModal from '../ConfirmationModal';\nimport { Box, Flex } from '../Grid';\nimport MessageBox from '../MessageBox';\nimport StyledRoundButton from '../StyledRoundButton';\nimport StyledSelect from '../StyledSelect';\nimport { Span } from '../Text';\n\nimport PayoutMethodData from './PayoutMethodData';\nimport PayoutMethodTypeWithIcon from './PayoutMethodTypeWithIcon';\n\nconst newPayoutMethodMsg = defineMessages({\n  [PayoutMethodType.PAYPAL]: {\n    id: 'PayoutMethod.New.PayPal',\n    defaultMessage: 'New PayPal account',\n  },\n  [PayoutMethodType.BANK_ACCOUNT]: {\n    id: 'PayoutMethod.New.BankAccount',\n    defaultMessage: 'New bank account',\n  },\n  [PayoutMethodType.OTHER]: {\n    id: 'PayoutMethod.New.Other',\n    defaultMessage: 'New custom payout method',\n  },\n  _default: {\n    id: 'PayoutMethod.New.default',\n    defaultMessage: 'New {pmType}',\n  },\n});\n\nconst MAX_PAYOUT_OPTION_DATA_LENGTH = 20;\n\nconst payoutMethodLabels = defineMessages({\n  accountBalance: {\n    id: 'PayoutMethod.AccountBalance',\n    defaultMessage: 'Open Collective (Account Balance)',\n  },\n});\n\n/**\n * An overset of `StyledSelect` specialized for payout methods. Accepts all the props\n * from `StyledSelect`.\n */\nclass PayoutMethodSelect extends React.Component {\n  static propTypes = {\n    /** @ignore from injectIntl */\n    intl: PropTypes.object,\n    /** @ignore from mutation */\n    removePayoutMethod: PropTypes.func,\n    /** Use this prop to control the component */\n    payoutMethod: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      type: PropTypes.oneOf(Object.values(PayoutMethodType)),\n    }),\n    /** The payout methods */\n    payoutMethods: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        type: PropTypes.oneOf(Object.values(PayoutMethodType)),\n      }),\n    ),\n    /** Default value */\n    defaultPayoutMethod: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      type: PropTypes.oneOf(Object.values(PayoutMethodType)),\n    }),\n    /** The Collective paying the expense */\n    collective: PropTypes.shape({\n      host: PropTypes.shape({\n        id: PropTypes.string,\n        connectedAccounts: PropTypes.arrayOf(PropTypes.shape({ service: PropTypes.string })),\n        supportedPayoutMethods: PropTypes.array,\n        isTrustedHost: PropTypes.bool,\n      }),\n    }).isRequired,\n    /** The Acccount being paid with the expense */\n    payee: PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      host: PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    }),\n    onChange: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n  };\n\n  state = { removingPayoutMethod: null };\n\n  getPayoutMethodLabel = payoutMethod => {\n    if (payoutMethod.id) {\n      if (payoutMethod.name) {\n        return payoutMethod.name;\n      } else if (payoutMethod.type === PayoutMethodType.ACCOUNT_BALANCE) {\n        return this.props.intl.formatMessage(payoutMethodLabels.accountBalance);\n      } else if (payoutMethod.type === PayoutMethodType.PAYPAL) {\n        return `PayPal - ${get(payoutMethod.data, 'email')}`;\n      } else if (payoutMethod.type === PayoutMethodType.BANK_ACCOUNT) {\n        if (payoutMethod.data.details?.IBAN) {\n          return `IBAN ${payoutMethod.data.details.IBAN}`;\n        } else if (payoutMethod.data.details?.accountNumber) {\n          return `A/N ${payoutMethod.data.details.accountNumber}`;\n        } else if (payoutMethod.data.details?.clabe) {\n          return `Clabe ${payoutMethod.data.details.clabe}`;\n        } else if (payoutMethod.data.details?.bankgiroNumber) {\n          return `BankGiro ${payoutMethod.data.details.bankgiroNumber}`;\n        } else {\n          return `${payoutMethod.data.accountHolderName} (${payoutMethod.data.currency})`;\n        }\n      } else if (payoutMethod.type === PayoutMethodType.OTHER) {\n        const content = payoutMethod.data?.content?.replace(/\\n|\\t/g, ' ');\n        const i18nType = i18nPayoutMethodType(this.props.intl, payoutMethod.type);\n        return content ? `${i18nType} - ${truncate(content, { length: MAX_PAYOUT_OPTION_DATA_LENGTH })}` : i18nType;\n      } else {\n        return i18nPayoutMethodType(this.props.intl, payoutMethod.type);\n      }\n    } else {\n      return (\n        <React.Fragment>\n          <Span fontWeight=\"bold\" color=\"green.600\" mr={1}>\n            +\n          </Span>\n          &nbsp;\n          {newPayoutMethodMsg[payoutMethod.type]\n            ? this.props.intl.formatMessage(newPayoutMethodMsg[payoutMethod.type])\n            : this.props.intl.formatMessage(newPayoutMethodMsg._default, { type: payoutMethod.type })}\n        </React.Fragment>\n      );\n    }\n  };\n\n  getPayoutMethodTitle = pm => {\n    if (pm.type === PayoutMethodType.OTHER && pm.data?.content?.length > MAX_PAYOUT_OPTION_DATA_LENGTH) {\n      return pm.data.content;\n    }\n  };\n\n  getDefaultData(payoutMethodType) {\n    switch (payoutMethodType) {\n      case PayoutMethodType.PAYPAL:\n        return { email: '' };\n      case PayoutMethodType.OTHER:\n        return { content: '' };\n      default:\n        return {};\n    }\n  }\n\n  async removePayoutMethod(payoutMethod) {\n    await this.props.removePayoutMethod({ variables: { id: payoutMethod.id } });\n    this.setState({ removingPayoutMethod: null });\n    this.props.onRemove(payoutMethod);\n    if (this.props.payoutMethod?.id === payoutMethod.id) {\n      this.props.onChange({ value: null });\n    }\n  }\n\n  formatOptionLabel = ({ value }, { context }) => {\n    const isMenu = context === 'menu';\n\n    const isDeletable =\n      value.isDeletable === undefined ? value.type !== PayoutMethodType.ACCOUNT_BALANCE : value.isDeletable;\n\n    return (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Span fontSize={isMenu ? '13px' : '14px'}>{this.getPayoutMethodLabel(value)}</Span>\n        {isMenu && value.id && isDeletable && this.props.onRemove && (\n          <StyledRoundButton\n            size={20}\n            ml={2}\n            type=\"button\"\n            flex=\"0 0 20px\"\n            buttonStyle=\"dangerSecondary\"\n            isBorderless\n            onClick={e => {\n              e.stopPropagation();\n              this.setState({ removingPayoutMethod: value });\n            }}\n          >\n            <RemoveIcon size={10} />\n          </StyledRoundButton>\n        )}\n      </Flex>\n    );\n  };\n\n  getOptionFromPayoutMethod = pm => ({\n    value: pm,\n    title: this.getPayoutMethodTitle(pm),\n  });\n\n  getOptions = memoizeOne((host, payoutMethods, payee) => {\n    let payerHostSupportedPayoutMethods;\n    if (host) {\n      payerHostSupportedPayoutMethods = host.supportedPayoutMethods || EMPTY_ARRAY;\n    } else {\n      // For collectives without a host, we allow expenses to be submitted with the \"Other\"/\"Custom\" payout method\n      // This is mostly for people trying out the platform\n      payerHostSupportedPayoutMethods = [PayoutMethodType.OTHER, PayoutMethodType.BANK_ACCOUNT];\n    }\n\n    const payeeIsSelfHosted = payee && payee.id === payee.host?.id;\n    const payeeIsCollectiveFamilyType = payee && AccountTypesWithHost.includes(payee.type);\n    const payeeIsSameHost = payee && host && payee.host?.id === host.id;\n\n    let pmTypes;\n\n    if (payeeIsSameHost) {\n      pmTypes = [PayoutMethodType.ACCOUNT_BALANCE];\n    } else {\n      pmTypes = payerHostSupportedPayoutMethods\n        // Credit Card (Virtual Card) is generally not a Payout Method acceptable on the Frontend\n        .filter(type => type !== PayoutMethodType.CREDIT_CARD)\n        // Account Balance is not possible on different Hosts\n        .filter(type => type !== PayoutMethodType.ACCOUNT_BALANCE);\n      // Other not available for regular Collectives, Funds, Projects, Events\n      if (payeeIsCollectiveFamilyType && !payeeIsSelfHosted) {\n        pmTypes = pmTypes.filter(type => type !== PayoutMethodType.OTHER);\n      }\n    }\n\n    // No \"New\" Payout Methods for Collectives unless Self Hosted\n    // TODO: maybe we should not filter when the loggedInAccount is an admin of the payee's host\n    const creatablePmTypes =\n      payeeIsCollectiveFamilyType && !payeeIsSelfHosted\n        ? []\n        : pmTypes.filter(pmType => pmType !== PayoutMethodType.ACCOUNT_BALANCE);\n\n    const groupedPms = groupBy(payoutMethods, 'type');\n\n    return pmTypes.map(pmType => ({\n      label: i18nPayoutMethodType(this.props.intl, pmType),\n      options: [\n        // Add existing payout methods for this type\n        ...get(groupedPms, pmType, []).map(this.getOptionFromPayoutMethod),\n        // Add \"+ Create new ...\" for this payment type\n        creatablePmTypes.includes(pmType)\n          ? this.getOptionFromPayoutMethod({\n              type: pmType,\n              isSaved: true,\n              data: this.getDefaultData(pmType),\n            })\n          : null,\n      ].filter(option => option !== null),\n    }));\n  });\n\n  render() {\n    const { payoutMethods, defaultPayoutMethod, payoutMethod, payee, collective, ...props } = this.props;\n\n    const { removingPayoutMethod } = this.state;\n    const value = !isEmpty(payoutMethod) && this.getOptionFromPayoutMethod(payoutMethod);\n\n    const payeeIsCollectiveFamilyType = payee && AccountTypesWithHost.includes(payee.type);\n    const payeeIsSameHost = payee && payee.host?.id === collective.host?.id;\n\n    const styledSelectOptions = this.getOptions(collective.host, payoutMethods, payee);\n    const hasSuitablePayoutMethodOption = styledSelectOptions.find(({ options }) => options.length > 0) ? true : false;\n\n    if (payeeIsCollectiveFamilyType && !payeeIsSameHost) {\n      if (!collective?.host?.isTrustedHost) {\n        return (\n          <MessageBox type=\"error\" mt={2} mb={3} fontSize=\"12px\">\n            <FormattedMessage defaultMessage=\"This Expense is between different Hosts but the Payer Host is not allowed for this yet.\" />\n            &nbsp;\n            <FormattedMessage defaultMessage=\"If it's an issue, contact the Host or Open Collective support.\" />\n          </MessageBox>\n        );\n      }\n      if (!hasSuitablePayoutMethodOption) {\n        return (\n          <MessageBox type=\"error\" mt={2} mb={3} fontSize=\"12px\">\n            <FormattedMessage\n              defaultMessage=\"This Expense is between different Hosts but the recipient Host doesn't have a suitable Payout Method available ({payoutMethodTypes}).\"\n              values={{\n                payoutMethodTypes: Object.values(styledSelectOptions)\n                  .map(option => option.label)\n                  .join(', '),\n              }}\n            />\n            &nbsp;\n            <FormattedMessage defaultMessage=\"If it's an issue, contact the Host or Open Collective support.\" />\n          </MessageBox>\n        );\n      }\n    }\n\n    return (\n      <React.Fragment>\n        {payeeIsCollectiveFamilyType && !payeeIsSameHost && (\n          <MessageBox type=\"warning\" mt={2} mb={3} fontSize=\"12px\">\n            <FormattedMessage defaultMessage=\"This Expense is between different Hosts. Pick a Payout Method from the recipient Host.\" />\n          </MessageBox>\n        )}\n\n        <StyledSelect\n          inputId=\"payout-method-select\"\n          data-cy=\"payout-method-select\"\n          {...props}\n          options={styledSelectOptions}\n          defaultValue={defaultPayoutMethod ? this.getOptionFromPayoutMethod(defaultPayoutMethod) : undefined}\n          value={typeof value === 'undefined' ? undefined : value}\n          formatOptionLabel={this.formatOptionLabel}\n          isSearchable={false}\n        />\n        {removingPayoutMethod && (\n          <ConfirmationModal\n            isDanger\n            type=\"remove\"\n            onClose={() => this.setState({ removingPayoutMethod: null })}\n            continueHandler={() => this.removePayoutMethod(removingPayoutMethod)}\n            header={<FormattedMessage id=\"PayoutMethod.RemoveWarning\" defaultMessage=\"Remove this payout method?\" />}\n          >\n            <Box mb={2}>\n              <PayoutMethodTypeWithIcon type={removingPayoutMethod.type} />\n            </Box>\n            <PayoutMethodData payoutMethod={removingPayoutMethod} />\n          </ConfirmationModal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst removePayoutMethodMutation = gql`\n  mutation RemovePayoutMethod($id: String!) {\n    removePayoutMethod(payoutMethodId: $id) {\n      id\n      isSaved\n    }\n  }\n`;\n\nconst addRemovePayoutMethodMutation = graphql(removePayoutMethodMutation, {\n  name: 'removePayoutMethod',\n  options: { context: API_V2_CONTEXT },\n});\n\nexport default React.memo(injectIntl(addRemovePayoutMethodMutation(PayoutMethodSelect)));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { themeGet } from '@styled-system/theme-get';\nimport { FastField, Field } from 'formik';\nimport { get, isEmpty, omit } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { suggestSlug } from '../../lib/collective.lib';\nimport { EMPTY_ARRAY } from '../../lib/constants/utils';\nimport { ERROR, isErrorType } from '../../lib/errors';\nimport { formatFormErrorMessage, requireFields, verifyEmailPattern } from '../../lib/form-utils';\nimport { reportValidityHTML5 } from '../../lib/utils';\n\nimport { Box, Flex, Grid } from '../Grid';\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\nimport StyledCard from '../StyledCard';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputField from '../StyledInputField';\nimport StyledInputFormikField from '../StyledInputFormikField';\nimport StyledInputGroup from '../StyledInputGroup';\nimport StyledInputLocation from '../StyledInputLocation';\nimport StyledLinkButton from '../StyledLinkButton';\nimport StyledTextarea from '../StyledTextarea';\nimport { P } from '../Text';\n\nimport PayoutMethodForm from './PayoutMethodForm';\nimport PayoutMethodSelect from './PayoutMethodSelect';\n\nconst msg = defineMessages({\n  accountType: {\n    id: `ExpenseForm.inviteeLabel`,\n    defaultMessage: 'Who will receive the money for this expense?',\n  },\n  nameLabel: {\n    id: `ContactName`,\n    defaultMessage: 'Contact name',\n  },\n  emailTitle: {\n    id: 'User.EmailAddress',\n    defaultMessage: 'Email address',\n  },\n  payoutOptionLabel: {\n    id: `ExpenseForm.PayoutOptionLabel`,\n    defaultMessage: 'Payout method',\n  },\n  invoiceInfo: {\n    id: 'ExpenseForm.InvoiceInfo',\n    defaultMessage: 'Additional invoice information',\n  },\n  invoiceInfoPlaceholder: {\n    id: 'ExpenseForm.InvoiceInfoPlaceholder',\n    defaultMessage: 'Tax ID, VAT number, etc. This information will be printed on your invoice.',\n  },\n  country: {\n    id: 'ExpenseForm.ChooseCountry',\n    defaultMessage: 'Choose country',\n  },\n  address: {\n    id: 'ExpenseForm.AddressLabel',\n    defaultMessage: 'Physical address',\n  },\n  recipientNoteLabel: {\n    id: 'ExpenseForm.RecipientNoteLabel',\n    defaultMessage: 'Add a note for the recipient',\n  },\n  additionalInfo: {\n    id: 'ExpenseForm.inviteAdditionalInfo',\n    defaultMessage: 'Want to enter payout details, such as a PayPal address or bank account?',\n  },\n  orgNameLabel: {\n    id: 'ExpenseForm.inviteeOrgNameLabel',\n    defaultMessage: \"What's the name of the organization?\",\n  },\n  orgSlugLabel: {\n    id: 'createCollective.form.slugLabel',\n    defaultMessage: 'Set your URL',\n  },\n  orgSlugErrorTaken: {\n    id: 'createCollective.form.error.slug.taken',\n    defaultMessage: 'URL already taken',\n  },\n  orgWebsiteLabel: {\n    id: 'createOrg.form.websiteLabel',\n    defaultMessage: 'Organization website',\n  },\n  orgDescriptionLabel: {\n    id: 'ExpenseForm.inviteOrgDescriptionLabel',\n    defaultMessage: 'Organization description',\n  },\n});\n\nconst PAYEE_TYPE = {\n  USER: 'USER',\n  ORG: 'ORG',\n};\n\nconst Fieldset = styled.fieldset`\n  border: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst RadioOptionContainer = styled.label`\n  align-items: center;\n  display: flex;\n  flex: 1 1 50%;\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 20px;\n  margin: 0px;\n  padding: 6px 16px;\n  cursor: pointer;\n\n  :not(:last-child) {\n    @media (max-width: ${themeGet('breakpoints.0')}) {\n      border-bottom: 1px solid #dcdee0;\n    }\n    @media (min-width: ${themeGet('breakpoints.0')}) {\n      border-right: 1px solid #dcdee0;\n    }\n  }\n`;\n\nexport const validateExpenseFormPayeeInviteNewStep = values => {\n  const errors = requireFields(values, ['payee.name', 'payee.email']);\n  if (!get(errors, 'payee.email')) {\n    verifyEmailPattern(errors, values, 'payee.email');\n  }\n  return errors;\n};\n\nconst ExpenseFormPayeeInviteNewStep = ({ formik, collective, onBack, onNext }) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n  const { values, touched, errors } = formik;\n  const setPayoutMethod = React.useCallback(({ value }) => formik.setFieldValue('payoutMethod', value), []);\n  const [payeeType, setPayeeType] = React.useState(PAYEE_TYPE.USER);\n  const [showAdditionalInfo, setAdditionalInfo] = React.useState(\n    !isEmpty(values.payeeLocation) || !isEmpty(values.payoutMethod),\n  );\n\n  React.useEffect(() => {\n    if (values.payee?.organization?.name && !touched.payee?.organization?.slug) {\n      const slug = suggestSlug(values.payee.organization.name);\n      if (values.payee.organization.slug !== slug) {\n        formik.setFieldValue('payee.organization.slug', suggestSlug(values.payee.organization.name));\n      }\n    }\n  }, [values.payee?.organization?.name]);\n\n  React.useEffect(() => {\n    if (payeeType === PAYEE_TYPE.USER) {\n      formik.setFieldValue('payee', omit(values.payee, ['organization']));\n    }\n  }, [payeeType]);\n\n  const changePayeeType = e => {\n    e.stopPropagation();\n    setPayeeType(e.target.value);\n  };\n\n  return (\n    <Fragment>\n      <StyledInputField label={formatMessage(msg.accountType)} labelFontSize=\"13px\" mt={3}>\n        <StyledCard>\n          <Fieldset onChange={changePayeeType}>\n            <Flex flexDirection={['column', 'row']} overflow=\"hidden\">\n              <RadioOptionContainer>\n                <Box alignSelf={['center', 'baseline', null, 'center']} mr=\"16px\">\n                  <input\n                    type=\"radio\"\n                    name=\"payeeType\"\n                    checked={payeeType === PAYEE_TYPE.USER}\n                    value={PAYEE_TYPE.USER}\n                    onChange={changePayeeType}\n                    data-cy=\"payee-type-user\"\n                  />\n                </Box>\n                <Box>Personal Account</Box>\n              </RadioOptionContainer>\n              <RadioOptionContainer>\n                <Box alignSelf={['center', 'baseline', null, 'center']} mr=\"16px\">\n                  <input\n                    type=\"radio\"\n                    name=\"payeeType\"\n                    checked={payeeType === PAYEE_TYPE.ORG}\n                    value={PAYEE_TYPE.ORG}\n                    onChange={changePayeeType}\n                    data-cy=\"payee-type-org\"\n                  />\n                </Box>\n                <Box>Organization Account</Box>\n              </RadioOptionContainer>\n            </Flex>\n          </Fieldset>\n        </StyledCard>\n      </StyledInputField>\n\n      {payeeType === PAYEE_TYPE.ORG && (\n        <Fragment>\n          <Grid gridTemplateColumns={['100%', 'calc(50% - 8px) calc(50% - 8px)']} gridColumnGap={[null, 2, null, 3]}>\n            <Field name=\"payee.organization.name\">\n              {({ field }) => (\n                <StyledInputField\n                  name={field.name}\n                  label={formatMessage(msg.orgNameLabel)}\n                  labelFontSize=\"13px\"\n                  mt={3}\n                  required\n                >\n                  {inputProps => <StyledInput {...inputProps} {...field} placeholder=\"e.g., Airbnb, Salesforce\" />}\n                </StyledInputField>\n              )}\n            </Field>\n            <Field name=\"payee.organization.slug\">\n              {({ field }) => (\n                <StyledInputField\n                  mt={3}\n                  labelFontSize=\"13px\"\n                  error={errors.payee?.organization?.slug}\n                  name={field.name}\n                  label={formatMessage(msg.orgSlugLabel)}\n                >\n                  {inputProps => <StyledInputGroup {...inputProps} {...field} prepend=\"opencollective.com/\" />}\n                </StyledInputField>\n              )}\n            </Field>\n            <Field name=\"payee.organization.website\">\n              {({ field }) => (\n                <StyledInputField\n                  name={field.name}\n                  label={formatMessage(msg.orgWebsiteLabel)}\n                  labelFontSize=\"13px\"\n                  required={false}\n                  mt={3}\n                >\n                  {inputProps => <StyledInputGroup {...inputProps} {...field} prepend=\"https://\" />}\n                </StyledInputField>\n              )}\n            </Field>\n\n            <Field name=\"payee.organization.description\">\n              {({ field }) => (\n                <StyledInputField\n                  name={field.name}\n                  label={formatMessage(msg.orgDescriptionLabel)}\n                  labelFontSize=\"13px\"\n                  required={false}\n                  mt={3}\n                >\n                  {inputProps => <StyledInput {...inputProps} {...field} placeholder=\"\" />}\n                </StyledInputField>\n              )}\n            </Field>\n          </Grid>\n        </Fragment>\n      )}\n\n      <Grid\n        gridTemplateColumns={['100%', 'calc(50% - 8px) calc(50% - 8px)']}\n        gridColumnGap={[null, 2, null, 3]}\n        gridAutoFlow=\"dense\"\n      >\n        <Box>\n          <StyledInputFormikField\n            name=\"payee.name\"\n            htmlFor=\"payee.name\"\n            required\n            label={formatMessage(msg.nameLabel)}\n            labelFontSize=\"13px\"\n            mt={3}\n          >\n            {({ field }) => <StyledInput {...field} />}\n          </StyledInputFormikField>\n        </Box>\n        <Box>\n          <StyledInputFormikField\n            name=\"payee.email\"\n            htmlFor=\"payee.email\"\n            label={formatMessage(msg.emailTitle)}\n            required\n            labelFontSize=\"13px\"\n            mt={3}\n          >\n            {({ field }) => <StyledInput {...field} type=\"email\" />}\n          </StyledInputFormikField>\n        </Box>\n\n        {!showAdditionalInfo ? (\n          <Box gridColumn={[null, '1 / span 2']} mt={3}>\n            <MessageBox type=\"info\">\n              <P fontSize=\"12px\">{formatMessage(msg.additionalInfo)}</P>\n              <P fontSize=\"12px\" mt={2}>\n                <StyledLinkButton onClick={() => setAdditionalInfo(true)}>\n                  <FormattedMessage id=\"ExpenseForm.inviteAdditionalInfoBtn\" defaultMessage=\"Add payout details\" />\n                </StyledLinkButton>\n              </P>\n            </MessageBox>\n          </Box>\n        ) : (\n          <Fragment>\n            <Box mt={3}>\n              <StyledInputLocation\n                onChange={values => {\n                  formik.setFieldValue('payeeLocation', values);\n                }}\n                location={values.payeeLocation}\n                errors={errors.payeeLocation}\n                required={false}\n              />\n            </Box>\n            <Box>\n              <Field name=\"payoutMethod\">\n                {({ field }) => (\n                  <StyledInputField\n                    name={field.name}\n                    htmlFor=\"payout-method\"\n                    flex=\"1\"\n                    mt={3}\n                    required={false}\n                    label={formatMessage(msg.payoutOptionLabel)}\n                    labelFontSize=\"13px\"\n                    error={\n                      isErrorType(errors.payoutMethod, ERROR.FORM_FIELD_REQUIRED)\n                        ? formatFormErrorMessage(intl, errors.payoutMethod)\n                        : null\n                    }\n                  >\n                    {({ id, error }) => (\n                      <PayoutMethodSelect\n                        inputId={id}\n                        error={error}\n                        onChange={setPayoutMethod}\n                        payoutMethod={values.payoutMethod}\n                        payoutMethods={EMPTY_ARRAY}\n                        payee={values.payee}\n                        disabled={!values.payee}\n                        collective={collective}\n                      />\n                    )}\n                  </StyledInputField>\n                )}\n              </Field>\n              {values.payoutMethod && (\n                <Field name=\"payoutMethod\">\n                  {({ field, meta }) => (\n                    <Box mt={3} flex=\"1\">\n                      <PayoutMethodForm\n                        fieldsPrefix=\"payoutMethod\"\n                        payoutMethod={field.value}\n                        host={collective.host}\n                        errors={meta.error}\n                        required={false}\n                      />\n                    </Box>\n                  )}\n                </Field>\n              )}\n            </Box>\n\n            <FastField name=\"invoiceInfo\">\n              {({ field }) => (\n                <StyledInputField\n                  name={field.name}\n                  label={formatMessage(msg.invoiceInfo)}\n                  labelFontSize=\"13px\"\n                  required={false}\n                  mt={3}\n                  gridColumn={1}\n                >\n                  {inputProps => (\n                    <Field\n                      as={StyledTextarea}\n                      {...inputProps}\n                      {...field}\n                      minHeight={80}\n                      placeholder={formatMessage(msg.invoiceInfoPlaceholder)}\n                    />\n                  )}\n                </StyledInputField>\n              )}\n            </FastField>\n          </Fragment>\n        )}\n      </Grid>\n      <Box>\n        <Field name=\"recipientNote\">\n          {({ field }) => (\n            <StyledInputField\n              name={field.name}\n              label={formatMessage(msg.recipientNoteLabel)}\n              labelFontSize=\"13px\"\n              required={false}\n              mt={3}\n            >\n              {inputProps => <Field as={StyledTextarea} {...inputProps} {...field} minHeight={80} />}\n            </StyledInputField>\n          )}\n        </Field>\n      </Box>\n      {values.payee && (\n        <Fragment>\n          <StyledHr flex=\"1\" mt={4} borderColor=\"black.300\" />\n          <Flex mt={3} flexWrap=\"wrap\">\n            {onBack && (\n              <StyledButton\n                type=\"button\"\n                width={['100%', 'auto']}\n                mx={[2, 0]}\n                mr={[null, 3]}\n                mt={2}\n                whiteSpace=\"nowrap\"\n                data-cy=\"expense-cancel\"\n                onClick={() => {\n                  onBack?.();\n                }}\n              >\n                ←&nbsp;\n                <FormattedMessage id=\"Back\" defaultMessage=\"Back\" />\n              </StyledButton>\n            )}\n            <StyledButton\n              type=\"button\"\n              width={['100%', 'auto']}\n              mx={[2, 0]}\n              mr={[null, 3]}\n              mt={2}\n              whiteSpace=\"nowrap\"\n              data-cy=\"expense-next\"\n              buttonStyle=\"primary\"\n              onClick={e => {\n                const isFormValid = reportValidityHTML5(e.target.form);\n                const errors = validateExpenseFormPayeeInviteNewStep(values);\n                if (!isEmpty(errors)) {\n                  formik.setErrors(errors);\n                } else if (isFormValid) {\n                  onNext();\n                }\n              }}\n            >\n              <FormattedMessage id=\"Pagination.Next\" defaultMessage=\"Next\" />\n              &nbsp;→\n            </StyledButton>\n          </Flex>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nExpenseFormPayeeInviteNewStep.propTypes = {\n  formik: PropTypes.object,\n  payoutProfiles: PropTypes.array,\n  onBack: PropTypes.func,\n  onNext: PropTypes.func,\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    host: PropTypes.shape({\n      transferwise: PropTypes.shape({\n        availableCurrencies: PropTypes.arrayOf(PropTypes.object),\n      }),\n    }),\n    settings: PropTypes.object,\n  }).isRequired,\n};\n\nexport default ExpenseFormPayeeInviteNewStep;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { themeGet } from '@styled-system/theme-get';\nimport { FastField, Field } from 'formik';\nimport { debounce, isEmpty, omit, pick } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { suggestSlug } from '../../lib/collective.lib';\nimport expenseTypes from '../../lib/constants/expenseTypes';\nimport { EMPTY_ARRAY } from '../../lib/constants/utils';\nimport { ERROR, isErrorType } from '../../lib/errors';\nimport { formatFormErrorMessage } from '../../lib/form-utils';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { flattenObjectDeep } from '../../lib/utils';\n\nimport { Box, Flex, Grid } from '../Grid';\nimport LoginBtn from '../LoginBtn';\nimport StyledButton from '../StyledButton';\nimport StyledCard from '../StyledCard';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputField from '../StyledInputField';\nimport StyledInputGroup from '../StyledInputGroup';\nimport StyledInputLocation from '../StyledInputLocation';\nimport StyledTextarea from '../StyledTextarea';\nimport { Span } from '../Text';\n\nimport PayoutMethodForm, { validatePayoutMethod } from './PayoutMethodForm';\nimport PayoutMethodSelect from './PayoutMethodSelect';\n\nconst validateSlugQuery = gql`\n  query ValidateSlugQuery($slug: String) {\n    account(slug: $slug, throwIfMissing: false) {\n      id\n      slug\n    }\n  }\n`;\n\nconst msg = defineMessages({\n  nameLabel: {\n    id: `ExpenseForm.inviteeLabel`,\n    defaultMessage: 'Who will receive the money for this expense?',\n  },\n  legalName: { id: 'LegalName', defaultMessage: 'Legal Name' },\n  emailLabel: {\n    id: 'Form.yourEmail',\n    defaultMessage: 'Your email address',\n  },\n  orgNameLabel: {\n    id: 'ExpenseForm.inviteeOrgNameLabel',\n    defaultMessage: \"What's the name of the organization?\",\n  },\n  orgSlugLabel: {\n    id: 'createCollective.form.slugLabel',\n    defaultMessage: 'Set your URL',\n  },\n  orgSlugErrorTaken: {\n    id: 'createCollective.form.error.slug.taken',\n    defaultMessage: 'URL already taken',\n  },\n  orgWebsiteLabel: {\n    id: 'createOrg.form.websiteLabel',\n    defaultMessage: 'Organization website',\n  },\n  orgDescriptionLabel: {\n    id: 'ExpenseForm.inviteeOrgDescriptionLabel',\n    defaultMessage: 'What does your organization do?',\n  },\n  payoutOptionLabel: {\n    id: `ExpenseForm.PayoutOptionLabel`,\n    defaultMessage: 'Payout method',\n  },\n  invoiceInfo: {\n    id: 'ExpenseForm.InvoiceInfo',\n    defaultMessage: 'Additional invoice information',\n  },\n  invoiceInfoPlaceholder: {\n    id: 'ExpenseForm.InvoiceInfoPlaceholder',\n    defaultMessage: 'Tax ID, VAT number, etc. This information will be printed on your invoice.',\n  },\n  country: {\n    id: 'ExpenseForm.ChooseCountry',\n    defaultMessage: 'Choose country',\n  },\n  address: {\n    id: 'ExpenseForm.AddressLabel',\n    defaultMessage: 'Physical address',\n  },\n});\n\nconst PAYEE_TYPE = {\n  USER: 'USER',\n  ORG: 'ORG',\n};\n\nconst Fieldset = styled.fieldset`\n  border: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst RadioOptionContainer = styled.label`\n  align-items: center;\n  display: flex;\n  flex: 1 1 50%;\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 20px;\n  margin: 0px;\n  padding: 6px 16px;\n  cursor: pointer;\n\n  :not(:last-child) {\n    @media (max-width: ${themeGet('breakpoints.0')}) {\n      border-bottom: 1px solid #dcdee0;\n    }\n    @media (min-width: ${themeGet('breakpoints.0')}) {\n      border-right: 1px solid #dcdee0;\n    }\n  }\n`;\n\nconst throttledSearch = debounce((searchFunc, variables) => {\n  return searchFunc({ variables });\n}, 750);\n\nconst ExpenseFormPayeeSignUpStep = ({ formik, collective, onCancel, onNext }) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n  const { values, touched, errors } = formik;\n  const stepOneCompleted =\n    isEmpty(flattenObjectDeep(validatePayoutMethod(values.payoutMethod))) &&\n    (values.type === expenseTypes.RECEIPT ||\n      (values.payoutMethod && values.payeeLocation?.country && values.payeeLocation?.address));\n\n  const setPayoutMethod = React.useCallback(({ value }) => formik.setFieldValue('payoutMethod', value), []);\n  const [payeeType, setPayeeType] = React.useState(values.payee?.organization ? PAYEE_TYPE.ORG : PAYEE_TYPE.USER);\n  const [validateSlug, { data: existingSlugAccount }] = useLazyQuery(validateSlugQuery, {\n    context: API_V2_CONTEXT,\n  });\n\n  const changePayeeType = e => {\n    e.stopPropagation();\n    setPayeeType(e.target.value);\n  };\n\n  React.useEffect(() => {\n    if (values.payee?.organization?.name && !touched.payee?.organization?.slug) {\n      const slug = suggestSlug(values.payee.organization.name);\n      if (values.payee.organization.slug !== slug) {\n        formik.setFieldValue('payee.organization.slug', suggestSlug(values.payee.organization.name));\n      }\n    }\n  }, [values.payee?.organization?.name]);\n  React.useEffect(() => {\n    if (payeeType === PAYEE_TYPE.USER) {\n      formik.setFieldValue('payee', omit(values.payee, ['organization']));\n    } else if (payeeType === PAYEE_TYPE.ORG && values.draft?.payee?.organization) {\n      formik.setFieldValue('payee', { ...values.payee, organization: values.draft.payee.organization });\n    }\n  }, [payeeType]);\n  // Slug Validation\n  React.useEffect(() => {\n    if (values.payee?.organization?.slug) {\n      throttledSearch(validateSlug, { slug: values.payee.organization.slug });\n    }\n  }, [values.payee?.organization?.slug]);\n\n  const handleSlugValidation = async value => {\n    if (value === existingSlugAccount?.account?.slug) {\n      return formatMessage(msg.orgSlugErrorTaken);\n    }\n  };\n\n  return (\n    <Fragment>\n      <StyledInputField label=\"How you will receive the money of this expense?\" labelFontSize=\"13px\" mt={3}>\n        <StyledCard>\n          <Fieldset onChange={changePayeeType}>\n            <Flex flexDirection={['column', 'row']} overflow=\"hidden\">\n              <RadioOptionContainer>\n                <Box alignSelf={['center', 'baseline', null, 'center']} mr=\"16px\">\n                  <input\n                    type=\"radio\"\n                    name=\"payeeType\"\n                    checked={payeeType === PAYEE_TYPE.USER}\n                    value={PAYEE_TYPE.USER}\n                    onChange={changePayeeType}\n                  />\n                </Box>\n                <Box>Personal Account</Box>\n              </RadioOptionContainer>\n              <RadioOptionContainer>\n                <Box alignSelf={['center', 'baseline', null, 'center']} mr=\"16px\">\n                  <input\n                    type=\"radio\"\n                    name=\"payeeType\"\n                    checked={payeeType === PAYEE_TYPE.ORG}\n                    value={PAYEE_TYPE.ORG}\n                    onChange={changePayeeType}\n                  />\n                </Box>\n                <Box>Organization Account</Box>\n              </RadioOptionContainer>\n            </Flex>\n          </Fieldset>\n        </StyledCard>\n      </StyledInputField>\n\n      {payeeType === PAYEE_TYPE.ORG && (\n        <Fragment>\n          <Grid gridTemplateColumns={['100%', 'calc(50% - 8px) calc(50% - 8px)']} gridColumnGap={[null, 2, null, 3]}>\n            <Field name=\"payee.organization.name\">\n              {({ field }) => (\n                <StyledInputField name={field.name} label={formatMessage(msg.orgNameLabel)} labelFontSize=\"13px\" mt={3}>\n                  {inputProps => <StyledInput {...inputProps} {...field} placeholder=\"e.g., Airbnb, Salesforce\" />}\n                </StyledInputField>\n              )}\n            </Field>\n            <Field name=\"payee.organization.slug\" validate={handleSlugValidation}>\n              {({ field }) => (\n                <StyledInputField\n                  mt={3}\n                  labelFontSize=\"13px\"\n                  error={errors.payee?.organization?.slug}\n                  name={field.name}\n                  label={formatMessage(msg.orgSlugLabel)}\n                >\n                  {inputProps => <StyledInputGroup {...inputProps} {...field} prepend=\"opencollective.com/\" />}\n                </StyledInputField>\n              )}\n            </Field>\n            <Field name=\"payee.organization.website\">\n              {({ field }) => (\n                <StyledInputField\n                  name={field.name}\n                  label={formatMessage(msg.orgWebsiteLabel)}\n                  labelFontSize=\"13px\"\n                  mt={3}\n                >\n                  {inputProps => <StyledInputGroup {...inputProps} {...field} prepend=\"http://\" />}\n                </StyledInputField>\n              )}\n            </Field>\n\n            <Field name=\"payee.organization.description\">\n              {({ field }) => (\n                <StyledInputField\n                  name={field.name}\n                  label={formatMessage(msg.orgDescriptionLabel)}\n                  labelFontSize=\"13px\"\n                  mt={3}\n                >\n                  {inputProps => <StyledInput {...inputProps} {...field} placeholder=\"\" />}\n                </StyledInputField>\n              )}\n            </Field>\n          </Grid>\n        </Fragment>\n      )}\n\n      <Grid\n        gridTemplateColumns={['100%', 'calc(50% - 8px) calc(50% - 8px)']}\n        gridColumnGap={[null, 2, null, 3]}\n        gridAutoFlow=\"dense\"\n      >\n        <Box>\n          <Field name=\"payee.name\">\n            {({ field }) => (\n              <StyledInputField name={field.name} label={formatMessage(msg.nameLabel)} labelFontSize=\"13px\" mt={3}>\n                {inputProps => <StyledInput {...inputProps} {...field} />}\n              </StyledInputField>\n            )}\n          </Field>\n          {payeeType === PAYEE_TYPE.ORG && (\n            <Span fontSize=\"11px\" lineHeight=\"16px\" color=\"black.600\">\n              <FormattedMessage\n                id=\"ExpenseForm.SignUp.OrgAdminNote\"\n                defaultMessage=\"You need to be an admin of the Organization to submit expenses.\"\n              />\n            </Span>\n          )}\n        </Box>\n        <Box>\n          <Field name=\"payee.email\" required>\n            {({ field }) => (\n              <StyledInputField\n                name={field.name}\n                label={formatMessage(msg.emailLabel)}\n                labelFontSize=\"13px\"\n                error={errors.payee?.email}\n                mt={3}\n              >\n                {inputProps => <StyledInput {...inputProps} {...field} type=\"email\" />}\n              </StyledInputField>\n            )}\n          </Field>\n          <Span fontSize=\"11px\" lineHeight=\"16px\" color=\"black.600\">\n            <FormattedMessage\n              id=\"ExpenseForm.SignUp.SignIn\"\n              defaultMessage=\"We will use this email to create your account. If you already have an account {loginLink}.\"\n              values={{ loginLink: <LoginBtn asLink /> }}\n            />\n          </Span>\n        </Box>\n        <Box>\n          <Box>\n            <Field name={payeeType === PAYEE_TYPE.ORG ? 'payee.organization.legalName' : 'payee.legalName'}>\n              {({ field }) => (\n                <StyledInputField\n                  name={field.name}\n                  isPrivate\n                  required={false}\n                  label={formatMessage(msg.legalName)}\n                  labelFontSize=\"13px\"\n                  mt={3}\n                >\n                  {inputProps => <StyledInput {...inputProps} {...field} />}\n                </StyledInputField>\n              )}\n            </Field>\n            <Span fontSize=\"11px\" lineHeight=\"16px\" color=\"black.600\">\n              <FormattedMessage\n                id=\"editCollective.legalName.description\"\n                defaultMessage=\"Legal names are private and used in receipts, tax forms, payment details on expenses, and other non-public contexts. Legal names are only visible to admins.\"\n              />\n            </Span>\n          </Box>\n          <Box mt={3}>\n            <StyledInputLocation\n              onChange={values => {\n                formik.setFieldValue('payeeLocation', values);\n              }}\n              location={values.payeeLocation}\n              errors={errors.payeeLocation}\n              required\n            />\n          </Box>\n        </Box>\n        <Box>\n          <Field name=\"payoutMethod\">\n            {({ field }) => (\n              <StyledInputField\n                name={field.name}\n                htmlFor=\"payout-method\"\n                flex=\"1\"\n                mt={3}\n                label={formatMessage(msg.payoutOptionLabel)}\n                labelFontSize=\"13px\"\n                error={\n                  isErrorType(errors.payoutMethod, ERROR.FORM_FIELD_REQUIRED)\n                    ? formatFormErrorMessage(intl, errors.payoutMethod)\n                    : null\n                }\n              >\n                {({ id, error }) => (\n                  <PayoutMethodSelect\n                    inputId={id}\n                    error={error}\n                    onChange={setPayoutMethod}\n                    payoutMethod={values.payoutMethod}\n                    payoutMethods={EMPTY_ARRAY}\n                    payee={values.payee}\n                    disabled={!values.payee}\n                    collective={collective}\n                  />\n                )}\n              </StyledInputField>\n            )}\n          </Field>\n          {values.payoutMethod && (\n            <Field name=\"payoutMethod\">\n              {({ field, meta }) => (\n                <Box mt={3} flex=\"1\">\n                  <PayoutMethodForm\n                    fieldsPrefix=\"payoutMethod\"\n                    payoutMethod={field.value}\n                    host={collective.host}\n                    errors={meta.error}\n                  />\n                </Box>\n              )}\n            </Field>\n          )}\n        </Box>\n\n        <FastField name=\"invoiceInfo\">\n          {({ field }) => (\n            <StyledInputField\n              name={field.name}\n              label={formatMessage(msg.invoiceInfo)}\n              labelFontSize=\"13px\"\n              required={false}\n              mt={3}\n              gridColumn={1}\n            >\n              {inputProps => (\n                <Field\n                  as={StyledTextarea}\n                  {...inputProps}\n                  {...field}\n                  minHeight={80}\n                  placeholder={formatMessage(msg.invoiceInfoPlaceholder)}\n                />\n              )}\n            </StyledInputField>\n          )}\n        </FastField>\n      </Grid>\n      {values.payee && (\n        <Fragment>\n          <StyledHr flex=\"1\" mt={4} borderColor=\"black.300\" />\n          <Flex mt={3} flexWrap=\"wrap\">\n            {onCancel && (\n              <StyledButton\n                type=\"button\"\n                width={['100%', 'auto']}\n                mx={[2, 0]}\n                mr={[null, 3]}\n                mt={2}\n                whiteSpace=\"nowrap\"\n                data-cy=\"expense-cancel\"\n                disabled={!stepOneCompleted}\n                onClick={() => {\n                  onCancel?.();\n                }}\n              >\n                <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n              </StyledButton>\n            )}\n            <StyledButton\n              type=\"button\"\n              width={['100%', 'auto']}\n              mx={[2, 0]}\n              mr={[null, 3]}\n              mt={2}\n              whiteSpace=\"nowrap\"\n              data-cy=\"expense-next\"\n              buttonStyle=\"primary\"\n              disabled={!stepOneCompleted}\n              onClick={async () => {\n                const allErrors = await formik.validateForm();\n                const errors = omit(pick(allErrors, ['payee', 'payoutMethod', 'payeeLocation']), [\n                  'payoutMethod.data.currency',\n                ]);\n                if (isEmpty(flattenObjectDeep(errors))) {\n                  onNext?.();\n                } else {\n                  // We use set touched here to display errors on fields that are not dirty.\n                  formik.setTouched(errors);\n                  formik.setErrors(errors);\n                }\n              }}\n            >\n              <FormattedMessage id=\"Pagination.Next\" defaultMessage=\"Next\" />\n              &nbsp;→\n            </StyledButton>\n          </Flex>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nExpenseFormPayeeSignUpStep.propTypes = {\n  formik: PropTypes.object,\n  onCancel: PropTypes.func,\n  onNext: PropTypes.func,\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    host: PropTypes.shape({\n      transferwise: PropTypes.shape({\n        availableCurrencies: PropTypes.arrayOf(PropTypes.object),\n      }),\n    }),\n    settings: PropTypes.object,\n  }).isRequired,\n};\n\nexport default ExpenseFormPayeeSignUpStep;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { InfoCircle } from '@styled-icons/boxicons-regular/InfoCircle';\nimport { Undo } from '@styled-icons/fa-solid/Undo';\nimport { FastField, Field } from 'formik';\nimport { first, get, groupBy, isEmpty, omit, pick } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { compareNames } from '../../lib/collective.lib';\nimport { AccountTypesWithHost, CollectiveType } from '../../lib/constants/collectives';\nimport expenseTypes from '../../lib/constants/expenseTypes';\nimport { PayoutMethodType } from '../../lib/constants/payout-method';\nimport { EMPTY_ARRAY } from '../../lib/constants/utils';\nimport { ERROR, isErrorType } from '../../lib/errors';\nimport { formatFormErrorMessage } from '../../lib/form-utils';\nimport { require2FAForAdmins } from '../../lib/policies';\nimport { flattenObjectDeep } from '../../lib/utils';\nimport { checkRequiresAddress } from './lib/utils';\n\nimport CollectivePicker, {\n  CUSTOM_OPTIONS_POSITION,\n  FLAG_COLLECTIVE_PICKER_COLLECTIVE,\n  FLAG_NEW_COLLECTIVE,\n} from '../CollectivePicker';\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport ConfirmationModal from '../ConfirmationModal';\nimport { Box, Flex } from '../Grid';\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputField from '../StyledInputField';\nimport StyledInputLocation from '../StyledInputLocation';\nimport StyledTextarea from '../StyledTextarea';\nimport StyledTooltip from '../StyledTooltip';\nimport { Span } from '../Text';\nimport { TwoFactorAuthRequiredMessage } from '../TwoFactorAuthRequiredMessage';\n\nimport PayoutMethodForm, { validatePayoutMethod } from './PayoutMethodForm';\nimport PayoutMethodSelect from './PayoutMethodSelect';\n\nconst { INDIVIDUAL, ORGANIZATION, COLLECTIVE, FUND, EVENT, PROJECT } = CollectiveType;\n\nconst msg = defineMessages({\n  payeeLabel: {\n    id: `ExpenseForm.payeeLabel`,\n    defaultMessage: 'Who is being paid for this expense?',\n  },\n  payoutOptionLabel: {\n    id: `ExpenseForm.PayoutOptionLabel`,\n    defaultMessage: 'Payout method',\n  },\n  invoiceInfo: {\n    id: 'ExpenseForm.InvoiceInfo',\n    defaultMessage: 'Additional invoice information',\n  },\n  invoiceInfoPlaceholder: {\n    id: 'ExpenseForm.InvoiceInfoPlaceholder',\n    defaultMessage: 'Tax ID, VAT number, etc. This information will be printed on your invoice.',\n  },\n  country: {\n    id: 'ExpenseForm.ChooseCountry',\n    defaultMessage: 'Choose country',\n  },\n  address: {\n    id: 'ExpenseForm.AddressLabel',\n    defaultMessage: 'Physical address',\n  },\n  cancelEditExpense: {\n    id: 'ExpenseForm.CancelEditExpense',\n    defaultMessage: 'Cancel Edit',\n  },\n  confirmCancelEditExpense: {\n    id: 'ExpenseForm.ConfirmCancelEditExpense',\n    defaultMessage: 'Are you sure you want to cancel the edits?',\n  },\n  clearExpenseForm: {\n    id: 'ExpenseForm.ClearExpenseForm',\n    defaultMessage: 'Clear Form',\n  },\n  confirmClearExpenseForm: {\n    id: 'ExpenseForm.ConfirmClearExpenseForm',\n    defaultMessage: 'Are you sure you want to clear the expense form?',\n  },\n});\n\nconst setLocationFromPayee = (formik, payee) => {\n  formik.setFieldValue('payeeLocation.country', payee?.location?.country || null);\n  formik.setFieldValue('payeeLocation.address', payee?.location?.address || '');\n  formik.setFieldValue('payeeLocation.structured', payee?.location?.structured);\n};\n\nconst getPayoutMethodsFromPayee = payee => {\n  const payoutMethods = (get(payee, 'payoutMethods') || EMPTY_ARRAY).filter(({ isSaved }) => isSaved);\n\n  // If the Payee is active (can manage a budget and has a balance). This is usually:\n  // - a \"Collective\" family (Collective, Fund, Event, Project) with an host or Self Hosted\n  // - an \"Host\" Organization with budget activated (new default)\n  if (payee?.isActive) {\n    if (!payoutMethods.find(pm => pm.type === PayoutMethodType.ACCOUNT_BALANCE)) {\n      payoutMethods.push({\n        id: 'new',\n        data: {},\n        type: PayoutMethodType.ACCOUNT_BALANCE,\n        isSaved: true,\n      });\n    }\n  }\n\n  // If the Payee is in the \"Collective\" family (Collective, Fund, Event, Project)\n  // But not the Host itself (Self Hosted)\n  // Then we should add BANK_ACCOUNT and PAYPAL of the Host as an option\n  if (payee && AccountTypesWithHost.includes(payee.type) && payee.id !== payee.host?.id) {\n    const hostPayoutMethods = get(payee, 'host.payoutMethods') || EMPTY_ARRAY;\n    let hostSuitablePayoutMethods = hostPayoutMethods\n      .filter(payoutMethod => payoutMethod.type === PayoutMethodType.BANK_ACCOUNT)\n      .filter(\n        payoutMethod =>\n          !payoutMethod.name ||\n          payoutMethod.name.includes('Collectives account') ||\n          payoutMethod.name.includes('Main account'),\n      );\n    if (hostSuitablePayoutMethods.length === 0) {\n      hostSuitablePayoutMethods = hostPayoutMethods.filter(\n        payoutMethod => payoutMethod.type === PayoutMethodType.PAYPAL,\n      );\n    }\n    payoutMethods.push(...hostSuitablePayoutMethods.map(payoutMethod => ({ ...payoutMethod, isDeletable: false })));\n  }\n\n  return payoutMethods.length > 0 ? payoutMethods : EMPTY_ARRAY;\n};\n\nconst refreshPayoutProfile = (formik, payoutProfiles) => {\n  const payee = formik.values.payee\n    ? payoutProfiles.find(profile => profile.id === formik.values.payee.id)\n    : first(payoutProfiles);\n\n  formik.setValues({ ...formik.values, draft: omit(formik.values.draft, ['payee']), payee });\n};\n\nconst getPayeeOptions = (intl, payoutProfiles) => {\n  const profileOptions = payoutProfiles.map(value => ({\n    value,\n    label: value.name,\n    [FLAG_COLLECTIVE_PICKER_COLLECTIVE]: true,\n  }));\n\n  const profilesByType = groupBy(profileOptions, p => p.value.type);\n\n  const myself = profilesByType[INDIVIDUAL] || [];\n  const myOrganizations = profilesByType[ORGANIZATION] || [];\n\n  myOrganizations.push({\n    label: null,\n    value: null,\n    isDisabled: true,\n    [FLAG_NEW_COLLECTIVE]: true,\n    types: [CollectiveType.ORGANIZATION],\n    __background__: 'white',\n  });\n\n  const payeeOptions = [\n    { options: myself, label: intl.formatMessage({ defaultMessage: 'Myself' }) },\n    { options: myOrganizations, label: intl.formatMessage({ id: 'organization', defaultMessage: 'My Organizations' }) },\n  ];\n\n  if (profilesByType[COLLECTIVE]?.length) {\n    payeeOptions.push({\n      options: profilesByType[COLLECTIVE],\n      label: intl.formatMessage({ id: 'collective', defaultMessage: 'My Collectives' }),\n    });\n  }\n  if (profilesByType[FUND]?.length) {\n    payeeOptions.push({\n      options: profilesByType[FUND],\n      label: intl.formatMessage({ id: 'funds', defaultMessage: 'My Funds' }),\n    });\n  }\n  if (profilesByType[PROJECT]?.length) {\n    payeeOptions.push({\n      options: profilesByType[PROJECT],\n      label: intl.formatMessage({ defaultMessage: 'My Projects' }),\n    });\n  }\n  if (profilesByType[EVENT]?.length) {\n    payeeOptions.push({\n      options: profilesByType[EVENT],\n      label: intl.formatMessage({ id: 'events', defaultMessage: 'My Events' }),\n    });\n  }\n\n  return payeeOptions;\n};\n\nconst checkStepOneCompleted = (values, isOnBehalf, isMissing2FA) => {\n  if (isMissing2FA) {\n    return false;\n  } else if (isOnBehalf) {\n    return Boolean(values.payee);\n  } else if (!isEmpty(flattenObjectDeep(validatePayoutMethod(values.payoutMethod)))) {\n    return false; // There are some errors in the form\n  } else if (checkRequiresAddress(values)) {\n    // Require an address for non-receipt expenses\n    return Boolean(values.payoutMethod && values.payeeLocation?.country && values.payeeLocation?.address);\n  } else {\n    return true;\n  }\n};\n\nconst ExpenseFormPayeeStep = ({\n  formik,\n  payoutProfiles,\n  collective,\n  onCancel,\n  onNext,\n  onInvite,\n  onChange,\n  isOnBehalf,\n  loggedInAccount,\n  editingExpense,\n  resetDefaultStep,\n  formPersister,\n  getDefaultExpense,\n}) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n  const { values, errors } = formik;\n  const isMissing2FA = require2FAForAdmins(values.payee) && !loggedInAccount?.hasTwoFactorAuth;\n  const stepOneCompleted = checkStepOneCompleted(values, isOnBehalf, isMissing2FA);\n  const allPayoutMethods = React.useMemo(\n    () => getPayoutMethodsFromPayee(values.payee),\n    [values.payee, loggedInAccount],\n  );\n\n  const [showResetModal, setShowResetModal] = React.useState(false);\n  const onPayoutMethodRemove = React.useCallback(() => refreshPayoutProfile(formik, payoutProfiles), [payoutProfiles]);\n  const setPayoutMethod = React.useCallback(({ value }) => formik.setFieldValue('payoutMethod', value), []);\n  const payeeOptions = React.useMemo(() => getPayeeOptions(intl, payoutProfiles), [payoutProfiles]);\n  const requiresAddress = checkRequiresAddress(values);\n  const canInvite = !values?.status;\n\n  const collectivePick = canInvite\n    ? ({ id }) => (\n        <CollectivePickerAsync\n          inputId={id}\n          data-cy=\"select-expense-payee\"\n          isSearchable\n          collective={values.payee}\n          onChange={({ value }) => {\n            if (value) {\n              const existingProfile = payoutProfiles.find(p => p.slug === value.slug);\n              const isNewlyCreatedProfile = value.members?.some(\n                m => m.role === 'ADMIN' && m.member.slug === loggedInAccount.slug,\n              );\n\n              const payee = existingProfile || {\n                ...pick(value, ['id', 'name', 'slug', 'email', 'type']),\n                isInvite: !isNewlyCreatedProfile,\n              };\n\n              if (isNewlyCreatedProfile) {\n                payee.payoutMethods = [];\n              }\n\n              formik.setFieldValue('payee', payee);\n              formik.setFieldValue('payoutMethod', null);\n              setLocationFromPayee(formik, payee);\n              onChange(payee);\n            }\n          }}\n          styles={{\n            menu: {\n              borderRadius: '16px',\n            },\n            menuList: {\n              padding: '8px',\n            },\n          }}\n          emptyCustomOptions={payeeOptions}\n          customOptionsPosition={CUSTOM_OPTIONS_POSITION.BOTTOM}\n          getDefaultOptions={build => values.payee && build(values.payee)}\n          invitable\n          onInvite={onInvite}\n          LoggedInUser={loggedInAccount}\n          addLoggedInUserAsAdmin\n          excludeAdminFields\n        />\n      )\n    : ({ id }) => (\n        <CollectivePicker\n          inputId={id}\n          customOptions={payeeOptions}\n          getDefaultOptions={build => values.payee && build(values.payee)}\n          data-cy=\"select-expense-payee\"\n          isSearchable\n          collective={values.payee}\n          onChange={({ value }) => {\n            formik.setFieldValue('payee', value);\n            formik.setFieldValue('payoutMethod', null);\n            setLocationFromPayee(formik, value);\n            onChange(value);\n          }}\n        />\n      );\n\n  return (\n    <Fragment>\n      <Flex flexDirection={['column', 'row']}>\n        <Box mr={[null, 2, null, 4]} flexGrow=\"1\" flexBasis=\"50%\" maxWidth={[null, null, '60%']}>\n          <Field name=\"payee\">\n            {({ field }) => (\n              <StyledInputField\n                name={field.name}\n                label={formatMessage(msg.payeeLabel)}\n                labelFontSize=\"13px\"\n                flex=\"1\"\n                mt={3}\n              >\n                {collectivePick}\n              </StyledInputField>\n            )}\n          </Field>\n          {!isMissing2FA && (\n            <React.Fragment>\n              {values.payee?.legalName && (\n                <Field name=\"legalName\">\n                  {({ field }) => (\n                    <StyledInputField\n                      name={field.name}\n                      label={\n                        <React.Fragment>\n                          <FormattedMessage id=\"LegalName\" defaultMessage=\"Legal Name\" />\n                          &nbsp;\n                          <StyledTooltip\n                            content={() => (\n                              <FormattedMessage\n                                id=\"ExpenseForm.legalName.tooltip\"\n                                defaultMessage=\"The legal name of the payee. This can be changed in your profile settings.\"\n                              />\n                            )}\n                          >\n                            <InfoCircle size={16} />\n                          </StyledTooltip>\n                        </React.Fragment>\n                      }\n                      labelFontSize=\"13px\"\n                      flex=\"1\"\n                      mt={3}\n                    >\n                      <StyledInput value={values.payee.legalName} disabled />\n                      {values.payoutMethod?.data?.accountHolderName &&\n                        values.payee.legalName &&\n                        !compareNames(values.payoutMethod.data.accountHolderName, values.payee.legalName) && (\n                          <MessageBox mt={2} fontSize=\"12px\" type=\"warning\" withIcon>\n                            <FormattedMessage\n                              id=\"Warning.LegalNameNotMatchBankAccountName\"\n                              defaultMessage=\"The legal name should match the bank account holder name in most cases. Otherwise payments may be delayed. If the payment is to an organization, please select or create that organization's profile instead of your individual profile as the payee.\"\n                            />\n                          </MessageBox>\n                        )}\n                    </StyledInputField>\n                  )}\n                </Field>\n              )}\n              {requiresAddress && (\n                <Box mt={3}>\n                  <StyledInputLocation\n                    onChange={values => {\n                      formik.setFieldValue('payeeLocation', values);\n                    }}\n                    location={values.payeeLocation}\n                    errors={errors.payeeLocation}\n                  />\n                </Box>\n              )}\n              {values.type === expenseTypes.INVOICE && (\n                <FastField name=\"invoiceInfo\">\n                  {({ field }) => (\n                    <StyledInputField\n                      name={field.name}\n                      label={formatMessage(msg.invoiceInfo)}\n                      labelFontSize=\"13px\"\n                      required={false}\n                      mt={3}\n                    >\n                      {inputProps => (\n                        <Field\n                          as={StyledTextarea}\n                          {...inputProps}\n                          {...field}\n                          minHeight={80}\n                          placeholder={formatMessage(msg.invoiceInfoPlaceholder)}\n                        />\n                      )}\n                    </StyledInputField>\n                  )}\n                </FastField>\n              )}\n            </React.Fragment>\n          )}\n        </Box>\n        {!isOnBehalf && (\n          <Box flexGrow=\"1\" flexBasis=\"50%\" display={values.payee ? 'block' : 'none'}>\n            <Field name=\"payoutMethod\">\n              {({ field }) => (\n                <StyledInputField\n                  name={field.name}\n                  htmlFor=\"payout-method\"\n                  flex=\"1\"\n                  mt={3}\n                  label={formatMessage(msg.payoutOptionLabel)}\n                  labelFontSize=\"13px\"\n                  error={\n                    isErrorType(errors.payoutMethod, ERROR.FORM_FIELD_REQUIRED)\n                      ? formatFormErrorMessage(intl, errors.payoutMethod)\n                      : null\n                  }\n                >\n                  {({ id, error }) => (\n                    <PayoutMethodSelect\n                      inputId={id}\n                      error={error}\n                      onChange={setPayoutMethod}\n                      onRemove={onPayoutMethodRemove}\n                      payoutMethod={values.payoutMethod}\n                      payoutMethods={allPayoutMethods}\n                      payee={values.payee}\n                      disabled={!values.payee || isMissing2FA}\n                      collective={collective}\n                    />\n                  )}\n                </StyledInputField>\n              )}\n            </Field>\n\n            {values.payoutMethod && (\n              <Field name=\"payoutMethod\">\n                {({ field, meta }) => (\n                  <Box mt={3} flex=\"1\">\n                    <PayoutMethodForm\n                      fieldsPrefix=\"payoutMethod\"\n                      payoutMethod={field.value}\n                      host={collective.host}\n                      errors={meta.error}\n                    />\n                  </Box>\n                )}\n              </Field>\n            )}\n          </Box>\n        )}\n      </Flex>\n\n      {isMissing2FA && <TwoFactorAuthRequiredMessage mt={4} />}\n\n      {values.payee && !isMissing2FA && (\n        <Fragment>\n          <StyledHr flex=\"1\" mt={4} borderColor=\"black.300\" />\n          <Flex mt={3} flexWrap=\"wrap\">\n            {onCancel && (\n              <StyledButton\n                type=\"button\"\n                width={['100%', 'auto']}\n                mx={[2, 0]}\n                mr={[null, 3]}\n                mt={2}\n                whiteSpace=\"nowrap\"\n                data-cy=\"expense-cancel\"\n                onClick={() => {\n                  onCancel?.();\n                }}\n              >\n                <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n              </StyledButton>\n            )}\n            <StyledButton\n              type=\"button\"\n              width={['100%', 'auto']}\n              mx={[2, 0]}\n              mr={[null, 3]}\n              mt={2}\n              whiteSpace=\"nowrap\"\n              data-cy=\"expense-next\"\n              buttonStyle=\"primary\"\n              disabled={!stepOneCompleted}\n              onClick={async () => {\n                const allErrors = await formik.validateForm();\n                // Get the relevant errors for the payee step, ignores data.currency in the because it is related to expense amount.\n                const errors = omit(pick(allErrors, ['payee', 'payoutMethod', 'payeeLocation']), [\n                  'payoutMethod.data.currency',\n                ]);\n                if (isEmpty(flattenObjectDeep(errors))) {\n                  onNext?.();\n                } else {\n                  // We use set touched here to display errors on fields that are not dirty.\n                  // eslint-disable-next-line no-console\n                  console.log('ExpenseFormPayeeStep > Validation failed', errors);\n                  formik.setTouched(errors);\n                  formik.setErrors(errors);\n                }\n              }}\n            >\n              <FormattedMessage id=\"Pagination.Next\" defaultMessage=\"Next\" />\n              &nbsp;→\n            </StyledButton>\n            <StyledHr flex=\"1\" borderColor=\"white.full\" mx={2} />\n            {showResetModal ? (\n              <ConfirmationModal\n                onClose={() => setShowResetModal(false)}\n                header={editingExpense ? formatMessage(msg.cancelEditExpense) : formatMessage(msg.clearExpenseForm)}\n                body={\n                  editingExpense\n                    ? formatMessage(msg.confirmCancelEditExpense)\n                    : formatMessage(msg.confirmClearExpenseForm)\n                }\n                continueHandler={() => {\n                  if (editingExpense) {\n                    onCancel();\n                  } else {\n                    resetDefaultStep();\n                    formik.resetForm({ values: getDefaultExpense(collective) });\n                    if (formPersister) {\n                      formPersister.clearValues();\n                      window.scrollTo(0, 0);\n                    }\n                  }\n                  setShowResetModal(false);\n                }}\n                {...(editingExpense && {\n                  continueLabel: formatMessage({ defaultMessage: 'Yes, cancel editing' }),\n                  cancelLabel: formatMessage({ defaultMessage: 'No, continue editing' }),\n                })}\n              />\n            ) : (\n              <Flex float=\"right\">\n                <StyledButton\n                  type=\"button\"\n                  buttonStyle=\"borderless\"\n                  width={['100%', 'auto']}\n                  color=\"red.500\"\n                  mt={1}\n                  mx={[2, 0]}\n                  mr={[null, 3]}\n                  whiteSpace=\"nowrap\"\n                  onClick={() => setShowResetModal(true)}\n                  float=\"right\"\n                >\n                  <Undo size={11} />\n                  <Span mx={1}>{formatMessage(editingExpense ? msg.cancelEditExpense : msg.clearExpenseForm)}</Span>\n                </StyledButton>\n              </Flex>\n            )}\n          </Flex>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nExpenseFormPayeeStep.propTypes = {\n  formik: PropTypes.object,\n  editingExpense: PropTypes.bool,\n  resetDefaultStep: PropTypes.func,\n  formPersister: PropTypes.object,\n  getDefaultExpense: PropTypes.func,\n  payoutProfiles: PropTypes.array,\n  onCancel: PropTypes.func,\n  handleClearPayeeStep: PropTypes.func,\n  onNext: PropTypes.func,\n  onInvite: PropTypes.func,\n  onChange: PropTypes.func,\n  isOnBehalf: PropTypes.bool,\n  loggedInAccount: PropTypes.object,\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    host: PropTypes.shape({\n      transferwise: PropTypes.shape({\n        availableCurrencies: PropTypes.arrayOf(PropTypes.object),\n      }),\n    }),\n    settings: PropTypes.object,\n  }).isRequired,\n};\n\nexport default ExpenseFormPayeeStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport expenseTypes from '../../lib/constants/expenseTypes';\n\nimport { Box, Flex } from '../Grid';\nimport StyledCard from '../StyledCard';\nimport { P } from '../Text';\n\nimport grantIllustration from '../../public/static/images/grant.gif';\nimport grantAnimation from '../../public/static/images/grant-animation.gif';\nimport invoiceIllustration from '../../public/static/images/invoice-animation.gif';\nimport invoiceIllustrationStatic from '../../public/static/images/invoice-animation-static.jpg';\nimport receiptIllustration from '../../public/static/images/receipt-animation.gif';\nimport receiptIllustrationStatic from '../../public/static/images/receipt-animation-static.jpg';\n\nconst ExpenseTypeLabels = defineMessages({\n  [expenseTypes.INVOICE]: {\n    id: 'Expense.Type.Invoice',\n    defaultMessage: 'Invoice',\n  },\n  [expenseTypes.RECEIPT]: {\n    id: 'ExpenseForm.ReceiptLabel',\n    defaultMessage: 'Reimbursement',\n  },\n  [expenseTypes.GRANT]: {\n    id: 'ExpenseForm.Type.Request',\n    defaultMessage: 'Request Grant',\n  },\n});\n\nconst ExpenseTypeDescription = defineMessages({\n  [expenseTypes.RECEIPT]: {\n    id: 'ExpenseForm.ReceiptDescription',\n    defaultMessage: 'Get reimbursed for a purchase already made.',\n  },\n  [expenseTypes.INVOICE]: {\n    id: 'ExpenseForm.InvoiceDescription',\n    defaultMessage: 'Bill for your time or a service.',\n  },\n  [expenseTypes.GRANT]: {\n    id: 'ExpenseForm.FundingRequestDescription',\n    defaultMessage: 'Request a grant for your project or initiative.',\n  },\n});\n\nconst TypeIllustration = styled.img.attrs({ alt: '' })`\n  width: 48px;\n  height: 48px;\n`;\n\nconst StaticTypeIllustration = styled(TypeIllustration)`\n  position: absolute;\n  background: white;\n`;\n\nconst ExpenseTypeOptionContainer = styled.label`\n  display: flex;\n  align-items: baseline;\n  padding: 15px 16px;\n  margin-bottom: 0;\n  cursor: pointer;\n  background: white;\n  justify-content: flex-start;\n  flex: 1;\n\n  // The following adds a border on top and left to separate items. Because parent has overflow=hidden,\n  // only the required one will actually be displayed\n  border-top: 1px solid #dcdee0;\n  border-left: 1px solid #dcdee0;\n  margin-top: -1px;\n  margin-left: -1px;\n\n  input[type='radio'] {\n    margin-right: 4px;\n  }\n\n  // Animate gif on hover by hidding the static illustration\n  &:hover {\n    ${StaticTypeIllustration} {\n      opacity: 0;\n    }\n  }\n`;\n\nconst illustrations = {\n  [expenseTypes.INVOICE]: invoiceIllustration,\n  [expenseTypes.RECEIPT]: receiptIllustration,\n  [expenseTypes.GRANT]: grantAnimation,\n};\n\nconst staticIllustrations = {\n  [expenseTypes.INVOICE]: invoiceIllustrationStatic,\n  [expenseTypes.RECEIPT]: receiptIllustrationStatic,\n  [expenseTypes.GRANT]: grantIllustration,\n};\n\nconst ExpenseTypeOption = ({ name, type, isChecked, onChange }) => {\n  const { formatMessage } = useIntl();\n  const illustrationSrc = illustrations[type] || receiptIllustration;\n  const staticIllustrationSrc = staticIllustrations[type] || receiptIllustrationStatic;\n  return (\n    <ExpenseTypeOptionContainer data-cy={`radio-expense-type-${type}`}>\n      <Box alignSelf={['center', 'baseline', null, 'center']}>\n        <input type=\"radio\" name={name} value={type} checked={isChecked} onChange={onChange} />\n      </Box>\n      <Box mx={2} size={48} alignSelf=\"center\" display={['block', 'none', null, 'block']}>\n        <StaticTypeIllustration src={staticIllustrationSrc} />\n        <TypeIllustration src={illustrationSrc} />\n      </Box>\n      <Box>\n        <P fontSize=\"16px\" fontWeight=\"bold\" mb={2}>\n          {formatMessage(ExpenseTypeLabels[type])}\n        </P>\n        <Flex alignItems=\"center\">\n          <Box mr={1} size={48} alignSelf=\"center\" display={['none', 'block', null, 'none']}>\n            <StaticTypeIllustration src={staticIllustrationSrc} />\n            <TypeIllustration src={illustrationSrc} />\n          </Box>\n          <P fontSize=\"12px\" color=\"black.600\" fontWeight=\"normal\">\n            {formatMessage(ExpenseTypeDescription[type])}\n          </P>\n        </Flex>\n      </Box>\n    </ExpenseTypeOptionContainer>\n  );\n};\n\nExpenseTypeOption.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(Object.values(expenseTypes)).isRequired,\n  isChecked: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nconst Fieldset = styled.fieldset`\n  border: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst BASE_EXPENSE_TYPES = [expenseTypes.INVOICE, expenseTypes.RECEIPT, expenseTypes.GRANT];\n\n/**\n * To select expense's type.\n *\n * Using `StyledRadioList` should have been the default choice, but unfortunately\n * IE & Chrome don't support using `flex` on fieldset yet, so we have to create a custom\n * layout. See https://github.com/w3c/csswg-drafts/issues/321\n */\nconst ExpenseTypeRadioSelect = ({ name, onChange, value, supportedExpenseTypes }) => {\n  return (\n    <StyledCard>\n      <Fieldset onChange={onChange}>\n        <Flex flexDirection={['column', 'row']} overflow=\"hidden\">\n          {BASE_EXPENSE_TYPES.filter(type => supportedExpenseTypes.includes(type)).map(type => (\n            <ExpenseTypeOption key={type} name={name} type={type} isChecked={value === type} onChange={onChange} />\n          ))}\n        </Flex>\n      </Fieldset>\n    </StyledCard>\n  );\n};\n\nExpenseTypeRadioSelect.propTypes = {\n  /** The name of the input in the DOM */\n  name: PropTypes.string.isRequired,\n  /** Default value */\n  value: PropTypes.oneOf(Object.values(expenseTypes)),\n  /** A function called with the new value when it changes */\n  onChange: PropTypes.func,\n  /** Supported expense types */\n  supportedExpenseTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nExpenseTypeRadioSelect.defaultProps = {\n  name: 'expense-type',\n};\n\nexport default React.memo(ExpenseTypeRadioSelect);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Undo } from '@styled-icons/fa-solid/Undo';\nimport { Field, FieldArray, Form, Formik } from 'formik';\nimport { first, isEmpty, omit, pick } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport expenseStatus from '../../lib/constants/expense-status';\nimport expenseTypes from '../../lib/constants/expenseTypes';\nimport { PayoutMethodType } from '../../lib/constants/payout-method';\nimport { getSupportedExpenseTypes } from '../../lib/expenses';\nimport { requireFields } from '../../lib/form-utils';\nimport { usePrevious } from '../../lib/hooks/usePrevious';\nimport { AmountPropTypeShape } from '../../lib/prop-types';\nimport { flattenObjectDeep } from '../../lib/utils';\nimport { checkRequiresAddress, getSupportedCurrencies, validateExpenseTaxes } from './lib/utils';\n\nimport ConfirmationModal from '../ConfirmationModal';\nimport { Box, Flex } from '../Grid';\nimport { serializeAddress } from '../I18nAddressFields';\nimport PrivateInfoIcon from '../icons/PrivateInfoIcon';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport StyledButton from '../StyledButton';\nimport StyledCard from '../StyledCard';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputTags from '../StyledInputTags';\nimport { P, Span } from '../Text';\n\nimport ExpenseAttachedFilesForm from './ExpenseAttachedFilesForm';\nimport ExpenseFormItems, { addNewExpenseItem } from './ExpenseFormItems';\nimport ExpenseFormPayeeInviteNewStep, { validateExpenseFormPayeeInviteNewStep } from './ExpenseFormPayeeInviteNewStep';\nimport ExpenseFormPayeeSignUpStep from './ExpenseFormPayeeSignUpStep';\nimport ExpenseFormPayeeStep from './ExpenseFormPayeeStep';\nimport { validateExpenseItem } from './ExpenseItemForm';\nimport ExpensePayeeDetails from './ExpensePayeeDetails';\nimport ExpenseRecurringBanner from './ExpenseRecurringBanner';\nimport ExpenseTypeRadioSelect from './ExpenseTypeRadioSelect';\nimport ExpenseTypeTag from './ExpenseTypeTag';\nimport { validatePayoutMethod } from './PayoutMethodForm';\n\nconst msg = defineMessages({\n  descriptionPlaceholder: {\n    id: `ExpenseForm.DescriptionPlaceholder`,\n    defaultMessage: 'Enter expense title here...',\n  },\n  grantSubjectPlaceholder: {\n    id: `ExpenseForm.GrantSubjectPlaceholder`,\n    defaultMessage: 'e.g., research, software development, etc...',\n  },\n  addNewReceipt: {\n    id: 'ExpenseForm.AddReceipt',\n    defaultMessage: 'Add new receipt',\n  },\n  addNewItem: {\n    id: 'ExpenseForm.AddLineItem',\n    defaultMessage: 'Add new item',\n  },\n  addNewGrantItem: {\n    id: 'ExpenseForm.AddGrantItem',\n    defaultMessage: 'Add grant item',\n  },\n  stepReceipt: {\n    id: 'ExpenseForm.StepExpense',\n    defaultMessage: 'Upload one or multiple receipt',\n  },\n  stepInvoice: {\n    id: 'ExpenseForm.StepExpenseInvoice',\n    defaultMessage: 'Set invoice details',\n  },\n  stepFundingRequest: {\n    id: 'ExpenseForm.StepExpenseFundingRequest',\n    defaultMessage: 'Set grant details',\n  },\n  stepPayee: {\n    id: 'ExpenseForm.StepPayeeInvoice',\n    defaultMessage: 'Payee information',\n  },\n  cancelEditExpense: {\n    id: 'ExpenseForm.CancelEditExpense',\n    defaultMessage: 'Cancel Edit',\n  },\n  confirmCancelEditExpense: {\n    id: 'ExpenseForm.ConfirmCancelEditExpense',\n    defaultMessage: 'Are you sure you want to cancel the edits?',\n  },\n  clearExpenseForm: {\n    id: 'ExpenseForm.ClearExpenseForm',\n    defaultMessage: 'Clear Form',\n  },\n  confirmClearExpenseForm: {\n    id: 'ExpenseForm.ConfirmClearExpenseForm',\n    defaultMessage: 'Are you sure you want to clear the expense form?',\n  },\n});\n\nconst getDefaultExpense = collective => ({\n  description: '',\n  longDescription: '',\n  items: [],\n  attachedFiles: [],\n  payee: null,\n  payoutMethod: undefined,\n  privateMessage: '',\n  invoiceInfo: '',\n  currency: collective.currency,\n  taxes: null,\n  payeeLocation: {\n    address: '',\n    country: null,\n  },\n});\n\n/**\n * Take the expense's data as generated by `ExpenseForm` and strips out all optional data\n * like URLs for items when the expense is an invoice.\n */\nexport const prepareExpenseForSubmit = expenseData => {\n  // The collective picker still uses API V1 for when creating a new profile on the fly\n  const payeeIdField = typeof expenseData.payee?.id === 'string' ? 'id' : 'legacyId';\n  const isInvoice = expenseData.type === expenseTypes.INVOICE;\n  const isGrant = expenseData.type === expenseTypes.GRANT;\n  const payee =\n    expenseData.payee?.isNewUser || expenseData.payee?.isInvite\n      ? pick(expenseData.payee, ['name', 'email', 'legalName', 'organization', 'newsletterOptIn'])\n      : { [payeeIdField]: expenseData.payee.id };\n\n  const payeeLocation = checkRequiresAddress(expenseData)\n    ? pick(expenseData.payeeLocation, ['address', 'country', 'structured'])\n    : null;\n\n  const payoutMethod = pick(expenseData.payoutMethod, ['id', 'name', 'data', 'isSaved', 'type']);\n  if (payoutMethod.id === 'new') {\n    payoutMethod.id = null;\n  }\n\n  return {\n    ...pick(expenseData, [\n      'id',\n      'description',\n      'longDescription',\n      'type',\n      'privateMessage',\n      'invoiceInfo',\n      'tags',\n      'currency',\n    ]),\n    payee,\n    payeeLocation,\n    payoutMethod,\n    attachedFiles: isInvoice ? expenseData.attachedFiles?.map(file => pick(file, ['id', 'url', 'name'])) : [],\n    tax: expenseData.taxes?.filter(tax => !tax.isDisabled).map(tax => pick(tax, ['type', 'rate', 'idNumber'])),\n    items: expenseData.items.map(item => {\n      return pick(item, [\n        ...(item.__isNew ? [] : ['id']), // Omit item's ids that were created for keying purposes\n        ...(isInvoice || isGrant ? [] : ['url']), // never submit URLs for invoices or requests\n        'description',\n        'incurredAt',\n        'amount',\n      ]);\n    }),\n  };\n};\n\n/**\n * Validate the expense\n */\nconst validateExpense = (intl, expense) => {\n  const isCardCharge = expense.type === expenseTypes.CHARGE;\n  if (expense.payee?.isInvite) {\n    return expense.payee.id\n      ? requireFields(expense, ['description', 'payee', 'payee.id'])\n      : requireFields(expense, ['description', 'payee', 'payee.name', 'payee.email']);\n  }\n\n  const errors = isCardCharge ? {} : requireFields(expense, ['description', 'payee', 'payoutMethod', 'currency']);\n\n  if (expense.items.length > 0) {\n    const itemsErrors = expense.items.map(item => validateExpenseItem(expense, item));\n    const hasErrors = itemsErrors.some(errors => !isEmpty(errors));\n    if (hasErrors) {\n      errors.items = itemsErrors;\n    }\n  }\n\n  if (expense.taxes?.length) {\n    const taxesErrors = validateExpenseTaxes(intl, expense.taxes);\n    if (taxesErrors) {\n      errors['taxes'] = taxesErrors;\n    }\n  }\n\n  if (\n    expense.payoutMethod &&\n    // CHARGE expenses have VirtualCard and do not have PayoutMethod\n    isCardCharge\n  ) {\n    const payoutMethodErrors = validatePayoutMethod(expense.payoutMethod);\n    if (!isEmpty(payoutMethodErrors)) {\n      errors.payoutMethod = payoutMethodErrors;\n    }\n  }\n\n  if (checkRequiresAddress(expense)) {\n    Object.assign(errors, requireFields(expense, ['payeeLocation.country', 'payeeLocation.address']));\n  }\n\n  return errors;\n};\n\nconst setLocationFromPayee = (formik, payee) => {\n  formik.setFieldValue('payeeLocation.country', payee.location.country || null);\n  formik.setFieldValue('payeeLocation.address', payee.location.address || '');\n  formik.setFieldValue('payeeLocation.structured', payee.location.structured);\n};\n\nconst HiddenFragment = styled.div`\n  display: ${({ show }) => (show ? 'block' : 'none')};\n`;\n\nexport const EXPENSE_FORM_STEPS = {\n  PAYEE: 'PAYEE',\n  EXPENSE: 'EXPENSE',\n};\n\nconst checkAddressValuesAreCompleted = values => {\n  if (checkRequiresAddress(values)) {\n    return values.payeeLocation?.country && values.payeeLocation?.address;\n  }\n  return true;\n};\n\nconst getDefaultStep = (defaultStep, stepOneCompleted, isCreditCardCharge) => {\n  // Card Charges take priority here because they are technically incomplete.\n  if (isCreditCardCharge) {\n    return EXPENSE_FORM_STEPS.EXPENSE;\n  } else if (!stepOneCompleted) {\n    return EXPENSE_FORM_STEPS.PAYEE;\n  } else {\n    return defaultStep || EXPENSE_FORM_STEPS.PAYEE;\n  }\n};\n\nconst ExpenseFormBody = ({\n  formik,\n  payoutProfiles,\n  collective,\n  expense,\n  autoFocusTitle,\n  onCancel,\n  formPersister,\n  loggedInAccount,\n  loading,\n  expensesTags,\n  shouldLoadValuesFromPersister,\n  isDraft,\n  defaultStep,\n}) => {\n  const intl = useIntl();\n  const { formatMessage } = intl;\n  const formRef = React.useRef();\n  const { values, handleChange, errors, setValues, dirty, touched, resetForm, setErrors } = formik;\n  const hasBaseFormFieldsCompleted = values.type && values.description;\n  const isInvite = values.payee?.isInvite;\n  const isNewUser = !values.payee?.id;\n  const isReceipt = values.type === expenseTypes.RECEIPT;\n  const isGrant = values.type === expenseTypes.GRANT;\n  const isCreditCardCharge = values.type === expenseTypes.CHARGE;\n  const supportedExpenseTypes = React.useMemo(() => getSupportedExpenseTypes(collective), [collective]);\n  const isRecurring = expense && expense.recurringExpense !== null;\n  const stepOneCompleted =\n    values.payoutMethod &&\n    isEmpty(flattenObjectDeep(omit(errors, 'payoutMethod.data.currency'))) &&\n    checkAddressValuesAreCompleted(values);\n  const stepTwoCompleted = isInvite\n    ? true\n    : (stepOneCompleted || isCreditCardCharge) && hasBaseFormFieldsCompleted && values.items.length > 0;\n  const availableCurrencies = getSupportedCurrencies(collective, values.payoutMethod);\n  const [step, setStep] = React.useState(() => getDefaultStep(defaultStep, stepOneCompleted, isCreditCardCharge));\n\n  // Only true when logged in and drafting the expense\n  const [isOnBehalf, setOnBehalf] = React.useState(false);\n  const [showResetModal, setShowResetModal] = React.useState(false);\n  const editingExpense = expense !== undefined;\n\n  // Scroll to top when step changes\n  React.useEffect(() => {\n    const boundingRect = formRef.current?.getBoundingClientRect();\n    if (boundingRect) {\n      const elemTop = boundingRect.top + window.scrollY;\n      window.scroll({ top: elemTop - 75 });\n    }\n  }, [step]);\n\n  // When user logs in we set its account as the default payout profile if not yet defined\n  React.useEffect(() => {\n    if (values?.draft?.payee && !loggedInAccount && !isRecurring) {\n      formik.setFieldValue('payee', {\n        ...values.draft.payee,\n        isInvite: false,\n        isNewUser: true,\n      });\n    }\n    // If creating a new expense or completing an expense submitted on your behalf, automatically select your default profile.\n    else if (!isOnBehalf && (isDraft || !values.payee) && loggedInAccount && !isEmpty(payoutProfiles)) {\n      const defaultProfile =\n        (values.payee && payoutProfiles.find(p => p.slug === values.payee.slug)) || first(payoutProfiles);\n      formik.setFieldValue('payee', defaultProfile);\n    }\n    // Update the form state with private fields that were refeched after the user was authenticated\n    if (isDraft && loggedInAccount) {\n      const privateFields = ['payoutMethod', 'invoiceInfo'];\n      for (const field of privateFields) {\n        if (!values[field] && expense[field]) {\n          formik.setFieldValue(field, expense[field]);\n        }\n      }\n    }\n  }, [payoutProfiles, loggedInAccount]);\n\n  // Pre-fill address based on the payout profile\n  React.useEffect(() => {\n    if (!values.payeeLocation?.address && values.payee?.location) {\n      setLocationFromPayee(formik, values.payee);\n    }\n  }, [values.payee]);\n\n  // Return to Payee step if type is changed and reset some values\n  const previousType = usePrevious(values.type);\n  React.useEffect(() => {\n    if (!isCreditCardCharge && previousType && values.type !== previousType) {\n      setStep(EXPENSE_FORM_STEPS.PAYEE);\n      setOnBehalf(false);\n\n      if (!isDraft && values.payee?.isInvite) {\n        formik.setFieldValue('payee', null);\n      }\n\n      // Only invoices can have taxes\n      if (values.taxes?.length && !values.taxes[0].isDisabled && values.type !== expenseTypes.INVOICE) {\n        formik.setFieldValue('taxes', [{ ...values.taxes[0], isDisabled: true }]);\n      }\n    }\n  }, [values.type]);\n\n  React.useEffect(() => {\n    if (values.payeeLocation?.structured) {\n      formik.setFieldValue('payeeLocation.address', serializeAddress(values.payeeLocation.structured));\n    }\n  }, [values.payeeLocation]);\n\n  React.useEffect(() => {\n    // If the currency is not supported anymore, we need to do something\n    if (!loading && (!values.currency || !availableCurrencies.includes(values.currency))) {\n      const hasItemsWithAmounts = values.items.some(item => Boolean(item.amount));\n      if (!hasItemsWithAmounts) {\n        // If no items have amounts yet, we can safely set the default currency\n        formik.setFieldValue('currency', availableCurrencies[0]);\n      } else if (values.currency) {\n        // If there are items with amounts, we need to reset the currency\n        formik.setFieldValue('currency', null);\n      }\n    }\n  }, [loading, values.payoutMethod]);\n\n  // Load values from localstorage\n  React.useEffect(() => {\n    if (shouldLoadValuesFromPersister && formPersister && !dirty && !isDraft) {\n      const formValues = formPersister.loadValues();\n      if (formValues) {\n        // Reset payoutMethod if host is no longer connected to TransferWise\n        if (formValues.payoutMethod?.type === PayoutMethodType.BANK_ACCOUNT && !collective.host?.transferwise) {\n          formValues.payoutMethod = undefined;\n        }\n        setValues(\n          omit(\n            formValues,\n            // Omit deprecated fields, otherwise it will prevent expense submission\n            ['location', 'privateInfo'],\n          ),\n        );\n      }\n    }\n  }, [formPersister, dirty]);\n\n  // Save values in localstorage\n  React.useEffect(() => {\n    if (dirty && formPersister) {\n      formPersister.saveValues(values);\n    }\n  }, [formPersister, dirty, values]);\n\n  let payeeForm;\n  if (loading) {\n    payeeForm = <LoadingPlaceholder height={32} />;\n  } else if (isDraft && !loggedInAccount) {\n    payeeForm = (\n      <ExpenseFormPayeeSignUpStep\n        collective={collective}\n        formik={formik}\n        onCancel={onCancel}\n        onNext={() => setStep(EXPENSE_FORM_STEPS.EXPENSE)}\n      />\n    );\n  } else if (isOnBehalf === true && isNewUser) {\n    payeeForm = (\n      <ExpenseFormPayeeInviteNewStep\n        collective={collective}\n        formik={formik}\n        onBack={() => {\n          setStep(EXPENSE_FORM_STEPS.PAYEE);\n          setOnBehalf(false);\n          formik.setFieldValue('payee', null);\n          formik.setFieldValue('payoutMethod', null);\n          formik.setFieldValue('payeeLocation', null);\n        }}\n        onNext={() => {\n          formik.setFieldValue('payee', { ...values.payee, isInvite: true });\n          const errors = validateExpenseFormPayeeInviteNewStep(formik.values);\n          if (!isEmpty(errors)) {\n            formik.setErrors(errors);\n          } else {\n            setStep(EXPENSE_FORM_STEPS.EXPENSE);\n          }\n        }}\n        payoutProfiles={payoutProfiles}\n      />\n    );\n  } else {\n    payeeForm = (\n      <ExpenseFormPayeeStep\n        collective={collective}\n        formik={formik}\n        isOnBehalf={isOnBehalf}\n        onCancel={onCancel}\n        handleClearPayeeStep={() => setShowResetModal(true)}\n        payoutProfiles={payoutProfiles}\n        loggedInAccount={loggedInAccount}\n        onChange={payee => {\n          setOnBehalf(payee.isInvite);\n        }}\n        onNext={() => {\n          const shouldSkipValidation = isOnBehalf && isEmpty(values.payoutMethod);\n          const validation = !shouldSkipValidation && validatePayoutMethod(values.payoutMethod);\n          if (isEmpty(validation)) {\n            setStep(EXPENSE_FORM_STEPS.EXPENSE);\n          } else {\n            setErrors({ payoutMethod: validation });\n          }\n        }}\n        editingExpense={editingExpense}\n        resetDefaultStep={() => setStep(EXPENSE_FORM_STEPS.PAYEE)}\n        formPersister={formPersister}\n        getDefaultExpense={getDefaultExpense}\n        onInvite={isInvite => {\n          setOnBehalf(isInvite);\n          formik.setFieldValue('payeeLocation', {});\n          formik.setFieldValue('payee', {});\n          formik.setFieldValue('payoutMethod', {});\n        }}\n      />\n    );\n  }\n\n  return (\n    <Form ref={formRef}>\n      {!isCreditCardCharge && (\n        <ExpenseTypeRadioSelect\n          name=\"type\"\n          onChange={handleChange}\n          value={values.type}\n          supportedExpenseTypes={supportedExpenseTypes}\n        />\n      )}\n      {isRecurring && <ExpenseRecurringBanner expense={expense} />}\n      {values.type && (\n        <StyledCard mt={4} p={[16, 16, 32]} overflow=\"initial\">\n          {step === EXPENSE_FORM_STEPS.PAYEE ? (\n            <div>\n              <Flex alignItems=\"center\" mb={16}>\n                <Span color=\"black.900\" fontSize=\"18px\" lineHeight=\"26px\" fontWeight=\"bold\">\n                  {formatMessage(msg.stepPayee)}\n                </Span>\n                <Box ml={2}>\n                  <PrivateInfoIcon size={12} color=\"#969BA3\" tooltipProps={{ display: 'flex' }} />\n                </Box>\n                <StyledHr flex=\"1\" borderColor=\"black.300\" mx={2} />\n              </Flex>\n              {payeeForm}\n            </div>\n          ) : step === EXPENSE_FORM_STEPS.EXPENSE ? (\n            <div>\n              <Flex alignItems=\"center\" mb={10}>\n                <P\n                  as=\"label\"\n                  htmlFor=\"expense-description\"\n                  color=\"black.900\"\n                  fontSize=\"18px\"\n                  lineHeight=\"26px\"\n                  fontWeight=\"bold\"\n                >\n                  {values.type === expenseTypes.GRANT ? (\n                    <FormattedMessage\n                      id=\"Expense.EnterRequestSubject\"\n                      defaultMessage=\"Enter grant subject <small>(Public)</small>\"\n                      values={{\n                        small(msg) {\n                          return (\n                            <Span fontSize=\"14px\" fontWeight=\"normal\" color=\"black.600\" fontStyle=\"italic\">\n                              {msg}\n                            </Span>\n                          );\n                        },\n                      }}\n                    />\n                  ) : (\n                    <FormattedMessage\n                      id=\"Expense.EnterExpenseTitle\"\n                      defaultMessage=\"Expense title <small>(Public)</small>\"\n                      values={{\n                        small(msg) {\n                          return (\n                            <Span fontSize=\"14px\" fontWeight=\"normal\" color=\"black.600\" fontStyle=\"italic\">\n                              {msg}\n                            </Span>\n                          );\n                        },\n                      }}\n                    />\n                  )}\n                </P>\n                <StyledHr flex=\"1\" borderColor=\"black.300\" ml={2} />\n              </Flex>\n              <P fontSize=\"12px\" color=\"black.600\">\n                <FormattedMessage\n                  id=\"Expense.PrivacyWarning\"\n                  defaultMessage=\"This information is public. Do not put any private details in this field.\"\n                />\n              </P>\n              <Field\n                as={StyledInput}\n                autoFocus={autoFocusTitle}\n                border=\"0\"\n                error={errors.description}\n                fontSize=\"24px\"\n                id=\"expense-description\"\n                maxLength={255}\n                mt={3}\n                name=\"description\"\n                px={2}\n                py={1}\n                width=\"100%\"\n                withOutline\n                placeholder={\n                  values.type === expenseTypes.GRANT\n                    ? formatMessage(msg.grantSubjectPlaceholder)\n                    : formatMessage(msg.descriptionPlaceholder)\n                }\n              />\n              <HiddenFragment show={hasBaseFormFieldsCompleted || isInvite}>\n                <Flex alignItems=\"flex-start\" mt={3}>\n                  <ExpenseTypeTag type={values.type} mr=\"4px\" />\n                  <StyledInputTags\n                    suggestedTags={expensesTags}\n                    onChange={tags => {\n                      formik.setFieldValue(\n                        'tags',\n                        tags.map(t => t.value.toLowerCase()),\n                      );\n                    }}\n                    value={values.tags}\n                  />\n                </Flex>\n                {values.type === expenseTypes.INVOICE && (\n                  <Box my={40}>\n                    <ExpenseAttachedFilesForm\n                      title={<FormattedMessage id=\"UploadInvoice\" defaultMessage=\"Upload invoice\" />}\n                      description={\n                        <FormattedMessage\n                          id=\"UploadInvoiceDescription\"\n                          defaultMessage=\"If you already have an invoice document, you can upload it here.\"\n                        />\n                      }\n                      onChange={files => formik.setFieldValue('attachedFiles', files)}\n                      defaultValue={values.attachedFiles}\n                    />\n                  </Box>\n                )}\n\n                <Flex alignItems=\"center\" my={24}>\n                  <Span color=\"black.900\" fontSize=\"18px\" lineHeight=\"26px\" fontWeight=\"bold\">\n                    {formatMessage(isReceipt ? msg.stepReceipt : isGrant ? msg.stepFundingRequest : msg.stepInvoice)}\n                  </Span>\n                  <StyledHr flex=\"1\" borderColor=\"black.300\" mx={2} />\n                  <StyledButton\n                    buttonSize=\"tiny\"\n                    type=\"button\"\n                    onClick={() => addNewExpenseItem(formik)}\n                    minWidth={135}\n                    data-cy=\"expense-add-item-btn\"\n                    disabled={isCreditCardCharge}\n                  >\n                    +&nbsp;\n                    {formatMessage(isReceipt ? msg.addNewReceipt : isGrant ? msg.addNewGrantItem : msg.addNewItem)}\n                  </StyledButton>\n                </Flex>\n                <Box>\n                  <FieldArray name=\"items\">\n                    {fieldsArrayProps => (\n                      <ExpenseFormItems\n                        {...fieldsArrayProps}\n                        collective={collective}\n                        availableCurrencies={availableCurrencies}\n                      />\n                    )}\n                  </FieldArray>\n                </Box>\n\n                {values.type === expenseTypes.GRANT && (\n                  <Box my={40}>\n                    <ExpenseAttachedFilesForm\n                      title={<FormattedMessage id=\"UploadDocumentation\" defaultMessage=\"Upload documentation\" />}\n                      description={\n                        <FormattedMessage\n                          id=\"UploadDocumentationDescription\"\n                          defaultMessage=\"If you want to include any documentation, you can upload it here.\"\n                        />\n                      }\n                      onChange={files => formik.setFieldValue('attachedFiles', files)}\n                      defaultValue={values.attachedFiles}\n                    />\n                  </Box>\n                )}\n\n                <StyledHr flex=\"1\" mt={4} borderColor=\"black.300\" />\n                <Flex mt={3} flexWrap=\"wrap\" alignItems=\"center\">\n                  <StyledButton\n                    type=\"button\"\n                    width={['100%', 'auto']}\n                    mx={[2, 0]}\n                    mr={[null, 3]}\n                    mt={2}\n                    whiteSpace=\"nowrap\"\n                    data-cy=\"expense-back\"\n                    onClick={() => {\n                      if (isCreditCardCharge) {\n                        onCancel();\n                      } else {\n                        setStep(EXPENSE_FORM_STEPS.PAYEE);\n                      }\n                    }}\n                  >\n                    ←&nbsp;\n                    <FormattedMessage id=\"Back\" defaultMessage=\"Back\" />\n                  </StyledButton>\n                  <StyledButton\n                    type=\"submit\"\n                    width={['100%', 'auto']}\n                    mx={[2, 0]}\n                    mr={[null, 3]}\n                    mt={2}\n                    whiteSpace=\"nowrap\"\n                    data-cy=\"expense-summary-btn\"\n                    buttonStyle=\"primary\"\n                    disabled={!stepTwoCompleted || !formik.isValid}\n                    loading={formik.isSubmitting}\n                  >\n                    {isInvite && !isDraft ? (\n                      <FormattedMessage id=\"Expense.SendInvite\" defaultMessage=\"Send Invite\" />\n                    ) : isCreditCardCharge ? (\n                      <FormattedMessage id=\"Expense.SaveReceipt\" defaultMessage=\"Save Receipt\" />\n                    ) : (\n                      <FormattedMessage id=\"Pagination.Next\" defaultMessage=\"Next\" />\n                    )}\n                    &nbsp;→\n                  </StyledButton>\n                  {errors.payoutMethod?.data?.currency && touched.items?.some?.(i => i.amount) && (\n                    <Box mx={[2, 0]} mt={2} color=\"red.500\" fontSize=\"12px\" letterSpacing={0}>\n                      {errors.payoutMethod.data.currency.toString()}\n                    </Box>\n                  )}\n                  <StyledHr flex=\"1\" borderColor=\"white.full\" mx={2} />\n                  {showResetModal ? (\n                    <ConfirmationModal\n                      onClose={() => setShowResetModal(false)}\n                      header={\n                        editingExpense ? formatMessage(msg.cancelEditExpense) : formatMessage(msg.clearExpenseForm)\n                      }\n                      body={\n                        editingExpense\n                          ? formatMessage(msg.confirmCancelEditExpense)\n                          : formatMessage(msg.confirmClearExpenseForm)\n                      }\n                      continueHandler={() => {\n                        if (editingExpense) {\n                          onCancel();\n                        } else {\n                          setStep(EXPENSE_FORM_STEPS.PAYEE);\n                          resetForm({ values: getDefaultExpense(collective) });\n                          if (formPersister) {\n                            formPersister.clearValues();\n                            window.scrollTo(0, 0);\n                          }\n                        }\n                        setShowResetModal(false);\n                      }}\n                      {...(editingExpense && {\n                        continueLabel: formatMessage({ defaultMessage: 'Yes, cancel editing' }),\n                        cancelLabel: formatMessage({ defaultMessage: 'No, continue editing' }),\n                      })}\n                    />\n                  ) : (\n                    <StyledButton\n                      type=\"button\"\n                      buttonStyle=\"borderless\"\n                      width={['100%', 'auto']}\n                      color=\"red.500\"\n                      mt={1}\n                      mx={[2, 0]}\n                      mr={[null, 3]}\n                      whiteSpace=\"nowrap\"\n                      onClick={() => setShowResetModal(true)}\n                    >\n                      <Undo size={11} />\n                      <Span mx={1}>{formatMessage(editingExpense ? msg.cancelEditExpense : msg.clearExpenseForm)}</Span>\n                    </StyledButton>\n                  )}\n                </Flex>\n              </HiddenFragment>\n            </div>\n          ) : null}\n        </StyledCard>\n      )}\n      {step === EXPENSE_FORM_STEPS.EXPENSE && (\n        <StyledCard mt={4} p={[16, 24, 32]} overflow=\"initial\">\n          <ExpensePayeeDetails expense={formik.values} host={collective.host} borderless collective={collective} />\n        </StyledCard>\n      )}\n    </Form>\n  );\n};\n\nExpenseFormBody.propTypes = {\n  formik: PropTypes.object,\n  payoutProfiles: PropTypes.array,\n  autoFocusTitle: PropTypes.bool,\n  shouldLoadValuesFromPersister: PropTypes.bool,\n  onCancel: PropTypes.func,\n  formPersister: PropTypes.object,\n  /** Defines the default selected step, if accessible (previous steps need to be completed) */\n  defaultStep: PropTypes.oneOf(Object.values(EXPENSE_FORM_STEPS)),\n  loggedInAccount: PropTypes.object,\n  loading: PropTypes.bool,\n  isDraft: PropTypes.bool,\n  expensesTags: PropTypes.arrayOf(PropTypes.string),\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n    host: PropTypes.shape({\n      transferwise: PropTypes.shape({\n        availableCurrencies: PropTypes.arrayOf(PropTypes.object),\n      }),\n      settings: PropTypes.shape({\n        expenseTypes: PropTypes.shape({\n          GRANT: PropTypes.bool,\n          RECEIPT: PropTypes.bool,\n          INVOICE: PropTypes.bool,\n        }),\n      }),\n    }),\n    settings: PropTypes.object,\n    isApproved: PropTypes.bool,\n  }).isRequired,\n  expense: PropTypes.shape({\n    type: PropTypes.oneOf(Object.values(expenseTypes)),\n    currency: PropTypes.string,\n    description: PropTypes.string,\n    status: PropTypes.string,\n    payee: PropTypes.object,\n    draft: PropTypes.object,\n    payoutMethod: PropTypes.object,\n    recurringExpense: PropTypes.shape({\n      interval: PropTypes.string,\n      endsAt: PropTypes.string,\n    }),\n    amountInAccountCurrency: AmountPropTypeShape,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        url: PropTypes.string,\n      }),\n    ),\n  }),\n};\n\n/**\n * Main create expense form\n */\nconst ExpenseForm = ({\n  onSubmit,\n  collective,\n  expense,\n  originalExpense,\n  payoutProfiles,\n  autoFocusTitle,\n  onCancel,\n  validateOnChange,\n  formPersister,\n  loggedInAccount,\n  loading,\n  expensesTags,\n  shouldLoadValuesFromPersister,\n  defaultStep,\n}) => {\n  const isDraft = expense?.status === expenseStatus.DRAFT;\n  const [hasValidate, setValidate] = React.useState(validateOnChange && !isDraft);\n  const intl = useIntl();\n  const initialValues = { ...getDefaultExpense(collective), ...expense };\n  const validate = expenseData => validateExpense(intl, expenseData);\n  if (isDraft) {\n    initialValues.items = expense.draft.items;\n    initialValues.taxes = expense.draft.taxes;\n    initialValues.attachedFiles = expense.draft.attachedFiles;\n    initialValues.payoutMethod = expense.draft.payoutMethod;\n    initialValues.payeeLocation = expense.draft.payeeLocation;\n    initialValues.payee = expense.recurringExpense ? expense.payee : expense.draft.payee;\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={hasValidate && validate}\n      onSubmit={async (values, formik) => {\n        // We initially let the browser do the validation. Then once users try to submit the\n        // form at least once, we validate on each change to make sure they fix all the errors.\n        const errors = validate(values);\n        if (!isEmpty(errors)) {\n          setValidate(true);\n          formik.setErrors(errors);\n        } else {\n          return onSubmit(values);\n        }\n      }}\n    >\n      {formik => (\n        <ExpenseFormBody\n          formik={formik}\n          payoutProfiles={payoutProfiles}\n          collective={collective}\n          expense={originalExpense}\n          autoFocusTitle={autoFocusTitle}\n          onCancel={onCancel}\n          formPersister={formPersister}\n          loggedInAccount={loggedInAccount}\n          expensesTags={expensesTags}\n          loading={loading}\n          shouldLoadValuesFromPersister={shouldLoadValuesFromPersister}\n          isDraft={isDraft}\n          defaultStep={defaultStep}\n        />\n      )}\n    </Formik>\n  );\n};\n\nExpenseForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  autoFocusTitle: PropTypes.bool,\n  validateOnChange: PropTypes.bool,\n  shouldLoadValuesFromPersister: PropTypes.bool,\n  onCancel: PropTypes.func,\n  /** To save draft of form values */\n  formPersister: PropTypes.object,\n  loggedInAccount: PropTypes.object,\n  loading: PropTypes.bool,\n  expensesTags: PropTypes.arrayOf(PropTypes.string),\n  /** Defines the default selected step, if accessible (previous steps need to be completed) */\n  defaultStep: PropTypes.oneOf(Object.values(EXPENSE_FORM_STEPS)),\n  collective: PropTypes.shape({\n    currency: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n    host: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      transferwise: PropTypes.shape({\n        availableCurrencies: PropTypes.arrayOf(PropTypes.object),\n      }),\n    }),\n    settings: PropTypes.object,\n    isApproved: PropTypes.bool,\n  }).isRequired,\n  /** If editing */\n  expense: PropTypes.shape({\n    type: PropTypes.oneOf(Object.values(expenseTypes)),\n    description: PropTypes.string,\n    status: PropTypes.string,\n    payee: PropTypes.object,\n    draft: PropTypes.object,\n    recurringExpense: PropTypes.object,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        url: PropTypes.string,\n      }),\n    ),\n  }),\n  /** To reset form */\n  originalExpense: PropTypes.shape({\n    type: PropTypes.oneOf(Object.values(expenseTypes)),\n    description: PropTypes.string,\n    status: PropTypes.string,\n    payee: PropTypes.object,\n    draft: PropTypes.object,\n    payoutMethod: PropTypes.object,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        url: PropTypes.string,\n      }),\n    ),\n  }),\n  /** Payout profiles that user has access to */\n  payoutProfiles: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      slug: PropTypes.string,\n      location: PropTypes.shape({\n        address: PropTypes.string,\n        country: PropTypes.string,\n      }),\n      payoutMethods: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          type: PropTypes.oneOf(Object.values(PayoutMethodType)),\n          name: PropTypes.string,\n          data: PropTypes.object,\n        }),\n      ),\n    }),\n  ),\n};\n\nExpenseForm.defaultProps = {\n  validateOnChange: false,\n};\n\nexport default React.memo(ExpenseForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Box } from '../Grid';\nimport StyledLink from '../StyledLink';\n\nimport FAQ, { Content, Entry, Title } from './FAQ';\n\nconst CreateExpenseFAQ = ({ defaultOpen, ...props }) => (\n  <FAQ {...props}>\n    <Entry open={defaultOpen}>\n      <Title>\n        <FormattedMessage id=\"CreateExpenseFAQ.getPaid\" defaultMessage=\"How do I get paid from a Collective?\" />\n      </Title>\n      <Content>\n        <FormattedMessage\n          id=\"CreateExpenseFAQ.getPaidDetails\"\n          defaultMessage=\"Submit an expense and provide your payment information.\"\n        />\n      </Content>\n    </Entry>\n    <Entry open={defaultOpen}>\n      <Title>\n        <FormattedMessage id=\"CreateExpenseFAQ.howAreApproved\" defaultMessage=\"How are expenses approved?\" />\n      </Title>\n      <Content>\n        <FormattedMessage\n          id=\"CreateExpenseFAQ.howAreApprovedDetails\"\n          defaultMessage=\"Collective admins are notified when an expense is submitted, and they can approve or reject it.\"\n        />\n      </Content>\n    </Entry>\n    <Entry open={defaultOpen}>\n      <Title>\n        <FormattedMessage id=\"CreateExpenseFAQ.isItPublic\" defaultMessage=\"Is my private data made public?\" />\n      </Title>\n      <Content>\n        <FormattedMessage\n          id=\"CreateExpenseFAQ.isItPublicDetails\"\n          defaultMessage=\"No. Only the expense amount and description are public. Attachments, payment info, emails and addresses are only visible to you and the admins.\"\n        />\n      </Content>\n    </Entry>\n    <Entry open={defaultOpen}>\n      <Title>\n        <FormattedMessage id=\"CreateExpenseFAQ.whenPaid\" defaultMessage=\"When will I get paid?\" />\n      </Title>\n      <Content>\n        <FormattedMessage\n          id=\"CreateExpenseFAQ.whenPaidDetails\"\n          defaultMessage=\"Payments are processed by the Collective's Fiscal Host, the organization that hold funds on their behalf. Many Fiscal Hosts pay expenses weekly, but each one is different.\"\n        />\n      </Content>\n    </Entry>\n    <Entry open={defaultOpen}>\n      <Title>\n        <FormattedMessage defaultMessage=\"Why do you need my legal name?\" />\n      </Title>\n      <Content>\n        <FormattedMessage defaultMessage=\"The display name is public and the legal name is private, appearing on receipts, invoices, and other official documentation used for tax and accounting purposes.\" />\n      </Content>\n    </Entry>\n    <Box mt={2} pl={2}>\n      <StyledLink\n        as={StyledLink}\n        href=\"https://docs.opencollective.com/help/expenses-and-getting-paid/submitting-expenses\"\n        openInNewTab\n        fontSize=\"12px\"\n        color=\"black.700\"\n      >\n        <FormattedMessage id=\"moreInfo\" defaultMessage=\"More info\" />\n        &nbsp;&rarr;\n      </StyledLink>\n    </Box>\n  </FAQ>\n);\n\nCreateExpenseFAQ.propTypes = {\n  defaultOpen: PropTypes.bool,\n};\n\nexport default CreateExpenseFAQ;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Collapse from '../Collapse';\nimport Container from '../Container';\nimport { Box } from '../Grid';\nimport HTMLContent from '../HTMLContent';\nimport { H5 } from '../Text';\n\nconst ExpandableExpensePolicies = ({ host, collective, ...props }) => {\n  const hostPolicy = host?.expensePolicy;\n  const parentPolicy = collective?.parent?.expensePolicy;\n  const accountPolicy = collective?.expensePolicy;\n\n  if (!accountPolicy && !parentPolicy && !hostPolicy) {\n    return null;\n  }\n\n  return (\n    <Box {...props}>\n      <Collapse\n        defaultIsOpen\n        title={\n          <H5>\n            <FormattedMessage id=\"ExpensePolicies\" defaultMessage=\"Expense policies\" />\n          </H5>\n        }\n      >\n        {hostPolicy && (\n          <Container mb={2}>\n            <HTMLContent fontSize=\"12px\" color=\"black.800\" lineHeight=\"20px\" content={hostPolicy} />\n          </Container>\n        )}\n        {parentPolicy && collective.parent.id !== host?.id && parentPolicy !== accountPolicy && (\n          <Container mb={2}>\n            <HTMLContent\n              data-cy=\"expense-policy-html\"\n              fontSize=\"12px\"\n              color=\"black.800\"\n              lineHeight=\"20px\"\n              content={parentPolicy}\n            />\n          </Container>\n        )}\n        {accountPolicy && collective.id !== host?.id && (\n          <Container mb={2}>\n            <HTMLContent\n              data-cy=\"expense-policy-html\"\n              fontSize=\"12px\"\n              color=\"black.800\"\n              lineHeight=\"20px\"\n              content={accountPolicy}\n            />\n          </Container>\n        )}\n      </Collapse>\n    </Box>\n  );\n};\n\nExpandableExpensePolicies.propTypes = {\n  collective: PropTypes.shape({\n    id: PropTypes.string,\n    expensePolicy: PropTypes.string,\n    parent: PropTypes.shape({\n      id: PropTypes.string,\n      expensePolicy: PropTypes.string,\n    }),\n  }),\n  host: PropTypes.shape({\n    id: PropTypes.string,\n    expensePolicy: PropTypes.string,\n  }),\n};\n\nexport default ExpandableExpensePolicies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { CurrencyPrecision } from '../../lib/constants/currency-precision';\n\nimport Container from '../Container';\nimport CreateExpenseFAQ from '../faqs/CreateExpenseFAQ';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box } from '../Grid';\nimport LinkCollective from '../LinkCollective';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport { H5, P, Span } from '../Text';\n\nimport ExpandableExpensePolicies from './ExpandableExpensePolicies';\n\n/**\n * Provide some info (ie. collective balance, tags, policies, etc.) for the expense pages\n * in a sidebar.\n */\nconst ExpenseInfoSidebar = ({ isLoading, host, collective, children }) => {\n  const balanceWithBlockedFunds = collective?.stats.balanceWithBlockedFunds;\n  return (\n    <Box width=\"100%\">\n      <Box display={['none', 'block']}>\n        <H5 mb={3} textTransform=\"capitalize\">\n          <FormattedMessage\n            id=\"CollectiveBalance\"\n            defaultMessage=\"{type, select, COLLECTIVE {Collective balance} EVENT {Event balance} ORGANIZATION {Organization balance} FUND {Fund balance} PROJECT {Project balance} other {Account balance}}\"\n            values={{\n              type: collective?.type || '', // collective can be null when it's loading\n            }}\n          />\n        </H5>\n        <Container\n          borderLeft=\"1px solid\"\n          borderColor=\"black.300\"\n          pl={3}\n          fontSize=\"20px\"\n          color=\"black.500\"\n          data-cy=\"collective-balance\"\n        >\n          {isLoading && !balanceWithBlockedFunds ? (\n            <LoadingPlaceholder height={28} width={75} />\n          ) : (\n            <Box>\n              <FormattedMoneyAmount\n                currency={balanceWithBlockedFunds.currency}\n                amount={balanceWithBlockedFunds.valueInCents}\n                amountStyles={{ color: 'black.800' }}\n                precision={CurrencyPrecision.DEFAULT}\n              />\n              {host && (\n                <P fontSize=\"11px\" color=\"black.600\" mt={2}>\n                  <Span\n                    fontSize=\"9px\"\n                    fontWeight=\"600\"\n                    textTransform=\"uppercase\"\n                    color=\"black.500\"\n                    letterSpacing=\"0.06em\"\n                  >\n                    <FormattedMessage id=\"Fiscalhost\" defaultMessage=\"Fiscal Host\" />\n                  </Span>\n                  <br />\n                  <LinkCollective collective={host}>\n                    {collective?.isActive ? (\n                      host.name\n                    ) : (\n                      <FormattedMessage\n                        id=\"Fiscalhost.pending\"\n                        defaultMessage=\"{host} (pending)\"\n                        values={{\n                          host: host.name,\n                        }}\n                      />\n                    )}\n                  </LinkCollective>\n                </P>\n              )}\n            </Box>\n          )}\n        </Container>\n      </Box>\n      {children && <Box my={50}>{children}</Box>}\n      <ExpandableExpensePolicies host={host} collective={collective} mt={50} />\n      <Box mt={[0, 50]}>\n        <CreateExpenseFAQ withBorderLeft withNewButtons titleProps={{ fontSize: '20px', fontWeight: 500, mb: 3 }} />\n      </Box>\n    </Box>\n  );\n};\n\nExpenseInfoSidebar.propTypes = {\n  isLoading: PropTypes.bool,\n\n  /** To render custom content inside the sidebar */\n  children: PropTypes.node,\n\n  /** Must be provided if isLoading is false */\n  collective: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    parent: PropTypes.object,\n    isActive: PropTypes.bool,\n    stats: PropTypes.shape({\n      balanceWithBlockedFunds: PropTypes.shape({\n        valueInCents: PropTypes.number.isRequired,\n        currency: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n  host: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n};\n\nexport default React.memo(ExpenseInfoSidebar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { Box } from '../Grid';\nimport PrivateInfoIcon from '../icons/PrivateInfoIcon';\nimport RichTextEditor from '../RichTextEditor';\nimport StyledInputField from '../StyledInputField';\nimport { Span } from '../Text';\n\nconst msg = defineMessages({\n  notesPlaceholder: {\n    id: 'ExpenseSummary.addNotesLabel',\n    defaultMessage: 'Add notes',\n  },\n});\n\nconst PrivateNoteLabel = () => {\n  return (\n    <Span color=\"black.700\">\n      <FormattedMessage id=\"ExpenseSummary.addNotesLabel\" defaultMessage=\"Add notes\" />\n      &nbsp;&nbsp;\n      <PrivateInfoIcon color=\"#969BA3\" />\n    </Span>\n  );\n};\n\nconst ExpenseNotesForm = ({ onChange, disabled, defaultValue, hideLabel }) => {\n  const { formatMessage } = useIntl();\n  return (\n    <StyledInputField\n      htmlFor=\"expense-privateMessage-input\"\n      name=\"privateMessage\"\n      required={false}\n      label={hideLabel ? null : <PrivateNoteLabel />}\n      labelProps={{ fontWeight: '500', fontSize: '13px' }}\n    >\n      {inputProps => (\n        <Box mt={2}>\n          <RichTextEditor\n            withBorders\n            version=\"simplified\"\n            id={inputProps.id}\n            inputName={inputProps.name}\n            placeholder={formatMessage(msg.notesPlaceholder)}\n            minHeight={72}\n            onChange={onChange}\n            disabled={disabled}\n            defaultValue={defaultValue}\n            fontSize=\"13px\"\n            data-cy=\"ExpenseNotesEditor\"\n          />\n        </Box>\n      )}\n    </StyledInputField>\n  );\n};\n\nExpenseNotesForm.propTypes = {\n  defaultValue: PropTypes.string,\n  disabled: PropTypes.bool,\n  hideLabel: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nexport default ExpenseNotesForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InfoCircle } from '@styled-icons/boxicons-regular/InfoCircle';\nimport { themeGet } from '@styled-system/theme-get';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { formatAccountName } from '../../lib/collective.lib';\nimport { CollectiveType } from '../../lib/constants/collectives';\nimport expenseStatus from '../../lib/constants/expense-status';\nimport expenseTypes from '../../lib/constants/expenseTypes';\nimport { INVITE, PayoutMethodType, VIRTUAL_CARD } from '../../lib/constants/payout-method';\n\nimport Avatar from '../Avatar';\nimport Container from '../Container';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport PrivateInfoIcon from '../icons/PrivateInfoIcon';\nimport LinkCollective from '../LinkCollective';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport LocationAddress from '../LocationAddress';\nimport StyledLink from '../StyledLink';\nimport StyledTooltip from '../StyledTooltip';\nimport { H4, P, Span } from '../Text';\n\nimport PayoutMethodData from './PayoutMethodData';\nimport PayoutMethodTypeWithIcon from './PayoutMethodTypeWithIcon';\n\nconst CreatedByUserLink = ({ account }) => {\n  return (\n    <LinkCollective collective={account}>\n      <Span color=\"black.800\" fontWeight={500} textDecoration=\"none\">\n        {account ? account.name : <FormattedMessage id=\"profile.incognito\" defaultMessage=\"Incognito\" />}\n      </Span>\n    </LinkCollective>\n  );\n};\n\nCreatedByUserLink.propTypes = {\n  account: PropTypes.object,\n};\n\nconst PrivateInfoColumn = styled(Box).attrs({ mx: [0, '8px'], flexBasis: [0, '200px'] })`\n  margin-top: 42px;\n  padding-top: 16px;\n  border-top: 1px solid ${themeGet('colors.black.300')};\n  ${({ borderless }) => (borderless ? 'border-top: none; padding-top: 0; margin-top: 0;' : '')}\n  flex: 1 1;\n  min-width: 200px;\n`;\n\nconst PrivateInfoColumnHeader = styled(H4).attrs({\n  fontSize: '10px',\n  fontWeight: 'bold',\n  textTransform: 'uppercase',\n  color: 'black.500',\n  mb: 2,\n  letterSpacing: 0,\n  lineHeight: '15px',\n})``;\n\nconst PayeeTotalPayoutSumTooltip = ({ stats }) => {\n  const currentYear = new Date().getFullYear().toString();\n  return (\n    <StyledTooltip\n      content={() => (\n        <FormattedMessage\n          defaultMessage=\"Total expense payouts ({currentYear}): Invoices: {totalPaidInvoices}; Receipts: {totalPaidReceipts}; Grants: {totalPaidGrants}\"\n          values={{\n            totalPaidInvoices: (\n              <FormattedMoneyAmount\n                amount={stats.totalPaidInvoices.valueInCents}\n                currency={stats.totalPaidInvoices.currency}\n                precision={2}\n                amountStyles={null}\n              />\n            ),\n            totalPaidReceipts: (\n              <FormattedMoneyAmount\n                amount={stats.totalPaidReceipts.valueInCents}\n                currency={stats.totalPaidReceipts.currency}\n                precision={2}\n                amountStyles={null}\n              />\n            ),\n            totalPaidGrants: (\n              <FormattedMoneyAmount\n                amount={stats.totalPaidGrants.valueInCents}\n                currency={stats.totalPaidGrants.currency}\n                precision={2}\n                amountStyles={null}\n              />\n            ),\n            currentYear: <Span>{currentYear}</Span>,\n          }}\n        />\n      )}\n    >\n      <InfoCircle size={16} />\n    </StyledTooltip>\n  );\n};\n\nconst ExpensePayeeDetails = ({ expense, host, isLoading, borderless, isLoadingLoggedInUser, isDraft, collective }) => {\n  const payeeLocation = expense?.payeeLocation || expense?.draft?.payeeLocation;\n  const payee = isDraft ? expense?.draft?.payee : expense?.payee;\n  const payeeStats = payee && !isDraft ? payee.stats : null; // stats not available for drafts\n  const isInvoice = expense?.type === expenseTypes.INVOICE;\n  const isCharge = expense?.type === expenseTypes.CHARGE;\n  const isPaid = expense?.status === expenseStatus.PAID;\n  const displayedHost = expense?.host ?? host;\n\n  return isLoading ? (\n    <LoadingPlaceholder height={150} mt={3} />\n  ) : (\n    <Flex\n      flexDirection={['column', 'row']}\n      alignItems={['stretch', 'flex-start']}\n      flexWrap={['nowrap', 'wrap', null, 'nowrap']}\n    >\n      <PrivateInfoColumn data-cy=\"expense-summary-payee\" borderless={borderless}>\n        <PrivateInfoColumnHeader>\n          {isPaid ? (\n            <FormattedMessage id=\"Expense.PaidTo\" defaultMessage=\"Paid to\" />\n          ) : (\n            <FormattedMessage id=\"Expense.PayTo\" defaultMessage=\"Pay to\" />\n          )}\n        </PrivateInfoColumnHeader>\n        <LinkCollective collective={payee}>\n          <Flex alignItems=\"center\" fontSize=\"12px\">\n            {!payee.slug ? (\n              <Avatar\n                name={payee.organization?.name || payee.name}\n                radius={24}\n                backgroundColor=\"blue.100\"\n                color=\"blue.400\"\n              />\n            ) : (\n              <Avatar collective={payee} radius={24} />\n            )}\n            <Flex flexDirection=\"column\" ml={2} mr={2} css={{ overflow: 'hidden' }}>\n              <Span color=\"black.900\" fontWeight=\"bold\" truncateOverflow>\n                {formatAccountName(\n                  payee.organization?.name || payee.name,\n                  payee.organization?.legalName || payee.legalName,\n                )}\n              </Span>\n              {payee.type !== CollectiveType.VENDOR && (payee.organization?.slug || payee.slug) && (\n                <Span color=\"black.900\" fontSize=\"11px\" truncateOverflow>\n                  @{payee.organization?.slug || payee.slug}\n                </Span>\n              )}\n            </Flex>\n            {payeeStats && <PayeeTotalPayoutSumTooltip stats={payeeStats} />}\n          </Flex>\n        </LinkCollective>\n\n        {payeeLocation && isInvoice && (\n          <Container whiteSpace=\"pre-wrap\" fontSize=\"11px\" lineHeight=\"16px\" mt={2}>\n            <LocationAddress location={payeeLocation} isLoading={isLoadingLoggedInUser} />\n          </Container>\n        )}\n        {payee.website && (\n          <P mt={2} fontSize=\"11px\">\n            <StyledLink href={payee.website} openInNewTab>\n              {payee.website}\n            </StyledLink>\n          </P>\n        )}\n      </PrivateInfoColumn>\n      <PrivateInfoColumn mr={0} borderless={borderless}>\n        <PrivateInfoColumnHeader>\n          <FormattedMessage id=\"expense.payoutMethod\" defaultMessage=\"payout method\" />\n        </PrivateInfoColumnHeader>\n        <Container fontSize=\"12px\" color=\"black.600\">\n          <Box mb={3} data-cy=\"expense-summary-payout-method-type\">\n            <PayoutMethodTypeWithIcon\n              type={\n                !expense.payoutMethod?.type && (expense.draft || expense.payee.isInvite)\n                  ? expense.draft?.payoutMethod?.type || INVITE\n                  : isCharge\n                  ? VIRTUAL_CARD\n                  : expense.payoutMethod?.type\n              }\n              name={expense?.virtualCard?.name && `${expense.virtualCard.name} Card (${expense.virtualCard.last4})`}\n            />\n          </Box>\n          <div data-cy=\"expense-summary-payout-method-data\">\n            <PayoutMethodData\n              payoutMethod={expense.draft?.payoutMethod ?? expense.payoutMethod}\n              isLoading={isLoadingLoggedInUser}\n            />\n          </div>\n          {expense.invoiceInfo && (\n            <Box mt={3} data-cy=\"expense-summary-invoice-info\">\n              <Container fontSize=\"11px\" fontWeight=\"500\" mb={2}>\n                <FormattedMessage id=\"ExpenseForm.InvoiceInfo\" defaultMessage=\"Additional invoice information\" />\n                &nbsp;&nbsp;\n                <PrivateInfoIcon color=\"#969BA3\" />\n              </Container>\n              <P fontSize=\"11px\" lineHeight=\"16px\" whiteSpace=\"pre-wrap\">\n                {expense.invoiceInfo}\n              </P>\n            </Box>\n          )}\n        </Container>\n      </PrivateInfoColumn>\n      {displayedHost && (\n        <PrivateInfoColumn data-cy=\"expense-summary-host\" borderless={borderless}>\n          <PrivateInfoColumnHeader>\n            {isPaid ? (\n              <FormattedMessage id=\"expense.PaidFromFiscalhost\" defaultMessage=\"Paid from Fiscal Host\" />\n            ) : (\n              <FormattedMessage id=\"expense.PayFromFiscalhost\" defaultMessage=\"Pay from Fiscal Host\" />\n            )}\n          </PrivateInfoColumnHeader>\n          <LinkCollective collective={displayedHost}>\n            <Flex alignItems=\"center\">\n              <Avatar collective={displayedHost} radius={24} />\n              <Span ml={2} color=\"black.900\" fontSize=\"12px\" fontWeight=\"bold\" truncateOverflow>\n                {collective?.isActive ? (\n                  formatAccountName(displayedHost.name, displayedHost.legalName)\n                ) : (\n                  <FormattedMessage\n                    id=\"Fiscalhost.pending\"\n                    defaultMessage=\"{host} (pending)\"\n                    values={{\n                      host: formatAccountName(displayedHost.name, displayedHost.legalName),\n                    }}\n                  />\n                )}\n              </Span>\n            </Flex>\n          </LinkCollective>\n          {displayedHost.location && (\n            <P whiteSpace=\"pre-wrap\" fontSize=\"11px\" mt={2}>\n              {displayedHost.location.address}\n            </P>\n          )}\n          {displayedHost.website && (\n            <P mt={2} fontSize=\"11px\">\n              <StyledLink href={displayedHost.website} openInNewTab>\n                {displayedHost.website}\n              </StyledLink>\n            </P>\n          )}\n        </PrivateInfoColumn>\n      )}\n    </Flex>\n  );\n};\n\nPayeeTotalPayoutSumTooltip.propTypes = {\n  stats: PropTypes.shape({\n    totalPaidInvoices: PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string,\n    }).isRequired,\n    totalPaidReceipts: PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string,\n    }).isRequired,\n    totalPaidGrants: PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string,\n    }).isRequired,\n  }),\n};\n\nExpensePayeeDetails.propTypes = {\n  /** Set this to true if the expense is not loaded yet */\n  isLoading: PropTypes.bool,\n  /** Set this to true if this shoud use information from expense.draft property */\n  isDraft: PropTypes.bool,\n  /** Set this to true if the logged in user is currenltly loading */\n  isLoadingLoggedInUser: PropTypes.bool,\n  host: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    legalName: PropTypes.string,\n    slug: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    website: PropTypes.string,\n    location: PropTypes.shape({\n      address: PropTypes.string,\n      country: PropTypes.string,\n    }),\n  }),\n  /** Must be provided if isLoading is false */\n  expense: PropTypes.shape({\n    id: PropTypes.string,\n    legacyId: PropTypes.number,\n    description: PropTypes.string,\n    longDescription: PropTypes.string,\n    currency: PropTypes.string,\n    invoiceInfo: PropTypes.string,\n    createdAt: PropTypes.string,\n    status: PropTypes.oneOf(Object.values(expenseStatus)),\n    type: PropTypes.oneOf(Object.values(expenseTypes)),\n    tags: PropTypes.arrayOf(PropTypes.string),\n    requiredLegalDocuments: PropTypes.arrayOf(PropTypes.string),\n    draft: PropTypes.shape({\n      payee: PropTypes.object,\n      payeeLocation: PropTypes.object,\n      payoutMethod: PropTypes.object,\n    }),\n    payee: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      name: PropTypes.string,\n      slug: PropTypes.string,\n      type: PropTypes.string,\n      isAdmin: PropTypes.bool,\n      isInvite: PropTypes.bool,\n      stats: PropTypes.shape({\n        totalPaidInvoices: PropTypes.shape({\n          valueInCents: PropTypes.number,\n          currency: PropTypes.string,\n        }).isRequired,\n        totalPaidReceipts: PropTypes.shape({\n          valueInCents: PropTypes.number,\n          currency: PropTypes.string,\n        }).isRequired,\n        totalPaidGrants: PropTypes.shape({\n          valueInCents: PropTypes.number,\n          currency: PropTypes.string,\n        }).isRequired,\n      }),\n    }),\n    payeeLocation: PropTypes.shape({\n      address: PropTypes.string,\n      country: PropTypes.string,\n    }),\n    createdByAccount: PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      slug: PropTypes.string,\n      type: PropTypes.string,\n    }),\n    host: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      legalName: PropTypes.string,\n      slug: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      website: PropTypes.string,\n      location: PropTypes.shape({\n        address: PropTypes.string,\n        country: PropTypes.string,\n      }),\n    }),\n    payoutMethod: PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.oneOf(Object.values(PayoutMethodType)),\n      data: PropTypes.object,\n    }),\n    virtualCard: PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      last4: PropTypes.string,\n    }),\n  }),\n  /** Disable border and paiding in styled card, usefull for modals */\n  borderless: PropTypes.bool,\n  collective: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    isActive: PropTypes.bool,\n  }),\n};\n\nexport default ExpensePayeeDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { pick } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { getDateFromValue, toIsoDateStr } from '../../lib/date-utils';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { RecurringExpenseIntervals, RecurringIntervalOptions } from '../../lib/i18n/expense';\nimport { getCollectivePageRoute } from '../../lib/url-helpers';\n\nimport Container from '../Container';\nimport { Box, Flex } from '../Grid';\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\nimport StyledInput from '../StyledInput';\nimport StyledLink from '../StyledLink';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport StyledSelect from '../StyledSelect';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst recurringExpensePropType = PropTypes.shape({\n  id: PropTypes.string,\n  interval: PropTypes.string,\n  endsAt: PropTypes.string,\n}).isRequired;\n\nconst deleteExpenseMutation = gql`\n  mutation DeleteExpense($expense: ExpenseReferenceInput!) {\n    deleteExpense(expense: $expense) {\n      id\n    }\n  }\n`;\n\nconst ExpenseRecurringEditModal = ({ onClose, expense }) => {\n  const { recurringExpense } = expense;\n  const [deleteExpense, { loading }] = useMutation(deleteExpenseMutation, { context: API_V2_CONTEXT });\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  const router = useRouter();\n\n  const handleDeletion = async () => {\n    try {\n      await deleteExpense({ variables: { expense: pick(expense, ['id']) } });\n      addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: intl.formatMessage({ defaultMessage: 'Expense deleted' }),\n      });\n      router.push(getCollectivePageRoute(expense.account));\n      onClose();\n    } catch (e) {\n      addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(intl, e) });\n    }\n  };\n\n  return (\n    <StyledModal role=\"alertdialog\" width=\"432px\" onClose={onClose} padding=\"auto\" px={4} py=\"20px\" trapFocus>\n      <ModalHeader onClose={onClose}>Recurring Expense Setting</ModalHeader>\n      <ModalBody pt={2}>\n        <Flex flexDirection={'column'}>\n          <P color=\"black.700\" fontWeight=\"400\" fontSize=\"14px\" lineHeight=\"20px\" mt={0} mb={2}>\n            <FormattedMessage\n              id=\"Expense.Recurring.Edit.Description\"\n              defaultMessage=\"Once the frequency and end date are set, you can't edit them. You can always cancel the recurring expense and submit a new one.\"\n            />\n          </P>\n          <Box>\n            <P color=\"black.700\" fontWeight=\"600\" fontSize=\"13px\" lineHeight=\"16px\" mt={2} mb={1}>\n              <FormattedMessage id=\"Frequency\" defaultMessage=\"Frequency\" />\n            </P>\n            <StyledSelect\n              inputId=\"recurring-frequency\"\n              menuPlacement=\"auto\"\n              isSearchable={false}\n              value={RecurringIntervalOptions.find(option => option.value === recurringExpense.interval)}\n              options={RecurringIntervalOptions}\n              disabled\n            />\n          </Box>\n          <Box>\n            <P color=\"black.700\" fontWeight=\"600\" fontSize=\"13px\" lineHeight=\"16px\" mt={2} mb={1}>\n              <FormattedMessage id=\"EndDate\" defaultMessage=\"End Date\" />\n            </P>\n            <StyledInput\n              type=\"date\"\n              inputId=\"recurring-end-date\"\n              menuPlacement=\"auto\"\n              isSearchable={false}\n              height=\"38px\"\n              width=\"100%\"\n              value={recurringExpense.endsAt && toIsoDateStr(getDateFromValue(recurringExpense.endsAt))}\n              disabled\n            />\n          </Box>\n        </Flex>\n      </ModalBody>\n      <ModalFooter>\n        <Container display=\"flex\" justifyContent={['center']} flexWrap=\"Wrap\">\n          <StyledButton\n            mx={20}\n            my={1}\n            autoFocus\n            minWidth={140}\n            buttonStyle=\"dangerSecondary\"\n            buttonSize=\"small\"\n            onClick={handleDeletion}\n            disabled={loading}\n          >\n            <FormattedMessage id=\"Expense.Recurring.Edit.Cancel\" defaultMessage=\"Cancel Recurring Expense\" />\n          </StyledButton>\n        </Container>\n      </ModalFooter>\n    </StyledModal>\n  );\n};\n\nExpenseRecurringEditModal.propTypes = {\n  expense: PropTypes.shape({\n    id: PropTypes.string,\n    account: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n    }),\n    recurringExpense: recurringExpensePropType,\n  }).isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nconst ExpenseRecurringBanner = ({ expense }) => {\n  const { recurringExpense } = expense;\n  const [isEditModalOpen, setEditModal] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <MessageBox mt={4} type=\"warning\">\n        <P color=\"black.800\" fontWeight=\"700\" fontSize=\"13px\" lineHeight=\"20px\">\n          <FormattedMessage id=\"Expense.Recurring.EditWarning.Title\" defaultMessage=\"This is a recurring expense.\" />\n        </P>\n        <P color=\"black.800\" fontWeight=\"400\" fontSize=\"13px\" lineHeight=\"20px\" mt={1}>\n          <FormattedMessage\n            id=\"Expense.Recurring.EditWarning.Description\"\n            defaultMessage=\"Any changes you make to this expense will apply to future recurrences.\"\n          />\n        </P>\n        <P color=\"black.800\" fontWeight=\"400\" fontSize=\"12px\" lineHeight=\"18px\" mt={1}>\n          ({RecurringExpenseIntervals[recurringExpense.interval]}\n          {recurringExpense.endsAt && (\n            <React.Fragment>\n              ,&nbsp;\n              <FormattedMessage\n                id=\"Expense.Recurring.EditWarning.Ends\"\n                defaultMessage=\"ends {endsAt, date, medium}\"\n                values={{ endsAt: getDateFromValue(recurringExpense.endsAt) }}\n              />\n            </React.Fragment>\n          )}\n          ) &nbsp;\n          <StyledLink color=\"black.800\" onClick={() => setEditModal(true)}>\n            <FormattedMessage id=\"Expense.Recurring.Edit\" defaultMessage=\"Edit details\" />\n          </StyledLink>\n        </P>\n      </MessageBox>\n      {isEditModalOpen && <ExpenseRecurringEditModal onClose={() => setEditModal(false)} expense={expense} />}\n    </React.Fragment>\n  );\n};\n\nExpenseRecurringBanner.propTypes = {\n  expense: PropTypes.shape({\n    id: PropTypes.string,\n    account: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n    }),\n    recurringExpense: recurringExpensePropType,\n  }).isRequired,\n};\n\nexport default ExpenseRecurringBanner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Check } from '@styled-icons/feather/Check';\nimport { ChevronDown } from '@styled-icons/feather/ChevronDown/ChevronDown';\nimport { Download as IconDownload } from '@styled-icons/feather/Download';\nimport { Edit as IconEdit } from '@styled-icons/feather/Edit';\nimport { Flag as FlagIcon } from '@styled-icons/feather/Flag';\nimport { Link as IconLink } from '@styled-icons/feather/Link';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system';\n\nimport expenseTypes from '../../lib/constants/expenseTypes';\nimport useClipboard from '../../lib/hooks/useClipboard';\nimport { getCollectivePageRoute } from '../../lib/url-helpers';\n\nimport { Flex } from '../Grid';\nimport PopupMenu from '../PopupMenu';\nimport StyledButton from '../StyledButton';\n\nimport ExpenseInvoiceDownloadHelper from './ExpenseInvoiceDownloadHelper';\nimport MarkExpenseAsIncompleteModal from './MarkExpenseAsIncompleteModal';\n\nconst Action = styled.button`\n  ${margin}\n  padding: 16px;\n  cursor: pointer;\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: 500;\n  border: none;\n  background: transparent;\n  outline: none;\n  text-align: inherit;\n  text-transform: capitalize;\n\n  color: ${props => props.theme.colors.black[900]};\n\n  :hover {\n    color: ${props => props.theme.colors.black[700]};\n  }\n\n  :focus {\n    color: ${props => props.theme.colors.black[700]};\n    text-decoration: underline;\n  }\n\n  &[disabled] {\n    color: ${props => props.theme.colors.black[600]};\n  }\n\n  > svg {\n    margin-right: 14px;\n  }\n`;\n\n/**\n * Admin buttons for the expense, displayed in a React fragment to let parent\n * in control of the layout.\n */\nconst ExpenseMoreActionsButton = ({ expense, collective, onError, onEdit, isDisabled, linkAction, ...props }) => {\n  const [showMarkAsIncompleteModal, setMarkAsIncompleteModal] = React.useState(false);\n  const { isCopied, copy } = useClipboard();\n\n  const router = useRouter();\n  const permissions = expense?.permissions;\n\n  return (\n    <React.Fragment>\n      <PopupMenu\n        placement=\"bottom-start\"\n        Button={({ onClick }) => (\n          <StyledButton\n            data-cy=\"more-actions\"\n            onClick={onClick}\n            buttonSize=\"small\"\n            minWidth={140}\n            flexGrow={1}\n            {...props}\n          >\n            <FormattedMessage defaultMessage=\"More actions\" />\n            &nbsp;\n            <ChevronDown size=\"20px\" />\n          </StyledButton>\n        )}\n      >\n        {({ setOpen }) => (\n          <Flex flexDirection=\"column\">\n            {permissions?.canMarkAsIncomplete && (\n              <Action\n                onClick={() => {\n                  setMarkAsIncompleteModal(true);\n                  setOpen(false);\n                }}\n              >\n                <FlagIcon size={14} />\n                <FormattedMessage id=\"actions.markAsIncomplete\" defaultMessage=\"Mark as Incomplete\" />\n              </Action>\n            )}\n            {permissions?.canEdit && (\n              <Action data-cy=\"edit-expense-btn\" onClick={onEdit} disabled={isDisabled}>\n                <IconEdit size=\"16px\" />\n                <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n              </Action>\n            )}\n            {permissions?.canSeeInvoiceInfo && expense?.type === expenseTypes.INVOICE && (\n              <ExpenseInvoiceDownloadHelper expense={expense} collective={collective} onError={onError}>\n                {({ isLoading, downloadInvoice }) => (\n                  <Action loading={isLoading} onClick={downloadInvoice} disabled={isDisabled}>\n                    <IconDownload size=\"16px\" />\n                    {isLoading ? (\n                      <FormattedMessage id=\"loading\" defaultMessage=\"loading\" />\n                    ) : (\n                      <FormattedMessage id=\"Download\" defaultMessage=\"Download\" />\n                    )}\n                  </Action>\n                )}\n              </ExpenseInvoiceDownloadHelper>\n            )}\n            <Action\n              onClick={() =>\n                linkAction === 'link'\n                  ? router.push(`${getCollectivePageRoute(collective)}/expenses/${expense.legacyId}`)\n                  : copy(window.location.href)\n              }\n              disabled={isDisabled}\n            >\n              {isCopied ? <Check size=\"16px\" /> : <IconLink size=\"16px\" />}\n              {isCopied ? (\n                <FormattedMessage id=\"Clipboard.Copied\" defaultMessage=\"Copied!\" />\n              ) : (\n                <FormattedMessage id=\"CopyLink\" defaultMessage=\"Copy link\" />\n              )}\n            </Action>\n          </Flex>\n        )}\n      </PopupMenu>\n      {showMarkAsIncompleteModal && (\n        <MarkExpenseAsIncompleteModal expense={expense} onClose={() => setMarkAsIncompleteModal(false)} />\n      )}\n    </React.Fragment>\n  );\n};\n\nExpenseMoreActionsButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  expense: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    legacyId: PropTypes.number.isRequired,\n    type: PropTypes.oneOf(Object.values(expenseTypes)),\n    permissions: PropTypes.shape({\n      canEdit: PropTypes.bool,\n      canSeeInvoiceInfo: PropTypes.bool,\n      canMarkAsIncomplete: PropTypes.bool,\n    }),\n  }),\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    parent: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }),\n  }),\n  /** Called with an error if anything wrong happens */\n  onError: PropTypes.func,\n  onEdit: PropTypes.func,\n  linkAction: PropTypes.oneOf(['link', 'copy']),\n};\n\nExpenseMoreActionsButton.defaultProps = {\n  linkAction: 'copy',\n};\n\nexport default ExpenseMoreActionsButton;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { themeGet } from '@styled-system/theme-get';\nimport { includes } from 'lodash';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport expenseStatus from '../../lib/constants/expense-status';\nimport expenseTypes from '../../lib/constants/expenseTypes';\nimport { PayoutMethodType } from '../../lib/constants/payout-method';\nimport { AmountPropTypeShape } from '../../lib/prop-types';\n\nimport AmountWithExchangeRateInfo from '../AmountWithExchangeRateInfo';\nimport Avatar from '../Avatar';\nimport Container from '../Container';\nimport FormattedMoneyAmount, { DEFAULT_AMOUNT_STYLES } from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport HTMLContent from '../HTMLContent';\nimport LinkCollective from '../LinkCollective';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport StyledCard from '../StyledCard';\nimport StyledHr from '../StyledHr';\nimport Tags from '../Tags';\nimport { H1, H4, P, Span } from '../Text';\nimport UploadedFilePreview from '../UploadedFilePreview';\n\nimport ExpenseAmountBreakdown from './ExpenseAmountBreakdown';\nimport ExpenseMoreActionsButton from './ExpenseMoreActionsButton';\nimport ExpensePayeeDetails from './ExpensePayeeDetails';\nimport ExpenseStatusTag from './ExpenseStatusTag';\nimport ProcessExpenseButtons, { hasProcessButtons } from './ProcessExpenseButtons';\n\nexport const SummaryHeader = styled(H1)`\n  > a {\n    color: inherit;\n    text-decoration: underline;\n\n    :hover {\n      color: ${themeGet('colors.black.600')};\n    }\n  }\n`;\n\nconst CreatedByUserLink = ({ account }) => {\n  return (\n    <LinkCollective collective={account}>\n      <Span color=\"black.800\" fontWeight={500} textDecoration=\"none\">\n        {account ? account.name : <FormattedMessage id=\"profile.incognito\" defaultMessage=\"Incognito\" />}\n      </Span>\n    </LinkCollective>\n  );\n};\n\nCreatedByUserLink.propTypes = {\n  account: PropTypes.object,\n};\n\n/**\n * Last step of the create expense flow, shows the summary of the expense with\n * the ability to submit it.\n */\nconst ExpenseSummary = ({\n  expense,\n  collective,\n  host,\n  isLoading,\n  isLoadingLoggedInUser,\n  isEditing,\n  borderless,\n  canEditTags,\n  suggestedTags,\n  showProcessButtons,\n  onClose,\n  onDelete,\n  onEdit,\n  ...props\n}) => {\n  const isReceipt = expense?.type === expenseTypes.RECEIPT;\n  const isCreditCardCharge = expense?.type === expenseTypes.CHARGE;\n  const isGrant = expense?.type === expenseTypes.GRANT;\n  const existsInAPI = expense && (expense.id || expense.legacyId);\n  const createdByAccount = expense?.requestedByAccount || expense?.createdByAccount || {};\n  const expenseItems = expense?.items.length > 0 ? expense.items : expense?.draft?.items || [];\n  const expenseTaxes = expense?.taxes?.length > 0 ? expense.taxes : expense?.draft?.taxes || [];\n  const isMultiCurrency =\n    expense?.amountInAccountCurrency && expense.amountInAccountCurrency.currency !== expense.currency;\n\n  return (\n    <StyledCard\n      p={borderless ? 0 : [16, 24, 32]}\n      mb={borderless ? [4, 0] : 0}\n      borderStyle={borderless ? 'none' : 'solid'}\n      {...props}\n    >\n      <Flex\n        flexDirection={['column-reverse', 'row']}\n        alignItems={['stretch', 'center']}\n        justifyContent=\"space-between\"\n        data-cy=\"expense-title\"\n        mb={3}\n      >\n        <Flex mr={[0, 2]}>\n          <H4 fontWeight=\"500\" data-cy=\"expense-description\">\n            {isLoading ? <LoadingPlaceholder height={32} minWidth={250} /> : expense.description}\n          </H4>\n        </Flex>\n        <Flex mb={[3, 0]} justifyContent={['space-between', 'flex-end']} alignItems=\"center\">\n          {expense?.status && (\n            <Box>\n              <ExpenseStatusTag\n                display=\"block\"\n                status={expense.status}\n                letterSpacing=\"0.8px\"\n                fontWeight=\"600\"\n                fontSize=\"10px\"\n                showTaxFormTag={includes(expense.requiredLegalDocuments, 'US_TAX_FORM')}\n                showTaxFormMsg={expense.payee.isAdmin}\n              />\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n      <Tags expense={expense} isLoading={isLoading} canEdit={canEditTags} suggestedTags={suggestedTags} />\n      <Flex alignItems=\"center\" mt={3}>\n        {isLoading ? (\n          <LoadingPlaceholder height={24} width={200} />\n        ) : (\n          <React.Fragment>\n            <LinkCollective collective={createdByAccount}>\n              <Avatar collective={createdByAccount} size={24} />\n            </LinkCollective>\n            <P ml={2} fontSize=\"12px\" color=\"black.600\" data-cy=\"expense-author\">\n              {expense.requestedByAccount ? (\n                <FormattedMessage\n                  id=\"Expense.RequestedByOnDate\"\n                  defaultMessage=\"Invited by {name} on {date, date, long}\"\n                  values={{\n                    name: <CreatedByUserLink account={createdByAccount} />,\n                    date: new Date(expense.createdAt),\n                  }}\n                />\n              ) : expense.createdAt ? (\n                <FormattedMessage\n                  id=\"Expense.SubmittedByOnDate\"\n                  defaultMessage=\"Submitted by {name} on {date, date, long}\"\n                  values={{\n                    name: <CreatedByUserLink account={createdByAccount} />,\n                    date: new Date(expense.createdAt),\n                  }}\n                />\n              ) : (\n                <FormattedMessage\n                  id=\"Expense.SubmittedBy\"\n                  defaultMessage=\"Submitted by {name}\"\n                  values={{ name: <CreatedByUserLink account={createdByAccount} /> }}\n                />\n              )}\n            </P>\n          </React.Fragment>\n        )}\n      </Flex>\n      {isGrant && expense.longDescription && (\n        <Fragment>\n          <Flex alignItems=\"center\" mt={4}>\n            <Span fontWeight=\"bold\" fontSize=\"16px\">\n              <FormattedMessage id=\"Expense.RequestDescription\" defaultMessage=\"Request Description\" />\n            </Span>\n            <StyledHr flex=\"1 1\" borderColor=\"black.300\" ml={2} />\n          </Flex>\n          <P mt={4}>{expense.longDescription}</P>\n        </Fragment>\n      )}\n\n      <Flex my={4} alignItems=\"center\">\n        {isLoading ? (\n          <LoadingPlaceholder height={20} maxWidth={150} />\n        ) : (\n          <Span fontWeight=\"bold\" fontSize=\"16px\">\n            {isReceipt || isCreditCardCharge ? (\n              <FormattedMessage id=\"Expense.AttachedReceipts\" defaultMessage=\"Attached receipts\" />\n            ) : isGrant ? (\n              <FormattedMessage id=\"Expense.RequestDetails\" defaultMessage=\"Request Details\" />\n            ) : (\n              <FormattedMessage id=\"Expense.InvoiceItems\" defaultMessage=\"Invoice items\" />\n            )}\n          </Span>\n        )}\n        <StyledHr flex=\"1 1\" borderColor=\"black.300\" ml={2} />\n      </Flex>\n      {isLoading ? (\n        <LoadingPlaceholder height={68} mb={3} />\n      ) : (\n        <div data-cy=\"expense-summary-items\">\n          {expenseItems.map(attachment => (\n            <React.Fragment key={attachment.id}>\n              <Flex my={24} flexWrap=\"wrap\">\n                {(isReceipt || attachment.url) && (\n                  <Box mr={3} mb={3} width={['100%', 'auto']}>\n                    <UploadedFilePreview\n                      url={attachment.url}\n                      isLoading={isLoading || isLoadingLoggedInUser}\n                      isPrivate={!attachment.url && !isLoading}\n                      size={[640, 48]}\n                      maxHeight={48}\n                    />\n                  </Box>\n                )}\n                <Flex justifyContent=\"space-between\" alignItems=\"baseline\" flex=\"1\">\n                  <Flex flexDirection=\"column\" justifyContent=\"center\" flexGrow=\"1\">\n                    {attachment.description ? (\n                      <HTMLContent\n                        content={attachment.description}\n                        fontSize=\"12px\"\n                        color=\"black.900\"\n                        collapsable\n                        fontWeight=\"500\"\n                        maxCollapsedHeight={100}\n                        collapsePadding={22}\n                      />\n                    ) : (\n                      <Span color=\"black.500\" fontStyle=\"italic\">\n                        <FormattedMessage id=\"NoDescription\" defaultMessage=\"No description provided\" />\n                      </Span>\n                    )}\n                    {!isGrant && (\n                      <Span mt={1} fontSize=\"12px\" color=\"black.500\">\n                        <FormattedMessage\n                          id=\"withColon\"\n                          defaultMessage=\"{item}:\"\n                          values={{\n                            item: <FormattedMessage id=\"expense.incurredAt\" defaultMessage=\"Date\" />,\n                          }}\n                        />{' '}\n                        {/* Using timeZone=UTC as we only store the date as a UTC string, without time */}\n                        <FormattedDate value={attachment.incurredAt} dateStyle=\"long\" timeZone=\"UTC\" />{' '}\n                      </Span>\n                    )}\n                  </Flex>\n                  <P fontSize={15} color=\"black.600\" mt={2} textAlign=\"right\" ml={3}>\n                    <FormattedMoneyAmount\n                      amount={attachment.amount}\n                      currency={expense.currency}\n                      amountStyles={{ ...DEFAULT_AMOUNT_STYLES, fontWeight: '500' }}\n                      precision={2}\n                    />\n                  </P>\n                </Flex>\n              </Flex>\n              <StyledHr borderStyle=\"dotted\" />\n            </React.Fragment>\n          ))}\n        </div>\n      )}\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\" mt={4} mb={2}>\n        <Flex alignItems=\"center\">\n          {isLoading ? (\n            <LoadingPlaceholder height={18} width={150} />\n          ) : (\n            <ExpenseAmountBreakdown\n              currency={expense.currency}\n              items={expenseItems}\n              taxes={expenseTaxes}\n              expenseTotalAmount={isEditing ? null : expense.amount}\n            />\n          )}\n        </Flex>\n        {isMultiCurrency && (\n          <Flex alignItems=\"center\" mt={2}>\n            <Container fontSize=\"12px\" fontWeight=\"500\" mr={3} whiteSpace=\"nowrap\" color=\"black.600\">\n              <FormattedMessage\n                defaultMessage=\"Accounted as ({currency}):\"\n                values={{ currency: expense.amountInAccountCurrency.currency }}\n              />\n            </Container>\n            <Container color=\"black.600\">\n              <AmountWithExchangeRateInfo amount={expense.amountInAccountCurrency} />\n            </Container>\n          </Flex>\n        )}\n      </Flex>\n      <ExpensePayeeDetails\n        isLoading={isLoading}\n        host={host}\n        expense={expense}\n        collective={collective}\n        isDraft={!isEditing && expense?.status === expenseStatus.DRAFT}\n      />\n      {!isEditing && (\n        <Container\n          display=\"flex\"\n          width={1}\n          justifyContent=\"space-between\"\n          flexDirection={['column-reverse', null, 'row']}\n          alignItems=\"flex-end\"\n          borderTop=\"1px solid #DCDEE0\"\n          mt={4}\n          pt={12}\n        >\n          <ExpenseMoreActionsButton onEdit={onEdit} expense={expense} mt={['16px', null, '8px']} />\n          {Boolean(showProcessButtons && existsInAPI && collective && hasProcessButtons(expense?.permissions)) && (\n            <Flex flexWrap=\"wrap\">\n              <ProcessExpenseButtons\n                expense={expense}\n                permissions={expense?.permissions}\n                collective={collective}\n                host={host}\n                onDelete={() => {\n                  onDelete?.(expense);\n                  onClose?.();\n                }}\n                displayMarkAsIncomplete\n              />\n            </Flex>\n          )}\n        </Container>\n      )}\n    </StyledCard>\n  );\n};\n\nExpenseSummary.propTypes = {\n  /** Set this to true if the expense is not loaded yet */\n  isLoading: PropTypes.bool,\n  /** Set this to true if the logged in user is currenltly loading */\n  isLoadingLoggedInUser: PropTypes.bool,\n  host: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    website: PropTypes.string,\n    location: PropTypes.shape({\n      address: PropTypes.string,\n      country: PropTypes.string,\n    }),\n  }),\n  /** Must be provided if isLoading is false */\n  expense: PropTypes.shape({\n    id: PropTypes.string,\n    legacyId: PropTypes.number,\n    description: PropTypes.string.isRequired,\n    longDescription: PropTypes.string,\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n    invoiceInfo: PropTypes.string,\n    createdAt: PropTypes.string,\n    status: PropTypes.oneOf(Object.values(expenseStatus)),\n    type: PropTypes.oneOf(Object.values(expenseTypes)).isRequired,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    requiredLegalDocuments: PropTypes.arrayOf(PropTypes.string),\n    amountInAccountCurrency: AmountPropTypeShape,\n    items: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.string,\n        incurredAt: PropTypes.string,\n        description: PropTypes.string,\n        amount: PropTypes.number.isRequired,\n        url: PropTypes.string,\n      }).isRequired,\n    ).isRequired,\n    taxes: PropTypes.arrayOf(\n      PropTypes.shape({\n        type: PropTypes.string,\n        rate: PropTypes.number,\n      }).isRequired,\n    ).isRequired,\n    payee: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      isAdmin: PropTypes.bool,\n    }).isRequired,\n    payeeLocation: PropTypes.shape({\n      address: PropTypes.string,\n      country: PropTypes.string,\n    }),\n    createdByAccount: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n    }),\n    requestedByAccount: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n    }),\n    payoutMethod: PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.oneOf(Object.values(PayoutMethodType)),\n      data: PropTypes.object,\n    }),\n    draft: PropTypes.shape({\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          incurredAt: PropTypes.string,\n          description: PropTypes.string,\n          amount: PropTypes.number.isRequired,\n          url: PropTypes.string,\n        }),\n      ),\n      taxes: PropTypes.arrayOf(\n        PropTypes.shape({\n          type: PropTypes.string,\n          rate: PropTypes.number,\n        }).isRequired,\n      ).isRequired,\n    }),\n    permissions: PropTypes.shape({\n      canSeeInvoiceInfo: PropTypes.bool,\n      canDelete: PropTypes.bool,\n    }),\n  }),\n  /** Whether current user can edit the tags */\n  canEditTags: PropTypes.bool,\n  /** If canEdit is true, this array is used to display suggested tags */\n  suggestedTags: PropTypes.arrayOf(PropTypes.string),\n  /** Whether or not this is being displayed for an edited Expense */\n  isEditing: PropTypes.bool,\n  /** Whether to show the process buttons (Approve, Pay, etc) */\n  showProcessButtons: PropTypes.bool,\n  /** The account where the expense has been submitted, required to display the process actions */\n  collective: PropTypes.object,\n  /** Disable border and paiding in styled card, usefull for modals */\n  borderless: PropTypes.bool,\n  /** Passed down from ExpenseModal */\n  onClose: PropTypes.func,\n  /** Passed down from pages/expense.js */\n  onEdit: PropTypes.func,\n  /** Passed down from either ExpenseModal or pages/expense.js */\n  onDelete: PropTypes.func,\n};\n\nexport default ExpenseSummary;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { CurrencyPrecision } from '../../lib/constants/currency-precision';\n\nimport Container from '../Container';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport LinkCollective from '../LinkCollective';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport { P, Span } from '../Text';\n\n/**\n * Displays info about the collective (balance and host on mobile) for the create\n * expense page.\n */\nconst MobileCollectiveInfoStickyBar = ({ isLoading, collective, host }) => {\n  return (\n    <Container\n      borderLeft=\"8px solid\"\n      borderColor=\"green.600\"\n      px={3}\n      py=\"13px\"\n      width=\"100%\"\n      display={['block', 'none']}\n      position=\"sticky\"\n      bg=\"white.full\"\n      borderTop=\"1px solid #EDEDED\"\n      bottom={0}\n      zIndex={9}\n      height={72}\n    >\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Box minWidth={135} flex=\"1 1 45%\">\n          <P fontSize=\"12px\" fontWeight=\"bold\" color=\"black.900\" mb={1}>\n            <FormattedMessage\n              id=\"CollectiveBalance\"\n              defaultMessage=\"{type, select, COLLECTIVE {Collective balance} EVENT {Event balance} ORGANIZATION {Organization balance} FUND {Fund balance} PROJECT {Project balance} other {Account balance}}\"\n              values={{\n                type: collective?.type || '', // collective can be null when it's loading\n              }}\n            />\n          </P>\n          {isLoading ? (\n            <LoadingPlaceholder height={16} width={75} />\n          ) : (\n            <Span color=\"black.500\" fontSize=\"16px\">\n              <FormattedMoneyAmount\n                currency={collective.stats.balanceWithBlockedFunds.currency}\n                amount={collective.stats.balanceWithBlockedFunds.valueInCents}\n                precision={CurrencyPrecision.DEFAULT}\n              />\n            </Span>\n          )}\n        </Box>\n        <Box flex=\"0 0 5%\" />\n        {host && (\n          <Box flex=\"1 1 45%\" maxWidth=\"45%\">\n            <P color=\"black.600\" fontSize=\"11px\" lineHeight=\"17px\">\n              <FormattedMessage\n                id=\"withColon\"\n                defaultMessage=\"{item}:\"\n                values={{ item: <FormattedMessage id=\"Fiscalhost\" defaultMessage=\"Fiscal Host\" /> }}\n              />\n            </P>\n            <LinkCollective collective={host}>\n              <P color=\"black.600\" fontSize=\"11px\" fontWeight=\"bold\" truncateOverflow maxWidth={135}>\n                {collective?.isActive ? (\n                  host.name\n                ) : (\n                  <FormattedMessage\n                    id=\"Fiscalhost.pending\"\n                    defaultMessage=\"{host} (pending)\"\n                    values={{\n                      host: host.name,\n                    }}\n                  />\n                )}\n              </P>\n            </LinkCollective>\n          </Box>\n        )}\n      </Flex>\n    </Container>\n  );\n};\n\nMobileCollectiveInfoStickyBar.propTypes = {\n  isLoading: PropTypes.bool,\n  /** Must be provided if `isLoading` is false */\n  collective: PropTypes.shape({\n    currency: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    isActive: PropTypes.bool,\n    stats: PropTypes.shape({\n      balanceWithBlockedFunds: PropTypes.shape({\n        valueInCents: PropTypes.number.isRequired,\n        currency: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n  }),\n};\n\nexport default React.memo(MobileCollectiveInfoStickyBar);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { Info } from '@styled-icons/feather/Info';\nimport { Field, useFormikContext } from 'formik';\nimport { get, kebabCase, partition, set } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { formatCurrency } from '../../lib/currency-utils';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport { Box, Flex } from '../Grid';\nimport { I18nSupportLink } from '../I18nFormatters';\nimport MessageBox from '../MessageBox';\nimport StyledInput from '../StyledInput';\nimport StyledInputField from '../StyledInputField';\nimport StyledSelect from '../StyledSelect';\nimport StyledSpinner from '../StyledSpinner';\nimport StyledTooltip from '../StyledTooltip';\nimport { P, Span } from '../Text';\n\nconst formatStringOptions = strings => strings.map(s => ({ label: s, value: s }));\nconst formatTransferWiseSelectOptions = values => values.map(({ key, name }) => ({ label: name, value: key }));\n\nconst TW_API_COLLECTIVE_SLUG = process.env.TW_API_COLLECTIVE_SLUG;\n\nexport const msg = defineMessages({\n  currency: {\n    id: 'Currency',\n    defaultMessage: 'Currency',\n  },\n});\n\nconst requiredFieldsQuery = gql`\n  query PayoutBankInformationRequiredFields($slug: String, $currency: String!, $accountDetails: JSON) {\n    host(slug: $slug) {\n      id\n      transferwise {\n        id\n        requiredFields(currency: $currency, accountDetails: $accountDetails) {\n          type\n          title\n          fields {\n            name\n            group {\n              key\n              name\n              type\n              required\n              example\n              validationRegexp\n              refreshRequirementsOnChange\n              valuesAllowed {\n                key\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst CUSTOM_METHOD_LABEL_BY_CURRENCY = {\n  // Here I'm using the same wording Wise uses on their documentation\n  USD: {\n    requiredFields: {\n      // No need to internationalize this, since the form is generated by Wise API and it is always in English\n      label: \"Where's your bank account located?\",\n      options: {\n        aba: 'In the US',\n        // eslint-disable-next-line camelcase\n        swift_code: 'Outside the US',\n      },\n    },\n  },\n};\n\nconst Input = ({ input, getFieldName, disabled, currency, loading, refetch, formik, host }) => {\n  const isAccountHolderName = input.key === 'accountHolderName';\n  const fieldName = isAccountHolderName ? getFieldName(`data.${input.key}`) : getFieldName(`data.details.${input.key}`);\n  const required = disabled ? false : input.required;\n  let validate = required ? value => (value ? undefined : `${input.name} is required`) : undefined;\n  if (input.type === 'text') {\n    if (input.validationRegexp) {\n      validate = value => {\n        const matches = new RegExp(input.validationRegexp).test(value);\n        // TODO(intl): This should be internationalized, ideally with `formatFormErrorMessage`\n        if (!value && required) {\n          return `${input.name} is required`;\n        } else if (!matches && value) {\n          return input.validationError || `Invalid ${input.name}`;\n        }\n      };\n    }\n    return (\n      <Box key={input.key} mt={2} flex=\"1\">\n        <Field name={fieldName} validate={validate}>\n          {({ field, meta }) => (\n            <StyledInputField\n              label={input.name}\n              labelFontSize=\"13px\"\n              required={required}\n              hideOptionalLabel={disabled}\n              error={(meta.touched || disabled) && meta.error}\n              hint={input.hint}\n            >\n              {() => {\n                const inputValue = get(formik.values, field.name);\n                return (\n                  <React.Fragment>\n                    <StyledInput\n                      {...field}\n                      placeholder={input.example}\n                      error={(meta.touched || disabled) && meta.error}\n                      disabled={disabled}\n                      width=\"100%\"\n                      value={inputValue || ''}\n                    />\n                    {isAccountHolderName && inputValue && inputValue.match(/^[^\\s]{1}\\b/) && (\n                      <MessageBox mt={2} fontSize=\"12px\" type=\"warning\" withIcon>\n                        <FormattedMessage\n                          id=\"Warning.AccountHolderNameNotValid\"\n                          defaultMessage=\"Full names for personal recipients. They must include more than one name, and both first and last name must have more than one character.\"\n                        />\n                      </MessageBox>\n                    )}\n                  </React.Fragment>\n                );\n              }}\n            </StyledInputField>\n          )}\n        </Field>\n      </Box>\n    );\n  } else if (input.type === 'date') {\n    return (\n      <Box key={input.key} mt={2} flex=\"1\">\n        <Field name={fieldName} validate={validate}>\n          {({ field, meta }) => (\n            <StyledInputField\n              label={input.name}\n              labelFontSize=\"13px\"\n              required={required}\n              hideOptionalLabel={disabled}\n              error={(meta.touched || disabled) && meta.error}\n              hint={input.hint}\n            >\n              {() => (\n                <StyledInput\n                  {...field}\n                  type=\"date\"\n                  error={(meta.touched || disabled) && meta.error}\n                  disabled={disabled}\n                  width=\"100%\"\n                  value={get(formik.values, field.name) || ''}\n                />\n              )}\n            </StyledInputField>\n          )}\n        </Field>\n      </Box>\n    );\n  } else if (input.type === 'radio' || input.type === 'select') {\n    const options = formatTransferWiseSelectOptions(input.valuesAllowed || []);\n    return (\n      <Box mt={2} flex=\"1\">\n        <Field name={fieldName} validate={validate}>\n          {({ field, meta }) => (\n            <StyledInputField\n              label={input.name}\n              labelFontSize=\"13px\"\n              required={required}\n              hideOptionalLabel={disabled}\n              error={(meta.touched || disabled) && meta.error}\n            >\n              {() => (\n                <StyledSelect\n                  inputId={field.name}\n                  disabled={disabled}\n                  error={(meta.touched || disabled) && meta.error}\n                  isLoading={loading && !options.length}\n                  name={field.name}\n                  options={options}\n                  value={options.find(c => c.value === get(formik.values, field.name)) || null}\n                  onChange={({ value }) => {\n                    formik.setFieldValue(field.name, value);\n                    if (input.refreshRequirementsOnChange) {\n                      refetch({\n                        slug: host ? host.slug : TW_API_COLLECTIVE_SLUG,\n                        currency,\n                        accountDetails: get(set({ ...formik.values }, field.name, value), getFieldName('data')),\n                      });\n                    }\n                  }}\n                />\n              )}\n            </StyledInputField>\n          )}\n        </Field>\n      </Box>\n    );\n  } else {\n    return null;\n  }\n};\n\nInput.propTypes = {\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n  currency: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  getFieldName: PropTypes.func.isRequired,\n  refetch: PropTypes.func.isRequired,\n  input: PropTypes.object.isRequired,\n};\n\nconst FieldGroup = ({ field, ...props }) => {\n  return (\n    <Box flex=\"1\">\n      {field.group.map(input => (\n        <Input key={input.key} input={input} {...props} />\n      ))}\n    </Box>\n  );\n};\n\nFieldGroup.propTypes = {\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n  currency: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  getFieldName: PropTypes.func.isRequired,\n  refetch: PropTypes.func.isRequired,\n  field: PropTypes.object.isRequired,\n};\n\nconst DetailsForm = ({ disabled, getFieldName, formik, host, currency }) => {\n  const { loading, error, data, refetch } = useQuery(requiredFieldsQuery, {\n    context: API_V2_CONTEXT,\n    // A) If `fixedCurrency` was passed in PayoutBankInformationForm (2) (3)\n    //    then `host` is not set and we'll use the Platform Wise account\n    // B) If `host` is set, we expect to be in 2 cases:\n    //      * The Collective Host has Wise configured and we should be able to fetch `requiredFields` from it\n    //      * The Collective Host doesn't have Wise configured and `host` is already switched to the Platform account\n    variables: { slug: host ? host.slug : TW_API_COLLECTIVE_SLUG, currency },\n  });\n\n  // Make sure we load the form data on initial load. Otherwise certain form fields such\n  // as the state field in the \"Recipient's Address\" section might not be visible on first load\n  // and only be visible after the user reselect the country.\n  useEffect(() => {\n    refetch({ accountDetails: get(formik.values, getFieldName('data')) });\n  }, []);\n\n  if (loading && !data) {\n    return <StyledSpinner />;\n  }\n  if (error) {\n    return (\n      <MessageBox fontSize=\"12px\" type=\"error\">\n        <FormattedMessage\n          id=\"PayoutBankInformationForm.Error.RequiredFields\"\n          defaultMessage=\"There was an error fetching the required fields\"\n        />\n        {error.message && `: ${error.message}`}\n      </MessageBox>\n    );\n  }\n\n  // If at this point we don't have `requiredFields` available,\n  // we can display an error message, Wise is likely not configured on the platform\n  if (!data?.host?.transferwise?.requiredFields) {\n    if (process.env.OC_ENV === 'development') {\n      return (\n        <MessageBox fontSize=\"12px\" type=\"warning\">\n          Could not fetch requiredFields, Wise is likely not configured on the platform.\n        </MessageBox>\n      );\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('Could not fetch requiredFields through Wise.');\n      return;\n    }\n  }\n\n  const transactionTypeValues = data.host.transferwise.requiredFields.map(rf => ({\n    label: CUSTOM_METHOD_LABEL_BY_CURRENCY?.[currency]?.requiredFields?.options?.[rf.type] || rf.title,\n    value: rf.type,\n  }));\n  // Some currencies offer different methods for the transaction\n  // e.g., USD allows ABA and SWIFT transactions.\n  const availableMethods = data.host.transferwise.requiredFields.find(\n    method => method.type === get(formik.values, getFieldName(`data.type`)),\n  );\n  const [addressFields, otherFields] = partition(availableMethods?.fields, field =>\n    field.group.every(g => g.key.includes('address.')),\n  );\n\n  const transactionMethodFieldName = getFieldName('data.type');\n  const transactionMethod = get(formik.values, transactionMethodFieldName);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Field name={getFieldName('data.type')}>\n        {({ field }) => (\n          <StyledInputField\n            name={field.name}\n            label={\n              CUSTOM_METHOD_LABEL_BY_CURRENCY?.[currency]?.requiredFields?.label || (\n                <FormattedMessage\n                  id=\"PayoutBankInformationForm.TransactionMethod\"\n                  defaultMessage=\"Transaction Method\"\n                />\n              )\n            }\n            labelFontSize=\"13px\"\n            mt={3}\n            mb={2}\n          >\n            {({ id }) => (\n              <StyledSelect\n                inputId={id}\n                name={field.name}\n                onChange={({ value }) => {\n                  const { type, currency } = get(formik.values, getFieldName(`data`));\n                  formik.setFieldValue(getFieldName('data'), { type, currency });\n                  formik.setFieldValue(field.name, value);\n                }}\n                options={transactionTypeValues}\n                value={transactionTypeValues.find(method => method.value === availableMethods?.type) || null}\n                disabled={disabled}\n              />\n            )}\n          </StyledInputField>\n        )}\n      </Field>\n      {transactionMethod && (\n        <Span>\n          <Box mt={3} flex=\"1\">\n            <P fontSize=\"14px\" fontWeight=\"bold\">\n              <FormattedMessage id=\"PayoutBankInformationForm.AccountInfo\" defaultMessage=\"Account Information\" />\n            </P>\n          </Box>\n          {otherFields.map(field => (\n            <FieldGroup\n              currency={currency}\n              disabled={disabled}\n              field={field}\n              formik={formik}\n              getFieldName={getFieldName}\n              host={host}\n              key={kebabCase(field.name)}\n              loading={loading}\n              refetch={refetch}\n            />\n          ))}\n        </Span>\n      )}\n      {Boolean(addressFields.length) && (\n        <React.Fragment>\n          <Box mt={3} flex=\"1\" fontSize=\"14px\" fontWeight=\"bold\">\n            <Span mr={2}>\n              <FormattedMessage id=\"PayoutBankInformationForm.RecipientAddress\" defaultMessage=\"Recipient's Address\" />\n            </Span>\n            <StyledTooltip\n              content={\n                <FormattedMessage\n                  id=\"PayoutBankInformationForm.HolderAddress\"\n                  defaultMessage=\"Bank account holder address (not the bank address)\"\n                />\n              }\n            >\n              <Info size={16} />\n            </StyledTooltip>\n          </Box>\n          {addressFields.map(field => (\n            <FieldGroup\n              currency={currency}\n              disabled={disabled}\n              field={field}\n              formik={formik}\n              getFieldName={getFieldName}\n              host={host}\n              key={kebabCase(field.name)}\n              loading={loading}\n              refetch={refetch}\n            />\n          ))}\n        </React.Fragment>\n      )}\n    </Flex>\n  );\n};\n\nDetailsForm.propTypes = {\n  disabled: PropTypes.bool,\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n  currency: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  getFieldName: PropTypes.func.isRequired,\n};\n\nconst availableCurrenciesQuery = gql`\n  query PayoutBankInformationAvailableCurrencies($slug: String, $ignoreBlockedCurrencies: Boolean) {\n    host(slug: $slug) {\n      id\n      slug\n      currency\n      transferwise {\n        id\n        availableCurrencies(ignoreBlockedCurrencies: $ignoreBlockedCurrencies)\n      }\n    }\n  }\n`;\n\n/**\n * Form for payout bank information. Must be used with Formik.\n *\n * The main goal is to use this component in the Expense Flow (1) but it's also reused in:\n *\n * - Collective onboarding, AcceptContributionsOurselvesOrOrg.js (2)\n * - In Collective/Host settings -> Receiving Money, BankTransfer.js (3)\n *\n * In (1) we pass the host where the expense is submitted and fixedCurrency is never set.\n *   * If Wise is configured on that host, `availableCurrencies` should normally be available.\n *   * If it's not, we'll have to fetch `availableCurrencies` from the Platform Wise account\n *\n * In (2) and (3), we never pass an `host` and `fixedCurrency` is sometimes set.\n *   * If `fixedCurrency` is set, we don't need `availableCurrencies`\n *   * If `fixedCurrency` is not set, we'll fetch `availableCurrencies` from the Platform Wise account\n */\nconst PayoutBankInformationForm = ({ isNew, getFieldName, host, fixedCurrency, ignoreBlockedCurrencies, optional }) => {\n  const { data, loading } = useQuery(availableCurrenciesQuery, {\n    context: API_V2_CONTEXT,\n    variables: { slug: TW_API_COLLECTIVE_SLUG, ignoreBlockedCurrencies },\n    // Skip fetching/loading if the currency is fixed (2) (3)\n    // Or if availableCurrencies is already available. Expense Flow + Host with Wise configured (1)\n    skip: Boolean(fixedCurrency || host?.transferwise?.availableCurrencies),\n  });\n  const formik = useFormikContext();\n  const { formatMessage } = useIntl();\n\n  // Display spinner if loading\n  if (loading) {\n    return <StyledSpinner />;\n  }\n\n  // Fiscal Host with Wise configured (1) OR Platform account as fallback (1) or default (2) (3)\n  // NOTE: If `fixedCurrency is set`, `wiseHost` will be null (at least today)\n  const wiseHost = data?.host || host;\n\n  const availableCurrencies = wiseHost?.transferwise?.availableCurrencies;\n\n  let currencies;\n  if (fixedCurrency) {\n    currencies = formatStringOptions([fixedCurrency]);\n  } else if (availableCurrencies) {\n    currencies = formatStringOptions(availableCurrencies.map(c => c.code));\n  } else {\n    // If at this point we don't have `fixedCurrency` or `availableCurrencies`,\n    // we can display an error message, Wise is likely not configured on the platform\n    return (\n      <MessageBox fontSize=\"12px\" type=\"warning\">\n        <FormattedMessage\n          defaultMessage=\"An error ocurred while preparing the form for bank accounts. Please contact <I18nSupportLink>support</I18nSupportLink>\"\n          values={{ I18nSupportLink }}\n        />\n      </MessageBox>\n    );\n  }\n\n  if (optional) {\n    currencies.unshift({ label: 'No selection', value: null });\n  }\n\n  const currencyFieldName = getFieldName('data.currency');\n  const selectedCurrency = get(formik.values, currencyFieldName);\n\n  const validateCurrencyMinimumAmount = () => {\n    // Skip if currency is fixed (2) (3)\n    // or if `availableCurrencies` is not set (but we're not supposed to be there anyway)\n    if (fixedCurrency || !availableCurrencies) {\n      return;\n    }\n\n    // Only validate minimum amount if the form has items\n    if (formik?.values?.items?.length > 0) {\n      const invoiceTotalAmount = formik.values.items.reduce(\n        (amount, attachment) => amount + (attachment.amount || 0),\n        0,\n      );\n      const minAmountForSelectedCurrency =\n        availableCurrencies.find(c => c.code === selectedCurrency)?.minInvoiceAmount * 100;\n      if (invoiceTotalAmount < minAmountForSelectedCurrency) {\n        return formatMessage(\n          {\n            defaultMessage:\n              'The minimum amount for transferring to {selectedCurrency} is {minAmountForSelectedCurrency}',\n          },\n          {\n            selectedCurrency,\n            minAmountForSelectedCurrency: formatCurrency(minAmountForSelectedCurrency, wiseHost.currency),\n          },\n        );\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Field name={currencyFieldName} validate={validateCurrencyMinimumAmount}>\n        {({ field }) => (\n          <StyledInputField name={field.name} label={formatMessage(msg.currency)} labelFontSize=\"13px\" mt={3} mb={2}>\n            {({ id }) => (\n              <StyledSelect\n                inputId={id}\n                name={field.name}\n                onChange={({ value }) => {\n                  formik.setFieldValue(getFieldName('data'), {});\n                  formik.setFieldValue(field.name, value);\n                }}\n                options={currencies}\n                value={currencies.find(c => c.label === selectedCurrency) || null}\n                disabled={Boolean(fixedCurrency && !optional) || !isNew}\n              />\n            )}\n          </StyledInputField>\n        )}\n      </Field>\n      {selectedCurrency && (\n        <DetailsForm\n          currency={selectedCurrency}\n          disabled={!isNew}\n          formik={formik}\n          getFieldName={getFieldName}\n          host={wiseHost}\n        />\n      )}\n      {!selectedCurrency && !currencies?.length && (\n        <MessageBox fontSize=\"12px\" type=\"error\">\n          <FormattedMessage\n            id=\"PayoutBankInformationForm.Error.AvailableCurrencies\"\n            defaultMessage=\"There was an error loading available currencies for this host\"\n          />\n          .\n        </MessageBox>\n      )}\n    </React.Fragment>\n  );\n};\n\nPayoutBankInformationForm.propTypes = {\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    currency: PropTypes.string,\n    transferwise: PropTypes.shape({\n      availableCurrencies: PropTypes.arrayOf(PropTypes.object),\n    }),\n  }),\n  isNew: PropTypes.bool,\n  optional: PropTypes.bool,\n  ignoreBlockedCurrencies: PropTypes.bool,\n  getFieldName: PropTypes.func.isRequired,\n  /** Enforces a fixedCurrency */\n  fixedCurrency: PropTypes.string,\n  /** A map of errors for this object */\n  errors: PropTypes.object,\n  formik: PropTypes.object,\n};\n\nexport default PayoutBankInformationForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@styled-icons/feather/ChevronDown/ChevronDown';\nimport { ChevronUp } from '@styled-icons/feather/ChevronUp/ChevronUp';\nimport { themeGet } from '@styled-system/theme-get';\nimport { FormattedMessage } from 'react-intl';\nimport styled, { css } from 'styled-components';\nimport { size, space } from 'styled-system';\n\nimport Container from '../Container';\nimport { Box } from '../Grid';\nimport { P } from '../Text';\n\n/** Main entry container */\nexport const Entry = styled.details`\n  &[open] {\n    border-color: ${themeGet('colors.primary.500')};\n\n    summary::after {\n      content: '−';\n    }\n  }\n\n  summary {\n    padding-top: ${themeGet('space.2')}px;\n    padding-bottom: ${themeGet('space.2')}px;\n    font-size: 13px;\n    font-weight: 500;\n    color: ${themeGet('colors.black.800')};\n    /* Remove arrow on Firefox */\n    list-style: none;\n\n    &:hover {\n      color: ${themeGet('colors.black.700')};\n    }\n\n    button {\n      display: none;\n    }\n  }\n\n  summary:focus {\n    outline: 1px dashed ${themeGet('colors.black.200')};\n    outline-offset: ${themeGet('space.1')}px;\n  }\n\n  summary::after {\n    content: '+';\n    display: inline-block;\n    padding-left: ${themeGet('space.2')}px;\n    color: ${themeGet('colors.black.600')};\n    font-weight: bold;\n  }\n\n  /* Remove arrow on Chrome */\n  summary::-webkit-details-marker {\n    display: none;\n  }\n`;\n\nconst CollapseBtn = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  border: 1px solid #dcdee0;\n\n  svg {\n    stroke-width: 1.5;\n  }\n\n  [data-item='chevron-up'] {\n    margin-top: -5%;\n  }\n\n  [data-item='chevron-down'] {\n    margin-top: 5%;\n  }\n\n  ${size}\n  ${space}\n`;\n\n/** Entry title */\nexport const Title = styled(({ children, ...props }) => (\n  <summary {...props}>\n    <div>{children}</div>\n    <CollapseBtn size={18} ml={3}>\n      <ChevronUp size=\"1em\" data-item=\"chevron-up\" style={{ marginTop: -1 }} />\n      <ChevronDown size=\"1em\" data-item=\"chevron-down\" />\n    </CollapseBtn>\n  </summary>\n))`\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\n/** Entry content (hidden by default) */\nexport const Content = styled(Box)``;\nContent.defaultProps = {\n  py: 2,\n  fontSize: '13px',\n  color: 'black.600',\n};\n\nexport const Separator = styled.hr`\n  background: ${themeGet('colors.black.400')};\n  width: 100%;\n`;\n\n/** A simple wrapper to group entries */\nconst EntryContainer = styled.div`\n  ${Entry} {\n    ${props =>\n      props.withNewButtons\n        ? css`\n            [data-item='chevron-up'] {\n              display: none;\n            }\n\n            &[open] {\n              [data-item='chevron-up'] {\n                display: inline-block;\n              }\n              [data-item='chevron-down'] {\n                display: none;\n              }\n            }\n\n            summary::after {\n              display: none;\n            }\n\n            button {\n              display: block;\n            }\n          `\n        : css`\n            ${CollapseBtn} {\n              display: none;\n            }\n          `}\n\n    ${props =>\n      props.withBorderLeft &&\n      css`\n        border-left: 1px solid #dcdee0;\n        padding-left: 8px;\n\n        &:focus-within,\n        &:hover {\n          border-color: ${themeGet('colors.primary.500')};\n        }\n      `}\n  }\n`;\n\n/**\n * A small FAQ with expendable contents.\n */\nexport default class FAQ extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    /** The title to display above entries. Set to null to disable it. */\n    title: PropTypes.string,\n    /** Props for styling the title */\n    titleProps: PropTypes.object,\n    /** If true, a border will be displayed on the left  */\n    withBorderLeft: PropTypes.bool,\n    /** If true, will display a button with a chevron instead of the `+` sign  */\n    withNewButtons: PropTypes.bool,\n    /** All properties from `Box` */\n    ...Box.propTypes,\n  };\n\n  render() {\n    const { title, children, withBorderLeft, withNewButtons, titleProps, ...props } = this.props;\n    return (\n      <Container {...props}>\n        {title !== null && (\n          <P fontWeight=\"bold\" mb={1} color=\"black.900\" {...titleProps}>\n            {title || <FormattedMessage id=\"FAQ\" defaultMessage=\"FAQ\" />}\n          </P>\n        )}\n        <EntryContainer withBorderLeft={withBorderLeft} withNewButtons={withNewButtons}>\n          {children}\n        </EntryContainer>\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport { get, pick } from 'lodash';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport I18nFormatters from '../../components/I18nFormatters';\nimport { TOAST_TYPE, useToasts } from '../../components/ToastProvider';\n\nimport { uploadImageWithXHR } from '../api';\nimport { allSettled } from '../utils';\n\nconst msg = defineMessages({\n  invalidFiles: {\n    id: 'StyledDropzone.InvalidFiles',\n    defaultMessage: 'The following {count, plural, one {file is} other {files are}} not valid: {files}',\n  },\n});\n\n/** Fets the average progress from a list of upload progress */\nconst getUploadProgress = uploadProgressList => {\n  if (!uploadProgressList || uploadProgressList.length === 0) {\n    return 0;\n  } else {\n    const totalUploadProgress = uploadProgressList.reduce((total, current) => total + current, 0);\n    return Math.trunc(totalUploadProgress / uploadProgressList.length);\n  }\n};\n\nexport const useImageUploader = ({ isMulti, mockImageGenerator, onSuccess, onReject, kind }) => {\n  const [isUploading, setUploading] = React.useState(false);\n  const [uploadProgressList, setUploadProgressList] = React.useState([]);\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  return {\n    isUploading,\n    uploadProgress: getUploadProgress(uploadProgressList),\n    uploadFiles: React.useCallback(\n      async (acceptedFiles, rejectedFiles) => {\n        setUploading(true);\n        const filesToUpload = isMulti ? acceptedFiles : [acceptedFiles[0]];\n        const results = await allSettled(\n          filesToUpload.map((file, index) =>\n            uploadImageWithXHR(file, kind, {\n              mockImage: mockImageGenerator && mockImageGenerator(index),\n              onProgress: progress => {\n                const newProgressList = [...uploadProgressList];\n                newProgressList.splice(index, 0, progress);\n                setUploadProgressList(newProgressList);\n              },\n            }),\n          ),\n        );\n\n        setUploading(false);\n\n        const successes = [];\n        const failures = [];\n        results.forEach((result, index) => {\n          const fileInfo = pick(filesToUpload[index], ['name', 'size', 'type']);\n          if (result.status === 'fulfilled') {\n            successes.push({ url: result.value, ...fileInfo });\n          } else {\n            failures.push({ message: result.reason, ...fileInfo });\n          }\n        });\n\n        if (onSuccess && successes.length > 0) {\n          await onSuccess(isMulti ? successes : successes[0]);\n        }\n\n        if (onReject && failures.length > 0) {\n          onReject(isMulti ? failures : failures[0]);\n        }\n\n        if (rejectedFiles?.length) {\n          const baseMsg = intl.formatMessage(msg.invalidFiles, {\n            ...I18nFormatters,\n            count: rejectedFiles.length,\n            files: rejectedFiles.map(({ file }) => file.name).join(', '),\n          });\n          const errorMsg = get(rejectedFiles[0], 'errors.0.message') || '';\n          addToast({ type: TOAST_TYPE.ERROR, message: `${baseMsg}. ${errorMsg}` });\n        }\n      },\n      [isMulti, onSuccess, onReject, mockImageGenerator, uploadProgressList],\n    ),\n  };\n};\n","import { useEffect, useRef } from 'react';\n\n/**\n * Holds the previous value. Useful to reproduce a `componentDidUpdate(prevProps)` behavior\n * in a hook component.\n */\nexport const usePrevious = value => {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n"],"names":["React","AddressFormatter","Field","useIntl","LoadingPlaceholder","StyledInput","StyledInputField","StyledSelect","missingCountries","addressFormatter","wrangleAddressData","addressInfo","formLayout","formatting","edit","necessaryFields","matches","match","filter","includes","mappedMatches","map","addressFormFields","Object","entries","labels","entry","sort","a","b","indexOf","zones","zoneIndex","find","idx","push","serializeAddress","address","keys","k","join","getAddressFieldDifferences","formAddressValues","addressFields","addressFieldsArray","field","differenceInAddressFields","key","buildZoneOption","zone","value","name","label","length","code","ZoneSelect","info","required","onChange","id","error","props","zoneOptions","useMemo","useEffect","formValueZone","option","target","v","FormikLocationFieldRenderer","prefix","validate","undefined","meta","inputProps","SimpleLocationFieldRenderer","fieldProps","useState","isTouched","setIsTouched","inputName","dispatchOnChange","e","I18nAddressFields","selectedCountry","onCountryChange","onLoadError","Component","intl","country","data","setData","fields","setFields","loading","setLoading","locale","updateLocale","fetchData","getCountry","response","countryInfo","console","warn","message","fieldName","fieldLabel","fieldInfo","optionalLabels","fieldValue","defaultProps","FormattedMessage","Span","LocationAddress","location","isLoading","showMessageIfEmpty","ExclamationCircle","Download","DownloadIcon","useDropzone","styled","css","v4","uuid","useImageUploader","Container","Box","getI18nLink","StyledSpinner","P","UploadedFilePreview","DROPZONE_ACCEPT_IMAGES","DROPZONE_ACCEPT_PDF","DROPZONE_ACCEPT_ALL","Dropzone","onClick","theme","colors","primary","red","ReplaceContainer","div","StyledDropzone","onSuccess","onReject","children","loadingProgress","minHeight","size","fontSize","mockImageGenerator","accept","minSize","maxSize","isMulti","kind","imgUploaderParams","uploadFiles","isUploading","uploadProgress","dropzoneParams","multiple","onDrop","getRootProps","getInputProps","isDragActive","innerMinHeight","dropProps","count","event","preventDefault","formatFormErrorMessage","InputTypeCountry","StyledTextarea","DEFAULT_LOCATION","structured","StyledInputLocation","autoDetectCountry","labelFontSize","labelFontWeight","errors","useFallback","setUseFallback","forceLegacyFormat","Boolean","hasCountry","formatMessage","defaultMessage","i18nTaxType","computeExpenseAmounts","getTaxAmount","isTaxRateValid","FormattedMoneyAmount","Flex","StyledHr","AmountLine","p","black","TotalAmountLine","ExpenseAmountBreakdown","items","currency","taxes","expenseTotalAmount","hasTaxes","totalInvoiced","totalAmount","tax","type","rate","memo","expenseTypes","StyledLinkButton","ExpenseInvoiceDownloadHelper","getFileName","totalNbFiles","number","ExpenseAttachedFiles","files","onRemove","showInvoice","collective","expense","INVOICE","SETTLEMENT","downloadInvoice","file","url","attachmentDropzoneParams","attachmentRequiresFile","expenseType","RECEIPT","CHARGE","StyledButton","AddNewAttachedFilesButton","disabled","PrivateInfoIcon","ExpenseAttachedFilesForm","defaultValue","title","description","setFiles","newFiles","uploadedFiles","updatedFiles","splice","FastField","defineMessages","isURL","createError","ERROR","requireFields","RichTextEditor","StyledInputAmount","msg","previewImgAlt","descriptionLabel","amountLabel","dateLabel","removeReceipt","removeItem","receiptRequired","validateExpenseItem","item","requiredFields","GRANT","isNaN","amount","FORM_FIELD_PATTERN","FORM_FIELD_REQUIRED","AttachmentLabel","ExpenseItemForm","attachment","onUploadError","requireFile","requireDate","isRichText","isOptional","editOnlyDescriptiveInfo","hasMultiCurrency","availableCurrencies","onCurrencyChange","isLastItem","attachmentKey","getFieldName","getError","form","hasValidUrl","setFieldValue","split","whyDidYouRender","accountHasGST","accountHasVAT","TaxType","injectIntl","toIsoDateStr","formatErrorMessage","I18nBold","MessageBox","StyledCheckbox","ExpenseGSTFormikFields","ExpenseVATFormikFields","newExpenseItem","attrs","incurredAt","Date","__isNew","filesListToItems","addNewExpenseItem","formik","defaultValues","values","ExpenseFormItems","uploadErrors","findIndex","remove","newCurrency","setFieldTouched","addDefaultItem","oldProps","touched","firstItem","state","host","VAT","GST","taxType","isDisabled","isGrant","isCreditCardCharge","hasItems","renderErrors","setState","index","getApplicableTaxType","hasTaxFields","payee","isInvite","checked","taxName","renderTaxFormFields","PureComponent","isEmail","PayoutMethodType","PayoutBankInformationForm","paypalEmail","content","savePayout","validatePayoutMethod","payoutMethod","PAYPAL","email","BANK_ACCOUNT","accountHolderName","OTHER","FORM_FIELD_MIN_LENGTH","PayoutMethodForm","fieldsPrefix","isNew","fixedPrefix","gql","graphql","Times","RemoveIcon","memoizeOne","AccountTypesWithHost","EMPTY_ARRAY","API_V2_CONTEXT","i18nPayoutMethodType","ConfirmationModal","StyledRoundButton","PayoutMethodData","PayoutMethodTypeWithIcon","newPayoutMethodMsg","MAX_PAYOUT_OPTION_DATA_LENGTH","payoutMethodLabels","accountBalance","PayoutMethodSelect","removingPayoutMethod","ACCOUNT_BALANCE","details","IBAN","accountNumber","clabe","bankgiroNumber","replace","i18nType","_default","pm","context","isMenu","isDeletable","getPayoutMethodLabel","stopPropagation","getPayoutMethodTitle","payoutMethods","payerHostSupportedPayoutMethods","supportedPayoutMethods","payeeIsSelfHosted","payeeIsCollectiveFamilyType","payeeIsSameHost","pmTypes","CREDIT_CARD","creatablePmTypes","pmType","groupedPms","options","getOptionFromPayoutMethod","isSaved","getDefaultData","payoutMethodType","removePayoutMethod","variables","defaultPayoutMethod","styledSelectOptions","getOptions","hasSuitablePayoutMethodOption","isTrustedHost","payoutMethodTypes","formatOptionLabel","removePayoutMethodMutation","addRemovePayoutMethodMutation","Fragment","themeGet","suggestSlug","isErrorType","verifyEmailPattern","reportValidityHTML5","Grid","StyledCard","StyledInputFormikField","StyledInputGroup","accountType","nameLabel","emailTitle","payoutOptionLabel","invoiceInfo","invoiceInfoPlaceholder","recipientNoteLabel","additionalInfo","orgNameLabel","orgSlugLabel","orgSlugErrorTaken","orgWebsiteLabel","orgDescriptionLabel","PAYEE_TYPE","USER","ORG","Fieldset","fieldset","RadioOptionContainer","validateExpenseFormPayeeInviteNewStep","ExpenseFormPayeeInviteNewStep","onBack","onNext","setPayoutMethod","useCallback","payeeType","setPayeeType","payeeLocation","showAdditionalInfo","setAdditionalInfo","organization","slug","changePayeeType","isFormValid","setErrors","useLazyQuery","flattenObjectDeep","LoginBtn","validateSlugQuery","legalName","emailLabel","throttledSearch","searchFunc","ExpenseFormPayeeSignUpStep","onCancel","stepOneCompleted","validateSlug","existingSlugAccount","draft","handleSlugValidation","account","loginLink","validateForm","allErrors","setTouched","InfoCircle","Undo","compareNames","CollectiveType","require2FAForAdmins","checkRequiresAddress","CollectivePicker","CUSTOM_OPTIONS_POSITION","FLAG_COLLECTIVE_PICKER_COLLECTIVE","FLAG_NEW_COLLECTIVE","CollectivePickerAsync","StyledTooltip","TwoFactorAuthRequiredMessage","INDIVIDUAL","ORGANIZATION","COLLECTIVE","FUND","EVENT","PROJECT","payeeLabel","cancelEditExpense","confirmCancelEditExpense","clearExpenseForm","confirmClearExpenseForm","setLocationFromPayee","getPayoutMethodsFromPayee","isActive","hostPayoutMethods","hostSuitablePayoutMethods","refreshPayoutProfile","payoutProfiles","profile","setValues","getPayeeOptions","profileOptions","profilesByType","myself","myOrganizations","payeeOptions","checkStepOneCompleted","isOnBehalf","isMissing2FA","ExpenseFormPayeeStep","onInvite","loggedInAccount","editingExpense","resetDefaultStep","formPersister","getDefaultExpense","hasTwoFactorAuth","allPayoutMethods","showResetModal","setShowResetModal","onPayoutMethodRemove","requiresAddress","canInvite","status","collectivePick","existingProfile","isNewlyCreatedProfile","members","some","m","role","member","menu","borderRadius","menuList","padding","BOTTOM","build","log","resetForm","clearValues","window","scrollTo","continueLabel","cancelLabel","grantIllustration","grantAnimation","invoiceIllustration","invoiceIllustrationStatic","receiptIllustration","receiptIllustrationStatic","ExpenseTypeLabels","ExpenseTypeDescription","TypeIllustration","img","alt","StaticTypeIllustration","ExpenseTypeOptionContainer","illustrations","staticIllustrations","ExpenseTypeOption","isChecked","illustrationSrc","staticIllustrationSrc","BASE_EXPENSE_TYPES","ExpenseTypeRadioSelect","supportedExpenseTypes","FieldArray","Form","Formik","expenseStatus","getSupportedExpenseTypes","usePrevious","AmountPropTypeShape","getSupportedCurrencies","validateExpenseTaxes","StyledInputTags","ExpensePayeeDetails","ExpenseRecurringBanner","ExpenseTypeTag","descriptionPlaceholder","grantSubjectPlaceholder","addNewReceipt","addNewItem","addNewGrantItem","stepReceipt","stepInvoice","stepFundingRequest","stepPayee","longDescription","attachedFiles","privateMessage","prepareExpenseForSubmit","expenseData","payeeIdField","isInvoice","isNewUser","validateExpense","isCardCharge","itemsErrors","hasErrors","taxesErrors","payoutMethodErrors","assign","HiddenFragment","show","EXPENSE_FORM_STEPS","PAYEE","EXPENSE","checkAddressValuesAreCompleted","getDefaultStep","defaultStep","ExpenseFormBody","autoFocusTitle","expensesTags","shouldLoadValuesFromPersister","isDraft","formRef","useRef","handleChange","dirty","hasBaseFormFieldsCompleted","isReceipt","isRecurring","recurringExpense","stepTwoCompleted","step","setStep","setOnBehalf","boundingRect","current","getBoundingClientRect","elemTop","top","scrollY","scroll","defaultProfile","privateFields","previousType","hasItemsWithAmounts","formValues","loadValues","transferwise","saveValues","payeeForm","shouldSkipValidation","validation","display","small","tags","t","toLowerCase","fieldsArrayProps","isValid","isSubmitting","i","toString","ExpenseForm","onSubmit","originalExpense","validateOnChange","DRAFT","hasValidate","setValidate","initialValues","StyledLink","FAQ","Content","Entry","Title","CreateExpenseFAQ","defaultOpen","Collapse","HTMLContent","H5","ExpandableExpensePolicies","hostPolicy","expensePolicy","parentPolicy","parent","accountPolicy","CurrencyPrecision","LinkCollective","ExpenseInfoSidebar","balanceWithBlockedFunds","stats","valueInCents","color","DEFAULT","fontWeight","mb","notesPlaceholder","PrivateNoteLabel","ExpenseNotesForm","hideLabel","formatAccountName","INVITE","VIRTUAL_CARD","Avatar","H4","CreatedByUserLink","PrivateInfoColumn","mx","flexBasis","borderless","PrivateInfoColumnHeader","textTransform","letterSpacing","lineHeight","PayeeTotalPayoutSumTooltip","currentYear","getFullYear","totalPaidInvoices","totalPaidReceipts","totalPaidGrants","isLoadingLoggedInUser","payeeStats","isCharge","isPaid","PAID","displayedHost","VENDOR","website","virtualCard","last4","overflow","useMutation","useRouter","getDateFromValue","i18nGraphqlException","RecurringExpenseIntervals","RecurringIntervalOptions","getCollectivePageRoute","StyledModal","ModalBody","ModalFooter","ModalHeader","TOAST_TYPE","useToasts","deleteExpenseMutation","ExpenseRecurringEditModal","onClose","deleteExpense","addToast","router","handleDeletion","SUCCESS","interval","endsAt","isEditModalOpen","setEditModal","Check","ChevronDown","IconDownload","Edit","IconEdit","Flag","FlagIcon","Link","IconLink","margin","useClipboard","PopupMenu","MarkExpenseAsIncompleteModal","Action","button","ExpenseMoreActionsButton","onError","onEdit","linkAction","showMarkAsIncompleteModal","setMarkAsIncompleteModal","isCopied","copy","permissions","setOpen","canMarkAsIncomplete","canEdit","canSeeInvoiceInfo","legacyId","href","FormattedDate","AmountWithExchangeRateInfo","DEFAULT_AMOUNT_STYLES","Tags","H1","ExpenseStatusTag","ProcessExpenseButtons","hasProcessButtons","SummaryHeader","ExpenseSummary","isEditing","canEditTags","suggestedTags","showProcessButtons","onDelete","existsInAPI","createdByAccount","requestedByAccount","expenseItems","expenseTaxes","isMultiCurrency","amountInAccountCurrency","requiredLegalDocuments","isAdmin","date","createdAt","MobileCollectiveInfoStickyBar","useQuery","Info","useFormikContext","formatCurrency","I18nSupportLink","formatStringOptions","strings","s","formatTransferWiseSelectOptions","TW_API_COLLECTIVE_SLUG","process","env","requiredFieldsQuery","CUSTOM_METHOD_LABEL_BY_CURRENCY","USD","aba","swift_code","Input","input","refetch","isAccountHolderName","validationRegexp","RegExp","test","validationError","hint","inputValue","example","valuesAllowed","c","refreshRequirementsOnChange","accountDetails","FieldGroup","group","DetailsForm","OC_ENV","transactionTypeValues","rf","availableMethods","method","every","g","otherFields","transactionMethodFieldName","transactionMethod","availableCurrenciesQuery","fixedCurrency","ignoreBlockedCurrencies","optional","skip","wiseHost","currencies","unshift","currencyFieldName","selectedCurrency","validateCurrencyMinimumAmount","invoiceTotalAmount","reduce","minAmountForSelectedCurrency","minInvoiceAmount","ChevronUp","space","CollapseBtn","marginTop","py","Separator","hr","EntryContainer","withNewButtons","withBorderLeft","titleProps","I18nFormatters","uploadImageWithXHR","allSettled","invalidFiles","getUploadProgress","uploadProgressList","totalUploadProgress","total","Math","trunc","setUploading","setUploadProgressList","acceptedFiles","rejectedFiles","filesToUpload","mockImage","onProgress","progress","newProgressList","results","successes","failures","forEach","result","fileInfo","reason","baseMsg","errorMsg","ref"],"sourceRoot":""}