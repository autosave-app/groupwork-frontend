{"version":3,"file":"static/chunks/4691-c25020e80df7f233.js","mappings":"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","sources":["webpack://_N_E/./components/CollectivePickerAsync.js","webpack://_N_E/./components/StyledInputGroup.js","webpack://_N_E/./components/onboarding-modal/OnboardingProfileCard.js","webpack://_N_E/./lib/i18n/collective-type.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLazyQuery } from '@apollo/client';\nimport { debounce } from 'lodash';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport { CollectiveType } from '../lib/constants/collectives';\nimport { gqlV1 } from '../lib/graphql/helpers';\nimport formatCollectiveType from '../lib/i18n/collective-type';\n\nimport CollectivePicker from './CollectivePicker';\n\nconst collectivePickerSearchQuery = gqlV1/* GraphQL */ `\n  query CollectivePickerSearchQuery(\n    $term: String!\n    $types: [TypeOfCollective]\n    $limit: Int\n    $hostCollectiveIds: [Int]\n    $parentCollectiveIds: [Int]\n    $skipGuests: Boolean\n    $includeArchived: Boolean\n  ) {\n    search(\n      term: $term\n      types: $types\n      limit: $limit\n      hostCollectiveIds: $hostCollectiveIds\n      parentCollectiveIds: $parentCollectiveIds\n      skipGuests: $skipGuests\n      includeArchived: $includeArchived\n    ) {\n      id\n      collectives {\n        id\n        type\n        slug\n        name\n        currency\n        location {\n          id\n          address\n          country\n        }\n        imageUrl(height: 64)\n        hostFeePercent\n        isActive\n        isArchived\n        isHost\n        isTrustedHost\n        isTwoFactorAuthEnabled\n      }\n    }\n  }\n`;\n\n/** Throttle search function to limit invocations while typing */\nconst throttledSearch = debounce((searchFunc, variables) => {\n  return searchFunc({ variables });\n}, 750);\n\nconst Messages = defineMessages({\n  searchForType: {\n    id: 'SearchFor',\n    defaultMessage: 'Search for {entity}',\n  },\n  // eslint-disable-next-line camelcase\n  searchForType_2: {\n    id: 'SearchFor2',\n    defaultMessage: 'Search for {entity1} or {entity2}',\n  },\n  // eslint-disable-next-line camelcase\n  searchForType_3: {\n    id: 'SearchFor3',\n    defaultMessage: 'Search for {entity1}, {entity2} or {entity3}',\n  },\n  search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n  searchForUsers: {\n    defaultMessage: 'Search for Users by name or email',\n  },\n});\n\n/**\n * If a single type is selected, will return a label like: `Search for users`\n * Otherwise it just returns `Search`\n */\nconst getPlaceholder = (intl, types) => {\n  const nbTypes = types ? types.length : 0;\n  if (nbTypes === 0 || nbTypes > 3) {\n    return intl.formatMessage(Messages.search);\n  } else if (nbTypes === 1) {\n    if (types[0] === CollectiveType.USER) {\n      return intl.formatMessage(Messages.searchForUsers);\n    } else {\n      return intl.formatMessage(Messages.searchForType, { entity: formatCollectiveType(intl, types[0], 100) });\n    }\n  } else {\n    // Format by passing a map of entities like { entity1: 'Collectives' }\n    return intl.formatMessage(\n      Messages[`searchForType_${nbTypes}`],\n      types.reduce((i18nParams, type, index) => {\n        i18nParams[`entity${index + 1}`] = formatCollectiveType(intl, type, 100);\n        return i18nParams;\n      }, {}),\n    );\n  }\n};\n\n/**\n * A specialization of `CollectivePicker` that fetches the data based on user search.\n */\nconst CollectivePickerAsync = ({\n  inputId,\n  types = undefined,\n  limit = 20,\n  hostCollectiveIds = undefined,\n  parentCollectiveIds = undefined,\n  preload = false,\n  filterResults = undefined,\n  searchQuery = collectivePickerSearchQuery,\n  invitable = false,\n  emptyCustomOptions = [],\n  noCache = false,\n  isLoading = false,\n  skipGuests = true,\n  includeArchived = false,\n  ...props\n}) => {\n  const fetchPolicy = noCache ? 'network-only' : undefined;\n  const [searchCollectives, { loading, data }] = useLazyQuery(searchQuery, { fetchPolicy });\n  const [term, setTerm] = React.useState(null);\n  const intl = useIntl();\n  const collectives = ((term || preload) && data?.search?.collectives) || [];\n  const filteredCollectives = filterResults ? filterResults(collectives) : collectives;\n  const placeholder = getPlaceholder(intl, types);\n\n  // If preload is true, trigger a first query on mount or when one of the query param changes\n  React.useEffect(() => {\n    if (term || preload) {\n      throttledSearch(searchCollectives, {\n        term: term || '',\n        types,\n        limit,\n        hostCollectiveIds,\n        parentCollectiveIds,\n        skipGuests,\n        includeArchived,\n      });\n    }\n  }, [types, limit, hostCollectiveIds, parentCollectiveIds, term]);\n\n  return (\n    <CollectivePicker\n      inputId={inputId}\n      isLoading={Boolean(loading || isLoading)}\n      collectives={filteredCollectives}\n      groupByType={!types || types.length > 1}\n      filterOption={() => true /** Filtering is done by the API */}\n      sortFunc={collectives => collectives /** Already sorted by the API */}\n      placeholder={placeholder}\n      types={types}\n      useSearchIcon={true}\n      isSearchable\n      // Only displays the invite option if no results were found:\n      invitable={invitable}\n      onInputChange={newTerm => {\n        setTerm(newTerm.trim());\n      }}\n      customOptions={!term ? emptyCustomOptions : []}\n      {...props}\n    />\n  );\n};\n\nCollectivePickerAsync.propTypes = {\n  ...CollectivePicker.propTypes,\n  /** The id of the search input */\n  inputId: PropTypes.string.isRequired,\n  /** The types of collectives to retrieve */\n  types: PropTypes.arrayOf(PropTypes.oneOf(Object.values(CollectiveType))),\n  /** Whether we should group collectives by type. By default, this is true when there's more than one type */\n  groupByType: PropTypes.bool,\n  /** Max number of collectives displayed at the same time */\n  limit: PropTypes.number,\n  /** If set, only the collectives under this host will be retrieved */\n  hostCollectiveIds: PropTypes.arrayOf(PropTypes.number),\n  /** If set, only the collectives under this parent collective will be retrieved */\n  parentCollectiveIds: PropTypes.arrayOf(PropTypes.number),\n  /** If true, a query will be triggered even if search is empty */\n  preload: PropTypes.bool,\n  /** If true, results won't be cached (Apollo \"network-only\" mode) */\n  noCache: PropTypes.bool,\n  /** Query to use for the search. Override to add custom fields */\n  searchQuery: PropTypes.any.isRequired,\n  /** Custom options that are displayed when the field is empty */\n  emptyCustomOptions: PropTypes.any,\n  /** Function to filter results returned by the API */\n  filterResults: PropTypes.func,\n  /** If true, a permanent option to create a collective will be displayed in the select */\n  creatable: PropTypes.bool,\n  /** If true, a permanent option to invite a new user will be displayed in the select */\n  invitable: PropTypes.bool,\n  skipGuests: PropTypes.bool,\n  onInvite: PropTypes.func,\n  /** Include archived collectives **/\n  includeArchived: PropTypes.bool,\n};\n\nexport default CollectivePickerAsync;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { themeGet } from '@styled-system/theme-get';\nimport { get } from 'lodash';\nimport styled from 'styled-components';\n\nimport Container from './Container';\nimport StyledInput from './StyledInput';\nimport { Span } from './Text';\n\nconst InputContainer = styled(Container)`\n  &:hover {\n    border-color: ${themeGet('colors.primary.300')};\n  }\n\n  &:focus-within {\n    border-color: ${themeGet('colors.primary.500')};\n  }\n\n  input {\n    border: none;\n    outline: none;\n    box-shadow: none;\n  }\n\n  input:focus ~ div svg {\n    color: ${themeGet('colors.primary.300')};\n  }\n`;\n\nconst getColor = ({ error, success }) => {\n  if (error) {\n    return 'red.300';\n  }\n\n  if (success) {\n    return 'green.300';\n  }\n\n  return 'black.800';\n};\n\nconst getBgColor = ({ error, focused, success }) => {\n  if (focused) {\n    return 'primary.100';\n  }\n\n  if (error) {\n    return 'red.100';\n  }\n\n  if (success) {\n    return 'green.100';\n  }\n\n  return 'black.50';\n};\n\nconst getBorderColor = ({ error, focused, success }) => {\n  if (focused) {\n    return 'primary.300';\n  }\n\n  if (error) {\n    return 'red.500';\n  }\n\n  if (success) {\n    return 'green.300';\n  }\n\n  return 'black.300';\n};\n\n/**\n * A styled input with a prepended or appended field element.\n * @see See [StyledInput](/#!/StyledInput) for details about props passed to it\n */\nconst StyledInputGroup = ({\n  append,\n  prepend,\n  disabled,\n  success,\n  error,\n  maxWidth,\n  containerProps,\n  prependProps,\n  appendProps,\n  innerRef,\n  autoFocus,\n  overflow,\n  ...inputProps\n}) => {\n  const [focused, setFocus] = useState(false);\n  return (\n    <React.Fragment>\n      <InputContainer\n        bg={disabled ? 'black.50' : 'white.full'}\n        maxWidth={maxWidth}\n        border=\"1px solid\"\n        borderColor={getBorderColor({ error, focused, success })}\n        borderRadius=\"4px\"\n        display=\"flex\"\n        alignItems=\"center\"\n        lineHeight=\"1.5\"\n        {...containerProps}\n      >\n        {prepend && (\n          <Container\n            fontSize=\"14px\"\n            borderRadius=\"4px 0 0 4px\"\n            p={2}\n            color={getColor({ error, success })}\n            maxHeight=\"100%\"\n            whiteSpace=\"nowrap\"\n            {...prependProps}\n            bg={(disabled && 'black.50') || get(prependProps, 'bg') || getBgColor({ error, focused, success })}\n          >\n            {prepend}\n          </Container>\n        )}\n        <StyledInput\n          bare\n          autoFocus={autoFocus}\n          color={getColor({ error, success })}\n          type=\"text\"\n          overflow={overflow || 'scroll'}\n          fontSize=\"14px\"\n          flex=\"1 1 auto\"\n          disabled={disabled}\n          py=\"0\"\n          px={2}\n          maxHeight=\"100%\"\n          error={error}\n          minWidth=\"0\"\n          width=\"100%\"\n          ref={innerRef}\n          {...inputProps}\n          onFocus={e => {\n            setFocus(true);\n            if (inputProps && inputProps.onFocus) {\n              inputProps.onFocus(e);\n            }\n          }}\n          onBlur={e => {\n            setFocus(false);\n            if (inputProps && inputProps.onBlur) {\n              inputProps.onBlur(e);\n            }\n          }}\n        />\n        {append && (\n          <Container\n            borderRadius=\"4px 0 0 4px\"\n            p={2}\n            color={getColor({ error, success })}\n            fontSize=\"14px\"\n            {...appendProps}\n            bg={getBgColor({ error, focused, success })}\n          >\n            {append}\n          </Container>\n        )}\n      </InputContainer>\n      {Boolean(error) && typeof error !== 'boolean' && (\n        <Span display=\"block\" color=\"red.500\" pt={2} fontSize=\"10px\">\n          {error}\n        </Span>\n      )}\n    </React.Fragment>\n  );\n};\n\nStyledInputGroup.propTypes = {\n  /** Text shown after input */\n  append: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.element]),\n  /** Text shown before input */\n  prepend: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.element]),\n  /** Show disabled state for field */\n  disabled: PropTypes.bool,\n  /** Show error state for field, and a message error if given a string */\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  /** Show success state for field */\n  success: PropTypes.bool,\n  /** Passed to internal StyledInput */\n  type: PropTypes.string,\n  /** Props passed to the `InputContainer` */\n  containerProps: PropTypes.object,\n  /** Props passed to the prepend `Container` */\n  prependProps: PropTypes.object,\n  /** Props passed to the append `Container` */\n  appendProps: PropTypes.object,\n  /** Max Width */\n  maxWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** Whether to auto focus this element **/\n  autoFocus: PropTypes.bool,\n  /** Specifies what should happen if content overflows an element's box **/\n  overflow: PropTypes.string,\n  innerRef: PropTypes.any,\n};\n\nexport default StyledInputGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport Avatar from '../../components/Avatar';\nimport StyledTag from '../../components/StyledTag';\n\nimport { Box, Flex } from '../Grid';\nimport StyledTooltip from '../StyledTooltip';\n\nconst Admin = styled(StyledTag).attrs({ variant: 'rounded-right' })``;\n\nclass OnboardingProfileCard extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object,\n    adminCollective: PropTypes.object,\n    removeAdmin: PropTypes.func,\n    isPending: PropTypes.bool,\n  };\n\n  render() {\n    const { collective, removeAdmin, isPending } = this.props;\n    const { name } = collective;\n\n    const content = (\n      <Admin\n        closeButtonProps={\n          removeAdmin\n            ? {\n                onClick: () => {\n                  removeAdmin(collective);\n                },\n              }\n            : null\n        }\n        data-cy=\"remove-user\"\n      >\n        <Flex alignItems=\"center\">\n          <Avatar radius={16} collective={collective} />\n          <Box fontSize=\"12px\" ml={2} data-cy=\"name-of-admins\">\n            {name}\n          </Box>\n        </Flex>\n      </Admin>\n    );\n\n    return (\n      <Flex my={1} mr={2}>\n        {isPending ? (\n          <StyledTooltip\n            content={() => <FormattedMessage id=\"onboarding.admins.pending\" defaultMessage=\"Pending approval\" />}\n          >\n            {content}\n          </StyledTooltip>\n        ) : (\n          content\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default OnboardingProfileCard;\n","import { defineMessages } from 'react-intl';\n\nimport { CollectiveType } from '../constants/collectives';\n\nconst TypesI18n = defineMessages({\n  [CollectiveType.ORGANIZATION]: {\n    id: 'CollectiveType.Organization',\n    defaultMessage: '{count, plural, one {Organization} other {Organizations}}',\n  },\n  [CollectiveType.USER]: {\n    id: 'CollectiveType.User',\n    defaultMessage: '{count, plural, one {User} other {Users}}',\n  },\n  [CollectiveType.COLLECTIVE]: {\n    id: 'CollectiveType.Collective',\n    defaultMessage: '{count, plural, one {Collective} other {Collectives}}',\n  },\n  [CollectiveType.EVENT]: {\n    id: 'CollectiveType.Event',\n    defaultMessage: '{count, plural, one {Event} other {Events}}',\n  },\n  [CollectiveType.PROJECT]: {\n    id: 'CollectiveType.Project',\n    defaultMessage: '{count, plural, one {Project} other {Projects}}',\n  },\n  [CollectiveType.FUND]: {\n    id: 'CollectiveType.Fund',\n    defaultMessage: '{count, plural, one {Fund} other {Funds}}',\n  },\n});\n\n/**\n * Translate a member role\n *\n * @param {object} `intl` - see `injectIntl`\n * @param {string} `type`\n */\nconst formatCollectiveType = (intl, type, count = 1) => {\n  const i18nMsg = TypesI18n[type];\n  return i18nMsg ? intl.formatMessage(i18nMsg, { count }) : type;\n};\n\nexport default formatCollectiveType;\n"],"names":["React","useLazyQuery","defineMessages","useIntl","CollectiveType","gqlV1","formatCollectiveType","CollectivePicker","collectivePickerSearchQuery","throttledSearch","searchFunc","variables","Messages","searchForType","id","defaultMessage","searchForType_2","searchForType_3","search","searchForUsers","getPlaceholder","intl","types","nbTypes","length","formatMessage","USER","entity","reduce","i18nParams","type","index","CollectivePickerAsync","inputId","undefined","limit","hostCollectiveIds","parentCollectiveIds","preload","filterResults","searchQuery","invitable","emptyCustomOptions","noCache","isLoading","skipGuests","includeArchived","props","fetchPolicy","searchCollectives","loading","data","useState","term","setTerm","collectives","filteredCollectives","placeholder","useEffect","Boolean","newTerm","trim","themeGet","styled","Container","StyledInput","Span","InputContainer","getColor","error","success","getBgColor","focused","getBorderColor","StyledInputGroup","append","prepend","disabled","maxWidth","containerProps","prependProps","appendProps","innerRef","autoFocus","overflow","inputProps","setFocus","e","onFocus","onBlur","FormattedMessage","Avatar","StyledTag","Box","Flex","StyledTooltip","Admin","attrs","variant","OnboardingProfileCard","collective","removeAdmin","isPending","name","content","onClick","Component","TypesI18n","ORGANIZATION","COLLECTIVE","EVENT","PROJECT","FUND","count","i18nMsg"],"sourceRoot":""}