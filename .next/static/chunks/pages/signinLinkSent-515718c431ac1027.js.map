{"version":3,"file":"static/chunks/pages/signinLinkSent-515718c431ac1027.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@styled-icons/boxicons-regular/Support/Support.esm.js","webpack://_N_E/./node_modules/@styled-icons/fa-solid/Redo/Redo.esm.js","webpack://_N_E/./components/OpenEmailProviderButton.js","webpack://_N_E/./pages/signinLinkSent.js","webpack://_N_E/?8ce4"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Support = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 2C6.486 2 2 6.486 2 12v4.143C2 17.167 2.897 18 4 18h1a1 1 0 0 0 1-1v-5.143a1 1 0 0 0-1-1h-.908C4.648 6.987 7.978 4 12 4s7.352 2.987 7.908 6.857H19a1 1 0 0 0-1 1V18c0 1.103-.897 2-2 2h-2v-1h-4v3h6c2.206 0 4-1.794 4-4 1.103 0 2-.833 2-1.857V12c0-5.514-4.486-10-10-10z\"\n  }));\n});\nSupport.displayName = 'Support';\nexport var SupportDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var Redo = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 512 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M386.3 160H336c-17.7 0-32 14.3-32 32s14.3 32 32 32h128c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32s-32 14.3-32 32v51.2l-17.6-17.6c-87.5-87.5-229.3-87.5-316.8 0s-87.5 229.3 0 316.8 229.3 87.5 316.8 0c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0c-62.5 62.5-163.8 62.5-226.3 0s-62.5-163.8 0-226.3 163.8-62.5 226.3 0l17.2 17.2z\"\n  }));\n});\nRedo.displayName = 'Redo';\nexport var RedoDimensions = {\n  height: 512,\n  width: 512\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Container from './Container';\nimport StyledLink from './StyledLink';\n\n/** Returns info about email's provider, or null if unknown provider */\nconst getProvider = email => {\n  const providers = [\n    {\n      name: 'Gmail',\n      regexp: /@gmail\\.com$/,\n      link: 'https://mail.google.com/mail/u/2/#advanced-search/subject=Open+Collective%3A+Sign+In&amp;subset=all&amp;within=2d',\n    },\n    {\n      name: 'Outlook',\n      regexp: /@(outlook|hotmail)\\.(.+)$/,\n      link: 'https://outlook.live.com/mail/inbox',\n    },\n  ];\n\n  return providers.find(provider => provider.regexp.test(email));\n};\n\n/**\n * If email is recognized as a known provider (GMail/Hotmail), a button will be displayed\n * with a link to directly open user's inbox. Otherwise, this will return null;\n */\nconst OpenEmailProviderButton = ({ email, children }) => {\n  const provider = getProvider(email);\n  return !provider\n    ? null\n    : children(\n        <Container mt=\"24px\" mb=\"24px\">\n          <StyledLink data-cy=\"open-inbox-link\" href={provider.link}>\n            <FormattedMessage defaultMessage=\"Go to your mail\" />\n          </StyledLink>\n        </Container>,\n      );\n};\n\nOpenEmailProviderButton.propTypes = {\n  email: PropTypes.string,\n  /** Called with the button component if email is recognized */\n  children: PropTypes.func.isRequired,\n};\nexport default OpenEmailProviderButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { isEmail } from 'validator';\n\nimport Container from '../components/Container';\nimport { Box } from '../components/Grid';\nimport { getI18nLink } from '../components/I18nFormatters';\nimport Image from '../components/Image';\nimport OpenEmailProviderButton from '../components/OpenEmailProviderButton';\nimport Page from '../components/Page';\nimport { P } from '../components/Text';\n\nclass SignInLinkSent extends Component {\n  static async getInitialProps({ res, query = {}, router }) {\n    if (query.email) {\n      return { email: query.email };\n    }\n\n    if (res) {\n      res.statusCode = 302;\n      res.setHeader('Location', '/signin');\n      res.end();\n    } else {\n      router.push('/signin');\n    }\n    return {};\n  }\n\n  render() {\n    const { email } = this.props;\n    const isValidEmail = email && isEmail(email);\n    return (\n      <Page title=\"Login Link Sent\" noRobots showFooter={false}>\n        <Container pt={[4, 5]} pb={6} px={3} textAlign=\"center\">\n          <Image src=\"/static/images/sign-in-illustration.png\" width=\"624px\" height=\"372px\" />\n          <P fontSize=\"32px\" lineHeight=\"40px\" fontWeight={700} color=\"black.900\">\n            <FormattedMessage id=\"SignIn.LinkSent\" defaultMessage=\"Your magic link is on its way!\" />\n          </P>\n          {isValidEmail && (\n            <P fontSize=\"20px\" lineHeight=\"28px\" color=\"black.800\" fontWeight={500} mt={4}>\n              <FormattedMessage\n                defaultMessage=\"We've sent it to {email}\"\n                values={{ email: <strong>{email}</strong> }}\n              />\n            </P>\n          )}\n          <OpenEmailProviderButton email={email}>{button => <Box mt={3}>{button}</Box>}</OpenEmailProviderButton>\n          <P color=\"black.800\" fontSize=\"16px\" fontWeight={500} lineHeight=\"24px\" my={4}>\n            <FormattedMessage\n              id=\"SignIn.SuccessDetails\"\n              defaultMessage=\"Youâ€™ll be redirected from the link in the email, you can safely close this tab.\"\n            />\n            <br />\n            <FormattedMessage\n              id=\"signinLinkSent.\"\n              defaultMessage=\"<Link>Learn more</Link> about our login system.\"\n              values={{\n                Link: getI18nLink({\n                  href: 'https://docs.opencollective.com/help/product/log-in-system',\n                  openInNewTab: true,\n                }),\n              }}\n            />\n          </P>\n        </Container>\n      </Page>\n    );\n  }\n}\n\nSignInLinkSent.propTypes = {\n  email: PropTypes.string.isRequired,\n};\n\nexport default SignInLinkSent;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/signinLinkSent\",\n      function () {\n        return require(\"private-next-pages/signinLinkSent.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/signinLinkSent\"])\n      });\n    }\n  "],"names":["React","FormattedMessage","Container","StyledLink","getProvider","email","providers","name","regexp","link","find","provider","test","OpenEmailProviderButton","children","Component","isEmail","Box","getI18nLink","Image","Page","P","SignInLinkSent","props","isValidEmail","button","Link","href","openInNewTab","res","query","router","statusCode","setHeader","end","push"],"sourceRoot":""}