{"version":3,"file":"static/chunks/pages/update-52cbbaaf9cf70a28.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;IAEMwB;;;;;;;;;;;;;;;;2WAmBI;MAAEC,eAAe,EAAE;IAAnB;;oXA2BS,UAAAC,OAAO,EAAI;MAC1B;MACA,4BAAiC,MAAKC,uBAAL,EAAjC;MAAA;MAAA,IAAOC,IAAP;MAAA,IAAaC,KAAb;MAAA,IAAoBC,SAApB;;MACA,sDAAOF,IAAP,EAAa,uBAAb,EAAsC,UAAAG,QAAQ;QAAA,OAAI,0OAAWA,QAAX,IAAqBL,OAArB,IAA+B,IAA/B,CAAJ;MAAA,CAA9C;;MACA,sDAAOE,IAAP,EAAa,4BAAb,EAA2C,UAAAI,UAAU;QAAA,OAAIA,UAAU,GAAG,CAAjB;MAAA,CAArD;;MACA,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,UAAlB,CAA6B;QAAEN,KAAK,EAALA,KAAF;QAASC,SAAS,EAATA,SAAT;QAAoBF,IAAI,EAAJA;MAApB,CAA7B;IACD;;sXAEkB,UAAAF,OAAO,EAAI;MAC5B,6BAAiC,MAAKC,uBAAL,EAAjC;MAAA;MAAA,IAAOC,IAAP;MAAA,IAAaC,KAAb;MAAA,IAAoBC,SAApB;;MACA,sDAAOF,IAAP,EAAa,uBAAb,EAAsC,UAAAG,QAAQ;QAAA,OAAIA,QAAQ,CAACK,MAAT,CAAgB,UAAAC,CAAC;UAAA,OAAIA,CAAC,CAACC,EAAF,KAASZ,OAAO,CAACY,EAArB;QAAA,CAAjB,CAAJ;MAAA,CAA9C;;MACA,sDAAOV,IAAP,EAAa,4BAAb,EAA2C,UAAAI,UAAU;QAAA,OAAIA,UAAU,GAAG,CAAjB;MAAA,CAArD;;MACA,MAAKC,KAAL,CAAWC,MAAX,CAAkBC,UAAlB,CAA6B;QAAEN,KAAK,EAALA,KAAF;QAASC,SAAS,EAATA,SAAT;QAAoBF,IAAI,EAAJA;MAApB,CAA7B;IACD;;2tBAEW;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA,cACmC,MAAKK,KADxC,EACFM,cADE,eACFA,cADE,EACcC,UADd,eACcA,UADd,EAC0BZ,IAD1B,eAC0BA,IAD1B,EAGV;;cAHU;cAAA,OAIJA,IAAI,CAACa,OAAL,EAJI;;YAAA;cAAA;cAAA,OAKJb,IAAI,CAACc,SAAL,CAAe;gBACnBZ,SAAS,EAAE;kBAAES,cAAc,EAAdA,cAAF;kBAAkBC,UAAU,EAAVA,UAAlB;kBAA8BG,MAAM,EAAE,mDAAIf,IAAJ,EAAU,uBAAV,EAAmC,EAAnC,EAAuCgB;gBAA7E,CADQ;gBAEnBC,WAAW,EAAE,qBAACC,IAAD,SAA+B;kBAAA,IAAtBC,eAAsB,SAAtBA,eAAsB;;kBAC1C,IAAI,CAACA,eAAL,EAAsB;oBACpB,OAAOD,IAAP;kBACD;;kBAED,IAAME,SAAS,GAAG,EAAlB;kBAEAA,SAAS,CAACC,MAAV,mCACKH,IAAI,CAACG,MADV;oBAEElB,QAAQ,kCACHgB,eAAe,CAACE,MAAhB,CAAuBlB,QADpB;sBAENmB,KAAK,sLAAMJ,IAAI,CAACG,MAAL,CAAYlB,QAAZ,CAAqBmB,KAA3B,6KAAqCH,eAAe,CAACE,MAAhB,CAAuBlB,QAAvB,CAAgCmB,KAArE;oBAFC;kBAFV;kBAQA,OAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,IAAlB,EAAwBE,SAAxB,CAAP;gBACD;cAlBkB,CAAf,CALI;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;;;;;;WAxCZ,6BAAoB;MAClB,mBAAqC,KAAKf,KAA1C;MAAA,IAAQoB,MAAR,gBAAQA,MAAR;MAAA,IAAgBzB,IAAhB,gBAAgBA,IAAhB;MAAA,IAAsBY,UAAtB,gBAAsBA,UAAtB;MACA,IAAMc,OAAO,GAAG1B,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAE0B,OAAtB;MACA/C,oFAAuB,CAAC8C,MAAD,EAASC,OAAT,qBAA8Bd,UAA9B,EAAvB;IACD;;;;+XAED,kBAAyBe,QAAzB;QAAA;UAAA;YAAA;cAAA;gBAAA,MAEMA,QAAQ,CAACC,YAAT,KAA0B,KAAKvB,KAAL,CAAWuB,YAArC,IAAqD,CAAC,KAAKC,KAAL,CAAWhC,eAFvE;kBAAA;kBAAA;gBAAA;;gBAGI,KAAKiC,QAAL,CAAc;kBAAEjC,eAAe,EAAE;gBAAnB,CAAd;gBAHJ;gBAAA;gBAAA,OAKY,KAAKQ,KAAL,CAAWL,IAAX,CAAgBa,OAAhB,EALZ;;cAAA;gBAAA;gBAOM,KAAKiB,QAAL,CAAc;kBAAEjC,eAAe,EAAE;gBAAnB,CAAd;gBAPN;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;;;;;;;;;WAYA,mCAA0B;MACxB,mBAA+C,KAAKQ,KAApD;MAAA,IAAQC,MAAR,gBAAQA,MAAR;MAAA,IAAgBM,UAAhB,gBAAgBA,UAAhB;MAAA,IAA4BD,cAA5B,gBAA4BA,cAA5B;MACA,IAAMT,SAAS,GAAG;QAAES,cAAc,EAAdA,cAAF;QAAkBC,UAAU,EAAVA;MAAlB,CAAlB;;MACA,IAAMZ,IAAI,GAAG,yDAAUM,MAAM,CAACyB,SAAP,CAAiB;QAAE9B,KAAK,EAAEgB,WAAT;QAAsBf,SAAS,EAATA;MAAtB,CAAjB,CAAV,CAAb;;MACA,OAAO,CAACF,IAAD,EAAOiB,WAAP,EAAoBf,SAApB,CAAP;IACD;;;WA4CD,kBAAS;MACP,mBAA+B,KAAKG,KAApC;MAAA,IAAQL,IAAR,gBAAQA,IAAR;MAAA,IAAc4B,YAAd,gBAAcA,YAAd;;MAEA,IAAI,EAAC5B,IAAD,aAACA,IAAD,eAACA,IAAI,CAAE0B,OAAP,CAAJ,EAAoB;QAClB,oBAAO,wDAAC,uEAAD;UAAW,IAAI,EAAE1B;QAAjB,EAAP;MACD,CAFD,MAEO,IAAI,CAACA,IAAI,CAACqB,MAAV,EAAkB;QACvB,oBAAO,wDAAC,uEAAD;UAAW,KAAK,EAAE;YAAEW,IAAI,EAAEvD,6EAAewD;UAAvB;QAAlB,EAAP;MACD;;MAED,IAAQP,OAAR,GAA4B1B,IAA5B,CAAQ0B,OAAR;MAAA,IAAiBL,MAAjB,GAA4BrB,IAA5B,CAAiBqB,MAAjB;;MACA,IAAMlB,QAAQ,GAAG,mDAAIkB,MAAJ,EAAY,gBAAZ,EAA8B,EAA9B,CAAjB;;MACA,IAAMa,kBAAkB,GAAG,mDAAIb,MAAJ,EAAY,qBAAZ,EAAmC,CAAnC,CAA3B;;MACA,IAAMT,UAAU,GAAG,CAAAS,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEc,IAAR,KAAgB,KAAK9B,KAAL,CAAWO,UAA9C;MACA,oBACE,yDAAC,kEAAD;QACE,UAAU,EAAEc,OADd;QAEE,KAAK,EAAEL,MAAM,CAACe,KAFhB;QAGE,WAAW,EAAEvD,gEAAS,CAACwC,MAAM,CAACgB,OAAR,CAHxB;QAIE,YAAY,YAAKzD,0FAA6B,CAAC8C,OAAD,CAAlC,sBAAuDd,UAAvD,CAJd;QAKE,SAAS,YAAKS,MAAM,CAACe,KAAZ,gBAAuBV,OAAO,CAACY,IAA/B,CALX;QAAA,wBAOE,wDAAC,+EAAD;UACE,UAAU,EAAEZ,OADd;UAEE,OAAO,EAAEE,YAAY,IAAIA,YAAY,CAACW,mBAAb,CAAiCb,OAAjC,CAF3B;UAGE,gBAAgB,EAAE3C,gHAAyByD;QAH7C,EAPF,eAaE,yDAAC,uEAAD;UAAW,EAAE,EAAE,CAAf;UAAkB,QAAQ,EAAE,IAA5B;UAAkC,CAAC,EAAC,QAApC;UAA6C,EAAE,EAAE,CAAC,CAAD,EAAI,IAAJ,EAAU,IAAV,EAAgB,CAAhB,CAAjD;UAAA,wBACE,wDAAC,0EAAD;YAEE,UAAU,EAAEd,OAFd;YAGE,MAAM,EAAEL,MAHV;YAIE,QAAQ,EAAEoB,OAAO,CAACb,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAEW,mBAAd,CAAkCb,OAAlC,CAAD,CAJnB;YAKE,YAAY,EAAEE,YALhB;YAME,OAAO,EAAE,KANX;YAOE,SAAS,EAAEP,MAAM,CAACqB,SAPpB;YAQE,eAAe,EAAE,KAAKb,KAAL,CAAWhC;UAR9B,GACOwB,MAAM,CAACX,EADd,CADF,EAWGW,MAAM,CAACsB,gBAAP,iBACC,yDAAC,4DAAD;YAAK,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAT;YAAA,WACGxC,QAAQ,CAACa,MAAT,GAAkB,CAAlB,iBACC,wDAAC,uEAAD;cAAW,EAAE,EAAE,CAAf;cAAkB,EAAE,EAAE,CAAtB;cAAyB,QAAQ,EAAE,GAAnC;cAAwC,SAAS,EAAC,gBAAlD;cAAA,uBACE,wDAAC,kFAAD;gBACE,UAAU,EAAEU,OADd;gBAEE,OAAO,EAAEvB,QAAQ,CAACa,MAAT,GAAkBkB,kBAF7B;gBAGE,SAAS,EAAE,KAAKpB,SAHlB;gBAIE,KAAK,EAAEX,QAJT;gBAKE,gBAAgB,EAAE,KAAKyC;cALzB;YADF,EAFJ,EAYGvB,MAAM,CAACwB,WAAP,iBACC,yDAAC,6DAAD;cAAM,EAAE,EAAC,MAAT;cAAgB,QAAQ,EAAE,GAA1B;cAAA,wBACE,wDAAC,4DAAD;gBAAK,OAAO,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,OAAf,CAAd;gBAAuC,IAAI,EAAC,KAA5C;gBAAkD,CAAC,EAAE,CAArD;gBAAA,uBACE,wDAAC,+EAAD;kBAAa,IAAI,EAAE,EAAnB;kBAAuB,KAAK,EAAC;gBAA7B;cADF,EADF,eAIE,wDAAC,4DAAD;gBAAK,IAAI,EAAC,KAAV;gBAAgB,QAAQ,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,mBAAb,CAA1B;gBAAA,uBACE,wDAAC,uFAAD;kBAAa,EAAE,EAAC,YAAhB;kBAA6B,QAAQ,EAAExB,MAAM,CAACX,EAA9C;kBAAkD,SAAS,EAAE,KAAKoC;gBAAlE;cADF,EAJF;YAAA,EAbJ;UAAA,EAZJ;QAAA,EAbF;MAAA,EADF;IAqDD;;;WAzJD,gCAAkE;MAAA,wBAAzC7C,KAAyC;MAAA,IAAhCU,cAAgC,eAAhCA,cAAgC;MAAA,IAAhBC,UAAgB,eAAhBA,UAAgB;MAChE,OAAO;QAAED,cAAc,EAAdA,cAAF;QAAkBC,UAAU,EAAVA;MAAlB,CAAP;IACD;;;;EAHsBxC;;AA6JzB,IAAM6C,WAAW,GAAG5C,qEAAH,yoDAgFbc,+FAhFa,EAiFbH,oHAjFa,CAAjB;AAoFA,IAAMgE,SAAS,GAAG1E,2EAAO,CAAC2C,WAAD,EAAc;EACrCgC,OAAO,EAAE;IACPC,OAAO,EAAExE,0EAAcA;EADhB;AAD4B,CAAd,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,+DAAeF,wDAAU,CAACmB,6EAAQ,CAACqD,SAAS,CAACzE,8EAAU,CAACqB,UAAD,CAAX,CAAV,CAAT,CAAzB;;;;;;;;AChRA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,KAA8B;AACrD;AACA;AACA,OAAO,KAAU,EAAE,EAId;AACL","sources":["webpack://_N_E/./pages/update.js","webpack://_N_E/?16ef"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from '@apollo/client';\nimport { graphql, withApollo } from '@apollo/client/react/hoc';\nimport { cloneDeep, get, uniqBy, update } from 'lodash';\nimport { withRouter } from 'next/router';\n\nimport { ERROR } from '../lib/errors';\nimport { API_V2_CONTEXT } from '../lib/graphql/helpers';\nimport { addParentToURLIfMissing, getCollectivePageCanonicalURL } from '../lib/url-helpers';\nimport { stripHTML } from '../lib/utils';\n\nimport CollectiveNavbar from '../components/collective-navbar';\nimport { NAVBAR_CATEGORIES } from '../components/collective-navbar/constants';\nimport { collectiveNavbarFieldsFragment } from '../components/collective-page/graphql/fragments';\nimport Container from '../components/Container';\nimport CommentForm from '../components/conversations/CommentForm';\nimport { commentFieldsFragment } from '../components/conversations/graphql';\nimport Thread from '../components/conversations/Thread';\nimport ErrorPage from '../components/ErrorPage';\nimport { Box, Flex } from '../components/Grid';\nimport CommentIcon from '../components/icons/CommentIcon';\nimport Page from '../components/Page';\nimport StyledUpdate from '../components/StyledUpdate';\nimport { withUser } from '../components/UserProvider';\n\nclass UpdatePage extends React.Component {\n  static getInitialProps({ query: { collectiveSlug, updateSlug } }) {\n    return { collectiveSlug, updateSlug };\n  }\n\n  static propTypes = {\n    collectiveSlug: PropTypes.string, // for addCollectiveNavbarData\n    updateSlug: PropTypes.string,\n    LoggedInUser: PropTypes.object, // from withUser\n    client: PropTypes.object, // from withApollo\n    router: PropTypes.object, // from withRouter\n    data: PropTypes.shape({\n      account: PropTypes.object,\n      update: PropTypes.object,\n      refetch: PropTypes.func,\n      fetchMore: PropTypes.func,\n    }).isRequired, // from withData\n  };\n\n  state = { isReloadingData: false };\n\n  componentDidMount() {\n    const { router, data, updateSlug } = this.props;\n    const account = data?.account;\n    addParentToURLIfMissing(router, account, `/updates/${updateSlug}`);\n  }\n\n  async componentDidUpdate(oldProps) {\n    // Refetch data when use logs in\n    if (oldProps.LoggedInUser !== this.props.LoggedInUser && !this.state.isReloadingData) {\n      this.setState({ isReloadingData: true });\n      try {\n        await this.props.data.refetch();\n      } finally {\n        this.setState({ isReloadingData: false });\n      }\n    }\n  }\n\n  clonePageQueryCacheData() {\n    const { client, updateSlug, collectiveSlug } = this.props;\n    const variables = { collectiveSlug, updateSlug };\n    const data = cloneDeep(client.readQuery({ query: updateQuery, variables }));\n    return [data, updateQuery, variables];\n  }\n\n  onCommentAdded = comment => {\n    // Add comment to cache if not already fetched\n    const [data, query, variables] = this.clonePageQueryCacheData();\n    update(data, 'update.comments.nodes', comments => uniqBy([...comments, comment], 'id'));\n    update(data, 'update.comments.totalCount', totalCount => totalCount + 1);\n    this.props.client.writeQuery({ query, variables, data });\n  };\n\n  onCommentDeleted = comment => {\n    const [data, query, variables] = this.clonePageQueryCacheData();\n    update(data, 'update.comments.nodes', comments => comments.filter(c => c.id !== comment.id));\n    update(data, 'update.comments.totalCount', totalCount => totalCount - 1);\n    this.props.client.writeQuery({ query, variables, data });\n  };\n\n  fetchMore = async () => {\n    const { collectiveSlug, updateSlug, data } = this.props;\n\n    // refetch before fetching more as comments added to the cache can change the offset\n    await data.refetch();\n    await data.fetchMore({\n      variables: { collectiveSlug, updateSlug, offset: get(data, 'update.comments.nodes', []).length },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) {\n          return prev;\n        }\n\n        const newValues = {};\n\n        newValues.update = {\n          ...prev.update,\n          comments: {\n            ...fetchMoreResult.update.comments,\n            nodes: [...prev.update.comments.nodes, ...fetchMoreResult.update.comments.nodes],\n          },\n        };\n\n        return Object.assign({}, prev, newValues);\n      },\n    });\n  };\n\n  render() {\n    const { data, LoggedInUser } = this.props;\n\n    if (!data?.account) {\n      return <ErrorPage data={data} />;\n    } else if (!data.update) {\n      return <ErrorPage error={{ type: ERROR.NOT_FOUND }} />;\n    }\n\n    const { account, update } = data;\n    const comments = get(update, 'comments.nodes', []);\n    const totalCommentsCount = get(update, 'comments.totalCount', 0);\n    const updateSlug = update?.slug || this.props.updateSlug;\n    return (\n      <Page\n        collective={account}\n        title={update.title}\n        description={stripHTML(update.summary)}\n        canonicalURL={`${getCollectivePageCanonicalURL(account)}/updates/${updateSlug}`}\n        metaTitle={`${update.title} - ${account.name}`}\n      >\n        <CollectiveNavbar\n          collective={account}\n          isAdmin={LoggedInUser && LoggedInUser.isAdminOfCollective(account)}\n          selectedCategory={NAVBAR_CATEGORIES.CONNECT}\n        />\n\n        <Container py={4} maxWidth={1260} m=\"0 auto\" px={[0, null, null, 4]}>\n          <StyledUpdate\n            key={update.id}\n            collective={account}\n            update={update}\n            editable={Boolean(LoggedInUser?.isAdminOfCollective(account))}\n            LoggedInUser={LoggedInUser}\n            compact={false}\n            reactions={update.reactions}\n            isReloadingData={this.state.isReloadingData}\n          />\n          {update.userCanSeeUpdate && (\n            <Box pl={[0, 5]}>\n              {comments.length > 0 && (\n                <Container mb={3} pt={3} maxWidth={700} borderTop=\"1px solid #eee\">\n                  <Thread\n                    collective={account}\n                    hasMore={comments.length < totalCommentsCount}\n                    fetchMore={this.fetchMore}\n                    items={comments}\n                    onCommentDeleted={this.onCommentDeleted}\n                  />\n                </Container>\n              )}\n              {update.publishedAt && (\n                <Flex mt=\"40px\" maxWidth={700}>\n                  <Box display={['none', null, 'block']} flex=\"0 0\" p={3}>\n                    <CommentIcon size={24} color=\"lightgrey\" />\n                  </Box>\n                  <Box flex=\"1 1\" maxWidth={[null, null, 'calc(100% - 56px)']}>\n                    <CommentForm id=\"new-update\" UpdateId={update.id} onSuccess={this.onCommentAdded} />\n                  </Box>\n                </Flex>\n              )}\n            </Box>\n          )}\n        </Container>\n      </Page>\n    );\n  }\n}\n\nconst updateQuery = gql`\n  query Update($collectiveSlug: String, $updateSlug: String!, $offset: Int) {\n    account(slug: $collectiveSlug, throwIfMissing: false) {\n      id\n      legacyId\n      slug\n      name\n      type\n      description\n      settings\n      imageUrl\n      isFrozen\n      twitterHandle\n      ... on AccountWithHost {\n        host {\n          id\n          slug\n          name\n          features {\n            id\n            CONTACT_FORM\n          }\n        }\n      }\n      features {\n        id\n        ...NavbarFields\n      }\n      conversationsTags {\n        id\n        tag\n      }\n      ... on Collective {\n        isApproved\n      }\n      type\n      ... on AccountWithParent {\n        parent {\n          id\n          slug\n        }\n      }\n    }\n    update(slug: $updateSlug, account: { slug: $collectiveSlug }) {\n      id\n      slug\n      title\n      createdAt\n      publishedAt\n      html\n      summary\n      isPrivate\n      isChangelog\n      makePublicOn\n      userCanSeeUpdate\n      userCanPublishUpdate\n      reactions\n      userReactions\n      account {\n        id\n        slug\n        type\n        name\n        isHost\n      }\n      fromAccount {\n        id\n        slug\n        type\n        name\n      }\n      comments(limit: 100, offset: $offset) {\n        totalCount\n        nodes {\n          id\n          ...CommentFields\n        }\n      }\n    }\n  }\n  ${commentFieldsFragment}\n  ${collectiveNavbarFieldsFragment}\n`;\n\nconst getUpdate = graphql(updateQuery, {\n  options: {\n    context: API_V2_CONTEXT,\n  },\n});\n\nexport default withRouter(withUser(getUpdate(withApollo(UpdatePage))));\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/update\",\n      function () {\n        return require(\"private-next-pages/update.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/update\"])\n      });\n    }\n  "],"names":["React","gql","graphql","withApollo","withRouter","ERROR","API_V2_CONTEXT","addParentToURLIfMissing","getCollectivePageCanonicalURL","stripHTML","CollectiveNavbar","NAVBAR_CATEGORIES","collectiveNavbarFieldsFragment","Container","CommentForm","commentFieldsFragment","Thread","ErrorPage","Box","Flex","CommentIcon","Page","StyledUpdate","withUser","UpdatePage","isReloadingData","comment","clonePageQueryCacheData","data","query","variables","comments","totalCount","props","client","writeQuery","filter","c","id","collectiveSlug","updateSlug","refetch","fetchMore","offset","length","updateQuery","prev","fetchMoreResult","newValues","update","nodes","Object","assign","router","account","oldProps","LoggedInUser","state","setState","readQuery","type","NOT_FOUND","totalCommentsCount","slug","title","summary","name","isAdminOfCollective","CONNECT","Boolean","reactions","userCanSeeUpdate","onCommentDeleted","publishedAt","onCommentAdded","Component","getUpdate","options","context"],"sourceRoot":""}