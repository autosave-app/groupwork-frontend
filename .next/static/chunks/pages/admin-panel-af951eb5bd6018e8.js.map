{"version":3,"file":"static/chunks/pages/admin-panel-af951eb5bd6018e8.js","mappings":"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","sources":["webpack://_N_E/./components/CollectiveCard.js","webpack://_N_E/./components/Currency.js","webpack://_N_E/./components/Error.js","webpack://_N_E/./components/FormattedMoneyAmount.js","webpack://_N_E/./components/GoalsCover.js","webpack://_N_E/./components/LocationAddress.js","webpack://_N_E/./components/MemberRoleDescription.js","webpack://_N_E/./components/Pagination.js","webpack://_N_E/./components/PasswordStrengthBar.tsx","webpack://_N_E/./components/RichTextEditor.js","webpack://_N_E/./components/SearchBar.js","webpack://_N_E/./components/StyledInputGroup.js","webpack://_N_E/./components/budget/filters/AmountFilter.js","webpack://_N_E/./components/edit-collective/SocialLinksFormField.tsx","webpack://_N_E/./components/edit-collective/utils.js","webpack://_N_E/./components/expenses/filters/ExpensesPayoutTypeFilter.js","webpack://_N_E/./components/expenses/filters/ExpensesStatusFilter.js","webpack://_N_E/./components/expenses/filters/ExpensesTypeFilter.js","webpack://_N_E/./components/expenses/ExpensesFilters.js","webpack://_N_E/./components/expenses/ExpensesList.js","webpack://_N_E/./components/expenses/PayoutBankInformationForm.js","webpack://_N_E/./components/expenses/filters/ExpensesOrder.js","webpack://_N_E/./components/DateRange.js","webpack://_N_E/./components/filters/PeriodFilter.tsx","webpack://_N_E/./components/host-dashboard/ScheduledExpensesBanner.js","webpack://_N_E/./components/onboarding-modal/OnboardingProfileCard.js","webpack://_N_E/./components/orders/OrderStatusFilter.js","webpack://_N_E/./components/orders/OrdersFilters.js","webpack://_N_E/./components/budget/OrderBudgetItem.js","webpack://_N_E/./components/orders/OrdersList.js","webpack://_N_E/./components/orders/OrdersWithData.js","webpack://_N_E/./lib/constants/moderation-categories.js","webpack://_N_E/./lib/graphql/mutations.js","webpack://_N_E/./lib/hooks/usePrevious.js","webpack://_N_E/./components/admin-panel/constants.js","webpack://_N_E/./components/admin-panel/AdminPanelContext.js","webpack://_N_E/./lib/constants/host-fee-structure.js","webpack://_N_E/./lib/i18n/host-fee-structure.js","webpack://_N_E/./components/host-dashboard/admin-collective-filters/CollectiveHostFeeStructureFilter.js","webpack://_N_E/./components/host-dashboard/admin-collective-filters/CollectiveSortByFilter.js","webpack://_N_E/./components/host-dashboard/HostAdminCollectiveFilters.js","webpack://_N_E/./components/host-dashboard/applications/PendingApplications.js","webpack://_N_E/./lib/hooks/useLazyGraphQLPaginatedResults.js","webpack://_N_E/./components/host-dashboard/ConnectPaypalButton.js","webpack://_N_E/./components/host-dashboard/ConnectTransferwiseButton.js","webpack://_N_E/./components/host-dashboard/PaypalPreApprovalDetailsIcon.js","webpack://_N_E/./components/host-dashboard/TransferwiseDetailsIcon.js","webpack://_N_E/./components/host-dashboard/HostInfoCard.js","webpack://_N_E/./components/host-dashboard/HostDashboardExpenses.js","webpack://_N_E/./components/host-dashboard/CollectiveSettingsModal.js","webpack://_N_E/./components/MenuPopover.js","webpack://_N_E/./components/host-dashboard/UnhostAccountModal.js","webpack://_N_E/./components/host-dashboard/HostAdminCollectiveCardMoreButton.js","webpack://_N_E/./components/host-dashboard/HostAdminCollectiveCard.js","webpack://_N_E/./components/host-dashboard/HostDashboardHostedCollectives.js","webpack://_N_E/./components/host-dashboard/reports-section/HostCSVDownloadButton.js","webpack://_N_E/./components/ChartWrapper.js","webpack://_N_E/./components/host-dashboard/reports-section/helpers.js","webpack://_N_E/./components/host-dashboard/reports-section/HostFeesSectionHistorical.js","webpack://_N_E/./components/host-dashboard/reports-section/HostFeesSection.js","webpack://_N_E/./components/host-dashboard/reports-section/PlatformTipsCollected.js","webpack://_N_E/./components/ProportionalAreaChart.js","webpack://_N_E/./components/host-dashboard/reports-section/TotalMoneyManagedHistorical.js","webpack://_N_E/./components/host-dashboard/reports-section/TotalMoneyManagedSection.js","webpack://_N_E/./components/host-dashboard/reports-section/TransactionsOverviewSection.js","webpack://_N_E/./components/host-dashboard/HostDashboardReports.js","webpack://_N_E/./lib/constants/vat.js","webpack://_N_E/./components/oauth/AuthorizedApp.js","webpack://_N_E/./components/oauth/queries.js","webpack://_N_E/./components/admin-panel/sections/AuthorizedApps.js","webpack://_N_E/./components/oauth/DeleteOAuthApplicationModal.js","webpack://_N_E/./components/oauth/lib.js","webpack://_N_E/./components/oauth/OAuthApplicationSettings.js","webpack://_N_E/./components/oauth/CreateOauthApplicationModal.js","webpack://_N_E/./components/oauth/OAuthApplicationsList.js","webpack://_N_E/./components/personal-token/DeletePersonalTokenModal.js","webpack://_N_E/./components/personal-token/lib.js","webpack://_N_E/./components/personal-token/PersonalTokenSettings.js","webpack://_N_E/./components/personal-token/CreatePersonalTokenModal.js","webpack://_N_E/./components/personal-token/PersonalTokensList.js","webpack://_N_E/./components/admin-panel/sections/ForDevelopers.js","webpack://_N_E/./components/FileDownloader.js","webpack://_N_E/./components/CreateGiftCardsSuccess.js","webpack://_N_E/./components/PaymentMethodSelect.js","webpack://_N_E/./lib/styled_components_utils.js","webpack://_N_E/./components/StyledMultiEmailInput.js","webpack://_N_E/./components/StyledSelectCreatable.js","webpack://_N_E/./components/CreateGiftCardsForm.js","webpack://_N_E/./components/admin-panel/queries.ts","webpack://_N_E/./components/edit-collective/sections/SettingsSectionTitle.js","webpack://_N_E/./components/edit-collective/actions/Archive.js","webpack://_N_E/./components/edit-collective/actions/Delete.js","webpack://_N_E/./components/edit-collective/SendFundsToCollectiveSection.js","webpack://_N_E/./components/edit-collective/actions/EmptyBalance.js","webpack://_N_E/./components/edit-collective/SettingsSubtitle.js","webpack://_N_E/./components/edit-collective/sections/CollectiveGoals.js","webpack://_N_E/./components/edit-collective/EditPayPalAccount.js","webpack://_N_E/./components/edit-collective/EditPrivacyAccount.js","webpack://_N_E/./components/edit-collective/EditTransferWiseAccount.js","webpack://_N_E/./components/edit-collective/EditTwitterAccount.js","webpack://_N_E/./components/edit-collective/EditConnectedAccount.js","webpack://_N_E/./components/edit-collective/sections/ConnectedAccounts.js","webpack://_N_E/./components/PreviewModal.js","webpack://_N_E/./components/edit-collective/sections/CustomMessage.js","webpack://_N_E/./components/faqs/EditCollectivePageFAQ.js","webpack://_N_E/./components/edit-collective/mutations.js","webpack://_N_E/./components/edit-collective/sections/EditCollectivePage.js","webpack://_N_E/./components/ExportImages.js","webpack://_N_E/./components/edit-collective/sections/Export.js","webpack://_N_E/./components/edit-collective/sections/FiscalHosting.js","webpack://_N_E/./components/GiftCardDetails.js","webpack://_N_E/./components/edit-collective/sections/GiftCards.js","webpack://_N_E/./components/HostsWithData.js","webpack://_N_E/./components/edit-collective/CreateOrganizationForm.js","webpack://_N_E/./components/edit-collective/CreateHostForm.js","webpack://_N_E/./components/edit-collective/CreateHostFormWithData.js","webpack://_N_E/./components/edit-collective/sections/Host.js","webpack://_N_E/./components/edit-collective/sections/HostVirtualCardsSettings.js","webpack://_N_E/./components/edit-collective/EditPaymentMethod.tsx","webpack://_N_E/./components/edit-collective/sections/PaymentMethods.js","webpack://_N_E/./components/edit-collective/sections/PaymentReceipts.js","webpack://_N_E/./components/edit-collective/sections/Policies.js","webpack://_N_E/./components/edit-collective/UpdateBankDetailsForm.js","webpack://_N_E/./components/edit-collective/sections/BankTransfer.js","webpack://_N_E/./components/edit-collective/sections/ReceivingMoney.js","webpack://_N_E/./components/edit-collective/sections/Security.js","webpack://_N_E/./components/edit-collective/sections/SendingMoney.js","webpack://_N_E/./components/edit-collective/sections/Tickets.js","webpack://_N_E/./components/edit-collective/sections/Tiers.js","webpack://_N_E/./components/edit-collective/sections/UserSecurity.js","webpack://_N_E/./components/icons/DismissIcon.js","webpack://_N_E/./components/edit-collective/DeleteVirtualCardModal.js","webpack://_N_E/./components/edit-collective/VirtualCard.js","webpack://_N_E/./components/edit-collective/sections/virtual-cards/filters/CollectiveFilter.js","webpack://_N_E/./components/edit-collective/sections/virtual-cards/VirtualCardFilters.js","webpack://_N_E/./components/edit-collective/sections/virtual-cards/VirtualCards.js","webpack://_N_E/./lib/constants/notificationEvents.js","webpack://_N_E/./lib/i18n/webhook-event-type.js","webpack://_N_E/./components/edit-collective/sections/WebhookActivityInfoModal.js","webpack://_N_E/./components/edit-collective/sections/Webhooks.js","webpack://_N_E/./components/edit-collective/EditUserEmailForm.js","webpack://_N_E/./components/edit-collective/Form.js","webpack://_N_E/./components/admin-panel/sections/AccountSettings.js","webpack://_N_E/./components/admin-panel/sections/FinancialContributions.js","webpack://_N_E/./components/admin-panel/sections/HostVirtualCards.js","webpack://_N_E/./components/admin-panel/sections/ReceiptTemplateForm.js","webpack://_N_E/./components/admin-panel/sections/InvoicesReceipts.js","webpack://_N_E/./lib/i18n/activities-classes.js","webpack://_N_E/./components/admin-panel/sections/NotificationsSettings/fragments.js","webpack://_N_E/./components/admin-panel/sections/NotificationsSettings/ActivitySwitch.js","webpack://_N_E/./components/admin-panel/sections/NotificationsSettings/CollectiveSettings.js","webpack://_N_E/./components/admin-panel/sections/NotificationsSettings/GroupView.js","webpack://_N_E/./components/admin-panel/sections/NotificationsSettings/index.js","webpack://_N_E/./components/admin-panel/sections/PendingContributions.js","webpack://_N_E/./components/edit-collective/sections/team/MemberForm.js","webpack://_N_E/./components/edit-collective/sections/team/queries.ts","webpack://_N_E/./components/edit-collective/sections/team/EditMemberModal.js","webpack://_N_E/./components/edit-collective/sections/team/InviteMemberModal.js","webpack://_N_E/./components/edit-collective/sections/team/ResendMemberInviteBtn.js","webpack://_N_E/./components/admin-panel/sections/Team.tsx","webpack://_N_E/./components/admin-panel/AdminPanelSection.js","webpack://_N_E/./components/host-dashboard/constants.js","webpack://_N_E/./components/admin-panel/MenuComponents.js","webpack://_N_E/./components/admin-panel/Menu.js","webpack://_N_E/./components/admin-panel/SideBar.js","webpack://_N_E/./components/admin-panel/TopBar.js","webpack://_N_E/./pages/admin-panel.js","webpack://_N_E/./pages/confirmOrder.js","webpack://_N_E/?8055"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\nimport { defineMessages, FormattedDate, FormattedMessage, injectIntl } from 'react-intl';\nimport styled from 'styled-components';\nimport { width } from 'styled-system';\n\nimport { defaultBackgroundImage } from '../lib/constants/collectives';\nimport { imagePreview } from '../lib/image-utils';\nimport { firstSentence } from '../lib/utils';\n\nimport Avatar from './Avatar';\nimport Container from './Container';\nimport Currency from './Currency';\nimport Link from './Link';\n\nconst CardWrapper = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  cursor: pointer;\n  vertical-align: top;\n  position: relative;\n  box-sizing: border-box;\n  width: 215px;\n  min-height: 380px;\n  border-radius: 15px;\n  background-color: #ffffff;\n  box-shadow: 0 1px 3px 0 rgba(45, 77, 97, 0.2);\n  overflow: hidden;\n  text-decoration: none !important;\n  ${width}\n`;\n\nconst NameWrapper = styled(Container)`\n  min-height: 20px;\n  font-size: 14px;\n  margin: 5px;\n  font-weight: 700;\n  text-align: center;\n  color: #303233;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst MembershipWrapper = styled(Container)`\n  border-top: 1px solid #f2f2f2;\n  padding: 1rem;\n  color: #303233;\n`;\n\nconst StatsWrapper = styled(MembershipWrapper)`\n  display: flex;\n  width: 100%;\n  box-sizing: border-box;\n  justify-content: space-around;\n`;\n\nconst ValueWrapper = styled(Container)`\n  font-weight: normal;\n  text-align: center;\n  color: #303233;\n  font-size: 1.4rem;\n  margin: 3px 2px 0px;\n  text-align: center;\n  margin: auto;\n`;\n\nconst LabelWrapper = styled(Container)`\n  font-size: 9px;\n  text-align: center;\n  font-weight: 300;\n  color: #a8afb3;\n  text-transform: uppercase;\n  text-align: center;\n  margin: auto;\n`;\n\nconst CommaList = styled.ul`\n  display: inline;\n  list-style: none;\n  padding: 0px;\n\n  li {\n    display: inline;\n  }\n\n  li::after {\n    content: ', ';\n  }\n\n  li:last-child::after {\n    content: '';\n  }\n`;\n\nclass CollectiveCard extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object.isRequired,\n    membership: PropTypes.object,\n    memberships: PropTypes.array,\n    intl: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.messages = defineMessages({\n      'membership.role.host': {\n        id: 'Member.Role.HOST',\n        defaultMessage: 'Host',\n      },\n      'roles.admin.label': {\n        id: 'Member.Role.ADMIN',\n        defaultMessage: 'Admin',\n      },\n      'roles.member.label': {\n        id: 'Member.Role.MEMBER',\n        defaultMessage: 'Core Contributor',\n      },\n      'tier.name.sponsor': {\n        id: 'tier.name.sponsor',\n        defaultMessage: 'sponsor',\n      },\n      'tier.name.backer': {\n        id: 'tier.name.backer',\n        defaultMessage: 'backer',\n      },\n    });\n  }\n\n  render() {\n    const { intl, collective, membership } = this.props;\n    let { memberships } = this.props;\n    memberships = memberships || (membership ? [membership] : []);\n\n    const getTierName = membership => {\n      const tierName = get(membership, 'tier.name');\n      const role = get(membership, 'role');\n      if (!tierName) {\n        switch (role) {\n          case 'HOST':\n            return intl.formatMessage(this.messages['membership.role.host']);\n          case 'ADMIN':\n            return intl.formatMessage(this.messages['roles.admin.label']);\n          case 'MEMBER':\n            return intl.formatMessage(this.messages['roles.member.label']);\n          default:\n            if (collective.type === 'ORGANIZATION') {\n              return intl.formatMessage(this.messages['tier.name.sponsor']);\n            } else {\n              return intl.formatMessage(this.messages['tier.name.backer']);\n            }\n        }\n      }\n      return tierName;\n    };\n\n    const membershipDates = memberships.map(m => m.createdAt);\n    membershipDates.sort((a, b) => {\n      return b - a;\n    });\n\n    const oldestMembershipDate = membershipDates.length ? membershipDates[0] : null;\n    const roles = new Set(memberships.map(m => getTierName(m)));\n\n    const coverStyle = {};\n    const backgroundImage = imagePreview(\n      collective.backgroundImage || get(collective, 'parentCollective.backgroundImage'),\n      defaultBackgroundImage['COLLECTIVE'],\n      { width: 400 },\n    );\n\n    if (!coverStyle.backgroundImage && backgroundImage) {\n      coverStyle.backgroundImage = `url('${backgroundImage}')`;\n      coverStyle.backgroundSize = 'cover';\n      coverStyle.backgroundPosition = 'center center';\n    }\n\n    const truncatedDescription = collective.description && firstSentence(collective.description, 80);\n    const description = collective.description;\n\n    let route;\n    if (collective.type === 'EVENT') {\n      route = `/${collective.parentCollective?.slug || 'collective'}/events/${collective.slug}`;\n    } else {\n      route = `/${collective.slug}`;\n    }\n\n    const backersCount = get(collective, 'backers.totalCount');\n\n    return (\n      <Link href={route} target=\"_top\">\n        <CardWrapper className={`CollectiveCard ${collective.type}`} {...this.props}>\n          <Container position=\"relative\" overflow=\"hidden\" width=\"100%\" height=\"14rem\" borderBottom=\"5px solid #46b0ed\">\n            <Container\n              position=\"absolute\"\n              top=\"0\"\n              left=\"0\"\n              width=\"100%\"\n              height=\"100%\"\n              backgroundSize=\"cover\"\n              backgroundPosition=\"center\"\n              style={coverStyle}\n            />\n            <Container\n              display=\"flex\"\n              height=\"100%\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              position=\"absolute\"\n              left=\"0\"\n              right=\"0\"\n              top=\"0\"\n              bottom=\"0\"\n            >\n              <Avatar collective={collective} radius={65} />\n            </Container>\n          </Container>\n          <Container padding=\"1rem\" minHeight=\"11rem\">\n            <NameWrapper>{collective.name}</NameWrapper>\n            <Container\n              fontWeight=\"normal\"\n              textAlign=\"center\"\n              color=\"#787d80\"\n              fontSize=\"1.2rem\"\n              lineHeight=\"1.3\"\n              margin=\"0 5px\"\n              minHeight=\"50px\"\n              title={description}\n            >\n              {truncatedDescription}\n            </Container>\n          </Container>\n          <Container fontSize=\"1.1rem\" width=\"100%\" minHeight=\"6rem\" textAlign=\"center\">\n            {collective.type === 'COLLECTIVE' && backersCount > 0 && (\n              <StatsWrapper>\n                <div className=\"backers\">\n                  <ValueWrapper>{backersCount}</ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage\n                      id=\"collective.card.stats.backers\"\n                      defaultMessage=\"{n, plural, one {backer} other {backers}}\"\n                      values={{ n: backersCount }}\n                    />\n                  </LabelWrapper>\n                </div>\n                <div className=\"yearlyBudget\">\n                  <ValueWrapper>\n                    <Currency\n                      value={collective.stats.yearlyBudget.valueInCents}\n                      currency={collective.stats.yearlyBudget.currency}\n                    />\n                  </ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage id=\"collective.card.stats.yearlyBudget\" defaultMessage={'yearly budget'} />\n                  </LabelWrapper>\n                </div>\n              </StatsWrapper>\n            )}\n            {collective.memberOf && collective.memberOf.totalCount > 0 && collective.type === 'ORGANIZATION' && (\n              <StatsWrapper>\n                <div className=\"backers\">\n                  <ValueWrapper>{collective.memberOf.totalCount}</ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage\n                      id=\"collective.card.memberOf.count\"\n                      defaultMessage=\"Contributor to {n, plural, one {Collective} other {Collectives}}\"\n                      values={{ n: collective.memberOf.totalCount }}\n                    />\n                  </LabelWrapper>\n                </div>\n                <div className=\"yearlyBudget\">\n                  <ValueWrapper>\n                    <Currency\n                      value={collective.stats.totalAmountSpent.valueInCents}\n                      currency={collective.stats.totalAmountSpent.currency}\n                    />\n                  </ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage id=\"AmountContributed\" defaultMessage=\"Contributed\" />\n                  </LabelWrapper>\n                </div>\n              </StatsWrapper>\n            )}\n            {collective.stats && collective.stats.collectives && (\n              <StatsWrapper>\n                <div className=\"backers\">\n                  <ValueWrapper>{get(collective, 'stats.collectives.hosted')}</ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage\n                      id=\"collective.card.collectives.count\"\n                      defaultMessage=\"Hosted {n, plural, one {Collective} other {Collectives}}\"\n                      values={{ n: get(collective, 'stats.collectives.hosted') }}\n                    />\n                  </LabelWrapper>\n                </div>\n                <div className=\"currency\">\n                  <ValueWrapper>{collective.currency}</ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage id=\"currency\" defaultMessage=\"currency\" />\n                  </LabelWrapper>\n                </div>\n              </StatsWrapper>\n            )}\n            {roles && roles.size > 0 && (\n              <MembershipWrapper>\n                <Container\n                  minHeight=\"13px\"\n                  fontWeight=\"700\"\n                  letterSpacing=\"3px\"\n                  color=\"#75cc1f\"\n                  textTransform=\"uppercase\"\n                >\n                  <CommaList>\n                    {Array.from(roles).map(role => (\n                      <li key={role}>{role}</li>\n                    ))}\n                  </CommaList>\n                </Container>\n                {oldestMembershipDate && (\n                  <Container\n                    minHeight=\"18px\"\n                    fontSize=\"12px\"\n                    fontWeight=\"500\"\n                    lineHeight=\"1.5\"\n                    textAlign=\"center\"\n                    color=\"#aab0b3\"\n                    textTransform=\"capitalize\"\n                  >\n                    <FormattedMessage\n                      id=\"membership.since\"\n                      defaultMessage={'since {date}'}\n                      values={{\n                        date: <FormattedDate value={oldestMembershipDate} month=\"long\" year=\"numeric\" />,\n                      }}\n                    />\n                  </Container>\n                )}\n              </MembershipWrapper>\n            )}\n            {memberships.map(\n              membership =>\n                membership.role === 'BACKER' &&\n                get(membership, 'stats.totalDonations') > 0 && (\n                  <MembershipWrapper key={membership.id}>\n                    <Container fontSize=\"2rem\">\n                      <Currency\n                        value={get(membership, 'stats.totalDonations')}\n                        currency={get(membership, 'collective.currency')}\n                      />\n                    </Container>\n                    <FormattedMessage id=\"membership.totalDonations.title\" defaultMessage={'Amount contributed'} />\n                  </MembershipWrapper>\n                ),\n            )}\n          </Container>\n        </CardWrapper>\n      </Link>\n    );\n  }\n}\n\nexport default injectIntl(CollectiveCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { formatCurrency, getCurrencySymbol } from '../lib/currency-utils';\n\nimport { Span } from './Text';\n\n/**\n * Shows a money amount with the currency.\n *\n * ⚠️ Abbreviated mode is only for English at the moment. Abbreviated amount will not be internationalized.\n */\nconst Currency = ({ formatWithSeparators, currency, precision, value, ...styles }) => {\n  const { locale } = useIntl();\n  if (precision === 'auto') {\n    precision = value % 100 === 0 ? 0 : 2;\n  } else if (precision < 2 && value < 100) {\n    // Force precision if number is < $1 to never display $0 for small amounts\n    precision = 2;\n  }\n\n  if (formatWithSeparators) {\n    // TODO: This approach is not great because the position of the currency depends on the locale\n    const floatAmount = value / 100;\n    return (\n      <Span {...styles} whiteSpace=\"nowrap\">\n        {getCurrencySymbol(currency)}\n        {floatAmount.toLocaleString(locale)}\n      </Span>\n    );\n  } else {\n    return (\n      <Span {...styles} whiteSpace=\"nowrap\">\n        {formatCurrency(value, currency, { precision, locale })}\n      </Span>\n    );\n  }\n};\n\nCurrency.propTypes = {\n  /** The amount to display, in cents */\n  value: PropTypes.number.isRequired,\n  /** The currency (eg. `USD`, `EUR`...etc) */\n  currency: PropTypes.string,\n  /** Format the currency value to display with separators such as 100,000 instead of 100000 */\n  formatWithSeparators: PropTypes.bool,\n  /** How many numbers should we display after the comma. When `auto` is given, decimals are only displayed if necessary. */\n  precision: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n  /** An optional set of props passed to the `Span` */\n  style: PropTypes.object,\n};\n\nCurrency.defaultProps = {\n  formatWithSeparators: false,\n  precision: 0,\n};\n\nexport default Currency;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { H1 } from './Text';\n\nconst ErrorComponent = ({ message }) => {\n  return (\n    <div className=\"Error\">\n      <H1 textAlign=\"center\" padding=\"8rem\">\n        {message || 'unknown error'}\n      </H1>\n    </div>\n  );\n};\n\nErrorComponent.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isNil } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport { CurrencyPrecision } from '../lib/constants/currency-precision';\nimport INTERVALS from '../lib/constants/intervals';\nimport { getIntervalFromContributionFrequency } from '../lib/date-utils';\n\nimport Currency from './Currency';\nimport { Span } from './Text';\n\n/** Default styles for the amount (not including currency) */\nexport const DEFAULT_AMOUNT_STYLES = { letterSpacing: 0, fontWeight: 'bold', color: 'black.900' };\n\nconst EMPTY_AMOUNT_PLACEHOLDER = '--.--';\n\n/**\n * A practical component to format amounts and their intervals with proper\n * internationalization support.\n */\nconst FormattedMoneyAmount = ({\n  formatWithSeparators,\n  abbreviateInterval,\n  currency,\n  precision,\n  amount,\n  interval,\n  frequency,\n  amountStyles,\n  showCurrencyCode,\n  currencyCodeStyles,\n  isCrypto,\n}) => {\n  if (!currency) {\n    return <Span {...amountStyles}>{EMPTY_AMOUNT_PLACEHOLDER}</Span>;\n  }\n\n  const formattedAmount =\n    isNaN(amount) || isNil(amount) ? (\n      <Span {...amountStyles}>{EMPTY_AMOUNT_PLACEHOLDER}</Span>\n    ) : (\n      <Currency\n        value={amount}\n        currency={currency}\n        precision={precision}\n        formatWithSeparators={formatWithSeparators}\n        {...amountStyles}\n      />\n    );\n\n  if (frequency) {\n    interval = getIntervalFromContributionFrequency(frequency);\n  }\n\n  const currencyCode = showCurrencyCode ? <Span {...currencyCodeStyles}>{currency}</Span> : '';\n  if (isCrypto) {\n    return <Span {...amountStyles}>{`${amount} ${currency}`}</Span>;\n  } else if (!interval || interval === INTERVALS.flexible || interval === INTERVALS.oneTime) {\n    return (\n      <FormattedMessage\n        id=\"Amount\"\n        defaultMessage=\"{amount} {currencyCode}\"\n        values={{ amount: formattedAmount, currencyCode }}\n      />\n    );\n  } else if (abbreviateInterval) {\n    return (\n      <FormattedMessage\n        id=\"AmountInterval\"\n        defaultMessage=\"{amount} {currencyCode} / {interval, select, month {mo.} year {yr.} other{}}\"\n        values={{ amount: formattedAmount, interval: interval ?? '', currencyCode }}\n      />\n    );\n  } else {\n    return (\n      <FormattedMessage\n        id=\"AmountIntervalLong\"\n        defaultMessage=\"{amount} {currencyCode} / {interval, select, month {month} year {year} other {}}\"\n        values={{ amount: formattedAmount, interval: interval ?? '', currencyCode }}\n      />\n    );\n  }\n};\n\nFormattedMoneyAmount.propTypes = {\n  /** The amount to display, in cents */\n  amount: PropTypes.number,\n  /** The currency (eg. `USD`, `EUR`...etc) */\n  currency: PropTypes.string,\n  /** Abbreviate the interval (eg. year => yr.) */\n  abbreviateInterval: PropTypes.bool,\n  /** Whether to show the full currency code (ie. USD) */\n  showCurrencyCode: PropTypes.bool,\n  /** How many numbers should we display after the comma */\n  precision: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]),\n  /** An interval that goes with the amount */\n  interval: PropTypes.oneOf(['month', 'year', 'oneTime']),\n  /** ContributionFrequency from GQLV2 */\n  frequency: PropTypes.oneOf(['MONTHLY', 'YEARLY', 'ONETIME']),\n  /** Style for the amount (eg. `$10`). Doesn't apply on interval */\n  amountStyles: PropTypes.object,\n  currencyCodeStyles: PropTypes.object,\n  formatWithSeparators: PropTypes.bool,\n  isCrypto: PropTypes.bool,\n};\n\nFormattedMoneyAmount.defaultProps = {\n  abbreviate: false,\n  abbreviateInterval: false,\n  precision: CurrencyPrecision.DEFAULT,\n  amountStyles: DEFAULT_AMOUNT_STYLES,\n  showCurrencyCode: true,\n};\n\nexport default FormattedMoneyAmount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce, get, maxBy, sortBy, truncate } from 'lodash';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport styled, { css } from 'styled-components';\nimport { v4 as uuid } from 'uuid';\n\nimport { formatCurrency } from '../lib/currency-utils';\n\nimport Container from './Container';\nimport { fadeIn } from './StyledKeyframes';\n\nconst getProgressColor = theme => theme.colors.primary[600];\nconst getEmptyProgressColor = () => '#e2e2e2';\nconst MAX_TITLE_LENGTH = 32;\n\nconst GoalContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  text-align: right;\n  transition: width 3s;\n  height: 25px;\n  color: ${props => props.theme.colors.black[700]};\n  border-right: 1px solid\n    ${props => (props.goal.isReached ? getProgressColor(props.theme) : getEmptyProgressColor(props.theme))};\n  width: ${props => `${props.goal.progress * 100}%`};\n  z-index: ${props => (['balance', 'yearlyBudget'].includes(props.goal.slug) ? 310 : (20 - props.index) * 10)};\n  transition: ${props =>\n    !props.goal.animateProgress\n      ? 'opacity 0.3s, height 1s, padding-top 1s'\n      : 'opacity 2s, height 1s, padding-top 1s, width 2s ease-in-out;'};\n\n  .caption {\n    display: inline-block;\n    padding: 1rem 0.5rem 1rem 0.5rem;\n    font-size: 13px;\n    line-height: 15px;\n  }\n\n  .label {\n    background: rgb(245, 247, 250);\n    padding: 0;\n    line-height: 1.5;\n    font-size: 13px;\n    text-align: right;\n    color: inherit;\n    white-space: nowrap;\n  }\n\n  .amount {\n    font-weight: 500;\n  }\n\n  .interval {\n    color: #aaaeb3;\n    font-size: 10px;\n    font-weight: normal;\n  }\n\n  ${props =>\n    props.goal.isReached &&\n    css`\n      color: ${props.theme.colors.black[800]};\n    `}\n\n  ${props =>\n    props.goal.isReached &&\n    props.goal.position === 'below' &&\n    css`\n      border-top: 4px solid ${getProgressColor(props.theme)};\n    `}\n\n  ${props =>\n    props.goal.position === 'above' &&\n    css`\n      border-bottom: 4px solid ${getEmptyProgressColor(props.theme)};\n      top: auto;\n      bottom: 76px;\n\n      .caption {\n        margin-top: -5.5rem;\n      }\n    `}\n\n  ${props => {\n    if (props.goal.level === 1) {\n      if (props.goal.position === 'below') {\n        return css`\n          height: 50px;\n          padding-top: 4rem;\n          border-right-style: dotted;\n          border-right-color: ${props.theme.colors.primary[300]};\n        `;\n      } else {\n        return css`\n          height: 70px;\n        `;\n      }\n    }\n  }}\n\n  ${props => {\n    if (props.goal.isOverlapping) {\n      return css`\n        opacity: 0.2;\n      `;\n    } else {\n      return css`\n        animation: ${fadeIn} 0.3s;\n      `;\n    }\n  }}\n\n  ${props =>\n    props.goal.hidden &&\n    css`\n      opacity: 0;\n    `}\n`;\n\nconst BarContainer = styled.div`\n  position: relative;\n  width: 100%;\n  margin: 6rem auto 1rem;\n  min-height: 80px;\n\n  .withGoals {\n    margin-top: 10rem;\n  }\n\n  .max-level-above-1 {\n    margin-top: 15rem;\n  }\n\n  @media (max-width: 1400px) {\n    width: 90%;\n  }\n\n  @media (max-width: 420px) {\n    width: 95%;\n  }\n`;\n\nclass GoalsCover extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object.isRequired,\n    interpolation: PropTypes.oneOf(['linear', 'logarithm', 'auto']),\n    intl: PropTypes.object.isRequired,\n  };\n\n  static defaultProps = {\n    interpolation: 'auto',\n  };\n\n  constructor(props) {\n    super(props);\n    this.renderGoal = this.renderGoal.bind(this);\n    this.updateGoals = debounce(this.updateGoals.bind(this), 100, { maxWait: 200 });\n    this.labelsRefs = {};\n    this.messages = defineMessages({\n      'bar.balance': {\n        id: 'cover.bar.balance',\n        defaultMessage: \"Today's Balance\",\n      },\n      'bar.yearlyBudget': {\n        id: 'cover.bar.yearlyBudget',\n        defaultMessage: 'Estimated Annual Budget',\n      },\n      'bar.monthlyBudget': {\n        id: 'cover.bar.monthlyBudget',\n        defaultMessage: 'Estimated Monthly Budget',\n      },\n    });\n\n    const maxGoal = maxBy(get(props.collective, 'settings.goals', []), g => (g.title ? g.amount : 0));\n    this.currentProgress = maxGoal ? this.getMaxCurrentAchievement() / maxGoal.amount : 1.0;\n    this.interpolation = props.interpolation || get(props.collective, 'settings.goalsInterpolation', 'auto');\n    this.state = { ...this.populateGoals(true, true) };\n  }\n\n  componentDidMount() {\n    this.setState({ ...this.populateGoals(false, true), firstMount: true });\n    window.addEventListener('resize', this.updateGoals);\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.state.firstMount || this.props.collective !== oldProps.collective) {\n      this.updateGoals();\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateGoals);\n  }\n\n  updateGoals(firstMount = false) {\n    this.setState({ ...this.populateGoals(), firstMount });\n  }\n\n  /** Returns a percentage (0.0-1.0) that represent X position */\n  getTranslatedPercentage(x) {\n    const interpolation = this.props.interpolation || this.interpolation;\n    if (interpolation === 'logarithm' || (interpolation === 'auto' && this.currentProgress <= 0.3)) {\n      // See https://www.desmos.com/calculator/30pua5xx7q\n      return -1 * Math.pow(x - 1, 2) + 1;\n    }\n\n    return x;\n  }\n\n  /** Create goal object with correct defaults and store a ref for React */\n  createGoal(slug, params) {\n    this.labelsRefs[slug] = this.labelsRefs[slug] || React.createRef();\n    return {\n      precision: 0,\n      isReached: false,\n      level: 0,\n      position: 'above',\n      ...params,\n      slug,\n    };\n  }\n\n  /** Returns the main goals current progress, either max balance or annual budget */\n  getMaxCurrentAchievement() {\n    const { collective } = this.props;\n    return Math.max(get(collective, 'stats.balance'), get(collective, 'stats.yearlyBudget', 0));\n  }\n\n  /**\n   * Returns the base goals (balance, yearly budget...) without custom goals.\n   * All goals returned here have a slug prefilled.\n   */\n  getInitialGoals() {\n    const { intl, collective } = this.props;\n    const settingGoals = get(this.props.collective, 'settings.goals', []);\n    const hasMonthlyGoal = settingGoals.some(goal => goal.type === 'monthlyBudget');\n\n    // Always show current balance\n    const goals = [\n      this.createGoal('balance', {\n        animateProgress: true,\n        title: intl.formatMessage(this.messages['bar.balance']),\n        amount: get(collective, 'stats.balance'),\n        precision: 2,\n        position: 'below',\n        isReached: true,\n      }),\n    ];\n\n    // Add yearly and monthly budgets\n    if (\n      get(collective, 'stats.yearlyBudget') > 0 &&\n      get(collective, 'stats.yearlyBudget') !== get(collective, 'stats.balance')\n    ) {\n      if (hasMonthlyGoal) {\n        goals.push(\n          this.createGoal('monthlyBudget', {\n            animateProgress: true,\n            title: intl.formatMessage(this.messages['bar.monthlyBudget']),\n            amount: get(collective, 'stats.yearlyBudget') / 12,\n            precision: 0,\n            position: 'below',\n            isReached: true,\n          }),\n        );\n      } else {\n        goals.push(\n          this.createGoal('yearlyBudget', {\n            animateProgress: true,\n            title: intl.formatMessage(this.messages['bar.yearlyBudget']),\n            amount: get(collective, 'stats.yearlyBudget'),\n            precision: 0,\n            position: 'below',\n            isReached: true,\n          }),\n        );\n      }\n    }\n\n    // Animate only the most advanced one\n    if (goals.length === 2) {\n      if (goals[0].amount <= goals[1].amount) {\n        goals[0].animateProgress = false;\n      } else {\n        goals[1].animateProgress = false;\n      }\n    }\n\n    return goals;\n  }\n\n  /**\n   * Get at most `maxCustomGoalsToShow` custom goals. If goals are filtered,\n   * we make sure to always return the last one to have a complete progress bar.\n   *\n   * Also adds a unique slug to goals.\n   */\n  getCustomGoals(maxCustomGoalsToShow) {\n    const settingsGoals = get(this.props.collective, 'settings.goals', []);\n    const sortedGoals = sortBy(settingsGoals, 'amount');\n    const goals = sortedGoals.map((goal, idx) => this.createGoal(`goal-${idx}-${goal.key || uuid()}`, goal));\n\n    // No need to remove goals\n    if (goals.length <= maxCustomGoalsToShow) {\n      return goals;\n    }\n\n    // Filter goals, ensure we keep the last one\n    const lastGoal = goals[goals.length - 1];\n    if (!maxCustomGoalsToShow) {\n      return [lastGoal];\n    }\n\n    return [...goals.slice(0, maxCustomGoalsToShow - 1), lastGoal];\n  }\n\n  /**\n   * If a ref exists for this goal, get its real with. Otherwise estimate\n   * it based on its title (for initial rendering and server-side rendering)\n   */\n  getGoalLabelWidthInPx(goal) {\n    const ref = this.labelsRefs[goal.slug];\n    if (ref && ref.current) {\n      return ref.current.offsetWidth + 15; // Add a bigger hit box\n    } else if (goal.title) {\n      return Math.min(MAX_TITLE_LENGTH, goal.title.length) * 8;\n    } else {\n      // When there's no title we just show a single word - \"Goal\".\n      // 12 characters should be enough for most languages.\n      return 12 * 8;\n    }\n  }\n\n  /** Given a percent size, returns its value in pixels */\n  percentageToPx(availWidth, percentage) {\n    const progressBarPercentageWidth = availWidth > 420 ? 0.8 : 0.95;\n    const progressBarWidthInPx = availWidth * progressBarPercentageWidth;\n    return percentage * progressBarWidthInPx;\n  }\n\n  /** Given a pixels size, returns its value as a percentage of availWidth */\n  pxToPercentage(availWidth, widthInPx) {\n    return widthInPx / availWidth;\n  }\n\n  /** Returns the overlap size if any, 0 otherwise */\n  goalsOverlapInPx(availWidth, maxAmount, prevGoal, goal) {\n    if (!prevGoal) {\n      return 0;\n    }\n\n    // No overlap is possible if not at the same position or level\n    if (goal.position !== prevGoal.position || goal.level !== prevGoal.level) {\n      return 0;\n    }\n\n    // Get position and distance between the markers\n    const prevX = this.percentageToPx(availWidth, this.getTranslatedPercentage(prevGoal.amount / maxAmount));\n    const curX = this.percentageToPx(availWidth, this.getTranslatedPercentage(goal.amount / maxAmount));\n    const prevWidth = this.getGoalLabelWidthInPx(prevGoal);\n    // If goal is at the far left of the graphic, label will be moved to the right\n    const xLabelOffset = prevX - prevWidth;\n    const distance = xLabelOffset < 0 ? curX - prevX + xLabelOffset : curX - prevX;\n\n    // Calculate overlap size\n    const curWidth = this.getGoalLabelWidthInPx(goal);\n    const offset = distance - curWidth;\n    return offset < 0 ? -offset : 0;\n  }\n\n  /**\n   * Test goals position against the first previous goal on the same position / level\n   *\n   * @returns {goal, overlap}\n   */\n  overlapWithPrev(availWidth, maxAmount, prevGoals, goal) {\n    for (let i = prevGoals.length - 1; i >= 0; i--) {\n      const prevGoal = prevGoals[i];\n      if (goal.position === prevGoal.position && goal.level === prevGoal.level) {\n        return {\n          prevGoal,\n          overlap: this.goalsOverlapInPx(availWidth, maxAmount, prevGoal, goal),\n        };\n      }\n    }\n    return { prevGoal: null, overlap: 0 };\n  }\n\n  /** @returns {Object} {goals, hasCustomGoals, maxAmount, maxLevelAbove} */\n  populateGoals(isServerSide, isInitialRender) {\n    // Show only one custom goal on mobile\n    let maxLevelAbove = 0;\n    let availWidth = 700;\n    let maxCustomGoalsToShow = 10;\n    if (isServerSide) {\n      maxCustomGoalsToShow = 0;\n    } else {\n      availWidth = get(window, 'screen.availWidth') || 560;\n      if (availWidth <= 560) {\n        maxCustomGoalsToShow = 0;\n      } else if (availWidth < 728) {\n        maxCustomGoalsToShow = 1;\n      } else if (availWidth < 896) {\n        maxCustomGoalsToShow = 2;\n      } else if (availWidth < 1120) {\n        maxCustomGoalsToShow = 3;\n      }\n    }\n\n    // Get all goals sorted by amount\n    const initialGoals = this.getInitialGoals();\n    const customGoals = this.getCustomGoals(maxCustomGoalsToShow);\n    const goals = sortBy([...initialGoals, ...customGoals], 'amount');\n    const maxAmount = maxBy(goals, g => g.amount).amount;\n    const maxAchievedYet = this.getMaxCurrentAchievement();\n\n    // Set goals positions\n    for (let i = 0; i < goals.length; i++) {\n      const isLastGoal = i === goals.length - 1;\n      const goal = goals[i];\n      goal.progress = this.getTranslatedPercentage(goal.amount / maxAmount);\n      goal.isReached = goal.isReached || maxAchievedYet > goal.amount;\n      goal.hidden = false;\n\n      const prevGoals = goals.slice(0, i);\n      const overlapWithPrev = goal => this.overlapWithPrev(availWidth, maxAmount, prevGoals, goal);\n      const { prevGoal, overlap } = overlapWithPrev(goal);\n\n      // -- Overlap 😱 --\n      if (overlap > 0) {\n        // 1st strategy: we change the level by 1\n        const newLevel = Number(!prevGoal.level);\n        if (overlapWithPrev({ ...goal, level: newLevel }).overlap === 0) {\n          goal.level = newLevel;\n          if (goal.position === 'above') {\n            maxLevelAbove = Math.max(maxLevelAbove, newLevel);\n          }\n        } else {\n          // 2nd strategy: we shift by given offset, and we change opacity\n          // - of the prev goal if this is last goal, of the current otherwise\n          // Will not shift at less than 0% or more than 100%\n          if (!isLastGoal) {\n            goal.isOverlapping = true;\n            const newProgress = goal.progress + this.pxToPercentage(availWidth, overlap);\n            goal.progress = newProgress <= 1 ? newProgress : 1;\n          } else {\n            prevGoal.isOverlapping = true;\n            const newProgress = prevGoal.progress - this.pxToPercentage(availWidth, overlap);\n            prevGoal.progress = newProgress >= 0 ? newProgress : 0;\n          }\n        }\n      }\n\n      // Change progress to animate goal. Never animate the last goal as it would\n      // result in a partial progress bar for first rendering. Hide when rendered\n      // on server side to avoid getting the marker stuck while waiting for\n      // re-hydrating\n      if (goal.animateProgress && !isLastGoal) {\n        if (isServerSide) {\n          goal.hidden = true;\n        }\n        if (isInitialRender) {\n          goal.progress = 0;\n        }\n      }\n    }\n\n    return { goals, maxAmount, maxLevelAbove, hasCustomGoals: customGoals.length > 0 };\n  }\n\n  getDivTitle(title, description) {\n    if (title && description) {\n      return `${title}\\n\\n${description}`;\n    } else {\n      return title || description || '';\n    }\n  }\n\n  renderGoal(goal, index) {\n    const { collective, intl } = this.props;\n    const slug = goal.slug;\n    const amount = formatCurrency(goal.amount || 0, collective.currency, {\n      precision: goal.precision || 0,\n      locale: intl.locale,\n    });\n\n    return (\n      <GoalContainer className={`goal ${goal.slug}`} key={slug} goal={goal} index={index}>\n        <div className=\"caption\" title={this.getDivTitle(goal.title, goal.description)}>\n          <div className=\"label\" ref={this.labelsRefs[goal.slug]}>\n            {goal.title ? (\n              truncate(goal.title, { length: MAX_TITLE_LENGTH })\n            ) : (\n              <FormattedMessage id=\"ContributionType.Goal\" defaultMessage=\"Goal\" />\n            )}\n          </div>\n          <div className=\"amount\">\n            {amount}\n            {(goal.type === 'yearlyBudget' || goal.type === 'monthlyBudget') && (\n              <div className=\"interval\">\n                <FormattedMessage\n                  id=\"tier.interval\"\n                  defaultMessage=\"per {interval, select, month {month} year {year} other {}}\"\n                  values={{ interval: goal.type === 'yearlyBudget' ? 'year' : 'month' }}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </GoalContainer>\n    );\n  }\n\n  render() {\n    const { collective } = this.props;\n\n    if (!collective) {\n      return <div />;\n    }\n\n    return (\n      <BarContainer>\n        <Container\n          className={`max-level-above-${this.state.maxLevelAbove} ${this.state.hasCustomGoals ? 'withGoals' : ''}`}\n        >\n          <Container>\n            {this.state.goals &&\n              this.state.goals.map((goal, index) => {\n                return this.renderGoal(goal, index);\n              })}\n          </Container>\n        </Container>\n      </BarContainer>\n    );\n  }\n}\n\nexport default injectIntl(GoalsCover);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport LoadingPlaceholder from './LoadingPlaceholder';\nimport { Span } from './Text';\n\n/**\n * Displays a location object\n */\nconst LocationAddress = ({ location, isLoading, showMessageIfEmpty }) => {\n  if (isLoading) {\n    return (\n      <div>\n        <LoadingPlaceholder height=\"1em\" mb=\"0.5em\" />\n        <LoadingPlaceholder height=\"1em\" mb=\"0.5em\" />\n        <LoadingPlaceholder height=\"1em\" />\n      </div>\n    );\n  } else if (!location || (!location.address && !location.country)) {\n    return !showMessageIfEmpty ? null : (\n      <Span fontStyle=\"italic\">\n        <FormattedMessage id=\"LocationAddress.empty\" defaultMessage=\"No address configured yet\" />\n      </Span>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      {location.address}\n      <br />\n      {location.country}\n    </React.Fragment>\n  );\n};\n\nLocationAddress.propTypes = {\n  location: PropTypes.shape({\n    address: PropTypes.string,\n    country: PropTypes.string,\n  }),\n  isLoading: PropTypes.bool,\n  showMessageIfEmpty: PropTypes.bool,\n};\n\nexport default LocationAddress;\n","import PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport roles from '../lib/constants/roles';\n\nimport I18nFormatters from './I18nFormatters';\n\nconst ROLES_DETAILS = defineMessages({\n  [roles.ADMIN]: {\n    defaultMessage:\n      '<strong>Admins</strong> can edit settings, approve expenses, and receive activity notifications (such as when a new expense is submitted). They are the active managers of a Collective.',\n  },\n  [roles.MEMBER]: {\n    defaultMessage:\n      '<strong>Core Contributors</strong> are shown as part of the team on your page but do not have admin access or get notifications. They do not play an active role on the platform.',\n  },\n  [roles.ACCOUNTANT]: {\n    defaultMessage:\n      '<strong>Accountants</strong> have read-only access to non-public data, uploaded files, and reports for record-keeping purposes. They cannot make changes and are not shown on your page.',\n  },\n});\n\nexport const hasRoleDescription = role => {\n  return Boolean(ROLES_DETAILS[role]);\n};\n\nconst MemberRoleDescription = ({ role }) => {\n  const intl = useIntl();\n  return hasRoleDescription(role) ? intl.formatMessage(ROLES_DETAILS[role], I18nFormatters) : null;\n};\n\nMemberRoleDescription.propTypes = {\n  role: PropTypes.oneOf(Object.values(roles)),\n};\n\nexport default MemberRoleDescription;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { omit } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport Container from './Container';\nimport { Flex } from './Grid';\nimport Link from './Link';\nimport StyledButton from './StyledButton';\nimport StyledInput from './StyledInput';\n\nconst Pagination = ({ route, limit, offset, total, scrollToTopOnChange, isDisabled, ignoredQueryParams }) => {\n  const router = useRouter();\n\n  if (!router) {\n    return null;\n  }\n\n  const totalPages = Math.ceil(total / limit);\n  const currentPage = offset / limit + 1;\n  const queryParams = ignoredQueryParams ? omit(router.query, ignoredQueryParams) : router.query;\n  route = route || router.asPath.split('?')[0];\n  isDisabled = isDisabled || totalPages <= 1;\n\n  const changePage = async ({ target, key }) => {\n    if (key && key !== 'Enter') {\n      return;\n    }\n\n    const { value } = target;\n    if (!value || !parseInt(value) || parseInt(value) === currentPage) {\n      return;\n    }\n    await router.push({ pathname: route, query: { ...queryParams, offset: (value - 1) * limit } });\n\n    if (scrollToTopOnChange) {\n      window.scrollTo(0, 0);\n    }\n  };\n\n  return (\n    <Flex alignItems=\"center\">\n      {currentPage > 1 && (\n        <Link\n          href={{ pathname: route, query: { ...queryParams, offset: offset - limit } }}\n          scroll={scrollToTopOnChange}\n        >\n          <StyledButton buttonSize=\"small\" disabled={isDisabled}>\n            <FormattedMessage id=\"Pagination.Prev\" defaultMessage=\"Previous\" />\n          </StyledButton>\n        </Link>\n      )}\n      <Container display=\"inline-block\" mx={2}>\n        <FormattedMessage\n          id=\"Pagination.Count\"\n          defaultMessage=\"Page {current} of {total}\"\n          values={{\n            current: (\n              <StyledInput\n                key={offset}\n                defaultValue={currentPage}\n                onBlur={changePage}\n                onKeyPress={changePage}\n                textAlign=\"center\"\n                mx={1}\n                px={1}\n                py={1}\n                width={30}\n                disabled={isDisabled}\n                type=\"text\"\n                pattern=\"[0-9]+\"\n                inputMode=\"numeric\"\n                data-cy=\"pagination-current\"\n              />\n            ),\n            total: <span data-cy=\"pagination-total\">{totalPages || 1}</span>,\n          }}\n        />\n      </Container>\n      {currentPage < totalPages && (\n        <Link\n          href={{ pathname: route, query: { ...queryParams, offset: offset + limit } }}\n          scroll={scrollToTopOnChange}\n        >\n          <StyledButton buttonSize=\"small\" disabled={isDisabled}>\n            <FormattedMessage id=\"Pagination.Next\" defaultMessage=\"Next\" />\n          </StyledButton>\n        </Link>\n      )}\n    </Flex>\n  );\n};\n\nPagination.propTypes = {\n  limit: PropTypes.number,\n  offset: PropTypes.number,\n  total: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  route: PropTypes.string,\n  /** By default, all query params will be transferred in the paginated link. This prop is useful to filter query params that are part of the URL. */\n  ignoredQueryParams: PropTypes.arrayOf(PropTypes.string),\n  /** Use this to scroll back on top when pagination changes */\n  scrollToTopOnChange: PropTypes.bool,\n};\n\nPagination.defaultProps = {\n  scrollToTopOnChange: true,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport dynamic from 'next/dynamic';\nimport { useIntl } from 'react-intl';\nimport type { PasswordStrengthBarProps } from 'react-password-strength-bar';\n\nconst ReactPasswordStrengthBar = dynamic(() => import('react-password-strength-bar'));\n\n/**\n * A wrapper around react-password-strength-bar to plug our custom styles and logic.\n * Loads the library dynamically to avoid bloating the bundle size.\n */\nexport const PasswordStrengthBar = (\n  props: Omit<PasswordStrengthBarProps, 'style' | 'shortScoreWord' | 'scoreWords'>,\n) => {\n  const intl = useIntl();\n  return (\n    <ReactPasswordStrengthBar\n      {...props}\n      style={{ visibility: props.password ? 'visible' : 'hidden' }}\n      shortScoreWord={intl.formatMessage({ id: 'FormError.minLength', defaultMessage: 'The value is too short' })}\n      scoreWords={[\n        intl.formatMessage({ id: 'Password.weak', defaultMessage: 'Weak' }),\n        intl.formatMessage({ id: 'Password.weak', defaultMessage: 'Weak' }),\n        intl.formatMessage({ id: 'Password.fair', defaultMessage: 'Fair' }),\n        intl.formatMessage({ id: 'Password.good', defaultMessage: 'Good' }),\n        intl.formatMessage({ id: 'Password.strong', defaultMessage: 'Strong' }),\n      ]}\n    />\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@styled-system/css';\nimport { get } from 'lodash';\nimport styled from 'styled-components';\nimport { v4 as uuid } from 'uuid';\nimport { isURL } from 'validator';\n\nimport { uploadImageWithXHR } from '../lib/api';\nimport { CustomScrollbarCSS } from '../lib/styled-components-shared-styles';\nimport { stripHTML } from '../lib/utils';\n\nimport Container from './Container';\nimport HTMLContent from './HTMLContent';\nimport LoadingPlaceholder from './LoadingPlaceholder';\nimport MessageBox from './MessageBox';\nimport StyledTag from './StyledTag';\n\nconst TrixEditorContainer = styled.div`\n  ${props =>\n    props.withBorders &&\n    css({\n      border: '1px solid',\n      borderColor: !props.error ? 'black.300' : 'red.300',\n      borderRadius: 10,\n      padding: 3,\n    })}\n\n  trix-editor {\n    border: none;\n    padding: 0;\n    margin-top: 8px;\n    padding-top: 8px;\n    outline-offset: 0.5em;\n    ${CustomScrollbarCSS}\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n    ${props => Boolean(props.editorMaxHeight) && css({ overflowY: 'scroll' })}\n\n    // Outline (only when there's no border)\n    ${props =>\n      !props.withBorders &&\n      css({\n        outline: !props.error ? 'none' : `1px dashed ${props.theme.colors.red[300]}`,\n        '&:focus': {\n          outline: `1px dashed ${props.theme.colors.black[200]}`,\n        },\n      })}\n\n    // Placeholder\n    &:empty:not(:focus)::before {\n      color: ${props => props.theme.colors.black[400]};\n    }\n\n    // Image captions are disabled\n    figcaption {\n      display: none;\n    }\n\n    ${props =>\n      css({\n        minHeight: props.editorMinHeight,\n        maxHeight: props.editorMaxHeight,\n      })}\n  }\n\n  trix-toolbar {\n    min-height: 40px;\n    background: ${props => props.toolbarBackgroundColor};\n    ${props => !props.withBorders && `box-shadow: 0px 5px 3px -3px rgba(0, 0, 0, 0.1);`}\n    z-index: 2;\n    margin-bottom: 8px;\n    ${props => props.withBorders && `min-height: 0px; margin-bottom: 0;`}\n\n    .trix-button-group {\n      border-radius: 6px;\n      border-color: #c4c7cc;\n      margin-bottom: 0;\n      background: white;\n    }\n\n    .trix-button {\n      border-bottom: none;\n      display: inline-block;\n      height: auto;\n\n      &:hover {\n        background: ${props => props.theme.colors.blue[100]};\n      }\n\n      &.trix-active {\n        background: ${props => props.theme.colors.blue[200]};\n      }\n\n      &::before,\n      &.trix-active::before {\n        margin: 4px; // Use this to reduce the icons size\n      }\n    }\n\n    /** Hide some buttons on the simplified version */\n    ${props =>\n      props.version === 'simplified' &&\n      css({\n        '.trix-button-group--file-tools': {\n          display: 'none',\n        },\n        '.trix-button-group--block-tools .trix-button:not(.trix-button--icon-number-list):not(.trix-button--icon-bullet-list)':\n          {\n            display: 'none',\n          },\n        '.trix-button--icon-bullet-list': {\n          borderLeft: 'none',\n        },\n      })}\n\n    /** Hide some buttons on mobile */\n    @media (max-width: 500px) {\n      .trix-button--icon-strike,\n      .trix-button--icon-number-list,\n      .trix-button--icon-decrease-nesting-level,\n      .trix-button--icon-increase-nesting-level {\n        display: none;\n      }\n    }\n\n    /** Sticky mode */\n    ${props =>\n      props.withStickyToolbar &&\n      css({\n        position: 'sticky',\n        top: props.toolbarTop || 0,\n        marginTop: props.toolbarOffsetY,\n        p: '10px',\n      })}\n\n    /** Custom icons */\n    .trix-button--icon-attach::before {\n      // See https://feathericons.com/?query=image\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Crect x='3' y='3' width='18' height='18' rx='2' ry='2'/%3E%3Ccircle cx='8.5' cy='8.5' r='1.5'/%3E%3Cpolyline points='21 15 16 10 5 21'/%3E%3C/svg%3E\");\n    }\n    .trix-button--video-attach::before {\n      top: 8%;\n      bottom: 4%;\n      // See https://feathericons.com/?query=video\n      background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' class='feather feather-video'%3E%3Cpolygon points='23 7 16 12 23 17 23 7'%3E%3C/polygon%3E%3Crect x='1' y='5' width='15' height='14' rx='2' ry='2'%3E%3C/rect%3E%3C/svg%3E\");\n    }\n  } // End of toolbar customization\n\n  /** Disabled mode */\n  ${props =>\n    props.isDisabled &&\n    css({\n      pointerEvents: 'none',\n      cursor: 'not-allowed',\n      background: '#f3f3f3',\n      'trix-toolbar,.trix-button-group': {\n        background: '#f3f3f3 !important',\n      },\n    })}\n`;\n\nconst SUPPORTED_SERVICE_URLS = { youTube: 'https://www.youtube-nocookie.com/embed/', anchorFm: 'https://anchor.fm/' };\n\n/**\n * A React wrapper around the Trix library to edit rich text.\n * Produces HTML and clear text.\n */\nexport default class RichTextEditor extends React.Component {\n  static propTypes = {\n    /** If not provided, an id will be automatically generated which will require a component update */\n    id: PropTypes.string,\n    defaultValue: PropTypes.string,\n    value: PropTypes.string,\n    placeholder: PropTypes.string,\n    toolbarBackgroundColor: PropTypes.string.isRequired,\n    /** A unique identified for the category of uploaded files. Required if version is not \"simplified\" */\n    kind: PropTypes.string,\n    /** Font size for the text */\n    fontSize: PropTypes.string,\n    autoFocus: PropTypes.bool,\n    /** Called when text is changed with html content as first param and text content as second param */\n    onChange: PropTypes.func,\n    /** A name for the input */\n    inputName: PropTypes.string,\n    /** Change this prop to reset the value */\n    reset: PropTypes.any,\n    /** If true, max text length will be displayed at the bottom right */\n    showCount: PropTypes.bool,\n    /** max length which is allowed */\n    maxLength: PropTypes.number,\n    /** Whether the toolbar should stick to the top */\n    withStickyToolbar: PropTypes.bool,\n    /** This component is borderless by default. Set this to `true` to change that. */\n    withBorders: PropTypes.bool,\n    /** This component is borderless by default. Set this to `true` to change that. */\n    version: PropTypes.oneOf(['default', 'simplified']),\n    /** Whether the field should be disabled */\n    disabled: PropTypes.bool,\n    /** If position is sticky, this prop defines the `top` property. Support responsive arrays */\n    toolbarTop: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n    /** Useful to compensate the height of the toolbar when editing inline */\n    toolbarOffsetY: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n    /** Min height for the full component */\n    editorMinHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n    editorMaxHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n    /** If truthy, will display a red outline */\n    error: PropTypes.any,\n    'data-cy': PropTypes.string,\n    videoEmbedEnabled: PropTypes.bool,\n    /** Called when an image is being uploaded to set a boolean */\n    setUploading: PropTypes.func,\n  };\n\n  static defaultProps = {\n    withStickyToolbar: false,\n    toolbarTop: 0,\n    toolbarOffsetY: -62, // Default Trix toolbar height\n    inputName: 'content',\n    toolbarBackgroundColor: 'white',\n    version: 'default',\n    'data-cy': 'RichTextEditor',\n    videoEmbedEnabled: false,\n  };\n\n  constructor(props) {\n    super(props);\n    this.editorRef = React.createRef();\n    this.mainContainerRef = React.createRef();\n    this.state = { id: props.id, error: null };\n    this.isReady = false;\n\n    if (typeof window !== 'undefined') {\n      this.Trix = require('trix');\n      this.Trix.config.blockAttributes.heading1 = { tagName: 'h3' };\n      this.Trix.config.attachments.preview.caption = { name: false, size: false };\n    }\n  }\n\n  componentDidMount() {\n    if (!this.state.id) {\n      this.setState({ id: uuid() });\n    } else if (!this.isReady) {\n      this.initialize();\n    }\n  }\n\n  componentDidUpdate(oldProps) {\n    if (!this.isReady) {\n      this.initialize();\n    } else if (oldProps.reset !== this.props.reset) {\n      this.editorRef.current.editor.loadHTML('');\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.isReady) {\n      this.editorRef.current.removeEventListener('trix-change', this.handleChange);\n      this.editorRef.current.removeEventListener('trix-attachment-add', this.handleUpload);\n      this.editorRef.current.removeEventListener('trix-attachment-add', this.handleFileAccept);\n      this.editorRef.current.removeEventListener('trix-action-invoke', this.trixActionInvoke);\n    }\n  }\n\n  getEditor() {\n    return this.editorRef.current.editor;\n  }\n\n  initialize = () => {\n    if (this.Trix && this.editorRef.current) {\n      // Listen for changes\n      this.editorRef.current.addEventListener('trix-change', this.handleChange, false);\n      this.editorRef.current.addEventListener('trix-attachment-add', this.handleUpload);\n      this.editorRef.current.addEventListener('trix-file-accept', this.handleFileAccept);\n      this.editorRef.current.addEventListener('trix-action-invoke', this.trixActionInvoke);\n      this.editorRef.current.addEventListener('trix-initialize', event => {\n        if (this.props.videoEmbedEnabled) {\n          this.replaceEmbeddedIFrames(this.props.value || this.props.defaultValue);\n          this.trixEmbed(event);\n        }\n        // Some special handling for links\n        if (this.mainContainerRef.current) {\n          // We must listen when the user presses the 'Enter' key and when the user clicks the 'Link' button as well\n          const linkInput = this.mainContainerRef.current.querySelector(\"[data-trix-input][name='href']\");\n          linkInput?.addEventListener('keydown', e => {\n            if (e.key === 'Enter') {\n              this.handleLink();\n            }\n          });\n\n          const addLinkBtn = this.mainContainerRef.current.querySelector(\"[data-trix-method='setAttribute']\");\n          addLinkBtn?.addEventListener('click', this.handleLink);\n        }\n      });\n\n      // Component ready!\n      this.isReady = true;\n    }\n  };\n\n  /** ---- Trix handlers ---- */\n\n  replaceEmbeddedIFrames = value => {\n    const iframeRegex = new RegExp(`<iframe.+?iframe>`, 'ig');\n    let match;\n    let lastIndex = 0;\n\n    while ((match = iframeRegex.exec(value))) {\n      if (lastIndex === 0) {\n        this.getEditor().loadHTML('');\n      }\n      const iframe = match[0];\n      const position = match.index;\n      const preText = value.substring(lastIndex, position);\n      this.getEditor().setSelectedRange([lastIndex, position]);\n      this.getEditor().insertHTML(preText);\n      const attachment = new this.Trix.Attachment({ content: iframe });\n      this.getEditor().insertAttachment(attachment);\n      lastIndex = match.index + iframe.length;\n      const postText = value.substring(lastIndex, value.length);\n      this.getEditor().insertHTML(postText);\n    }\n  };\n\n  trixEmbed = e => {\n    const videoEmbedButton = `<button type=\"button\" tabindex=\"-1\" data-trix-action=\"x-video-dialog-open\" title=\"Attach Video\" class=\"trix-button trix-button--icon trix-button--video-attach\">Attach Video</button>`;\n    const videoEmbedDialog = `\n            <div class=\"trix-dialog\" data-trix-dialog=\"video-url\" data-trix-dialog-attribute=\"video\">\n              <div class=\"trix-dialog__link-fields\">\n                <input type=\"url\" name=\"video-url\" class=\"trix-input trix-input--dialog trix-input--dialog-embed\" placeholder=\"Enter Video URL…\" aria-label=\"Video URL\" data-trix-input=\"\">\n                <div class=\"trix-button-group\">\n                  <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"Add Video\" data-trix-action=\"x-add-embed\">\n                </div>\n              </div>\n              <strong>Note: Only YouTube and Anchor.fm links are supported.</strong>\n            </div>`;\n    const { toolbarElement } = e.target;\n    const attachFilesButton = toolbarElement.querySelector('[data-trix-action=attachFiles]');\n    attachFilesButton.insertAdjacentHTML('afterend', videoEmbedButton);\n    const trixDialog = toolbarElement.querySelector('.trix-dialog--link');\n    trixDialog.insertAdjacentHTML('afterend', videoEmbedDialog);\n  };\n\n  trixActionInvoke = e => {\n    const { toolbarElement } = e.target;\n    if (e.actionName === 'x-video-dialog-open') {\n      const attachVideoDialog = toolbarElement.querySelector('[data-trix-dialog=video-url]');\n      const attachVideoDialogInput = toolbarElement.querySelector('.trix-input--dialog-embed');\n      if (attachVideoDialog.getAttribute('data-trix-active') === '') {\n        attachVideoDialog.removeAttribute('data-trix-active');\n      } else {\n        attachVideoDialog.setAttribute('data-trix-active', '');\n        attachVideoDialogInput.removeAttribute('disabled');\n      }\n    } else if (e.actionName === 'x-add-embed') {\n      const embedLink = toolbarElement.querySelector('.trix-input--dialog-embed').value?.trim();\n      if (embedLink) {\n        this.embedIframe(embedLink);\n      }\n    }\n  };\n\n  constructVideoEmbedURL = (service, id) => {\n    if (service === 'youtube') {\n      return `${SUPPORTED_SERVICE_URLS.youTube}${id}`;\n    } /* else if (service === 'vimeo') {\n      return `https://player.vimeo.com/video/${id}`;\n    } */ else if (service === 'anchorFm') {\n      return `${SUPPORTED_SERVICE_URLS.anchorFm}${id}`;\n    } else {\n      return null;\n    }\n  };\n\n  parseServiceLink = videoLink => {\n    const regexps = {\n      youtube: new RegExp(\n        '(?:https?://)?(?:www\\\\.)?youtu(?:\\\\.be/|be\\\\.com/\\\\S*(?:watch|embed)(?:(?:(?=/[^&\\\\s?]+(?!\\\\S))/)|(?:\\\\S*v=|v/)))([^&\\\\s?]+)',\n        'i',\n      ),\n      vimeo: new RegExp(\n        '(http|https)?://(www\\\\.)?vimeo\\\\.com/(?:channels/(?:\\\\w+/)?|groups/([^/]*)/videos/|)(\\\\d+)(?:|/?)',\n      ),\n      anchorFm: /^(http|https)?:\\/\\/(www\\.)?anchor\\.fm\\/([^/]+)(\\/embed)?(\\/episodes\\/)?([^/]+)?\\/?$/,\n    };\n    for (const service in regexps) {\n      const matches = regexps[service].exec(videoLink);\n      if (matches) {\n        if (service === 'anchorFm') {\n          const podcastName = matches[3];\n          const episodeId = matches[6];\n          const podcastUrl = `${podcastName}/embed`;\n          return { service, id: episodeId ? `${podcastUrl}/episodes/${episodeId}` : podcastUrl };\n        } else {\n          return { service, id: matches[matches.length - 1] };\n        }\n      }\n    }\n    return {};\n  };\n\n  embedIframe = videoLink => {\n    const { id, service } = this.parseServiceLink(videoLink);\n    const embedLink = this.constructVideoEmbedURL(service, id);\n    if (embedLink) {\n      const sanitizedLink = embedLink.replace(/[\"\\\\]/g, ''); // Small security enhancement, prevents going out of `src`\n      const videoServices = ['youtube', 'vimeo'];\n      let attachmentData;\n      if (videoServices.includes(service)) {\n        attachmentData = {\n          contentType: '--embed-iframe-video',\n          content: `<iframe src=\"${sanitizedLink}/?showinfo=0\" width=\"100%\" height=\"394\" frameborder=\"0\" allowfullscreen/>`,\n        };\n      } else {\n        attachmentData = {\n          contentType: `--embed-iframe-${service}`,\n          content: `<iframe src=\"${sanitizedLink}\" width=\"100%\" frameborder=\"0\"/>`,\n        };\n      }\n\n      this.getEditor().insertAttachment(new this.Trix.Attachment(attachmentData));\n    }\n  };\n\n  handleChange = e => {\n    // Trigger content formatters\n    this.autolink();\n\n    // Notify parent function\n    if (this.props.onChange) {\n      this.props.onChange(e);\n    }\n\n    // Reset errors\n    if (this.state.error) {\n      this.setState({ error: null });\n    }\n  };\n\n  handleFileAccept = e => {\n    if (!/^image\\//.test(e.file.type)) {\n      alert('You can only upload images.');\n      e.preventDefault();\n    } else if (e.file.size > 4000000) {\n      // Prevent attaching files > 4MB\n      alert('This file is too big (max: 4mb).');\n      e.preventDefault();\n    }\n  };\n\n  handleUpload = e => {\n    const { attachment } = e;\n    const attachmentContent = get(attachment, 'attachment.attributes.values.content');\n    const isVideoAttachment =\n      attachmentContent?.includes(`<iframe src=\"${SUPPORTED_SERVICE_URLS.youTube}`) ||\n      attachmentContent?.includes(`<iframe src=\"${SUPPORTED_SERVICE_URLS.anchorFm}`);\n    if (isVideoAttachment) {\n      return;\n    } else if (!attachment.file) {\n      attachment.remove(); // Remove unknown stuff, for example when copy-pasting HTML\n      return;\n    }\n\n    this.props.setUploading?.(true);\n\n    const onProgress = progress => attachment.setUploadProgress(progress);\n    const onSuccess = fileURL => {\n      this.props.setUploading?.(false);\n      attachment.setAttributes({ url: fileURL, href: fileURL });\n    };\n    const onFailure = () => {\n      this.props.setUploading?.(false);\n      this.setState({ error: 'File upload failed' });\n      attachment.remove();\n    };\n    uploadImageWithXHR(attachment.file, this.props.kind, { onProgress, onSuccess, onFailure });\n    return e;\n  };\n\n  handleLink = () => {\n    const urlInput = this.mainContainerRef.current?.querySelector(\"[data-trix-input][name='href']\");\n    const urlInputValue = urlInput?.value?.trim();\n\n    // Ignore missing input or empty values\n    if (!urlInputValue) {\n      return;\n    }\n\n    // Automatically add 'https://' to the url\n    // eslint-disable-next-line camelcase\n    if (isURL(urlInputValue, { require_protocol: false }) && !isURL(urlInputValue, { require_protocol: true })) {\n      urlInput.value = `https://${urlInputValue}`;\n    }\n  };\n\n  /** Automatically create anchors with hrefs for links */\n  autolink() {\n    const linkRegex = new RegExp(`(https?://\\\\S+\\\\.\\\\S+)\\\\s`, 'ig');\n    const editor = this.getEditor();\n    const content = editor.getDocument().toString();\n    let match;\n    while ((match = linkRegex.exec(content))) {\n      const url = match[1];\n      if (isURL(url)) {\n        const position = match.index;\n        const urlLength = this.autolinkDelimiter(url);\n        const range = [position, position + urlLength];\n        const hrefAtRange = editor.getDocument().getCommonAttributesAtRange(range).href;\n        const newURL = url.slice(0, urlLength);\n        if (hrefAtRange !== newURL) {\n          this.updateInRange(editor, range, 0, () => {\n            if (editor.canActivateAttribute('href')) {\n              editor.activateAttribute('href', newURL);\n            }\n          });\n        }\n      }\n    }\n  }\n\n  /** A helper used by autolink to find where the url actually ends\n   * Credits:\n   * https://github.com/github/cmark-gfm/blob/36c1553d2a1f04dc1628e76b18490edeff78b8d0/extensions/autolink.c#L37\n   * https://github.com/vmg/redcarpet/blob/92a7b3ae2241b862e9bf45e0af3cf53ebdfb0afb/ext/redcarpet/autolink.c#L58\n   */\n  autolinkDelimiter = url => {\n    let lastCharacterPosition = url.length;\n\n    while (lastCharacterPosition > 0) {\n      const lastCharacterIndex = lastCharacterPosition - 1;\n      const closingPair = url[lastCharacterIndex];\n\n      let openingPair;\n      if (closingPair === ')') {\n        openingPair = '(';\n      } else if (closingPair === ']') {\n        openingPair = '[';\n      } else if (closingPair === '}') {\n        openingPair = '{';\n      } else if (closingPair === '\"') {\n        openingPair = '\"';\n      } else if (closingPair === \"'\") {\n        openingPair = \"'\";\n      }\n\n      // Ensure single punctuations marks at the end of the URL are not included as part of link\n      if ('?!.,:;*_~'.includes(url[lastCharacterIndex])) {\n        lastCharacterPosition--;\n      } else if (openingPair) {\n        let opening = 0,\n          closing = 0;\n\n        /** Check to ensure that when a URL is enclosed within pair punctuations,\n         * we do not include the closing punctuation as part of the link.\n         * We only want to accept a closing punctuation at the end of the link,\n         * if there is a corresponding opening punctuation within the URL.\n         */\n\n        for (let i = 0; i < lastCharacterPosition; i++) {\n          if (url[i] === openingPair) {\n            opening++;\n          } else if (url[i] === closingPair) {\n            closing++;\n          }\n        }\n\n        if (opening >= closing) {\n          break;\n        }\n\n        lastCharacterPosition--;\n      } else {\n        break;\n      }\n    }\n\n    return lastCharacterPosition;\n  };\n\n  /** A trix helper that will apply func in range then restore base range when it's done */\n  updateInRange(editor, range, offset = 0, updateFunc) {\n    const baseRange = editor.getSelectedRange();\n    editor.setSelectedRange(range);\n    updateFunc();\n    editor.setSelectedRange([baseRange[0] + offset, baseRange[1] + offset]);\n  }\n\n  /** ---- Render ---- */\n\n  render() {\n    const {\n      defaultValue,\n      withStickyToolbar,\n      toolbarTop,\n      toolbarOffsetY,\n      toolbarBackgroundColor,\n      autoFocus,\n      placeholder,\n      editorMinHeight,\n      withBorders,\n      inputName,\n      disabled,\n      error,\n      fontSize,\n      value,\n      version,\n      showCount,\n      maxLength,\n      editorMaxHeight,\n    } = this.props;\n\n    return !this.state.id ? (\n      <LoadingPlaceholder\n        maxHeight={editorMaxHeight ? editorMaxHeight + 56 : undefined}\n        height={editorMinHeight ? editorMinHeight + 56 : 200}\n      />\n    ) : (\n      <TrixEditorContainer\n        withStickyToolbar={withStickyToolbar}\n        toolbarTop={toolbarTop}\n        toolbarOffsetY={toolbarOffsetY}\n        toolbarBackgroundColor={toolbarBackgroundColor}\n        editorMinHeight={editorMinHeight}\n        editorMaxHeight={editorMaxHeight}\n        withBorders={withBorders}\n        version={version}\n        isDisabled={disabled}\n        error={error}\n        data-cy={this.props['data-cy']}\n        ref={this.mainContainerRef}\n      >\n        {this.state.error && (\n          <MessageBox type=\"error\" mb=\"36px\" withIcon>\n            {this.state.error.toString()}\n          </MessageBox>\n        )}\n        <input id={this.state.id} value={value || defaultValue} type=\"hidden\" name={inputName} />\n        <HTMLContent fontSize={fontSize}>\n          {!showCount ? (\n            <trix-editor\n              ref={this.editorRef}\n              input={this.state.id}\n              autofocus={autoFocus ? true : undefined}\n              placeholder={placeholder}\n            />\n          ) : (\n            <Container position=\"relative\">\n              <trix-editor\n                ref={this.editorRef}\n                input={this.state.id}\n                autofocus={autoFocus ? true : undefined}\n                placeholder={placeholder}\n              />\n              <Container position=\"absolute\" bottom=\"1em\" right=\"1em\">\n                <StyledTag textTransform=\"uppercase\">\n                  <span>{stripHTML(value || defaultValue).length}</span>\n                  {maxLength && <span> / {maxLength}</span>}\n                </StyledTag>\n              </Container>\n            </Container>\n          )}\n        </HTMLContent>\n      </TrixEditorContainer>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport SearchForm from './SearchForm';\n\nconst messages = defineMessages({\n  searchPlaceholder: {\n    id: 'search.placeholder',\n    defaultMessage: 'Search...',\n  },\n});\n\n/**\n * A wrapper around `SearchForm` that holds state and interacts with parent\n * through `onSubmit`, rather than `onChange`.\n */\nconst SearchBar = ({ onSubmit, defaultValue, placeholder, ...props }) => {\n  const [value, setValue] = React.useState(defaultValue || '');\n  const intl = useIntl();\n\n  // Reset value when `defaultValue` change, to handle reset filters\n  React.useEffect(() => {\n    setValue(defaultValue || '');\n  }, [defaultValue]);\n\n  return (\n    <SearchForm\n      placeholder={placeholder || intl.formatMessage(messages.searchPlaceholder)}\n      value={value}\n      onChange={setValue}\n      onSubmit={event => {\n        event.preventDefault();\n        const searchInput = event.target.elements.q;\n        onSubmit(searchInput.value || null);\n      }}\n      {...props}\n    />\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  defaultValue: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport default SearchBar;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { themeGet } from '@styled-system/theme-get';\nimport { get } from 'lodash';\nimport styled from 'styled-components';\n\nimport Container from './Container';\nimport StyledInput from './StyledInput';\nimport { Span } from './Text';\n\nconst InputContainer = styled(Container)`\n  &:hover {\n    border-color: ${themeGet('colors.primary.300')};\n  }\n\n  &:focus-within {\n    border-color: ${themeGet('colors.primary.500')};\n  }\n\n  input {\n    border: none;\n    outline: none;\n    box-shadow: none;\n  }\n\n  input:focus ~ div svg {\n    color: ${themeGet('colors.primary.300')};\n  }\n`;\n\nconst getColor = ({ error, success }) => {\n  if (error) {\n    return 'red.300';\n  }\n\n  if (success) {\n    return 'green.300';\n  }\n\n  return 'black.800';\n};\n\nconst getBgColor = ({ error, focused, success }) => {\n  if (focused) {\n    return 'primary.100';\n  }\n\n  if (error) {\n    return 'red.100';\n  }\n\n  if (success) {\n    return 'green.100';\n  }\n\n  return 'black.50';\n};\n\nconst getBorderColor = ({ error, focused, success }) => {\n  if (focused) {\n    return 'primary.300';\n  }\n\n  if (error) {\n    return 'red.500';\n  }\n\n  if (success) {\n    return 'green.300';\n  }\n\n  return 'black.300';\n};\n\n/**\n * A styled input with a prepended or appended field element.\n * @see See [StyledInput](/#!/StyledInput) for details about props passed to it\n */\nconst StyledInputGroup = ({\n  append,\n  prepend,\n  disabled,\n  success,\n  error,\n  maxWidth,\n  containerProps,\n  prependProps,\n  appendProps,\n  innerRef,\n  autoFocus,\n  overflow,\n  ...inputProps\n}) => {\n  const [focused, setFocus] = useState(false);\n  return (\n    <React.Fragment>\n      <InputContainer\n        bg={disabled ? 'black.50' : 'white.full'}\n        maxWidth={maxWidth}\n        border=\"1px solid\"\n        borderColor={getBorderColor({ error, focused, success })}\n        borderRadius=\"4px\"\n        display=\"flex\"\n        alignItems=\"center\"\n        lineHeight=\"1.5\"\n        {...containerProps}\n      >\n        {prepend && (\n          <Container\n            fontSize=\"14px\"\n            borderRadius=\"4px 0 0 4px\"\n            p={2}\n            color={getColor({ error, success })}\n            maxHeight=\"100%\"\n            whiteSpace=\"nowrap\"\n            {...prependProps}\n            bg={(disabled && 'black.50') || get(prependProps, 'bg') || getBgColor({ error, focused, success })}\n          >\n            {prepend}\n          </Container>\n        )}\n        <StyledInput\n          bare\n          autoFocus={autoFocus}\n          color={getColor({ error, success })}\n          type=\"text\"\n          overflow={overflow || 'scroll'}\n          fontSize=\"14px\"\n          flex=\"1 1 auto\"\n          disabled={disabled}\n          py=\"0\"\n          px={2}\n          maxHeight=\"100%\"\n          error={error}\n          minWidth=\"0\"\n          width=\"100%\"\n          ref={innerRef}\n          {...inputProps}\n          onFocus={e => {\n            setFocus(true);\n            if (inputProps && inputProps.onFocus) {\n              inputProps.onFocus(e);\n            }\n          }}\n          onBlur={e => {\n            setFocus(false);\n            if (inputProps && inputProps.onBlur) {\n              inputProps.onBlur(e);\n            }\n          }}\n        />\n        {append && (\n          <Container\n            borderRadius=\"4px 0 0 4px\"\n            p={2}\n            color={getColor({ error, success })}\n            fontSize=\"14px\"\n            {...appendProps}\n            bg={getBgColor({ error, focused, success })}\n          >\n            {append}\n          </Container>\n        )}\n      </InputContainer>\n      {Boolean(error) && typeof error !== 'boolean' && (\n        <Span display=\"block\" color=\"red.500\" pt={2} fontSize=\"10px\">\n          {error}\n        </Span>\n      )}\n    </React.Fragment>\n  );\n};\n\nStyledInputGroup.propTypes = {\n  /** Text shown after input */\n  append: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.element]),\n  /** Text shown before input */\n  prepend: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.element]),\n  /** Show disabled state for field */\n  disabled: PropTypes.bool,\n  /** Show error state for field, and a message error if given a string */\n  error: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  /** Show success state for field */\n  success: PropTypes.bool,\n  /** Passed to internal StyledInput */\n  type: PropTypes.string,\n  /** Props passed to the `InputContainer` */\n  containerProps: PropTypes.object,\n  /** Props passed to the prepend `Container` */\n  prependProps: PropTypes.object,\n  /** Props passed to the append `Container` */\n  appendProps: PropTypes.object,\n  /** Max Width */\n  maxWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** Whether to auto focus this element **/\n  autoFocus: PropTypes.bool,\n  /** Specifies what should happen if content overflows an element's box **/\n  overflow: PropTypes.string,\n  innerRef: PropTypes.any,\n};\n\nexport default StyledInputGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport { formatCurrency } from '../../../lib/currency-utils';\n\nimport { StyledSelectFilter } from '../../StyledSelectFilter';\n\nconst OPTION_LABELS = defineMessages({\n  ALL: {\n    id: 'Amount.AllShort',\n    defaultMessage: 'All',\n  },\n  rangeFrom: {\n    id: 'Amount.RangeFrom',\n    defaultMessage: '{minAmount} and above',\n  },\n  rangeFromTo: {\n    id: 'Amount.RangeFromTo',\n    defaultMessage: '{minAmount} to {maxAmount}',\n  },\n});\n\nexport const parseAmountRange = strValue => {\n  if (!strValue) {\n    return [];\n  } else if (strValue.endsWith('+')) {\n    return [parseInt(strValue.slice(0, -1))];\n  } else {\n    const [minStr, maxStr] = strValue.split('-');\n    return [parseInt(minStr), parseInt(maxStr)];\n  }\n};\n\nconst getOption = (intl, currency, minAmount, maxAmount) => {\n  const { locale } = intl;\n  return {\n    value: maxAmount ? `${minAmount}-${maxAmount}` : `${minAmount}+`,\n    label: intl.formatMessage(OPTION_LABELS[maxAmount ? 'rangeFromTo' : 'rangeFrom'], {\n      minAmount: formatCurrency(minAmount * 100, currency, { precision: 0, locale }),\n      maxAmount: formatCurrency(maxAmount * 100, currency, { precision: 0, locale }),\n    }),\n  };\n};\n\nconst AmountFilter = ({ currency, onChange, value, steps, ...props }) => {\n  const intl = useIntl();\n  const allExpensesOption = { label: intl.formatMessage(OPTION_LABELS.ALL), value: 'ALL' };\n  const options = React.useMemo(() => {\n    return [allExpensesOption, ...steps.map((step, idx) => getOption(intl, currency, step, steps[idx + 1]))];\n  }, [steps]);\n\n  return (\n    <StyledSelectFilter\n      inputId=\"expenses-amount-filter\"\n      data-cy=\"expenses-filter-amount\"\n      value={value ? getOption(intl, currency, ...parseAmountRange(value)) : allExpensesOption}\n      onChange={({ value }) => onChange(value)}\n      options={options}\n      {...props}\n    />\n  );\n};\n\nAmountFilter.propTypes = {\n  steps: PropTypes.arrayOf(PropTypes.number).isRequired,\n  currency: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nAmountFilter.defaultProps = {\n  steps: [0, 50, 500, 5000],\n};\n\nexport default AmountFilter;\n","import React from 'react';\nimport { closestCenter, DndContext } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { Plus } from '@styled-icons/fa-solid/Plus';\nimport { Times } from '@styled-icons/fa-solid/Times';\nimport { DragIndicator } from '@styled-icons/material/DragIndicator';\nimport { sortBy } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport { SocialLink, SocialLinkInput, SocialLinkType } from '../../lib/graphql/types/v2/graphql';\nimport { isValidUrl } from '../../lib/utils';\n\nimport { Box, Flex } from '../Grid';\nimport StyledButton from '../StyledButton';\nimport StyledInput from '../StyledInput';\nimport StyledSelect from '../StyledSelect';\nimport { Span } from '../Text';\n\nexport type SocialLinksFormFieldProps = {\n  value?: SocialLink[];\n  touched?: boolean;\n  onChange: (value: SocialLinkInput[]) => void;\n};\n\nexport default function SocialLinksFormField({ value = [], touched, onChange }: SocialLinksFormFieldProps) {\n  const [items, setItems] = React.useState(value.map(({ url, type }, i) => ({ url, type, sortId: i.toString() })));\n\n  React.useEffect(() => {\n    onChange(items.map(({ url, type }) => ({ url, type })));\n  }, [items]);\n\n  const onItemChange = React.useCallback(\n    (socialLink, sortId) => {\n      const newItems = items.map(item => {\n        if (item.sortId === sortId) {\n          return { ...item, ...socialLink };\n        }\n        return item;\n      });\n      setItems(newItems);\n    },\n    [items, onChange],\n  );\n\n  const onRemoveItem = React.useCallback(\n    sortId => {\n      const newItems = items.filter(item => item.sortId !== sortId);\n      setItems(newItems);\n    },\n    [items, onChange],\n  );\n\n  const addItem = React.useCallback(() => {\n    const newItems = [...items, { url: '', type: SocialLinkType.WEBSITE }].map((item, i) => ({\n      ...item,\n      sortId: i.toString(),\n    }));\n    setItems(newItems);\n  }, [items, onChange]);\n\n  function handleDragEnd(event) {\n    const { active, over } = event;\n    if (active.id !== over.id) {\n      const oldIndex = items.findIndex(item => item.sortId === active.id);\n      const newIndex = items.findIndex(item => item.sortId === over.id);\n      const newItems = arrayMove(items, oldIndex, newIndex);\n      setItems(newItems);\n    }\n  }\n\n  return (\n    <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd}>\n      <Flex width=\"100%\" flexDirection=\"column\">\n        <SortableContext items={items.map(item => item.sortId)} strategy={verticalListSortingStrategy}>\n          {items.map(socialLink => {\n            return (\n              <SocialLinkItem\n                key={socialLink.sortId}\n                error={touched && !isValidUrl(socialLink.url)}\n                value={socialLink}\n                onChange={onItemChange}\n                onRemoveItem={onRemoveItem}\n              />\n            );\n          })}\n          <Flex mt={2} justifyContent=\"center\">\n            <StyledButton\n              disabled={value.length >= 10}\n              type=\"button\"\n              buttonSize=\"tiny\"\n              buttonStyle=\"standard\"\n              onClick={addItem}\n            >\n              <Plus size=\"10px\" />\n              <Span ml={2}>\n                <FormattedMessage defaultMessage=\"Add social link\" />\n              </Span>\n            </StyledButton>\n          </Flex>\n        </SortableContext>\n      </Flex>\n    </DndContext>\n  );\n}\n\ntype SocialLinkTypePickerProps = {\n  value: SocialLinkType;\n  onChange: (value: SocialLinkType) => void;\n} & any;\n\nfunction SocialLinkTypePicker({ value, onChange, ...pickerProps }: SocialLinkTypePickerProps) {\n  const options = [\n    {\n      value: SocialLinkType.WEBSITE.toString(),\n      label: 'Website',\n    },\n    {\n      value: SocialLinkType.DISCORD.toString(),\n      label: 'Discord',\n    },\n    {\n      value: SocialLinkType.FACEBOOK.toString(),\n      label: 'Facebook',\n    },\n    {\n      value: SocialLinkType.GITHUB.toString(),\n      label: 'GitHub',\n    },\n    {\n      value: SocialLinkType.GITLAB.toString(),\n      label: 'GitLab',\n    },\n    {\n      value: SocialLinkType.GIT.toString(),\n      label: 'Git Repository',\n    },\n    {\n      value: SocialLinkType.INSTAGRAM.toString(),\n      label: 'Instagram',\n    },\n    {\n      value: SocialLinkType.MASTODON.toString(),\n      label: 'Mastodon',\n    },\n    {\n      value: SocialLinkType.MATTERMOST.toString(),\n      label: 'Mattermost',\n    },\n    {\n      value: SocialLinkType.TUMBLR.toString(),\n      label: 'Tumblr',\n    },\n    {\n      value: SocialLinkType.TWITTER.toString(),\n      label: 'Twitter',\n    },\n    {\n      value: SocialLinkType.YOUTUBE.toString(),\n      label: 'YouTube',\n    },\n    {\n      value: SocialLinkType.MEETUP.toString(),\n      label: 'Meetup',\n    },\n    {\n      value: SocialLinkType.LINKEDIN.toString(),\n      label: 'LinkedIn',\n    },\n    {\n      value: SocialLinkType.SLACK.toString(),\n      label: 'Slack',\n    },\n    {\n      value: SocialLinkType.DISCOURSE.toString(),\n      label: 'Discourse',\n    },\n    {\n      value: SocialLinkType.PIXELFED.toString(),\n      label: 'Pixelfed',\n    },\n    {\n      value: SocialLinkType.GHOST.toString(),\n      label: 'Ghost',\n    },\n    {\n      value: SocialLinkType.PEERTUBE.toString(),\n      label: 'PeerTube',\n    },\n    {\n      value: SocialLinkType.TIKTOK.toString(),\n      label: 'TikTok',\n    },\n  ];\n\n  return (\n    <StyledSelect\n      {...pickerProps}\n      data-cy=\"social-link-type-picker\"\n      value={options.find(o => o.value === value?.toString())}\n      defaultValue={options.find(o => o.value === SocialLinkType.WEBSITE.toString())}\n      onChange={({ value }) => onChange(value)}\n      options={sortBy(options, 'label')}\n    />\n  );\n}\n\ntype SocialLinkItemProps = {\n  value: SocialLink & { sortId: string };\n  error?: boolean;\n  onChange: (value: SocialLink, sortId: string) => void;\n  onRemoveItem: (sortId: string) => void;\n};\n\nfunction SocialLinkItem({ value, error, onChange, onRemoveItem }: SocialLinkItemProps) {\n  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id: value.sortId });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  const onFieldChange = React.useCallback(\n    (field, fieldValue) => {\n      onChange(\n        {\n          ...value,\n          [field]: fieldValue,\n        },\n        value.sortId,\n      );\n    },\n    [onChange, value],\n  );\n\n  const onUrlChange = React.useCallback(\n    e => {\n      const newUrl = e.target.value;\n      onChange(\n        {\n          type: typeFromUrl(newUrl) ?? value.type,\n          url: newUrl,\n        },\n        value.sortId,\n      );\n    },\n    [onChange, value],\n  );\n\n  const onUrlBlur = React.useCallback(() => {\n    const hasSchemaRegexp = /^[^:]+:\\/\\//;\n\n    if (value.url.trim() === '') {\n      return;\n    }\n\n    if (!value.url.match(hasSchemaRegexp)) {\n      onChange(\n        {\n          ...value,\n          url: `https://${value.url}`,\n        },\n        value.sortId,\n      );\n    }\n  }, [onChange, value]);\n\n  const onRemove = React.useCallback(() => {\n    onRemoveItem(value.sortId);\n  }, [onRemoveItem, value.sortId]);\n\n  return (\n    <Flex ref={setNodeRef} style={style} alignItems=\"center\" my={1} gap=\"5px\">\n      <div {...listeners} {...attributes}>\n        <DragIndicator size=\"15px\" style={{ cursor: 'grab' }} />\n      </div>\n      <Flex flexGrow={1} flexWrap=\"wrap\" gap=\"5px\">\n        <Box width={['100%', '120px']}>\n          <SocialLinkTypePicker value={value.type} onChange={type => onFieldChange('type', type)} />\n        </Box>\n        <StyledInput\n          autoFocus={value.url === ''}\n          error={error}\n          flexGrow={1}\n          value={value.url}\n          onBlur={onUrlBlur}\n          onChange={onUrlChange}\n          placeholder=\"https://opencollective.com/\"\n        />\n      </Flex>\n\n      <StyledButton\n        tabIndex={-1}\n        padding={0}\n        width=\"20px\"\n        height=\"20px\"\n        type=\"button\"\n        buttonStyle=\"borderless\"\n        onClick={onRemove}\n      >\n        <Times size=\"10px\" />\n      </StyledButton>\n    </Flex>\n  );\n}\n\nconst knownSocialLinkDomains = [\n  { type: SocialLinkType.DISCORD, regexp: /^(https:\\/\\/)?discord.com/ },\n  { type: SocialLinkType.FACEBOOK, regexp: /^(https:\\/\\/)?(www\\.)?facebook.com/ },\n  { type: SocialLinkType.GITHUB, regexp: /^(https:\\/\\/)?github.com/ },\n  { type: SocialLinkType.GITLAB, regexp: /^(https:\\/\\/)?gitlab.com/ },\n  { type: SocialLinkType.INSTAGRAM, regexp: /^(https:\\/\\/)?(www\\.)?instagram.com/ },\n  { type: SocialLinkType.LINKEDIN, regexp: /^(https:\\/\\/)?(www\\.)?linkedin.com/ },\n  { type: SocialLinkType.MEETUP, regexp: /^(https:\\/\\/)?meetup.com/ },\n  { type: SocialLinkType.SLACK, regexp: /^(https:\\/\\/)?[^.]+.?slack.com/ },\n  { type: SocialLinkType.TIKTOK, regexp: /^(https:\\/\\/)?(www\\.)?tiktok.com/ },\n  { type: SocialLinkType.TUMBLR, regexp: /^(https:\\/\\/)?[^.]+\\.?tumblr.com/ },\n  { type: SocialLinkType.TWITTER, regexp: /^(https:\\/\\/)?twitter.com/ },\n  { type: SocialLinkType.YOUTUBE, regexp: /^(https:\\/\\/)?(www\\.)?youtube.com/ },\n];\n\nfunction typeFromUrl(url: string): SocialLinkType | null {\n  for (const knownDomain of knownSocialLinkDomains) {\n    if (url.match(knownDomain.regexp)) {\n      return knownDomain.type;\n    }\n  }\n\n  return null;\n}\n","import { startCase, toUpper } from 'lodash';\n\nexport const formatAccountDetails = payoutMethodData => {\n  const ignoredKeys = ['type', 'isManualBankTransfer', 'currency'];\n  const labels = {\n    abartn: 'Routing Number: ',\n    firstLine: '',\n  };\n\n  const formatKey = s => {\n    if (labels[s] !== undefined) {\n      return labels[s];\n    }\n    if (toUpper(s) === s) {\n      return `${s}: `;\n    }\n    return `${startCase(s)}: `;\n  };\n\n  const renderObject = (object, prefix = '') =>\n    Object.entries(object)\n      .sort(a => (typeof a[1] === 'object' ? 1 : -1))\n      .reduce((acc, [key, value]) => {\n        if (ignoredKeys.includes(key)) {\n          return acc;\n        }\n        if (typeof value === 'object') {\n          if (key === 'details') {\n            return [...acc, ...renderObject(value, '')];\n          }\n          return [...acc, formatKey(key), ...renderObject(value, '  ')];\n        }\n        return [...acc, `${prefix}${formatKey(key)}${value}`];\n      }, []);\n\n  const lines = renderObject(payoutMethodData);\n\n  return lines.join('\\n');\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { PayoutMethodType } from '../../../lib/constants/payout-method';\nimport i18nPayoutMethodType from '../../../lib/i18n/payout-method-type';\nimport { sortSelectOptions } from '../../../lib/utils';\n\nimport { StyledSelectFilter } from '../../StyledSelectFilter';\n\nconst ExpensesPayoutTypeFilter = ({ onChange, value, ...props }) => {\n  const intl = useIntl();\n  const getOption = value => ({ label: i18nPayoutMethodType(intl, value), value });\n  const options = [getOption('ALL'), ...Object.values(PayoutMethodType).map(getOption)];\n\n  return (\n    <StyledSelectFilter\n      inputId=\"expenses-payout-type-filter\"\n      options={options.sort(sortSelectOptions)}\n      onChange={({ value }) => onChange(value)}\n      value={getOption(value || 'ALL')}\n      {...props}\n    />\n  );\n};\n\nExpensesPayoutTypeFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.oneOf(Object.values(PayoutMethodType)),\n};\n\nexport default ExpensesPayoutTypeFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport expenseStatus from '../../../lib/constants/expense-status';\nimport { i18nExpenseStatus } from '../../../lib/i18n/expense';\nimport { sortSelectOptions } from '../../../lib/utils';\n\nimport { StyledSelectFilter } from '../../StyledSelectFilter';\n\nconst IGNORED_EXPENSE_STATUS = [expenseStatus.DRAFT, expenseStatus.UNVERIFIED];\n\nconst getOption = (intl, value) => ({ label: i18nExpenseStatus(intl, value), value });\n\nconst getOptions = (intl, ignoredExpenseStatus) => {\n  const filteredStatuses = ignoredExpenseStatus\n    ? Object.values(expenseStatus).filter(s => !ignoredExpenseStatus.includes(s))\n    : Object.values(expenseStatus);\n\n  return ['ALL', ...filteredStatuses, 'READY_TO_PAY'].map(status => getOption(intl, status));\n};\n\nconst ExpenseStatusFilter = ({ value, onChange, ignoredExpenseStatus = IGNORED_EXPENSE_STATUS, ...props }) => {\n  const intl = useIntl();\n  const sortedOptions = React.useMemo(\n    () => getOptions(intl, ignoredExpenseStatus).sort(sortSelectOptions),\n    [ignoredExpenseStatus],\n  );\n\n  return (\n    <StyledSelectFilter\n      inputId=\"expenses-status-filter\"\n      data-cy=\"expenses-filter-status\"\n      options={sortedOptions}\n      onChange={({ value }) => onChange(value)}\n      value={getOption(intl, value || 'ALL')}\n      {...props}\n    />\n  );\n};\n\nExpenseStatusFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.oneOf([...Object.values(expenseStatus), 'READY_TO_PAY']),\n  ignoredExpenseStatus: PropTypes.arrayOf(PropTypes.oneOf(Object.values(expenseStatus))),\n};\n\nexport default ExpenseStatusFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport expenseTypes from '../../../lib/constants/expenseTypes';\nimport { i18nExpenseType } from '../../../lib/i18n/expense';\nimport { sortSelectOptions } from '../../../lib/utils';\n\nimport { StyledSelectFilter } from '../../StyledSelectFilter';\n\nconst ExpenseTypeFilter = ({ onChange, value, ...props }) => {\n  const intl = useIntl();\n  const getOption = value => ({ label: i18nExpenseType(intl, value), value });\n\n  const expenseTypeKeys = Object.keys(expenseTypes);\n  expenseTypeKeys.unshift('ALL');\n  const options = expenseTypeKeys.map(getOption);\n\n  return (\n    <StyledSelectFilter\n      inputId=\"expenses-type-filter\"\n      onChange={({ value }) => onChange(value)}\n      value={getOption(value || 'ALL')}\n      options={options.sort(sortSelectOptions)}\n      {...props}\n    />\n  );\n};\n\nExpenseTypeFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nexport default ExpenseTypeFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport expenseStatus from '../../lib/constants/expense-status';\nimport { encodeDateInterval } from '../../lib/date-utils';\n\nimport AmountFilter from '../budget/filters/AmountFilter';\nimport PeriodFilter from '../filters/PeriodFilter';\nimport { Flex } from '../Grid';\n\nimport ExpensesOrder from './filters/ExpensesOrder';\nimport ExpensesPayoutTypeFilter from './filters/ExpensesPayoutTypeFilter';\nimport ExpensesStatusFilter from './filters/ExpensesStatusFilter';\nimport ExpensesTypeFilter from './filters/ExpensesTypeFilter';\n\nconst FilterContainer = styled.div`\n  margin-bottom: 8px;\n  flex: 1 1 120px;\n`;\n\nconst FilterLabel = styled.label`\n  font-weight: 600;\n  font-size: 9px;\n  line-height: 14px;\n  letter-spacing: 0.6px;\n  text-transform: uppercase;\n  color: #9d9fa3;\n`;\n\nconst ExpensesFilters = ({\n  collective,\n  filters,\n  onChange,\n  ignoredExpenseStatus,\n  showOrderFilter = true,\n  wrap = true,\n}) => {\n  const getFilterProps = (name, valueModifier) => ({\n    inputId: `expenses-filter-${name}`,\n    value: filters?.[name],\n    onChange: value => {\n      const preparedValue = valueModifier ? valueModifier(value) : value;\n      onChange({ ...filters, [name]: value === 'ALL' ? null : preparedValue });\n    },\n  });\n\n  return (\n    <Flex flexWrap={['wrap', null, wrap ? 'wrap' : 'nowrap']} gap=\"18px\">\n      <FilterContainer>\n        <FilterLabel htmlFor=\"expenses-filter-type\">\n          <FormattedMessage id=\"expense.type\" defaultMessage=\"Type\" />\n        </FilterLabel>\n        <ExpensesTypeFilter {...getFilterProps('type')} />\n      </FilterContainer>\n      <FilterContainer>\n        <FilterLabel htmlFor=\"expenses-filter-payout\">\n          <FormattedMessage id=\"Payout\" defaultMessage=\"Payout\" />\n        </FilterLabel>\n        <ExpensesPayoutTypeFilter {...getFilterProps('payout')} />\n      </FilterContainer>\n      <FilterContainer>\n        <FilterLabel htmlFor=\"expenses-filter-period\">\n          <FormattedMessage id=\"Period\" defaultMessage=\"Period\" />\n        </FilterLabel>\n        <PeriodFilter {...getFilterProps('period', encodeDateInterval)} minDate={collective.createdAt} />\n      </FilterContainer>\n      <FilterContainer>\n        <FilterLabel htmlFor=\"expenses-filter-amount\">\n          <FormattedMessage id=\"Fields.amount\" defaultMessage=\"Amount\" />\n        </FilterLabel>\n        <AmountFilter currency={collective.currency} {...getFilterProps('amount')} />\n      </FilterContainer>\n      <FilterContainer>\n        <FilterLabel htmlFor=\"expenses-filter-status\">\n          <FormattedMessage id=\"expense.status\" defaultMessage=\"Status\" />\n        </FilterLabel>\n        <ExpensesStatusFilter {...getFilterProps('status')} ignoredExpenseStatus={ignoredExpenseStatus} />\n      </FilterContainer>\n      {showOrderFilter && (\n        <FilterContainer>\n          <FilterLabel htmlFor=\"expenses-order\">\n            <FormattedMessage id=\"expense.order\" defaultMessage=\"Order\" />\n          </FilterLabel>\n          <ExpensesOrder {...getFilterProps('orderBy')} />\n        </FilterContainer>\n      )}\n    </Flex>\n  );\n};\n\nExpensesFilters.propTypes = {\n  onChange: PropTypes.func,\n  filters: PropTypes.object,\n  showOrderFilter: PropTypes.bool,\n  collective: PropTypes.shape({\n    currency: PropTypes.string.isRequired,\n    createdAt: PropTypes.string,\n  }).isRequired,\n  wrap: PropTypes.bool,\n  ignoredExpenseStatus: PropTypes.arrayOf(PropTypes.oneOf(Object.values(expenseStatus))),\n};\n\nexport default React.memo(ExpensesFilters);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FlipMove from 'react-flip-move';\nimport { FormattedMessage } from 'react-intl';\nimport styled, { css } from 'styled-components';\n\nimport { DISABLE_ANIMATIONS } from '../../lib/animations';\n\nimport ExpenseBudgetItem from '../budget/ExpenseBudgetItem';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport StyledCard from '../StyledCard';\nimport { P } from '../Text';\n\nconst ExpenseContainer = styled.div`\n  ${props =>\n    !props.isFirst &&\n    css`\n      border-top: 1px solid #e6e8eb;\n    `}\n`;\n\nconst FooterContainer = styled.div`\n  padding: 16px 27px;\n  border-top: 1px solid #e6e8eb;\n`;\n\nconst FooterLabel = styled.span`\n  font-size: 15px;\n  margin-right: 5px;\n  text-transform: uppercase;\n`;\n\nconst ExpensesTotal = ({ collective, host, expenses, expenseFieldForTotalAmount }) => {\n  const { total, isApproximate } = React.useMemo(() => {\n    let isApproximate = false;\n    let total = 0;\n    for (const expense of expenses) {\n      total += expense[expenseFieldForTotalAmount]?.valueInCents || expense.amount;\n      if (expense[expenseFieldForTotalAmount]?.exchangeRate?.isApproximate) {\n        isApproximate = true;\n      }\n    }\n\n    return { total, isApproximate };\n  }, [expenses]);\n\n  return (\n    <React.Fragment>\n      {isApproximate && `~ `}\n      <FormattedMoneyAmount amount={total} currency={collective?.currency || host?.currency} precision={2} />\n    </React.Fragment>\n  );\n};\n\nExpensesTotal.propTypes = {\n  collective: PropTypes.object,\n  host: PropTypes.object,\n  expenses: PropTypes.array,\n  expenseFieldForTotalAmount: PropTypes.string,\n};\n\nconst ExpensesList = ({\n  collective,\n  host,\n  expenses,\n  isLoading,\n  nbPlaceholders,\n  isInverted,\n  suggestedTags,\n  view,\n  onDelete,\n  onProcess,\n  expenseFieldForTotalAmount,\n}) => {\n  if (!expenses?.length && !isLoading) {\n    return null;\n  }\n\n  return (\n    <StyledCard>\n      {isLoading ? (\n        [...new Array(nbPlaceholders)].map((_, idx) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <ExpenseContainer key={idx} isFirst={!idx}>\n            <ExpenseBudgetItem isLoading />\n          </ExpenseContainer>\n        ))\n      ) : (\n        <FlipMove enterAnimation=\"fade\" leaveAnimation=\"fade\" disableAllAnimations={DISABLE_ANIMATIONS}>\n          {expenses.map((expense, idx) => (\n            <ExpenseContainer key={expense.id} isFirst={!idx} data-cy={`expense-${expense.status}`}>\n              <ExpenseBudgetItem\n                isInverted={isInverted}\n                expense={expense}\n                host={host}\n                showProcessActions\n                view={view}\n                onDelete={onDelete}\n                onProcess={onProcess}\n                suggestedTags={suggestedTags}\n              />\n            </ExpenseContainer>\n          ))}\n        </FlipMove>\n      )}\n      {!isLoading && (\n        <FooterContainer>\n          <Flex flexDirection={['row', 'column']} mt={[3, 0]} flexWrap=\"wrap\" alignItems={['center', 'flex-end']}>\n            <Flex\n              my={2}\n              mr={[3, 0]}\n              minWidth={100}\n              justifyContent=\"flex-end\"\n              data-cy=\"transaction-amount\"\n              flexDirection=\"column\"\n            >\n              <Box alignSelf=\"flex-end\">\n                <FooterLabel color=\"black.500\">\n                  <FormattedMessage id=\"expense.page.total\" defaultMessage=\"Page Total\" />:\n                </FooterLabel>\n                <FooterLabel color=\"black.500\">\n                  <ExpensesTotal\n                    expenses={expenses}\n                    collective={collective}\n                    host={host}\n                    expenseFieldForTotalAmount={expenseFieldForTotalAmount}\n                  />\n                </FooterLabel>\n              </Box>\n              <P fontSize=\"12px\" color=\"black.600\">\n                <FormattedMessage id=\"expense.page.description\" defaultMessage=\"Payment processor fees may apply.\" />\n              </P>\n            </Flex>\n          </Flex>\n        </FooterContainer>\n      )}\n    </StyledCard>\n  );\n};\n\nExpensesList.propTypes = {\n  isLoading: PropTypes.bool,\n  /** Set this to true to invert who's displayed (payee or collective) */\n  isInverted: PropTypes.bool,\n  /** When `isLoading` is true, this sets the number of \"loadin\" items displayed */\n  nbPlaceholders: PropTypes.number,\n  host: PropTypes.object,\n  view: PropTypes.oneOf(['public', 'admin', 'submitter']),\n  suggestedTags: PropTypes.arrayOf(PropTypes.string),\n  onDelete: PropTypes.func,\n  onProcess: PropTypes.func,\n  /** Defines the field in `expense` that holds the amount. Useful to display the right one based on the context for multi-currency expenses. */\n  expenseFieldForTotalAmount: PropTypes.string,\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    parent: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }),\n    currency: PropTypes.string,\n  }),\n  expenses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      legacyId: PropTypes.number.isRequired,\n    }),\n  ),\n  totalAmount: PropTypes.number,\n};\n\nExpensesList.defaultProps = {\n  nbPlaceholders: 10,\n  view: 'public',\n  expenseFieldForTotalAmount: 'amountInAccountCurrency',\n};\n\nexport default ExpensesList;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { Info } from '@styled-icons/feather/Info';\nimport { Field, useFormikContext } from 'formik';\nimport { get, kebabCase, partition, set } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { formatCurrency } from '../../lib/currency-utils';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport { Box, Flex } from '../Grid';\nimport { I18nSupportLink } from '../I18nFormatters';\nimport MessageBox from '../MessageBox';\nimport StyledInput from '../StyledInput';\nimport StyledInputField from '../StyledInputField';\nimport StyledSelect from '../StyledSelect';\nimport StyledSpinner from '../StyledSpinner';\nimport StyledTooltip from '../StyledTooltip';\nimport { P, Span } from '../Text';\n\nconst formatStringOptions = strings => strings.map(s => ({ label: s, value: s }));\nconst formatTransferWiseSelectOptions = values => values.map(({ key, name }) => ({ label: name, value: key }));\n\nconst TW_API_COLLECTIVE_SLUG = process.env.TW_API_COLLECTIVE_SLUG;\n\nexport const msg = defineMessages({\n  currency: {\n    id: 'Currency',\n    defaultMessage: 'Currency',\n  },\n});\n\nconst requiredFieldsQuery = gql`\n  query PayoutBankInformationRequiredFields($slug: String, $currency: String!, $accountDetails: JSON) {\n    host(slug: $slug) {\n      id\n      transferwise {\n        id\n        requiredFields(currency: $currency, accountDetails: $accountDetails) {\n          type\n          title\n          fields {\n            name\n            group {\n              key\n              name\n              type\n              required\n              example\n              validationRegexp\n              refreshRequirementsOnChange\n              valuesAllowed {\n                key\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst CUSTOM_METHOD_LABEL_BY_CURRENCY = {\n  // Here I'm using the same wording Wise uses on their documentation\n  USD: {\n    requiredFields: {\n      // No need to internationalize this, since the form is generated by Wise API and it is always in English\n      label: \"Where's your bank account located?\",\n      options: {\n        aba: 'In the US',\n        // eslint-disable-next-line camelcase\n        swift_code: 'Outside the US',\n      },\n    },\n  },\n};\n\nconst Input = ({ input, getFieldName, disabled, currency, loading, refetch, formik, host }) => {\n  const isAccountHolderName = input.key === 'accountHolderName';\n  const fieldName = isAccountHolderName ? getFieldName(`data.${input.key}`) : getFieldName(`data.details.${input.key}`);\n  const required = disabled ? false : input.required;\n  let validate = required ? value => (value ? undefined : `${input.name} is required`) : undefined;\n  if (input.type === 'text') {\n    if (input.validationRegexp) {\n      validate = value => {\n        const matches = new RegExp(input.validationRegexp).test(value);\n        // TODO(intl): This should be internationalized, ideally with `formatFormErrorMessage`\n        if (!value && required) {\n          return `${input.name} is required`;\n        } else if (!matches && value) {\n          return input.validationError || `Invalid ${input.name}`;\n        }\n      };\n    }\n    return (\n      <Box key={input.key} mt={2} flex=\"1\">\n        <Field name={fieldName} validate={validate}>\n          {({ field, meta }) => (\n            <StyledInputField\n              label={input.name}\n              labelFontSize=\"13px\"\n              required={required}\n              hideOptionalLabel={disabled}\n              error={(meta.touched || disabled) && meta.error}\n              hint={input.hint}\n            >\n              {() => {\n                const inputValue = get(formik.values, field.name);\n                return (\n                  <React.Fragment>\n                    <StyledInput\n                      {...field}\n                      placeholder={input.example}\n                      error={(meta.touched || disabled) && meta.error}\n                      disabled={disabled}\n                      width=\"100%\"\n                      value={inputValue || ''}\n                    />\n                    {isAccountHolderName && inputValue && inputValue.match(/^[^\\s]{1}\\b/) && (\n                      <MessageBox mt={2} fontSize=\"12px\" type=\"warning\" withIcon>\n                        <FormattedMessage\n                          id=\"Warning.AccountHolderNameNotValid\"\n                          defaultMessage=\"Full names for personal recipients. They must include more than one name, and both first and last name must have more than one character.\"\n                        />\n                      </MessageBox>\n                    )}\n                  </React.Fragment>\n                );\n              }}\n            </StyledInputField>\n          )}\n        </Field>\n      </Box>\n    );\n  } else if (input.type === 'date') {\n    return (\n      <Box key={input.key} mt={2} flex=\"1\">\n        <Field name={fieldName} validate={validate}>\n          {({ field, meta }) => (\n            <StyledInputField\n              label={input.name}\n              labelFontSize=\"13px\"\n              required={required}\n              hideOptionalLabel={disabled}\n              error={(meta.touched || disabled) && meta.error}\n              hint={input.hint}\n            >\n              {() => (\n                <StyledInput\n                  {...field}\n                  type=\"date\"\n                  error={(meta.touched || disabled) && meta.error}\n                  disabled={disabled}\n                  width=\"100%\"\n                  value={get(formik.values, field.name) || ''}\n                />\n              )}\n            </StyledInputField>\n          )}\n        </Field>\n      </Box>\n    );\n  } else if (input.type === 'radio' || input.type === 'select') {\n    const options = formatTransferWiseSelectOptions(input.valuesAllowed || []);\n    return (\n      <Box mt={2} flex=\"1\">\n        <Field name={fieldName} validate={validate}>\n          {({ field, meta }) => (\n            <StyledInputField\n              label={input.name}\n              labelFontSize=\"13px\"\n              required={required}\n              hideOptionalLabel={disabled}\n              error={(meta.touched || disabled) && meta.error}\n            >\n              {() => (\n                <StyledSelect\n                  inputId={field.name}\n                  disabled={disabled}\n                  error={(meta.touched || disabled) && meta.error}\n                  isLoading={loading && !options.length}\n                  name={field.name}\n                  options={options}\n                  value={options.find(c => c.value === get(formik.values, field.name)) || null}\n                  onChange={({ value }) => {\n                    formik.setFieldValue(field.name, value);\n                    if (input.refreshRequirementsOnChange) {\n                      refetch({\n                        slug: host ? host.slug : TW_API_COLLECTIVE_SLUG,\n                        currency,\n                        accountDetails: get(set({ ...formik.values }, field.name, value), getFieldName('data')),\n                      });\n                    }\n                  }}\n                />\n              )}\n            </StyledInputField>\n          )}\n        </Field>\n      </Box>\n    );\n  } else {\n    return null;\n  }\n};\n\nInput.propTypes = {\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n  currency: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  getFieldName: PropTypes.func.isRequired,\n  refetch: PropTypes.func.isRequired,\n  input: PropTypes.object.isRequired,\n};\n\nconst FieldGroup = ({ field, ...props }) => {\n  return (\n    <Box flex=\"1\">\n      {field.group.map(input => (\n        <Input key={input.key} input={input} {...props} />\n      ))}\n    </Box>\n  );\n};\n\nFieldGroup.propTypes = {\n  disabled: PropTypes.bool,\n  loading: PropTypes.bool,\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n  currency: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  getFieldName: PropTypes.func.isRequired,\n  refetch: PropTypes.func.isRequired,\n  field: PropTypes.object.isRequired,\n};\n\nconst DetailsForm = ({ disabled, getFieldName, formik, host, currency }) => {\n  const { loading, error, data, refetch } = useQuery(requiredFieldsQuery, {\n    context: API_V2_CONTEXT,\n    // A) If `fixedCurrency` was passed in PayoutBankInformationForm (2) (3)\n    //    then `host` is not set and we'll use the Platform Wise account\n    // B) If `host` is set, we expect to be in 2 cases:\n    //      * The Collective Host has Wise configured and we should be able to fetch `requiredFields` from it\n    //      * The Collective Host doesn't have Wise configured and `host` is already switched to the Platform account\n    variables: { slug: host ? host.slug : TW_API_COLLECTIVE_SLUG, currency },\n  });\n\n  // Make sure we load the form data on initial load. Otherwise certain form fields such\n  // as the state field in the \"Recipient's Address\" section might not be visible on first load\n  // and only be visible after the user reselect the country.\n  useEffect(() => {\n    refetch({ accountDetails: get(formik.values, getFieldName('data')) });\n  }, []);\n\n  if (loading && !data) {\n    return <StyledSpinner />;\n  }\n  if (error) {\n    return (\n      <MessageBox fontSize=\"12px\" type=\"error\">\n        <FormattedMessage\n          id=\"PayoutBankInformationForm.Error.RequiredFields\"\n          defaultMessage=\"There was an error fetching the required fields\"\n        />\n        {error.message && `: ${error.message}`}\n      </MessageBox>\n    );\n  }\n\n  // If at this point we don't have `requiredFields` available,\n  // we can display an error message, Wise is likely not configured on the platform\n  if (!data?.host?.transferwise?.requiredFields) {\n    if (process.env.OC_ENV === 'development') {\n      return (\n        <MessageBox fontSize=\"12px\" type=\"warning\">\n          Could not fetch requiredFields, Wise is likely not configured on the platform.\n        </MessageBox>\n      );\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('Could not fetch requiredFields through Wise.');\n      return;\n    }\n  }\n\n  const transactionTypeValues = data.host.transferwise.requiredFields.map(rf => ({\n    label: CUSTOM_METHOD_LABEL_BY_CURRENCY?.[currency]?.requiredFields?.options?.[rf.type] || rf.title,\n    value: rf.type,\n  }));\n  // Some currencies offer different methods for the transaction\n  // e.g., USD allows ABA and SWIFT transactions.\n  const availableMethods = data.host.transferwise.requiredFields.find(\n    method => method.type === get(formik.values, getFieldName(`data.type`)),\n  );\n  const [addressFields, otherFields] = partition(availableMethods?.fields, field =>\n    field.group.every(g => g.key.includes('address.')),\n  );\n\n  const transactionMethodFieldName = getFieldName('data.type');\n  const transactionMethod = get(formik.values, transactionMethodFieldName);\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Field name={getFieldName('data.type')}>\n        {({ field }) => (\n          <StyledInputField\n            name={field.name}\n            label={\n              CUSTOM_METHOD_LABEL_BY_CURRENCY?.[currency]?.requiredFields?.label || (\n                <FormattedMessage\n                  id=\"PayoutBankInformationForm.TransactionMethod\"\n                  defaultMessage=\"Transaction Method\"\n                />\n              )\n            }\n            labelFontSize=\"13px\"\n            mt={3}\n            mb={2}\n          >\n            {({ id }) => (\n              <StyledSelect\n                inputId={id}\n                name={field.name}\n                onChange={({ value }) => {\n                  const { type, currency } = get(formik.values, getFieldName(`data`));\n                  formik.setFieldValue(getFieldName('data'), { type, currency });\n                  formik.setFieldValue(field.name, value);\n                }}\n                options={transactionTypeValues}\n                value={transactionTypeValues.find(method => method.value === availableMethods?.type) || null}\n                disabled={disabled}\n              />\n            )}\n          </StyledInputField>\n        )}\n      </Field>\n      {transactionMethod && (\n        <Span>\n          <Box mt={3} flex=\"1\">\n            <P fontSize=\"14px\" fontWeight=\"bold\">\n              <FormattedMessage id=\"PayoutBankInformationForm.AccountInfo\" defaultMessage=\"Account Information\" />\n            </P>\n          </Box>\n          {otherFields.map(field => (\n            <FieldGroup\n              currency={currency}\n              disabled={disabled}\n              field={field}\n              formik={formik}\n              getFieldName={getFieldName}\n              host={host}\n              key={kebabCase(field.name)}\n              loading={loading}\n              refetch={refetch}\n            />\n          ))}\n        </Span>\n      )}\n      {Boolean(addressFields.length) && (\n        <React.Fragment>\n          <Box mt={3} flex=\"1\" fontSize=\"14px\" fontWeight=\"bold\">\n            <Span mr={2}>\n              <FormattedMessage id=\"PayoutBankInformationForm.RecipientAddress\" defaultMessage=\"Recipient's Address\" />\n            </Span>\n            <StyledTooltip\n              content={\n                <FormattedMessage\n                  id=\"PayoutBankInformationForm.HolderAddress\"\n                  defaultMessage=\"Bank account holder address (not the bank address)\"\n                />\n              }\n            >\n              <Info size={16} />\n            </StyledTooltip>\n          </Box>\n          {addressFields.map(field => (\n            <FieldGroup\n              currency={currency}\n              disabled={disabled}\n              field={field}\n              formik={formik}\n              getFieldName={getFieldName}\n              host={host}\n              key={kebabCase(field.name)}\n              loading={loading}\n              refetch={refetch}\n            />\n          ))}\n        </React.Fragment>\n      )}\n    </Flex>\n  );\n};\n\nDetailsForm.propTypes = {\n  disabled: PropTypes.bool,\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n  currency: PropTypes.string.isRequired,\n  formik: PropTypes.object.isRequired,\n  getFieldName: PropTypes.func.isRequired,\n};\n\nconst availableCurrenciesQuery = gql`\n  query PayoutBankInformationAvailableCurrencies($slug: String, $ignoreBlockedCurrencies: Boolean) {\n    host(slug: $slug) {\n      id\n      slug\n      currency\n      transferwise {\n        id\n        availableCurrencies(ignoreBlockedCurrencies: $ignoreBlockedCurrencies)\n      }\n    }\n  }\n`;\n\n/**\n * Form for payout bank information. Must be used with Formik.\n *\n * The main goal is to use this component in the Expense Flow (1) but it's also reused in:\n *\n * - Collective onboarding, AcceptContributionsOurselvesOrOrg.js (2)\n * - In Collective/Host settings -> Receiving Money, BankTransfer.js (3)\n *\n * In (1) we pass the host where the expense is submitted and fixedCurrency is never set.\n *   * If Wise is configured on that host, `availableCurrencies` should normally be available.\n *   * If it's not, we'll have to fetch `availableCurrencies` from the Platform Wise account\n *\n * In (2) and (3), we never pass an `host` and `fixedCurrency` is sometimes set.\n *   * If `fixedCurrency` is set, we don't need `availableCurrencies`\n *   * If `fixedCurrency` is not set, we'll fetch `availableCurrencies` from the Platform Wise account\n */\nconst PayoutBankInformationForm = ({ isNew, getFieldName, host, fixedCurrency, ignoreBlockedCurrencies, optional }) => {\n  const { data, loading } = useQuery(availableCurrenciesQuery, {\n    context: API_V2_CONTEXT,\n    variables: { slug: TW_API_COLLECTIVE_SLUG, ignoreBlockedCurrencies },\n    // Skip fetching/loading if the currency is fixed (2) (3)\n    // Or if availableCurrencies is already available. Expense Flow + Host with Wise configured (1)\n    skip: Boolean(fixedCurrency || host?.transferwise?.availableCurrencies),\n  });\n  const formik = useFormikContext();\n  const { formatMessage } = useIntl();\n\n  // Display spinner if loading\n  if (loading) {\n    return <StyledSpinner />;\n  }\n\n  // Fiscal Host with Wise configured (1) OR Platform account as fallback (1) or default (2) (3)\n  // NOTE: If `fixedCurrency is set`, `wiseHost` will be null (at least today)\n  const wiseHost = data?.host || host;\n\n  const availableCurrencies = wiseHost?.transferwise?.availableCurrencies;\n\n  let currencies;\n  if (fixedCurrency) {\n    currencies = formatStringOptions([fixedCurrency]);\n  } else if (availableCurrencies) {\n    currencies = formatStringOptions(availableCurrencies.map(c => c.code));\n  } else {\n    // If at this point we don't have `fixedCurrency` or `availableCurrencies`,\n    // we can display an error message, Wise is likely not configured on the platform\n    return (\n      <MessageBox fontSize=\"12px\" type=\"warning\">\n        <FormattedMessage\n          defaultMessage=\"An error ocurred while preparing the form for bank accounts. Please contact <I18nSupportLink>support</I18nSupportLink>\"\n          values={{ I18nSupportLink }}\n        />\n      </MessageBox>\n    );\n  }\n\n  if (optional) {\n    currencies.unshift({ label: 'No selection', value: null });\n  }\n\n  const currencyFieldName = getFieldName('data.currency');\n  const selectedCurrency = get(formik.values, currencyFieldName);\n\n  const validateCurrencyMinimumAmount = () => {\n    // Skip if currency is fixed (2) (3)\n    // or if `availableCurrencies` is not set (but we're not supposed to be there anyway)\n    if (fixedCurrency || !availableCurrencies) {\n      return;\n    }\n\n    // Only validate minimum amount if the form has items\n    if (formik?.values?.items?.length > 0) {\n      const invoiceTotalAmount = formik.values.items.reduce(\n        (amount, attachment) => amount + (attachment.amount || 0),\n        0,\n      );\n      const minAmountForSelectedCurrency =\n        availableCurrencies.find(c => c.code === selectedCurrency)?.minInvoiceAmount * 100;\n      if (invoiceTotalAmount < minAmountForSelectedCurrency) {\n        return formatMessage(\n          {\n            defaultMessage:\n              'The minimum amount for transferring to {selectedCurrency} is {minAmountForSelectedCurrency}',\n          },\n          {\n            selectedCurrency,\n            minAmountForSelectedCurrency: formatCurrency(minAmountForSelectedCurrency, wiseHost.currency),\n          },\n        );\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Field name={currencyFieldName} validate={validateCurrencyMinimumAmount}>\n        {({ field }) => (\n          <StyledInputField name={field.name} label={formatMessage(msg.currency)} labelFontSize=\"13px\" mt={3} mb={2}>\n            {({ id }) => (\n              <StyledSelect\n                inputId={id}\n                name={field.name}\n                onChange={({ value }) => {\n                  formik.setFieldValue(getFieldName('data'), {});\n                  formik.setFieldValue(field.name, value);\n                }}\n                options={currencies}\n                value={currencies.find(c => c.label === selectedCurrency) || null}\n                disabled={Boolean(fixedCurrency && !optional) || !isNew}\n              />\n            )}\n          </StyledInputField>\n        )}\n      </Field>\n      {selectedCurrency && (\n        <DetailsForm\n          currency={selectedCurrency}\n          disabled={!isNew}\n          formik={formik}\n          getFieldName={getFieldName}\n          host={wiseHost}\n        />\n      )}\n      {!selectedCurrency && !currencies?.length && (\n        <MessageBox fontSize=\"12px\" type=\"error\">\n          <FormattedMessage\n            id=\"PayoutBankInformationForm.Error.AvailableCurrencies\"\n            defaultMessage=\"There was an error loading available currencies for this host\"\n          />\n          .\n        </MessageBox>\n      )}\n    </React.Fragment>\n  );\n};\n\nPayoutBankInformationForm.propTypes = {\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    currency: PropTypes.string,\n    transferwise: PropTypes.shape({\n      availableCurrencies: PropTypes.arrayOf(PropTypes.object),\n    }),\n  }),\n  isNew: PropTypes.bool,\n  optional: PropTypes.bool,\n  ignoreBlockedCurrencies: PropTypes.bool,\n  getFieldName: PropTypes.func.isRequired,\n  /** Enforces a fixedCurrency */\n  fixedCurrency: PropTypes.string,\n  /** A map of errors for this object */\n  errors: PropTypes.object,\n  formik: PropTypes.object,\n};\n\nexport default PayoutBankInformationForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { StyledSelectFilter } from '../../StyledSelectFilter';\n\nconst ExpensesOrder = ({ onChange, value, ...props }) => {\n  const intl = useIntl();\n\n  const options = [\n    {\n      label: intl.formatMessage({ id: 'ExpensesOrder.NewestFirst', defaultMessage: 'Newest First' }),\n      value: 'CREATED_AT,DESC',\n    },\n    {\n      label: intl.formatMessage({ id: 'ExpensesOrder.OldestFirst', defaultMessage: 'Oldest First' }),\n      value: 'CREATED_AT,ASC',\n    },\n  ];\n\n  return (\n    <StyledSelectFilter\n      inputId=\"expenses-order\"\n      onChange={({ value }) => onChange(value)}\n      value={options.find(o => o.value === value)}\n      options={options}\n      defaultValue={options[0]}\n      {...props}\n    />\n  );\n};\n\nExpensesOrder.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nexport const parseChronologicalOrderInput = str => {\n  const [field, direction] = str.split(',');\n  return { field, direction };\n};\n\nexport default ExpensesOrder;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport dayjs from '../lib/dayjs';\n\nimport DateTime from './DateTime';\n\nconst OneLineDate = styled(DateTime)`\n  white-space: nowrap;\n  display: inline-block;\n`;\n\nconst getMessage = (from, to) => {\n  if (!from && !to) {\n    return <FormattedMessage id=\"DateRange.All\" defaultMessage=\"All\" />;\n  } else if (from && to) {\n    return (\n      <div>\n        <FormattedMessage\n          defaultMessage=\"{dateFrom} to {dateTo}\"\n          values={{\n            dateFrom: <OneLineDate value={from} dateStyle=\"medium\" />,\n            dateTo: <OneLineDate value={to} dateStyle=\"medium\" />,\n          }}\n        />\n      </div>\n    );\n  } else if (from) {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Since {date}\"\n        values={{ date: <OneLineDate value={from} dateStyle=\"medium\" /> }}\n      />\n    );\n  } else {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Before {date}\"\n        values={{ date: <OneLineDate value={to} dateStyle=\"medium\" /> }}\n      />\n    );\n  }\n};\n\n/**\n * Small helper to display an internationalized date range. Both values are optional.\n * The results can be something like:\n * - All\n * - 01/01/21 to 05/05/22\n * - Since 01/01/21\n * - Before 05/05/22\n *\n * If isUTC is true, we also add a `(UTC)` to the end of the date.\n */\nexport const DateRange = ({ from, to, isUTC }) => {\n  const message = getMessage(from, to);\n  if (!isUTC || (!from && !to)) {\n    return message;\n  } else {\n    return <React.Fragment>{message} (UTC)</React.Fragment>;\n  }\n};\n\nDateRange.propTypes = {\n  from: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date), PropTypes.instanceOf(dayjs)]),\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date), PropTypes.instanceOf(dayjs)]),\n  isUTC: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@styled-icons/boxicons-regular/ChevronDown';\nimport { InfoCircle } from '@styled-icons/boxicons-regular/InfoCircle';\nimport { has } from 'lodash';\nimport { defineMessage, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { isValidDate, parseDateInterval, stripTime } from '../../lib/date-utils';\nimport dayjs from '../../lib/dayjs';\n\nimport { DateRange } from '../DateRange';\nimport { Box, Flex } from '../Grid';\nimport PeriodFilterPresetsSelect from '../PeriodFilterPresetsSelect';\nimport PopupMenu from '../PopupMenu';\nimport StyledButton from '../StyledButton';\nimport StyledButtonSet from '../StyledButtonSet';\nimport StyledInput from '../StyledInput';\nimport StyledInputField from '../StyledInputField';\nimport StyledTooltip from '../StyledTooltip';\nimport { Span } from '../Text';\n\nconst DEFAULT_INTERVAL = { from: '', to: '', timezoneType: 'local' };\n\n/**\n * Get a date range as stored internally from a `value` prop, that can be either an object\n * like { from, to } or a stringified value (see `encodeDateInterval`).\n */\nconst getIntervalFromValue = value => {\n  const isIntervalObject = value => typeof value === 'object' && has(value, 'from') && has(value, 'to');\n  const intervalFromValue = isIntervalObject(value) ? { ...value } : parseDateInterval(value);\n  if (intervalFromValue.timezoneType === 'UTC') {\n    const toUTC = date => (date ? dayjs.utc(date) : null);\n    intervalFromValue.from = toUTC(intervalFromValue.from);\n    intervalFromValue.to = toUTC(intervalFromValue.to);\n  }\n\n  return {\n    from: stripTime(intervalFromValue.from),\n    to: stripTime(intervalFromValue.to),\n    timezoneType: intervalFromValue.timezoneType || 'local',\n  };\n};\n\n/**\n * Update `interval` with a new value for `from` or `to` and return the updated interval\n * as a new object.\n */\nconst getNewInterval = (interval, changeField, newValue) => {\n  const newInterval = { ...interval };\n  newInterval[changeField] = newValue;\n  return newInterval;\n};\n\n/**\n * Date is locally stored as '2020-01-01'. We need to force the time to make sure it's not modified\n * by timezones when parsed.\n */\nconst parseDateForDateRange = (dateStr, isEndOfDay) => {\n  if (!dateStr) {\n    return null;\n  } else if (!isEndOfDay) {\n    return new Date(`${dateStr}T00:00:00`);\n  } else {\n    return new Date(`${dateStr}T23:59:59`);\n  }\n};\n\nconst UTC_LABEL = defineMessage({ defaultMessage: 'Coordinated Universal Time' });\nconst getTimeZoneTypeName = (intl, timezone) => {\n  if (timezone === 'local') {\n    try {\n      return intl.timeZone || dayjs.tz.guess();\n    } catch {\n      return '';\n    }\n  } else if (timezone === 'UTC') {\n    return intl.formatMessage(UTC_LABEL);\n  } else {\n    return '';\n  }\n};\n\nconst TriggerContainer = styled(StyledButton)`\n  min-height: 38px;\n  outline: 0;\n  background: #f7f8fa;\n  padding: 0 16px;\n  width: 100%;\n  text-align: left;\n  font-size: 12px;\n  font-weight: 500;\n  color: hsl(0, 0%, 20%);\n\n  svg {\n    transition: color 0.2s;\n  }\n\n  &:hover {\n    border-color: #c4c7cc;\n    svg {\n      color: #999999;\n    }\n  }\n\n  &:active,\n  &:focus {\n    background: white;\n    color: hsl(0, 0%, 20%);\n    box-shadow: 0 0 0 2px black;\n  }\n`;\n\nconst PeriodFilter = ({ onChange, value, inputId, minDate, ...props }) => {\n  const intl = useIntl();\n  const intervalFromValue = React.useMemo(() => getIntervalFromValue(value), [value]);\n  const [tmpDateInterval, setTmpDateInterval] = React.useState(intervalFromValue);\n  const [isValidDateInterval, setIsValidDateInterval] = React.useState(true);\n  const formattedMin = stripTime(minDate);\n\n  const setDate = (changeField, date) => {\n    const newInterval = getNewInterval(tmpDateInterval, changeField, date);\n    setTmpDateInterval(newInterval);\n\n    // Add warning in case fromDate is after toDate\n    if (isValidDate(newInterval.from) && isValidDate(newInterval.to) && newInterval.from > newInterval.to) {\n      setIsValidDateInterval(false);\n    } else if (isValidDate(newInterval.from) && isValidDate(newInterval.to) && newInterval.from < newInterval.to) {\n      setIsValidDateInterval(true);\n    }\n  };\n\n  return (\n    <PopupMenu\n      placement=\"bottom-start\"\n      onClose={() => setTmpDateInterval(intervalFromValue)}\n      Button={({ onClick }) => (\n        <TriggerContainer onClick={onClick} id={inputId} data-cy=\"period-filter\" {...props}>\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <DateRange\n              from={parseDateForDateRange(intervalFromValue.from, false)}\n              to={parseDateForDateRange(intervalFromValue.to, true)}\n              isUTC={intervalFromValue.timezoneType === 'UTC'}\n            />\n            <ChevronDown size={25} color=\"#cccccc\" />\n          </Flex>\n        </TriggerContainer>\n      )}\n    >\n      {({ setOpen }) => (\n        <Box mx=\"8px\" my=\"8px\" width=\"190px\">\n          <Box mb={3}>\n            <PeriodFilterPresetsSelect\n              inputId={`${inputId}-presets-select`}\n              onChange={setTmpDateInterval}\n              interval={tmpDateInterval}\n            />\n          </Box>\n          <StyledInputField\n            name=\"timezoneType\"\n            mt=\"12px\"\n            labelFontSize=\"16px\"\n            labelFontWeight=\"700\"\n            label={\n              <Flex alignItems=\"center\">\n                <Span mr={1}>\n                  <FormattedMessage defaultMessage=\"Timezone\" />\n                </Span>\n                <StyledTooltip\n                  content={\n                    <FormattedMessage defaultMessage=\"By default, all dates are filtered and displayed using your local timezone. You can switch to UTC to indicate that the dates provided above use the Coordinated Universal Time format, which matches how email reports are generated\" />\n                  }\n                >\n                  <InfoCircle size={16} />\n                </StyledTooltip>\n              </Flex>\n            }\n          >\n            {inputProps => (\n              <StyledButtonSet\n                {...inputProps}\n                size=\"tiny\"\n                items={['local', 'UTC']}\n                buttonProps={{ p: 1, fontSize: '13px', fontWeight: 400 }}\n                selected={tmpDateInterval.timezoneType}\n                buttonPropsBuilder={({ item }) => ({ title: getTimeZoneTypeName(intl, item) })}\n                onChange={timezoneType => {\n                  setTmpDateInterval({ ...tmpDateInterval, timezoneType });\n                }}\n              >\n                {({ item }) => {\n                  switch (item) {\n                    case 'local':\n                      return <FormattedMessage defaultMessage=\"Local\" />;\n                    case 'UTC':\n                      return <FormattedMessage defaultMessage=\"UTC\" />;\n                  }\n                }}\n              </StyledButtonSet>\n            )}\n          </StyledInputField>\n          <StyledInputField\n            label={<FormattedMessage defaultMessage=\"Start date\" />}\n            labelFontWeight=\"700\"\n            labelProps={{ fontWeight: 'bold', fontSize: '16px' }}\n            name=\"dateFrom\"\n            mt=\"12px\"\n            labelFontSize=\"16px\"\n          >\n            {inputProps => (\n              <StyledInput\n                {...inputProps}\n                type=\"date\"\n                width=\"100%\"\n                closeOnSelect\n                lineHeight={1}\n                fontSize=\"13px\"\n                value={tmpDateInterval.from}\n                min={formattedMin}\n                onChange={e => setDate('from', e.target.value)}\n              />\n            )}\n          </StyledInputField>\n          <StyledInputField\n            label={<FormattedMessage defaultMessage=\"End date\" />}\n            labelFontWeight=\"700\"\n            labelProps={{ fontWeight: 'bold', fontSize: '16px' }}\n            name=\"dateTo\"\n            mt=\"12px\"\n            labelFontSize=\"16px\"\n          >\n            {inputProps => (\n              <StyledInput\n                {...inputProps}\n                type=\"date\"\n                width=\"100%\"\n                closeOnSelect\n                lineHeight={1}\n                fontSize=\"13px\"\n                value={tmpDateInterval.to}\n                min={formattedMin}\n                max={stripTime(new Date())}\n                onChange={e => setDate('to', e.target.value)}\n              />\n            )}\n          </StyledInputField>\n          {!isValidDateInterval && (\n            <Span display=\"block\" color=\"red.500\" pt={2} fontSize=\"10px\" lineHeight=\"14px\" aria-live=\"assertive\">\n              <FormattedMessage defaultMessage=\"Start Date should be before the End Date\" />\n            </Span>\n          )}\n          <Flex mt={2}>\n            <StyledButton\n              buttonSize=\"medium\"\n              mr={2}\n              mt=\"12px\"\n              flex=\"1\"\n              onClick={() => {\n                setTmpDateInterval(DEFAULT_INTERVAL);\n                setIsValidDateInterval(true);\n                setOpen(false);\n                onChange(null);\n              }}\n            >\n              <FormattedMessage id=\"Reset\" defaultMessage=\"Reset\" />\n            </StyledButton>\n            <StyledButton\n              buttonSize=\"medium\"\n              buttonStyle=\"primary\"\n              mt=\"12px\"\n              data-cy=\"btn-apply-period-filter\"\n              flex=\"1\"\n              onClick={() => {\n                onChange(tmpDateInterval);\n                setOpen(false);\n              }}\n            >\n              <FormattedMessage id=\"Apply\" defaultMessage=\"Apply\" />\n            </StyledButton>\n          </Flex>\n        </Box>\n      )}\n    </PopupMenu>\n  );\n};\n\nPeriodFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  /** The value, either as a string with the `dateFrom→dateTo` format or an object like { from, to }*/\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      from: PropTypes.string,\n      to: PropTypes.string,\n      timezoneType: PropTypes.string,\n    }),\n  ]),\n  inputId: PropTypes.string,\n  minDate: PropTypes.string,\n};\n\nexport default PeriodFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { create, Mode } from '@transferwise/approve-api-action-helpers';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { addAuthTokenToHeader } from '../../lib/api';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { getWebsiteUrl } from '../../lib/utils';\n\nimport ConfirmationModal from '../ConfirmationModal';\nimport { Box, Flex } from '../Grid';\nimport { I18nSupportLink } from '../I18nFormatters';\nimport TransferwiseIcon from '../icons/TransferwiseIcon';\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst scheduledExpensesQuery = gql`\n  query ScheduledExpensesBanner(\n    $hostId: String!\n    $limit: Int!\n    $status: ExpenseStatusFilter\n    $payoutMethodType: PayoutMethodType\n  ) {\n    expenses(host: { id: $hostId }, limit: $limit, status: $status, payoutMethodType: $payoutMethodType) {\n      totalCount\n      offset\n      limit\n      nodes {\n        id\n      }\n    }\n  }\n`;\n\nconst ScheduledExpensesBanner = ({ host, onSubmit, secondButton, expenses }) => {\n  const scheduledExpenses = useQuery(scheduledExpensesQuery, {\n    variables: { hostId: host.id, limit: 100, status: 'SCHEDULED_FOR_PAYMENT', payoutMethodType: 'BANK_ACCOUNT' },\n    context: API_V2_CONTEXT,\n  });\n  React.useEffect(() => {\n    scheduledExpenses.refetch();\n  }, [expenses]);\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  const [showConfirmationModal, setConfirmationModalDisplay] = React.useState(false);\n\n  const hasScheduledExpenses = scheduledExpenses.data?.expenses?.totalCount > 0;\n  if (!hasScheduledExpenses) {\n    return null;\n  }\n\n  const request = create({ mode: process.env.WISE_ENVIRONMENT === 'production' ? Mode.PRODUCTION : Mode.SANDBOX });\n  const handlePayBatch = async () => {\n    const expenseIds = scheduledExpenses.data.expenses.nodes.map(e => e.id);\n    try {\n      await request(`${getWebsiteUrl()}/api/services/transferwise/pay-batch`, {\n        method: 'POST',\n        body: JSON.stringify({ expenseIds, hostId: host.id }),\n        headers: addAuthTokenToHeader(),\n      });\n      setConfirmationModalDisplay(false);\n      addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: (\n          <FormattedMessage\n            id=\"expenses.scheduled.paybatch.success\"\n            defaultMessage=\"Expenses paid! They're now being processed by Wise.\"\n          />\n        ),\n      });\n      onSubmit?.();\n    } catch (e) {\n      const message = e?.response\n        ? await e.response.text()\n        : intl.formatMessage(\n            {\n              defaultMessage:\n                'There was an error trying to process this batch, please <SupportLink>contact support</SupportLink>',\n            },\n            { SupportLink: I18nSupportLink },\n          );\n\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        title: intl.formatMessage({ defaultMessage: 'Batch payment failed' }),\n        message,\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <MessageBox type=\"success\" mb={4}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Box>\n            <TransferwiseIcon size=\"1em\" color=\"#25B869\" mr={2} />\n            <FormattedMessage\n              id=\"expenses.scheduled.notification\"\n              defaultMessage=\"You have {count, plural, one {# expense} other {# expenses}} scheduled for payment.\"\n              values={{ count: scheduledExpenses.data.expenses.totalCount }}\n            />\n          </Box>\n          <Box>\n            {secondButton}\n            <StyledButton\n              buttonSize=\"tiny\"\n              buttonStyle=\"successSecondary\"\n              onClick={() => setConfirmationModalDisplay(true)}\n            >\n              <FormattedMessage id=\"expenses.scheduled.paybatch\" defaultMessage=\"Pay Batch\" />\n            </StyledButton>\n          </Box>\n        </Flex>\n      </MessageBox>\n      {showConfirmationModal && (\n        <ConfirmationModal\n          zindex={1000}\n          header={<FormattedMessage id=\"expenses.scheduled.confirmation.title\" defaultMessage=\"Pay Expenses Batch\" />}\n          body={\n            <FormattedMessage\n              id=\"expenses.scheduled.confirmation.body\"\n              defaultMessage=\"Are you sure you want to batch and pay {count, plural, one {# expense} other {# expenses}} scheduled for payment?\"\n              values={{ count: scheduledExpenses.data.expenses.totalCount }}\n            />\n          }\n          onClose={() => setConfirmationModalDisplay(false)}\n          continueLabel={\n            <FormattedMessage\n              id=\"expense.pay.btn\"\n              defaultMessage=\"Pay with {paymentMethod}\"\n              values={{ paymentMethod: 'Wise' }}\n            />\n          }\n          continueHandler={handlePayBatch}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nScheduledExpensesBanner.propTypes = {\n  host: PropTypes.shape({\n    id: PropTypes.string,\n  }).isRequired,\n  expenses: PropTypes.array,\n  onSubmit: PropTypes.func,\n  secondButton: PropTypes.node,\n};\n\nexport default ScheduledExpensesBanner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport Avatar from '../../components/Avatar';\nimport StyledTag from '../../components/StyledTag';\n\nimport { Box, Flex } from '../Grid';\nimport StyledTooltip from '../StyledTooltip';\n\nconst Admin = styled(StyledTag).attrs({ variant: 'rounded-right' })``;\n\nclass OnboardingProfileCard extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object,\n    adminCollective: PropTypes.object,\n    removeAdmin: PropTypes.func,\n    isPending: PropTypes.bool,\n  };\n\n  render() {\n    const { collective, removeAdmin, isPending } = this.props;\n    const { name } = collective;\n\n    const content = (\n      <Admin\n        closeButtonProps={\n          removeAdmin\n            ? {\n                onClick: () => {\n                  removeAdmin(collective);\n                },\n              }\n            : null\n        }\n        data-cy=\"remove-user\"\n      >\n        <Flex alignItems=\"center\">\n          <Avatar radius={16} collective={collective} />\n          <Box fontSize=\"12px\" ml={2} data-cy=\"name-of-admins\">\n            {name}\n          </Box>\n        </Flex>\n      </Admin>\n    );\n\n    return (\n      <Flex my={1} mr={2}>\n        {isPending ? (\n          <StyledTooltip\n            content={() => <FormattedMessage id=\"onboarding.admins.pending\" defaultMessage=\"Pending approval\" />}\n          >\n            {content}\n          </StyledTooltip>\n        ) : (\n          content\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default OnboardingProfileCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { ORDER_STATUS } from '../../lib/constants/order-status';\nimport i18nOrderStatus from '../../lib/i18n/order-status';\nimport { sortSelectOptions } from '../../lib/utils';\n\nimport { StyledSelectFilter } from '../StyledSelectFilter';\n\nconst OrderStatusFilter = ({ onChange, value, ...props }) => {\n  const intl = useIntl();\n  const getOption = value => ({ label: i18nOrderStatus(intl, value), value });\n  const options = [getOption('ALL'), ...Object.values(ORDER_STATUS).map(getOption)];\n\n  return (\n    <StyledSelectFilter\n      inputId=\"order-status-filter\"\n      isSearchable={false}\n      onChange={({ value }) => onChange(value)}\n      value={getOption(value || 'ALL')}\n      options={options.sort(sortSelectOptions)}\n      {...props}\n    />\n  );\n};\n\nOrderStatusFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nexport default OrderStatusFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { encodeDateInterval } from '../../lib/date-utils';\n\nimport AmountFilter from '../budget/filters/AmountFilter';\nimport PeriodFilter from '../filters/PeriodFilter';\nimport { Flex } from '../Grid';\n\nimport OrderStatusFilter from './OrderStatusFilter';\n\nconst FilterContainer = styled.div`\n  margin-bottom: 8px;\n  flex: 1 1 120px;\n  &:not(:last-child) {\n    margin-right: 18px;\n  }\n`;\n\nconst FilterLabel = styled.label`\n  font-weight: 600;\n  font-size: 9px;\n  line-height: 14px;\n  letter-spacing: 0.6px;\n  text-transform: uppercase;\n  color: #9d9fa3;\n`;\n\nconst OrdersFilters = ({ currency, filters, hasStatus, onChange }) => {\n  const getFilterProps = (name, valueModifier) => ({\n    inputId: `orders-filter-${name}`,\n    value: filters?.[name],\n    onChange: value => {\n      const preparedValue = valueModifier ? valueModifier(value) : value;\n      onChange({ ...filters, [name]: value === 'ALL' ? null : preparedValue });\n    },\n  });\n\n  return (\n    <Flex flexWrap=\"wrap\">\n      <FilterContainer>\n        <FilterLabel htmlFor=\"orders-filter-period\">\n          <FormattedMessage id=\"Period\" defaultMessage=\"Period\" />\n        </FilterLabel>\n        <PeriodFilter {...getFilterProps('period', encodeDateInterval)} />\n      </FilterContainer>\n      <FilterContainer>\n        <FilterLabel htmlFor=\"orders-filter-amount\">\n          <FormattedMessage id=\"Fields.amount\" defaultMessage=\"Amount\" />\n        </FilterLabel>\n        <AmountFilter currency={currency} {...getFilterProps('amount')} />\n      </FilterContainer>\n      {hasStatus && (\n        <FilterContainer>\n          <FilterLabel htmlFor=\"orders-filter-status\">\n            <FormattedMessage id=\"order.status\" defaultMessage=\"Status\" />\n          </FilterLabel>\n          <OrderStatusFilter {...getFilterProps('status')} />\n        </FilterContainer>\n      )}\n    </Flex>\n  );\n};\n\nOrdersFilters.propTypes = {\n  onChange: PropTypes.func,\n  filters: PropTypes.object,\n  currency: PropTypes.string,\n  hasStatus: PropTypes.bool,\n};\n\nexport default React.memo(OrdersFilters);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { ORDER_STATUS } from '../../lib/constants/order-status';\nimport { GQLV2_PAYMENT_METHOD_LEGACY_TYPES } from '../../lib/constants/payment-methods';\nimport { i18nPaymentMethodProviderType } from '../../lib/i18n/payment-method-provider-type';\nimport { i18nPaymentMethodType } from '../../lib/i18n/payment-method-type';\nimport { toPx } from '../../lib/theme/helpers';\nimport { getCollectivePageRoute } from '../../lib/url-helpers';\n\nimport AutosizeText from '../AutosizeText';\nimport Avatar from '../Avatar';\nimport Container from '../Container';\nimport DateTime from '../DateTime';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport Link from '../Link';\nimport LinkCollective from '../LinkCollective';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport OrderStatusTag from '../orders/OrderStatusTag';\nimport ProcessOrderButtons from '../orders/ProcessOrderButtons';\nimport StyledLink from '../StyledLink';\nimport StyledTag from '../StyledTag';\nimport StyledTooltip from '../StyledTooltip';\nimport { H3, P, Span } from '../Text';\nimport TransactionSign from '../TransactionSign';\n\nconst DetailColumnHeader = styled.div`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 9px;\n  line-height: 14px;\n  letter-spacing: 0.6px;\n  text-transform: uppercase;\n  color: #c4c7cc;\n  margin-bottom: 2px;\n`;\n\nconst ButtonsContainer = styled.div.attrs({ 'data-cy': 'order-actions' })`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 8px;\n  flex-grow: 1;\n  transition: opacity 0.05s;\n  justify-content: flex-end;\n\n  @media (max-width: 40em) {\n    justify-content: center;\n  }\n\n  & > *:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst OrderContainer = styled.div`\n  padding: 16px 27px;\n\n  @media (hover: hover) {\n    &:not(:hover):not(:focus-within) ${ButtonsContainer} {\n      opacity: 0.24;\n    }\n  }\n`;\n\nconst OrderBudgetItem = ({ isLoading, order, showPlatformTip, showAmountSign }) => {\n  const intl = useIntl();\n  return (\n    <OrderContainer>\n      <Flex justifyContent=\"space-between\" flexWrap=\"wrap\">\n        <Flex flex=\"1\" minWidth=\"max(60%, 300px)\" maxWidth={[null, '70%']}>\n          <Box mr={3}>\n            {isLoading ? (\n              <LoadingPlaceholder width={40} height={40} />\n            ) : (\n              <LinkCollective collective={order.fromAccount}>\n                <Avatar collective={order.fromAccount} radius={40} />\n              </LinkCollective>\n            )}\n          </Box>\n          {isLoading ? (\n            <LoadingPlaceholder height={60} />\n          ) : (\n            <Box>\n              <StyledLink as={Link} href={`${getCollectivePageRoute(order.toAccount)}/orders/${order.legacyId}`}>\n                <AutosizeText\n                  value={order.description}\n                  maxLength={255}\n                  minFontSizeInPx={12}\n                  maxFontSizeInPx={16}\n                  lengthThreshold={72}\n                  mobileRatio={0.875}\n                  valueFormatter={toPx}\n                >\n                  {({ value, fontSize }) => (\n                    <H3\n                      fontWeight=\"500\"\n                      lineHeight=\"1.5em\"\n                      textDecoration=\"none\"\n                      color=\"black.900\"\n                      fontSize={fontSize}\n                      data-cy=\"expense-title\"\n                    >\n                      {value}\n                    </H3>\n                  )}\n                </AutosizeText>\n              </StyledLink>\n              <P mt=\"5px\" fontSize=\"12px\" color=\"black.600\">\n                <FormattedMessage\n                  id=\"Order.fromTo\"\n                  defaultMessage=\"for {account} from {contributor}\"\n                  values={{\n                    contributor: <LinkCollective collective={order.fromAccount} />,\n                    account: <LinkCollective collective={order.toAccount} />,\n                  }}\n                />\n\n                {' • '}\n                <DateTime value={order.createdAt} />\n              </P>\n            </Box>\n          )}\n        </Flex>\n        <Flex flexDirection={['row', 'column']} mt={[3, 0]} flexWrap=\"wrap\" alignItems={['center', 'flex-end']}>\n          <Flex my={2} mr={[3, 0]} minWidth={100} justifyContent=\"flex-end\" data-cy=\"order-amount\">\n            {isLoading ? (\n              <LoadingPlaceholder height={19} width={120} />\n            ) : (\n              <Flex flexDirection=\"column\" alignItems={['flex-start', 'flex-end']}>\n                <Flex alignItems=\"center\">\n                  {showAmountSign && <TransactionSign isCredit />}\n                  <Span color=\"black.500\" fontSize=\"16px\">\n                    <FormattedMoneyAmount\n                      currency={order.amount.currency}\n                      precision={2}\n                      amount={\n                        showPlatformTip && order.platformTipAmount?.valueInCents\n                          ? order.amount.valueInCents + order.platformTipAmount.valueInCents\n                          : order.amount.valueInCents\n                      }\n                    />\n                  </Span>\n                </Flex>\n                {Boolean(showPlatformTip && order.platformTipAmount?.valueInCents) && (\n                  <Container fontSize=\"10px\" color=\"black.500\">\n                    <FormattedMessage\n                      id=\"OrderBudgetItem.Tip\"\n                      defaultMessage=\"(includes {amount} platform tip)\"\n                      values={{\n                        amount: (\n                          <FormattedMoneyAmount\n                            amount={order.platformTipAmount.valueInCents}\n                            currency={order.platformTipAmount.currency}\n                            precision={2}\n                            amountStyles={null}\n                          />\n                        ),\n                      }}\n                    />\n                  </Container>\n                )}\n              </Flex>\n            )}\n          </Flex>\n          {isLoading ? (\n            <LoadingPlaceholder height={20} width={140} mt={2} />\n          ) : (\n            <Flex>\n              <StyledTag variant=\"rounded-left\" fontSize=\"10px\" fontWeight=\"500\" mr={1} textTransform=\"uppercase\">\n                <FormattedMessage id=\"Order\" defaultMessage=\"Order\" /> #{order.legacyId}\n              </StyledTag>\n              <OrderStatusTag status={order.status} />\n            </Flex>\n          )}\n        </Flex>\n      </Flex>\n      <Flex flexWrap=\"wrap\" justifyContent=\"space-between\" alignItems=\"center\" mt={2}>\n        <Flex flexWrap=\"wrap\" alignItems=\"center\" justifyContent={['space-between', null, 'flex-start']} flexGrow={1}>\n          <Flex flexDirection=\"column\" justifyContent=\"flex-end\" mr={[3, 4]} minHeight={50}>\n            <DetailColumnHeader>\n              <FormattedMessage id=\"paymentmethod.label\" defaultMessage=\"Payment Method\" />\n            </DetailColumnHeader>\n            {isLoading ? (\n              <LoadingPlaceholder height={16} />\n            ) : (\n              <Span fontSize=\"11px\" lineHeight=\"16px\" color=\"black.700\">\n                {order.paymentMethod?.type\n                  ? i18nPaymentMethodType(intl, order.paymentMethod.type)\n                  : i18nPaymentMethodProviderType(\n                      intl,\n                      // TODO(paymentMethodType): migrate to service+type\n                      order.paymentMethod?.providerType ||\n                        order.pendingContributionData?.paymentMethod ||\n                        GQLV2_PAYMENT_METHOD_LEGACY_TYPES.BANK_TRANSFER,\n                    )}\n              </Span>\n            )}\n          </Flex>\n          {order?.status === 'PENDING' && order?.pendingContributionData && (\n            <React.Fragment>\n              {order.pendingContributionData.ponumber && (\n                <Flex flexDirection=\"column\" justifyContent=\"flex-end\" mr={[3, 4]} minHeight={50}>\n                  <DetailColumnHeader>\n                    <StyledTooltip\n                      content={\n                        <FormattedMessage defaultMessage=\"External reference code for this order. This is usually a reference number from the contributor accounting system.\" />\n                      }\n                      containerCursor=\"default\"\n                    >\n                      <FormattedMessage id=\"Fields.PONumber\" defaultMessage=\"PO Number\" />\n                    </StyledTooltip>\n                  </DetailColumnHeader>\n                  {isLoading ? (\n                    <LoadingPlaceholder height={16} />\n                  ) : (\n                    <Span fontSize=\"11px\" lineHeight=\"16px\" color=\"black.700\">\n                      {`#${order.pendingContributionData.ponumber}`}\n                    </Span>\n                  )}\n                </Flex>\n              )}\n\n              {order.pendingContributionData.expectedAt && (\n                <Flex flexDirection=\"column\" justifyContent=\"flex-end\" mr={[3, 4]} minHeight={50}>\n                  <DetailColumnHeader>\n                    <FormattedMessage defaultMessage=\"Expected\" />\n                  </DetailColumnHeader>\n                  {isLoading ? (\n                    <LoadingPlaceholder height={16} />\n                  ) : (\n                    <Span fontSize=\"11px\" lineHeight=\"16px\" color=\"black.700\">\n                      <DateTime\n                        value={order.pendingContributionData.expectedAt}\n                        dateStyle={'medium'}\n                        timeStyle={undefined}\n                      />\n                    </Span>\n                  )}\n                </Flex>\n              )}\n            </React.Fragment>\n          )}\n        </Flex>\n        {order?.permissions && (\n          <ButtonsContainer>\n            <ProcessOrderButtons order={order} permissions={order.permissions} />\n          </ButtonsContainer>\n        )}\n      </Flex>\n    </OrderContainer>\n  );\n};\n\nOrderBudgetItem.propTypes = {\n  isLoading: PropTypes.bool,\n  showAmountSign: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onProcess: PropTypes.func,\n  showProcessActions: PropTypes.bool,\n  view: PropTypes.oneOf(['public', 'admin']),\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    currency: PropTypes.string,\n    stats: PropTypes.shape({\n      balance: PropTypes.shape({\n        valueInCents: PropTypes.number,\n      }),\n    }),\n    parent: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }),\n  }),\n  host: PropTypes.object,\n  order: PropTypes.shape({\n    id: PropTypes.string,\n    legacyId: PropTypes.number,\n    description: PropTypes.string.isRequired,\n    status: PropTypes.oneOf(Object.values(ORDER_STATUS)).isRequired,\n    createdAt: PropTypes.string.isRequired,\n    amount: PropTypes.object.isRequired,\n    platformTipAmount: PropTypes.object.isRequired,\n    permissions: PropTypes.shape({\n      canReject: PropTypes.bool,\n      canMarkAsPaid: PropTypes.bool,\n    }),\n    pendingContributionData: PropTypes.shape({\n      ponumber: PropTypes.number,\n      expectedAt: PropTypes.string,\n      paymentMethod: PropTypes.string,\n    }),\n    paymentMethod: PropTypes.shape({\n      providerType: PropTypes.string,\n      type: PropTypes.string,\n    }),\n    /** If available, this `account` will be used in place of the `collective` */\n    toAccount: PropTypes.shape({\n      slug: PropTypes.string,\n    }),\n    fromAccount: PropTypes.shape({\n      slug: PropTypes.string,\n    }),\n  }),\n  showPlatformTip: PropTypes.bool,\n};\n\nOrderBudgetItem.defaultProps = {\n  showAmountSign: true,\n};\n\nexport default OrderBudgetItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport OrderBudgetItem from '../budget/OrderBudgetItem';\nimport StyledCard from '../StyledCard';\n\nconst OrderContainer = styled.div`\n  ${props =>\n    !props.isFirst &&\n    css`\n      border-top: 1px solid #e6e8eb;\n    `}\n`;\n\nconst OrdersList = ({ orders, isLoading, nbPlaceholders, showPlatformTip, showAmountSign }) => {\n  orders = !isLoading ? orders : [...new Array(nbPlaceholders)];\n  if (!orders?.length) {\n    return null;\n  }\n\n  return (\n    <StyledCard>\n      {orders.map((order, idx) => (\n        <OrderContainer key={order?.id || idx} isFirst={!idx} data-cy={`order-${order?.status}`}>\n          <OrderBudgetItem\n            isLoading={isLoading}\n            order={order}\n            showPlatformTip={showPlatformTip}\n            showAmountSign={showAmountSign}\n          />\n        </OrderContainer>\n      ))}\n    </StyledCard>\n  );\n};\n\nOrdersList.propTypes = {\n  isLoading: PropTypes.bool,\n  /** When `isLoading` is true, this sets the number of \"loading\" items displayed */\n  nbPlaceholders: PropTypes.number,\n  orders: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      legacyId: PropTypes.number.isRequired,\n    }),\n  ),\n  showPlatformTip: PropTypes.bool,\n  showAmountSign: PropTypes.bool,\n};\n\nOrdersList.defaultProps = {\n  nbPlaceholders: 10,\n};\n\nexport default OrdersList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { omitBy } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { ORDER_STATUS } from '../../lib/constants/order-status';\nimport { parseDateInterval } from '../../lib/date-utils';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport useLoggedInUser from '../../lib/hooks/useLoggedInUser';\nimport { usePrevious } from '../../lib/hooks/usePrevious';\n\nimport { parseAmountRange } from '../budget/filters/AmountFilter';\nimport { Box, Flex } from '../Grid';\nimport CreatePendingOrderModal from '../host-dashboard/CreatePendingOrderModal';\nimport Link from '../Link';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport MessageBox from '../MessageBox';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport Pagination from '../Pagination';\nimport SearchBar from '../SearchBar';\nimport StyledButton from '../StyledButton';\nimport StyledHr from '../StyledHr';\nimport { H1 } from '../Text';\n\nimport OrdersFilters from './OrdersFilters';\nimport OrdersList from './OrdersList';\n\nconst accountOrdersQuery = gql`\n  query Orders(\n    $accountSlug: String\n    $limit: Int!\n    $offset: Int!\n    $status: [OrderStatus]\n    $minAmount: Int\n    $maxAmount: Int\n    $dateFrom: DateTime\n    $dateTo: DateTime\n    $searchTerm: String\n  ) {\n    account(slug: $accountSlug) {\n      id\n      slug\n      currency\n      legacyId\n      name\n    }\n    orders(\n      account: { slug: $accountSlug }\n      includeHostedAccounts: true\n      filter: INCOMING\n      status: $status\n      searchTerm: $searchTerm\n      limit: $limit\n      offset: $offset\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n      minAmount: $minAmount\n      maxAmount: $maxAmount\n    ) {\n      totalCount\n      nodes {\n        id\n        legacyId\n        description\n        createdAt\n        status\n        amount {\n          valueInCents\n          currency\n        }\n        platformTipAmount {\n          valueInCents\n          currency\n        }\n        paymentMethod {\n          id\n          providerType\n        }\n        fromAccount {\n          id\n          slug\n          name\n          imageUrl\n        }\n        pendingContributionData {\n          expectedAt\n          paymentMethod\n          ponumber\n          memo\n          fromAccountInfo {\n            name\n            email\n          }\n        }\n        toAccount {\n          id\n          slug\n          name\n          imageUrl\n          isHost\n          ... on AccountWithHost {\n            bankTransfersHostFeePercent: hostFeePercent(paymentMethodType: MANUAL)\n          }\n        }\n        permissions {\n          id\n          canMarkAsExpired\n          canMarkAsPaid\n        }\n      }\n    }\n  }\n`;\n\nconst ORDERS_PER_PAGE = 15;\n\nconst isValidStatus = status => {\n  return Boolean(ORDER_STATUS[status]);\n};\n\nconst getVariablesFromQuery = (query, forcedStatus) => {\n  const amountRange = parseAmountRange(query.amount);\n  const { from: dateFrom, to: dateTo } = parseDateInterval(query.period);\n  const searchTerm = query.searchTerm || null;\n  return {\n    offset: parseInt(query.offset) || 0,\n    limit: parseInt(query.limit) || ORDERS_PER_PAGE,\n    status: searchTerm ? null : forcedStatus ? forcedStatus : isValidStatus(query.status) ? query.status : null,\n    minAmount: amountRange[0] && amountRange[0] * 100,\n    maxAmount: amountRange[1] && amountRange[1] * 100,\n    dateFrom,\n    dateTo,\n    searchTerm,\n  };\n};\n\nconst messages = defineMessages({\n  searchPlaceholder: {\n    id: 'Orders.Search.Placeholder',\n    defaultMessage: 'Search all contributions...',\n  },\n});\n\nconst hasParams = query => {\n  return Object.entries(query).some(([key, value]) => {\n    return (\n      ![\n        'collectiveSlug',\n        'hostCollectiveSlug',\n        'limit',\n        'offset',\n        'paypalApprovalError',\n        'section',\n        'slug',\n        'view',\n      ].includes(key) && value\n    );\n  });\n};\n\nconst ROUTE_PARAMS = ['hostCollectiveSlug', 'collectiveSlug', 'view', 'slug', 'section'];\n\nconst updateQuery = (router, newParams) => {\n  const query = omitBy({ ...router.query, ...newParams }, (value, key) => !value || ROUTE_PARAMS.includes(key));\n  const pathname = router.asPath.split('?')[0];\n  return router.push({ pathname, query });\n};\n\nconst OrdersWithData = ({ accountSlug, title, status, showPlatformTip, canCreatePendingOrder }) => {\n  const router = useRouter() || { query: {} };\n  const intl = useIntl();\n  const hasFilters = React.useMemo(() => hasParams(router.query), [router.query]);\n  const [showCreatePendingOrderModal, setShowCreatePendingOrderModal] = React.useState(false);\n  const queryVariables = { accountSlug, ...getVariablesFromQuery(router.query, status) };\n  const queryParams = { variables: queryVariables, context: API_V2_CONTEXT };\n  const { data, error, loading, variables, refetch } = useQuery(accountOrdersQuery, queryParams);\n  const { LoggedInUser } = useLoggedInUser();\n  const prevLoggedInUser = usePrevious(LoggedInUser);\n  const isHostAdmin = LoggedInUser?.isAdminOfCollective(data?.account);\n\n  // Refetch data when user logs in\n  React.useEffect(() => {\n    if (!prevLoggedInUser && LoggedInUser) {\n      refetch();\n    }\n  }, [LoggedInUser]);\n\n  return (\n    <Box maxWidth={1000} width=\"100%\" m=\"0 auto\" px={2}>\n      <Flex mb={24} alignItems=\"center\" flexWrap=\"wrap\">\n        <H1 fontSize=\"32px\" lineHeight=\"40px\" py={2} fontWeight=\"normal\">\n          {title || <FormattedMessage id=\"FinancialContributions\" defaultMessage=\"Financial Contributions\" />}\n        </H1>\n        <Box mx=\"auto\" />\n        <Box p={2}>\n          <SearchBar\n            defaultValue={router.query.searchTerm}\n            onSubmit={searchTerm => updateQuery(router, { searchTerm, offset: null })}\n            placeholder={intl.formatMessage(messages.searchPlaceholder)}\n          />\n        </Box>\n      </Flex>\n      <StyledHr mb={26} borderWidth=\"0.5px\" borderColor=\"black.300\" />\n      <Flex mb={34}>\n        <Box flexGrow=\"1\" mr=\"18px\">\n          {data?.account ? (\n            <OrdersFilters\n              currency={data.account.currency}\n              filters={router.query}\n              onChange={queryParams => updateQuery(router, { ...queryParams, offset: null })}\n              hasStatus={!status}\n            />\n          ) : loading ? (\n            <LoadingPlaceholder height={70} />\n          ) : null}\n        </Box>\n        {isHostAdmin && canCreatePendingOrder && (\n          <React.Fragment>\n            <StyledButton\n              onClick={() => setShowCreatePendingOrderModal(true)}\n              buttonSize=\"small\"\n              buttonStyle=\"primary\"\n              height=\"38px\"\n              lineHeight=\"12px\"\n              mt=\"17px\"\n              data-cy=\"create-pending-contribution\"\n            >\n              Create +\n            </StyledButton>\n            {showCreatePendingOrderModal && (\n              <CreatePendingOrderModal\n                host={data.account}\n                onClose={() => setShowCreatePendingOrderModal(false)}\n                onSuccess={() => refetch()}\n              />\n            )}\n          </React.Fragment>\n        )}\n      </Flex>\n      {error ? (\n        <MessageBoxGraphqlError error={error} />\n      ) : !loading && !data.orders?.nodes.length ? (\n        <MessageBox type=\"info\" withIcon data-cy=\"zero-order-message\">\n          {hasFilters ? (\n            <FormattedMessage\n              id=\"OrdersList.Empty\"\n              defaultMessage=\"No contributions match the given filters. <ResetLink>Reset</ResetLink> to see all.\"\n              values={{\n                ResetLink(text) {\n                  return (\n                    <Link data-cy=\"reset-orders-filters\" href={{ pathname: router.asPath.split('?')[0], query: {} }}>\n                      {text}\n                    </Link>\n                  );\n                },\n              }}\n            />\n          ) : (\n            <FormattedMessage id=\"orders.empty\" defaultMessage=\"No orders\" />\n          )}\n        </MessageBox>\n      ) : (\n        <React.Fragment>\n          <OrdersList\n            isLoading={loading}\n            orders={data?.orders?.nodes}\n            nbPlaceholders={variables.limit}\n            showPlatformTip={showPlatformTip}\n          />\n          <Flex mt={5} justifyContent=\"center\">\n            <Pagination\n              total={data?.orders?.totalCount}\n              limit={variables.limit}\n              offset={variables.offset}\n              ignoredQueryParams={ROUTE_PARAMS}\n            />\n          </Flex>\n        </React.Fragment>\n      )}\n    </Box>\n  );\n};\n\nOrdersWithData.propTypes = {\n  accountSlug: PropTypes.string.isRequired,\n  /** If provided, only orders matching this status will be fetched */\n  status: PropTypes.string,\n  /** An optional title to be used instead of \"Financial contributions\" */\n  title: PropTypes.node,\n  showPlatformTip: PropTypes.bool,\n  canCreatePendingOrder: PropTypes.bool,\n};\n\nexport default OrdersWithData;\n","export const MODERATION_CATEGORIES = {\n  ADULT: 'Adult websites',\n  AFFILIATE_REVIEW: 'Affiliate and review websites', // creating “review” pages for the sake of linking to Amazon\n  CASINO_GAMBLING: 'Casinos and gambling',\n  FINANCE_INSURANCE: 'Insurance & financial products (credit)',\n  PHARMACY: 'Pharmacy products (weight loss, anti-aging)',\n  SEO_AUDIENCE: 'SEO services & social media buying', // black-hat SEO services\n  VPN_PROXY: 'VPN and proxy services',\n  WRITER: 'Essay writing services',\n};\n\nexport const MODERATION_CATEGORIES_ALIASES = {\n  ADULT: ['adult'],\n  AFFILIATE_REVIEW: ['affiliate', 'review'],\n  CASINO_GAMBLING: ['casino', 'gambling'],\n  FINANCE_INSURANCE: ['finance', 'insurance', 'credit'],\n  PHARMACY: ['pharmacy', 'pills', 'weightloss'],\n  SEO_AUDIENCE: ['seo', 'audience'],\n  VPN_PROXY: ['vpn', 'proxy'],\n  WRITER: ['writer'],\n};\n","import { graphql } from '@apollo/client/react/hoc';\nimport { pick } from 'lodash';\n\nimport { gqlV1 } from './helpers';\nimport { editCollectivePageFieldsFragment } from './queries';\n\nconst createCollectiveMutation = gqlV1/* GraphQL */ `\n  mutation CreateCollective($collective: CollectiveInputType!) {\n    createCollective(collective: $collective) {\n      id\n      name\n      slug\n      type\n      website\n      twitterHandle\n      isIncognito\n    }\n  }\n`;\n\nexport const editCollectiveMutation = gqlV1/* GraphQL */ `\n  mutation EditCollective($collective: CollectiveInputType!) {\n    editCollective(collective: $collective) {\n      id\n      ...EditCollectivePageFields\n    }\n  }\n\n  ${editCollectivePageFieldsFragment}\n`;\n\nexport const addCreateCollectiveMutation = graphql(createCollectiveMutation, {\n  props: ({ mutate }) => ({\n    createCollective: async collective => {\n      const CollectiveInputType = pick(collective, [\n        'slug',\n        'type',\n        'name',\n        'image',\n        'description',\n        'longDescription',\n        'location',\n        'privateInstructions',\n        'twitterHandle',\n        'githubHandle',\n        'website',\n        'tags',\n        'startsAt',\n        'endsAt',\n        'timezone',\n        'currency',\n        'quantity',\n        'HostCollectiveId',\n        'ParentCollectiveId',\n        'isIncognito',\n        'settings',\n      ]);\n      CollectiveInputType.tiers = (collective.tiers || []).map(tier =>\n        pick(tier, ['type', 'name', 'description', 'amount', 'maxQuantity']),\n      );\n      CollectiveInputType.location = pick(collective.location, ['name', 'address', 'lat', 'long', 'country']);\n      return await mutate({ variables: { collective: CollectiveInputType } });\n    },\n  }),\n});\n","import { useEffect, useRef } from 'react';\n\n/**\n * Holds the previous value. Useful to reproduce a `componentDidUpdate(prevProps)` behavior\n * in a hook component.\n */\nexport const usePrevious = value => {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n","import { defineMessages } from 'react-intl';\n\nimport { CollectiveType } from '../../lib/constants/collectives';\n\nconst { USER, ORGANIZATION, COLLECTIVE, FUND, EVENT, PROJECT } = CollectiveType;\n\nexport const HOST_DASHBOARD_SECTIONS = {\n  // New Host Dashboard\n  BUDGET_MANAGEMENT: 'budget',\n  COLLECTIVES: 'collectives',\n  OVERVIEW: 'info',\n  REPORTS: 'reports',\n  // Existing Host Dashboard Sections\n  EXPENSES: 'expenses',\n  FINANCIAL_CONTRIBUTIONS: 'orders',\n  PENDING_CONTRIBUTIONS: 'pending-contributions',\n  HOSTED_COLLECTIVES: 'hosted-collectives',\n  HOST_VIRTUAL_CARDS: 'host-virtual-cards',\n  PENDING_APPLICATIONS: 'pending-applications',\n};\n\nexport const ABOUT_ORG_SECTIONS = {\n  COLLECTIVE_PAGE: 'collective-page',\n  CONNECTED_ACCOUNTS: 'connected-accounts',\n  INFO: 'info',\n  TEAM: 'team',\n};\n\nexport const ORG_BUDGET_SECTIONS = {\n  GIFT_CARDS: 'gift-cards',\n  CREATE_GIFT_CARDS: 'gift-cards-create',\n  PAYMENT_METHODS: 'payment-methods',\n  PAYMENT_RECEIPTS: 'payment-receipts',\n  FINANCIAL_CONTRIBUTIONS: 'orders',\n  TIERS: 'tiers',\n  // Manage Contributions\n};\n\nexport const FISCAL_HOST_SECTIONS = {\n  FISCAL_HOSTING: 'fiscal-hosting',\n  SECURITY: 'security',\n  HOST_VIRTUAL_CARDS: 'host-virtual-cards',\n  HOST_VIRTUAL_CARDS_SETTINGS: 'host-virtual-cards-settings',\n  INVOICES_RECEIPTS: 'invoices-receipts',\n  POLICIES: 'policies',\n  RECEIVING_MONEY: 'receiving-money',\n  SENDING_MONEY: 'sending-money',\n};\n\nexport const COLLECTIVE_SECTIONS = {\n  ADVANCED: 'advanced',\n  AUTHORIZED_APPS: 'authorized-apps',\n  COLLECTIVE_GOALS: 'goals',\n  COLLECTIVE_PAGE: 'collective-page',\n  CONNECTED_ACCOUNTS: 'connected-accounts',\n  EXPORT: 'export',\n  FOR_DEVELOPERS: 'for-developers',\n  HOST: 'host',\n  INFO: 'info',\n  PAYMENT_METHODS: 'payment-methods',\n  PAYMENT_RECEIPTS: 'payment-receipts',\n  NOTIFICATIONS: 'notifications',\n  POLICIES: 'policies',\n  CUSTOM_EMAIL: 'custom-email',\n  TEAM: 'team',\n  TICKETS: 'tickets',\n  TIERS: 'tiers',\n  USER_SECURITY: 'user-security',\n  VIRTUAL_CARDS: 'virtual-cards',\n  WEBHOOKS: 'webhooks',\n  ACTIVITY_LOG: 'activity-log',\n};\n\nexport const LEGACY_COLLECTIVE_SETTINGS_SECTIONS = {\n  ...COLLECTIVE_SECTIONS,\n  ...ABOUT_ORG_SECTIONS,\n  ...ORG_BUDGET_SECTIONS,\n  ...FISCAL_HOST_SECTIONS,\n};\n\nexport const ALL_SECTIONS = {\n  ...COLLECTIVE_SECTIONS,\n  ...ABOUT_ORG_SECTIONS,\n  ...ORG_BUDGET_SECTIONS,\n  ...FISCAL_HOST_SECTIONS,\n  ...HOST_DASHBOARD_SECTIONS,\n};\n\nexport const SECTIONS_ACCESSIBLE_TO_ACCOUNTANTS = [ALL_SECTIONS.REPORTS, ALL_SECTIONS.PAYMENT_RECEIPTS];\n\nexport const PAGE_TITLES = defineMessages({\n  [USER]: { id: 'AdminPanel.UserSettings', defaultMessage: 'User Settings' },\n  [ORGANIZATION]: { id: 'AdminPanel.OrganizationSettings', defaultMessage: 'Organization Settings' },\n  [COLLECTIVE]: { id: 'AdminPanel.CollectiveSettings', defaultMessage: 'Collective Settings' },\n  [FUND]: { id: 'AdminPanel.FundSettings', defaultMessage: 'Fund Settings' },\n  [EVENT]: { id: 'AdminPanel.EventSettings', defaultMessage: 'Event Settings' },\n  [PROJECT]: { id: 'AdminPanel.ProjectSettings', defaultMessage: 'Project Settings' },\n});\n\nexport const SECTION_LABELS = defineMessages({\n  [ALL_SECTIONS.ACTIVITY_LOG]: {\n    defaultMessage: 'Activity log',\n  },\n  [ALL_SECTIONS.EXPENSES]: {\n    id: 'Expenses',\n    defaultMessage: 'Expenses',\n  },\n  [ALL_SECTIONS.FINANCIAL_CONTRIBUTIONS]: {\n    id: 'FinancialContributions',\n    defaultMessage: 'Financial Contributions',\n  },\n  [ALL_SECTIONS.PENDING_CONTRIBUTIONS]: {\n    id: 'PendingContributions',\n    defaultMessage: 'Pending Contributions',\n  },\n  [ALL_SECTIONS.PENDING_APPLICATIONS]: {\n    id: 'AdminPanel.Menu.PendingApplications',\n    defaultMessage: 'Pending Applications',\n  },\n  [ALL_SECTIONS.OVERVIEW]: {\n    id: 'AdminPanel.Menu.Overview',\n    defaultMessage: 'Overview',\n  },\n  [ALL_SECTIONS.BUDGET_MANAGEMENT]: {\n    id: 'AdminPanel.Menu.Overview',\n    defaultMessage: 'Overview',\n  },\n  [ALL_SECTIONS.COLLECTIVES]: {\n    id: 'Collectives',\n    defaultMessage: 'Collectives',\n  },\n  [ALL_SECTIONS.REPORTS]: {\n    id: 'Reports',\n    defaultMessage: 'Reports',\n  },\n  [ALL_SECTIONS.ADVANCED]: {\n    id: 'editCollective.menu.advanced',\n    defaultMessage: 'Advanced',\n  },\n  [ALL_SECTIONS.COLLECTIVE_GOALS]: {\n    id: 'Goals',\n    defaultMessage: 'Goals',\n  },\n  [ALL_SECTIONS.COLLECTIVE_PAGE]: {\n    id: 'editCollective.menu.collectivePage',\n    defaultMessage: 'Profile Page',\n  },\n  [ALL_SECTIONS.CONNECTED_ACCOUNTS]: {\n    id: 'editCollective.menu.connectedAccounts',\n    defaultMessage: 'Connected Accounts',\n  },\n  [ALL_SECTIONS.UPDATES]: {\n    id: 'updates',\n    defaultMessage: 'Updates',\n  },\n  [ALL_SECTIONS.CONVERSATIONS]: {\n    id: 'conversations',\n    defaultMessage: 'Conversations',\n  },\n  [ALL_SECTIONS.EXPORT]: {\n    id: 'editCollective.menu.export',\n    defaultMessage: 'Export',\n  },\n  [ALL_SECTIONS.POLICIES]: {\n    id: 'editCollective.menu.policies',\n    defaultMessage: 'Policies',\n  },\n  [ALL_SECTIONS.CUSTOM_EMAIL]: {\n    defaultMessage: 'Custom Email',\n  },\n  [ALL_SECTIONS.HOST]: {\n    id: 'Fiscalhost',\n    defaultMessage: 'Fiscal Host',\n  },\n  [ALL_SECTIONS.INFO]: {\n    id: 'editCollective.menu.info',\n    defaultMessage: 'Info',\n  },\n  [ALL_SECTIONS.INVOICES_RECEIPTS]: {\n    id: 'becomeASponsor.invoiceReceipts',\n    defaultMessage: 'Invoices & Receipts',\n  },\n  [ALL_SECTIONS.RECEIVING_MONEY]: {\n    id: 'editCollective.receivingMoney',\n    defaultMessage: 'Receiving Money',\n  },\n  [ALL_SECTIONS.SENDING_MONEY]: {\n    id: 'editCollective.sendingMoney',\n    defaultMessage: 'Sending Money',\n  },\n  [ALL_SECTIONS.FISCAL_HOSTING]: {\n    id: 'editCollective.fiscalHosting',\n    defaultMessage: 'Fiscal Hosting',\n  },\n  [ALL_SECTIONS.TEAM]: {\n    id: 'ContributorsFilter.Core',\n    defaultMessage: 'Team',\n  },\n  [ALL_SECTIONS.PAYMENT_METHODS]: {\n    id: 'editCollective.menu.paymentMethods',\n    defaultMessage: 'Payment Methods',\n  },\n  [ALL_SECTIONS.TIERS]: {\n    id: 'Tiers',\n    defaultMessage: 'Tiers',\n  },\n  [ALL_SECTIONS.GIFT_CARDS]: {\n    id: 'editCollective.menu.giftCards',\n    defaultMessage: 'Gift Cards',\n  },\n  [ALL_SECTIONS.WEBHOOKS]: {\n    id: 'editCollective.menu.webhooks',\n    defaultMessage: 'Webhooks',\n  },\n  [ALL_SECTIONS.AUTHORIZED_APPS]: {\n    defaultMessage: 'Authorized Apps',\n  },\n  [ALL_SECTIONS.FOR_DEVELOPERS]: {\n    defaultMessage: 'For developers',\n  },\n  [ALL_SECTIONS.TICKETS]: {\n    id: 'section.tickets.title',\n    defaultMessage: 'Tickets',\n  },\n  [ALL_SECTIONS.USER_SECURITY]: {\n    id: 'Security',\n    defaultMessage: 'Security',\n  },\n  [ALL_SECTIONS.PAYMENT_RECEIPTS]: {\n    id: 'editCollective.menu.paymentReceipts',\n    defaultMessage: 'Payment Receipts',\n  },\n  [ALL_SECTIONS.SECURITY]: {\n    id: 'Security',\n    defaultMessage: 'Security',\n  },\n  [ALL_SECTIONS.HOST_VIRTUAL_CARDS]: {\n    id: 'VirtualCards.Title',\n    defaultMessage: 'Virtual Cards',\n  },\n  [ALL_SECTIONS.HOST_VIRTUAL_CARDS_SETTINGS]: {\n    id: 'VirtualCardsSettings.Title',\n    defaultMessage: 'Virtual Cards Settings',\n  },\n  [ALL_SECTIONS.VIRTUAL_CARDS]: {\n    id: 'VirtualCards.Title',\n    defaultMessage: 'Virtual Cards',\n  },\n  [ALL_SECTIONS.HOSTED_COLLECTIVES]: {\n    id: 'HostedCollectives',\n    defaultMessage: 'Hosted Collectives',\n  },\n  [ALL_SECTIONS.NOTIFICATIONS]: {\n    id: 'NotificationsSettings.Title',\n    defaultMessage: 'Notification Settings',\n  },\n});\n","import React from 'react';\n\nimport { ALL_SECTIONS } from './constants';\n\nexport const AdminPanelContext = React.createContext({\n  selectedSection: ALL_SECTIONS.INFO,\n});\n","export const HOST_FEE_STRUCTURE = {\n  DEFAULT: 'DEFAULT',\n  MONTHLY_RETAINER: 'MONTHLY_RETAINER',\n  CUSTOM_FEE: 'CUSTOM_FEE',\n};\n","import { defineMessages } from 'react-intl';\n\nimport { HOST_FEE_STRUCTURE } from '../constants/host-fee-structure';\n\nconst TypesI18n = defineMessages({\n  ALL: {\n    id: 'HostFee.AllTypes',\n    defaultMessage: 'All',\n  },\n  [HOST_FEE_STRUCTURE.DEFAULT]: {\n    id: 'HostFee.Global',\n    defaultMessage: 'Global host fees',\n  },\n  [HOST_FEE_STRUCTURE.CUSTOM_FEE]: {\n    id: 'HostFee.Custom',\n    defaultMessage: 'Custom fee',\n  },\n  [HOST_FEE_STRUCTURE.MONTHLY_RETAINER]: {\n    id: 'HostFee.MonthlyRetainer',\n    defaultMessage: 'Monthly retainer',\n  },\n});\n\n/**\n * Translate a member role\n *\n * @param {object} `intl` - see `injectIntl`\n * @param {string} `type`\n */\nexport const formatHostFeeStructure = (intl, type) => {\n  const i18nMsg = TypesI18n[type];\n  return i18nMsg ? intl.formatMessage(i18nMsg) : type;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { HOST_FEE_STRUCTURE } from '../../../lib/constants/host-fee-structure';\nimport { formatHostFeeStructure } from '../../../lib/i18n/host-fee-structure';\n\nimport { StyledSelectFilter } from '../../StyledSelectFilter';\n\nconst CollectiveHostFeeStructureFilter = ({ value, onChange, ...props }) => {\n  const intl = useIntl();\n  const getOption = value => ({ label: formatHostFeeStructure(intl, value), value });\n  const optionAll = getOption('ALL');\n  const options = [optionAll, getOption(HOST_FEE_STRUCTURE.DEFAULT), getOption(HOST_FEE_STRUCTURE.CUSTOM_FEE)];\n\n  return (\n    <StyledSelectFilter\n      inputId=\"fee-structure-filter\"\n      value={value ? getOption(value) : optionAll}\n      onChange={({ value }) => onChange(value)}\n      options={options}\n      {...props}\n    />\n  );\n};\n\nCollectiveHostFeeStructureFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nexport default CollectiveHostFeeStructureFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport { StyledSelectFilter } from '../../StyledSelectFilter';\n\nconst labels = defineMessages({\n  'most-recent': {\n    id: 'Collectives.MostRecent',\n    defaultMessage: 'Most recent',\n  },\n  oldest: {\n    id: 'Collectives.Oldest',\n    defaultMessage: 'Oldest',\n  },\n});\n\nconst CollectiveSortByFilter = ({ value, onChange, ...props }) => {\n  const intl = useIntl();\n  const getOption = value => ({ label: intl.formatMessage(labels[value]), value });\n  const options = [getOption('most-recent'), getOption('oldest')];\n\n  return (\n    <StyledSelectFilter\n      inputId=\"collective-sort-filter\"\n      value={labels[value] ? getOption(value) : options[0]}\n      onChange={({ value }) => onChange(value)}\n      options={options}\n      {...props}\n    />\n  );\n};\n\nCollectiveSortByFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nexport default CollectiveSortByFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { Grid } from '../Grid';\n\nimport CollectiveHostFeeStructureFilter from './admin-collective-filters/CollectiveHostFeeStructureFilter';\nimport CollectiveSortByFilter from './admin-collective-filters/CollectiveSortByFilter';\n\nconst FilterLabel = styled.label`\n  font-weight: 600;\n  font-size: 9px;\n  line-height: 14px;\n  letter-spacing: 0.6px;\n  text-transform: uppercase;\n  color: #9d9fa3;\n`;\n\nexport const COLLECTIVE_FILTER = {\n  SORT_BY: 'sort-by',\n  FEE_STRUCTURE: 'fees-structure',\n};\n\nconst HostAdminCollectiveFilters = ({ filters, values, onChange }) => {\n  const getFilterProps = name => ({\n    inputId: `collectives-filter-${name}`,\n    value: values?.[name],\n    onChange: value => {\n      onChange({ ...values, [name]: value === 'ALL' ? null : value });\n    },\n  });\n\n  return (\n    <Grid gridGap={18} gridTemplateColumns={['1fr', '1fr 1fr']} maxWidth={400}>\n      {filters.includes(COLLECTIVE_FILTER.SORT_BY) && (\n        <div>\n          <FilterLabel htmlFor=\"collectives-filter-sort-by\">\n            <FormattedMessage id=\"SortBy\" defaultMessage=\"Sort by\" />\n          </FilterLabel>\n          <CollectiveSortByFilter {...getFilterProps(COLLECTIVE_FILTER.SORT_BY)} />\n        </div>\n      )}\n      {filters.includes(COLLECTIVE_FILTER.FEE_STRUCTURE) && (\n        <div>\n          <FilterLabel htmlFor=\"collectives-filter-fees-structure\">\n            <FormattedMessage id=\"FeeStructure\" defaultMessage=\"Fee structure\" />\n          </FilterLabel>\n          <CollectiveHostFeeStructureFilter {...getFilterProps(COLLECTIVE_FILTER.FEE_STRUCTURE)} />\n        </div>\n      )}\n    </Grid>\n  );\n};\n\nHostAdminCollectiveFilters.propTypes = {\n  filters: PropTypes.arrayOf(PropTypes.oneOf(Object.values(COLLECTIVE_FILTER))).isRequired,\n  values: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default HostAdminCollectiveFilters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { omitBy } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\n\nimport { Box, Flex } from '../../Grid';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport MessageBox from '../../MessageBox';\nimport MessageBoxGraphqlError from '../../MessageBoxGraphqlError';\nimport Pagination from '../../Pagination';\nimport SearchBar from '../../SearchBar';\nimport StyledHr from '../../StyledHr';\nimport { H1 } from '../../Text';\nimport HostAdminCollectiveFilters, { COLLECTIVE_FILTER } from '../HostAdminCollectiveFilters';\n\nimport PendingApplication, { processApplicationAccountFields } from './PendingApplication';\n\nconst COLLECTIVES_PER_PAGE = 20;\n\nconst pendingApplicationsQuery = gql`\n  query HostDashboardPendingApplications(\n    $hostSlug: String!\n    $limit: Int!\n    $offset: Int!\n    $orderBy: ChronologicalOrderInput!\n    $searchTerm: String\n  ) {\n    host(slug: $hostSlug) {\n      id\n      slug\n      name\n      type\n      settings\n      policies {\n        COLLECTIVE_MINIMUM_ADMINS {\n          numberOfAdmins\n        }\n      }\n      pendingApplications(limit: $limit, offset: $offset, orderBy: $orderBy, searchTerm: $searchTerm) {\n        offset\n        limit\n        totalCount\n        nodes {\n          id\n          message\n          customData\n          account {\n            id\n            legacyId\n            name\n            slug\n            website\n            description\n            type\n            imageUrl(height: 96)\n            createdAt\n            ... on AccountWithHost {\n              ...ProcessHostApplicationFields\n            }\n            memberInvitations(role: [ADMIN]) {\n              id\n              role\n            }\n            admins: members(role: ADMIN) {\n              totalCount\n              nodes {\n                id\n                account {\n                  id\n                  type\n                  slug\n                  name\n                  imageUrl(height: 48)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  ${processApplicationAccountFields}\n`;\n\nconst checkIfQueryHasFilters = query =>\n  Object.entries(query).some(([key, value]) => {\n    return !['view', 'offset', 'limit', 'hostCollectiveSlug', 'sort-by'].includes(key) && value;\n  });\n\nconst getVariablesFromQuery = query => {\n  return {\n    offset: parseInt(query.offset) || 0,\n    limit: parseInt(query.limit) || COLLECTIVES_PER_PAGE,\n    searchTerm: query.searchTerm,\n    hostFeesStructure: query['fees-structure'],\n    orderBy: {\n      field: 'CREATED_AT',\n      direction: query['sort-by'] === 'oldest' ? 'ASC' : 'DESC',\n    },\n  };\n};\n\nconst ROUTE_PARAMS = ['hostCollectiveSlug', 'slug', 'section', 'view'];\n\nconst updateQuery = (router, newParams) => {\n  const query = omitBy({ ...router.query, ...newParams }, (value, key) => !value || ROUTE_PARAMS.includes(key));\n  const pathname = router.asPath.split('?')[0];\n  return router.push({ pathname, query });\n};\n\nconst PendingApplications = ({ hostSlug }) => {\n  const router = useRouter() || {};\n  const query = router.query;\n  const hasFilters = React.useMemo(() => checkIfQueryHasFilters(query), [query]);\n  const { data, error, loading, variables } = useQuery(pendingApplicationsQuery, {\n    variables: { hostSlug, ...getVariablesFromQuery(query) },\n    context: API_V2_CONTEXT,\n  });\n\n  const hostApplications = data?.host?.pendingApplications;\n  return (\n    <Box maxWidth={1000} m=\"0 auto\" px={2}>\n      <Flex alignItems=\"center\" mb={24} flexWrap=\"wrap\">\n        <H1 fontSize=\"32px\" lineHeight=\"40px\" py={2} fontWeight=\"normal\">\n          <FormattedMessage id=\"host.dashboard.tab.pendingApplications\" defaultMessage=\"Pending applications\" />\n        </H1>\n        <Box mx=\"auto\" />\n        <Box p={2}>\n          <SearchBar\n            defaultValue={query.searchTerm}\n            onSubmit={searchTerm => updateQuery(router, { searchTerm, offset: null })}\n          />\n        </Box>\n      </Flex>\n      <StyledHr mb={26} borderWidth=\"0.5px\" />\n      <Box mb={34}>\n        {data?.host ? (\n          <HostAdminCollectiveFilters\n            filters={[COLLECTIVE_FILTER.SORT_BY]}\n            values={query}\n            onChange={queryParams =>\n              updateQuery(router, {\n                ...queryParams,\n                offset: null,\n              })\n            }\n          />\n        ) : loading ? (\n          <LoadingPlaceholder height={70} />\n        ) : null}\n      </Box>\n\n      {error && <MessageBoxGraphqlError error={error} mb={2} />}\n\n      {!error && !loading && !hostApplications?.nodes.length ? (\n        <MessageBox type=\"info\" withIcon data-cy=\"zero-collective-message\">\n          {hasFilters ? (\n            <FormattedMessage id=\"discover.searchNoResult\" defaultMessage=\"No Collectives match the current search.\" />\n          ) : (\n            <FormattedMessage id=\"menu.collective.none\" defaultMessage=\"No Collectives yet\" />\n          )}\n        </MessageBox>\n      ) : (\n        <React.Fragment>\n          {loading\n            ? Array.from(new Array(COLLECTIVES_PER_PAGE)).map((_, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <Box key={index} mb={24}>\n                  <LoadingPlaceholder height={362} borderRadius=\"8px\" />\n                </Box>\n              ))\n            : hostApplications?.nodes.map(application => (\n                <Box key={application.id} mb={24} data-cy=\"host-application\">\n                  <PendingApplication host={data.host} application={application} />\n                </Box>\n              ))}\n          <Flex mt={5} justifyContent=\"center\">\n            <Pagination\n              total={hostApplications?.totalCount}\n              limit={variables.limit}\n              offset={variables.offset}\n              ignoredQueryParams={ROUTE_PARAMS}\n            />\n          </Flex>\n        </React.Fragment>\n      )}\n    </Box>\n  );\n};\n\nPendingApplications.propTypes = {\n  hostSlug: PropTypes.string.isRequired,\n};\n\nexport default PendingApplications;\n","import React from 'react';\n\nconst DEFAULT_OPTIONS = {\n  /** Defines the percentage of items actually displayed */\n  percentageDisplayed: 0.5,\n};\n\n/**\n * An helper to work with dynamic paginated lists coming from GraphQL, intended to reduce\n * the load on server by loading a bigger batches at the start and updating the list in cache manually.\n */\nexport const useLazyGraphQLPaginatedResults = (query, key, options = DEFAULT_OPTIONS) => {\n  const allOptions = { ...DEFAULT_OPTIONS, ...options };\n  const limit = query?.variables?.limit || 0;\n  const results = query?.data?.[key];\n  const nbItemsDisplayed = limit * allOptions.percentageDisplayed;\n  const resultsCount = results?.nodes?.length || 0;\n  const nodes = React.useMemo(() => results?.nodes?.slice(0, nbItemsDisplayed) || [], [results, nbItemsDisplayed]);\n\n  // Refetch when the number of items go below the threshold\n  React.useEffect(() => {\n    if (results && !query.loading && resultsCount <= nbItemsDisplayed && resultsCount < results.totalCount) {\n      query.refetch();\n    }\n  }, [query?.loading, resultsCount, nbItemsDisplayed]);\n\n  if (!results) {\n    return {\n      nodes,\n      totalCount: 0,\n      offset: 0,\n      limit: nbItemsDisplayed,\n    };\n  }\n\n  return {\n    offset: query.variables.offset,\n    limit: nbItemsDisplayed,\n    totalCount: results.totalCount,\n    nodes,\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { connectAccount } from '../../lib/api';\nimport { useAsyncCall } from '../../lib/hooks/useAsyncCall';\n\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\n\n/**\n * A button for hosts to either connect or refill the balance for their PayPal account.\n */\nconst ConnectPaypalButton = ({ host, paymentMethod }) => {\n  const { loading, error, call } = useAsyncCall(async () => {\n    const urlParams = { redirect: window.location.href, useNewFlow: true };\n    const json = await connectAccount(host.legacyId || host.id, 'paypal', urlParams);\n    window.location.replace(json.redirectUrl);\n    // Give some time (60s) for redirect\n    return new Promise(resolve => setTimeout(resolve, 60000));\n  });\n\n  return (\n    <React.Fragment>\n      {error && (\n        <MessageBox withIcon type=\"error\" fontSize=\"10px\" mb={2}>\n          {error.message || 'Oops, something went wrong. Please try again.'}\n        </MessageBox>\n      )}\n      <StyledButton\n        buttonStyle=\"secondary\"\n        isBorderless\n        buttonSize=\"tiny\"\n        fontSize=\"10px\"\n        fontWeight=\"normal\"\n        loading={loading}\n        onClick={call}\n        minWidth={85}\n      >\n        {paymentMethod ? (\n          <FormattedMessage id=\"ConnectPaypal.refill\" defaultMessage=\"Refill balance\" />\n        ) : (\n          <FormattedMessage defaultMessage=\"Connect {service}\" values={{ service: 'PayPal' }} />\n        )}\n      </StyledButton>\n    </React.Fragment>\n  );\n};\n\nConnectPaypalButton.propTypes = {\n  host: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    legacyId: PropTypes.number,\n  }).isRequired,\n  paymentMethod: PropTypes.shape({}),\n};\n\nexport default ConnectPaypalButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport StyledButton from '../StyledButton';\nimport StyledLink from '../StyledLink';\n\n/**\n * A button for hosts to either connect or refill the balance for their PayPal account.\n */\nconst ConnectTransferwiseButton = ({ isConnected }) => {\n  return (\n    <StyledLink\n      openInNewTab\n      href={\n        isConnected\n          ? 'https://wise.com/user/account'\n          : 'https://docs.opencollective.com/help/fiscal-hosts/payouts/payouts-with-transferwise#connecting-transferwise'\n      }\n    >\n      <StyledButton buttonStyle=\"secondary\" isBorderless buttonSize=\"tiny\" fontSize=\"10px\" fontWeight=\"normal\">\n        {isConnected ? (\n          <FormattedMessage id=\"ConnectPaypal.refill\" defaultMessage=\"Refill balance\" />\n        ) : (\n          <FormattedMessage defaultMessage=\"Connect {service}\" values={{ service: 'Wise' }} />\n        )}\n      </StyledButton>\n    </StyledLink>\n  );\n};\n\nConnectTransferwiseButton.propTypes = {\n  isConnected: PropTypes.bool,\n};\n\nexport default ConnectTransferwiseButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ExclamationTriangle } from '@styled-icons/fa-solid/ExclamationTriangle';\nimport { Info } from '@styled-icons/feather/Info';\nimport { FormattedMessage } from 'react-intl';\n\nimport StyledTooltip from '../StyledTooltip';\n\nconst getPaypalExpiryInfo = paymentMethod => {\n  const timeBeforeExpiry = new Date(paymentMethod.expiryDate) - new Date();\n  const twoWeeks = 1000 * 60 * 60 * 24 * 14;\n  if (timeBeforeExpiry <= 0) {\n    return {\n      icon: <ExclamationTriangle size={16} color=\"#E03F6A\" />,\n      message: (\n        <FormattedMessage\n          id=\"PaypalPreApproval.expired\"\n          defaultMessage=\"Your PayPal pre-approval has expired. To reconnect your account, click {refillBalance}.\"\n          values={{\n            refillBalance: (\n              <q>\n                <FormattedMessage id=\"ConnectPaypal.refill\" defaultMessage=\"Refill balance\" />\n              </q>\n            ),\n          }}\n        />\n      ),\n    };\n  } else if (timeBeforeExpiry < twoWeeks) {\n    return {\n      icon: <ExclamationTriangle size={16} color=\"#E0E01B\" />,\n      message: (\n        <FormattedMessage\n          id=\"PaypalPreApproval.expireSoon\"\n          defaultMessage=\"Your PayPal pre-approval will expire on {expiryDate, date, long}. Renew it by clicking on {refillBalance}.\"\n          values={{\n            expiryDate: new Date(paymentMethod.expiryDate),\n            refillBalance: (\n              <q>\n                <FormattedMessage id=\"ConnectPaypal.refill\" defaultMessage=\"Refill balance\" />\n              </q>\n            ),\n          }}\n        />\n      ),\n    };\n  } else {\n    return {\n      icon: <Info size={18} color=\"#76777A\" />,\n      message: (\n        <FormattedMessage\n          id=\"PaypalPreApproval.connected\"\n          defaultMessage=\"Paypal account {paypalEmail} connected on {createdAt, date, long}. The token will expire on {expiryDate, date, long}.\"\n          values={{\n            createdAt: new Date(paymentMethod.createdAt),\n            expiryDate: new Date(paymentMethod.expiryDate),\n            paypalEmail: <strong>{paymentMethod.name}</strong>,\n          }}\n        />\n      ),\n    };\n  }\n};\n\nconst PaypalPreApprovalDetailsIcon = ({ paymentMethod }) => {\n  if (!paymentMethod) {\n    return null;\n  }\n\n  const { message, icon } = getPaypalExpiryInfo(paymentMethod);\n  return <StyledTooltip content={message}>{icon}</StyledTooltip>;\n};\n\nPaypalPreApprovalDetailsIcon.propTypes = {\n  paymentMethod: PropTypes.shape({\n    name: PropTypes.string,\n    expiryDate: PropTypes.string,\n    balance: PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string.isRequired,\n    }).isRequired,\n  }),\n};\n\nexport default PaypalPreApprovalDetailsIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Info } from '@styled-icons/feather/Info';\n\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport StyledTooltip from '../StyledTooltip';\n\nconst BalancesBreakdown = ({ balances }) => {\n  return (\n    <div>\n      {balances.map(({ valueInCents, currency }) => (\n        <React.Fragment key={currency}>\n          {currency}:&nbsp;\n          <FormattedMoneyAmount\n            amount={valueInCents}\n            currency={currency}\n            amountStyles={{ color: '#FFFFFF', fontWeight: 'bold' }}\n            showCurrencyCode={false}\n          />\n          <br />\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nBalancesBreakdown.propTypes = {\n  balances: PropTypes.arrayOf(\n    PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string,\n    }),\n  ),\n};\n\nconst TransferwiseDetailsIcon = ({ size, balances }) => {\n  if (!balances || balances.length < 2) {\n    return null;\n  } else {\n    return (\n      <StyledTooltip content={() => <BalancesBreakdown balances={balances} />}>\n        <Info size={size} color=\"#76777A\" />\n      </StyledTooltip>\n    );\n  }\n};\n\nTransferwiseDetailsIcon.propTypes = {\n  size: PropTypes.number,\n  balances: PropTypes.array,\n};\n\nexport default TransferwiseDetailsIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from '@apollo/client';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { hasPaypalPreApprovalExpired } from '../../lib/payment-method-utils';\n\nimport Container from '../Container';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport PayPal from '../icons/PayPal';\nimport TransferwiseIcon from '../icons/TransferwiseIcon';\nimport Link from '../Link';\nimport LocationAddress from '../LocationAddress';\nimport StyledCard from '../StyledCard';\nimport StyledHr from '../StyledHr';\nimport StyledLink from '../StyledLink';\nimport { Span } from '../Text';\n\nimport ConnectPaypalButton from './ConnectPaypalButton';\nimport ConnectTransferwiseButton from './ConnectTransferwiseButton';\nimport PaypalPreApprovalDetailsIcon from './PaypalPreApprovalDetailsIcon';\nimport TransferwiseDetailsIcon from './TransferwiseDetailsIcon';\n\nexport const hostInfoCardFields = gql`\n  fragment HostInfoCardFields on Host {\n    id\n    legacyId\n    slug\n    currency\n    location {\n      id\n      address\n      country\n    }\n    paypalPreApproval {\n      id\n      name\n      expiryDate\n      createdAt\n      balance {\n        currency\n        valueInCents\n      }\n    }\n    transferwiseBalances {\n      valueInCents\n      currency\n    }\n    stats {\n      id\n      balance {\n        valueInCents\n      }\n    }\n  }\n`;\n\nconst ColumnTitle = styled.span({\n  textTransform: 'uppercase',\n  color: 'black.600',\n  fontSize: '9px',\n  lineHeight: '14px',\n  letterSpacing: '0.6px',\n  fontWeight: '600',\n  flex: '1 1',\n  paddingTop: '3px',\n});\n\nconst Separator = () => (\n  <Flex alignItems=\"center\" mx={[null, null, 24]}>\n    <StyledHr\n      width={['100%', null, '1px']}\n      borderTop={[null, null, 'none']}\n      height={['1px', null, '60%']}\n      my={[3, null, 0]}\n      borderLeft=\"1px solid\"\n      borderColor=\"black.200\"\n    />\n  </Flex>\n);\n\nconst getMainTransferwiseBalance = (balances, hostCurrency) => {\n  if (!balances) {\n    return null;\n  } else {\n    return balances.find(({ currency }) => currency === hostCurrency) || balances[0];\n  }\n};\n\n/**\n * A box to display some info about the host, with links to refill the\n * PayPal & Transferwise balances.\n */\nconst HostInfoCard = ({ host }) => {\n  const mainTransferwiseBalance = getMainTransferwiseBalance(host.transferwiseBalances, host.currency);\n  return (\n    <StyledCard display={['block', null, 'flex']} justifyContent=\"space-evenly\" px={4} py={22}>\n      <Flex flexDirection=\"column\" justifyContent=\"space-between\" flex=\"1 1 33%\">\n        <Flex alignItems=\"center\" width=\"100%\">\n          <Box mr={3}>\n            <PayPal size={14} style={{ color: '#9D9FA3' }} />\n          </Box>\n          <ColumnTitle>\n            <FormattedMessage id=\"ServiceBalance\" defaultMessage=\"{service} balance\" values={{ service: 'Paypal' }} />\n          </ColumnTitle>\n          <PaypalPreApprovalDetailsIcon paymentMethod={host.paypalPreApproval} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" py={3}>\n          <Span color=\"black.400\" fontSize=\"15px\">\n            {host.currency}\n          </Span>\n          <Span fontSize=\"15px\">\n            <FormattedMoneyAmount\n              showCurrencyCode={false}\n              currency={host.paypalPreApproval?.balance.currency || host.currency}\n              amount={\n                !host.paypalPreApproval || hasPaypalPreApprovalExpired(host.paypalPreApproval)\n                  ? null\n                  : host.paypalPreApproval.balance.valueInCents\n              }\n            />\n          </Span>\n        </Flex>\n        <Container display=\"inline-block\" ml=\"-16px\">\n          <ConnectPaypalButton host={host} paymentMethod={host.paypalPreApproval} />\n        </Container>\n      </Flex>\n      <Separator />\n      <Flex flexDirection=\"column\" justifyContent=\"space-between\" flex=\"1 1 33%\">\n        <Flex alignItems=\"center\" width=\"100%\">\n          <Box mr={3}>\n            <TransferwiseIcon size={14} color=\"#9D9FA3\" />\n          </Box>\n          <ColumnTitle>\n            <FormattedMessage id=\"ServiceBalance\" defaultMessage=\"{service} balance\" values={{ service: 'Wise' }} />\n          </ColumnTitle>\n          <TransferwiseDetailsIcon size={18} balances={host.transferwiseBalances} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" py={3}>\n          <Span color=\"black.400\" fontSize=\"15px\">\n            {mainTransferwiseBalance?.currency || host.currency}\n          </Span>\n          <Span fontSize=\"15px\">\n            <FormattedMoneyAmount\n              showCurrencyCode={false}\n              amount={mainTransferwiseBalance?.valueInCents}\n              currency={mainTransferwiseBalance?.currency || host.currency}\n            />\n          </Span>\n        </Flex>\n        <Container display=\"inline-block\" ml=\"-16px\">\n          <ConnectTransferwiseButton isConnected={Boolean(host.transferwiseBalances)} />\n        </Container>\n      </Flex>\n      <Separator />\n      <Flex flexDirection=\"column\" justifyContent=\"space-between\" flex=\"1 1 33%\">\n        <Box mb={2}>\n          <ColumnTitle>\n            <FormattedMessage id=\"BillingAddress\" defaultMessage=\"Billing address\" />\n          </ColumnTitle>\n        </Box>\n        <Container fontSize=\"10px\" lineHeight=\"15px\" color=\"black.500\" my={2} minHeight={35}>\n          <LocationAddress location={host.location} showMessageIfEmpty />\n        </Container>\n        <StyledLink as={Link} href={`/${host.slug}/admin`} fontSize=\"10px\" lineHeight=\"15px\">\n          <FormattedMessage id=\"Edit\" defaultMessage=\"Edit\" />\n        </StyledLink>\n      </Flex>\n    </StyledCard>\n  );\n};\n\nHostInfoCard.propTypes = {\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n    location: PropTypes.object,\n    paypalPreApproval: PropTypes.shape({\n      expiryDate: PropTypes.string,\n      balance: PropTypes.shape({\n        valueInCents: PropTypes.number,\n        currency: PropTypes.string.isRequired,\n      }).isRequired,\n    }),\n    transferwiseBalances: PropTypes.arrayOf(\n      PropTypes.shape({\n        valueInCents: PropTypes.number,\n        currency: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n};\n\nexport default HostInfoCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { isEmpty, omit, omitBy } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport EXPENSE_STATUS from '../../lib/constants/expense-status';\nimport { parseDateInterval } from '../../lib/date-utils';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { useLazyGraphQLPaginatedResults } from '../../lib/hooks/useLazyGraphQLPaginatedResults';\n\nimport { parseAmountRange } from '../budget/filters/AmountFilter';\nimport DismissibleMessage from '../DismissibleMessage';\nimport ExpensesFilters from '../expenses/ExpensesFilters';\nimport ExpensesList from '../expenses/ExpensesList';\nimport { parseChronologicalOrderInput } from '../expenses/filters/ExpensesOrder';\nimport {\n  expenseHostFields,\n  expensesListAdminFieldsFragment,\n  expensesListFieldsFragment,\n} from '../expenses/graphql/fragments';\nimport { Box, Flex } from '../Grid';\nimport Link from '../Link';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport MessageBox from '../MessageBox';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport Pagination from '../Pagination';\nimport SearchBar from '../SearchBar';\nimport StyledButton from '../StyledButton';\nimport StyledHr from '../StyledHr';\nimport { H1, P } from '../Text';\n\nimport HostInfoCard, { hostInfoCardFields } from './HostInfoCard';\nimport ScheduledExpensesBanner from './ScheduledExpensesBanner';\n\nconst hostDashboardExpensesQuery = gql`\n  query HostDashboardExpenses(\n    $hostSlug: String!\n    $limit: Int!\n    $offset: Int!\n    $type: ExpenseType\n    $tags: [String]\n    $status: ExpenseStatusFilter\n    $minAmount: Int\n    $maxAmount: Int\n    $payoutMethodType: PayoutMethodType\n    $dateFrom: DateTime\n    $dateTo: DateTime\n    $searchTerm: String\n    $orderBy: ChronologicalOrderInput\n  ) {\n    host(slug: $hostSlug) {\n      id\n      ...ExpenseHostFields\n      ...HostInfoCardFields\n      transferwise {\n        id\n        availableCurrencies\n      }\n    }\n    expenses(\n      host: { slug: $hostSlug }\n      limit: $limit\n      offset: $offset\n      type: $type\n      tag: $tags\n      status: $status\n      minAmount: $minAmount\n      maxAmount: $maxAmount\n      payoutMethodType: $payoutMethodType\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n      searchTerm: $searchTerm\n      orderBy: $orderBy\n    ) {\n      totalCount\n      offset\n      limit\n      nodes {\n        id\n        ...ExpensesListFieldsFragment\n        ...ExpensesListAdminFieldsFragment\n      }\n    }\n  }\n\n  ${expensesListFieldsFragment}\n  ${expensesListAdminFieldsFragment}\n  ${expenseHostFields}\n  ${hostInfoCardFields}\n`;\n\nconst onExpenseUpdate = (updatedExpense, cache, filteredStatus) => {\n  if (updatedExpense.status !== filteredStatus) {\n    cache.modify({\n      fields: {\n        expenses(existingExpenses, { readField }) {\n          if (!existingExpenses?.nodes) {\n            return existingExpenses;\n          } else {\n            return {\n              ...existingExpenses,\n              totalCount: existingExpenses.totalCount - 1,\n              nodes: existingExpenses.nodes.filter(expense => updatedExpense.id !== readField('id', expense)),\n            };\n          }\n        },\n      },\n    });\n  }\n};\n\nconst NB_EXPENSES_DISPLAYED = 10;\n\nconst isValidStatus = status => {\n  return Boolean(status === 'READY_TO_PAY' || EXPENSE_STATUS[status]);\n};\n\nconst getVariablesFromQuery = query => {\n  const amountRange = parseAmountRange(query.amount);\n  const { from: dateFrom, to: dateTo } = parseDateInterval(query.period);\n  const orderBy = query.orderBy && parseChronologicalOrderInput(query.orderBy);\n  return {\n    offset: parseInt(query.offset) || 0,\n    limit: (parseInt(query.limit) || NB_EXPENSES_DISPLAYED) * 2,\n    status: isValidStatus(query.status) ? query.status : null,\n    type: query.type,\n    tags: query.tag ? [query.tag] : undefined,\n    minAmount: amountRange[0] && amountRange[0] * 100,\n    maxAmount: amountRange[1] && amountRange[1] * 100,\n    payoutMethodType: query.payout,\n    dateFrom,\n    dateTo,\n    orderBy,\n    searchTerm: query.searchTerm,\n  };\n};\n\nconst ROUTE_PARAMS = ['hostCollectiveSlug', 'view', 'slug', 'section'];\n\nconst hasParams = query => {\n  return Object.entries(query).some(([key, value]) => {\n    return ![...ROUTE_PARAMS, 'offset', 'limit', 'paypalApprovalError', 'orderBy'].includes(key) && value;\n  });\n};\n\nconst HostDashboardExpenses = ({ hostSlug, isNewAdmin }) => {\n  const router = useRouter() || {};\n  const query = router.query;\n  const [paypalPreApprovalError, setPaypalPreApprovalError] = React.useState(null);\n  const hasFilters = React.useMemo(() => hasParams(query), [query]);\n  const pageRoute = isNewAdmin ? `/${hostSlug}/admin/expenses` : `/${hostSlug}/dashboard/expenses`;\n  const expenses = useQuery(hostDashboardExpensesQuery, {\n    variables: { hostSlug, ...getVariablesFromQuery(omitBy(query, isEmpty)) },\n    context: API_V2_CONTEXT,\n  });\n  const paginatedExpenses = useLazyGraphQLPaginatedResults(expenses, 'expenses');\n  React.useEffect(() => {\n    if (query.paypalApprovalError && !paypalPreApprovalError) {\n      setPaypalPreApprovalError(query.paypalApprovalError);\n      router.replace(pageRoute, omit(query, 'paypalApprovalError'), { shallow: true });\n    }\n  }, [query.paypalApprovalError]);\n\n  const { data, error, loading } = expenses;\n  const { hasDisputedOrders, hasInReviewOrders } = data?.host || {};\n  const getQueryParams = newParams => {\n    return omitBy({ ...router.query, ...newParams }, (value, key) => !value || ROUTE_PARAMS.includes(key));\n  };\n\n  return (\n    <Box maxWidth={1000} m=\"0 auto\" px={2}>\n      {!loading && (hasDisputedOrders || hasInReviewOrders) && (\n        <MessageBox type=\"warning\" withIcon mb={3}>\n          <Flex\n            flexDirection={hasDisputedOrders && hasInReviewOrders ? 'column' : 'row'}\n            gridGap={'8px'}\n            flexWrap={'wrap'}\n          >\n            <P fontWeight={700}>\n              <FormattedMessage id=\"host.fraudProtectionWarning\" defaultMessage=\"Fraud Protection Warning\" />\n            </P>\n            {hasDisputedOrders && (\n              <P>\n                <FormattedMessage\n                  id=\"host.disputes.warning\"\n                  defaultMessage=\"There are disputed charges that need review.\"\n                />{' '}\n                <Link href={`/${hostSlug}/admin/orders?status=DISPUTED`}>Disputed Orders</Link>{' '}\n              </P>\n            )}\n            {hasInReviewOrders && (\n              <P>\n                <FormattedMessage\n                  id=\"host.in_review.warning\"\n                  defaultMessage=\"There are charges under review that need attention.\"\n                />{' '}\n                <Link href={`/${hostSlug}/admin/orders?status=IN_REVIEW`}>In Review Orders</Link>{' '}\n              </P>\n            )}\n          </Flex>\n        </MessageBox>\n      )}\n\n      <Flex mb={24} alignItems=\"center\" flexWrap=\"wrap\">\n        <H1 fontSize=\"32px\" lineHeight=\"40px\" py={2} fontWeight=\"normal\">\n          <FormattedMessage id=\"Expenses\" defaultMessage=\"Expenses\" />\n        </H1>\n        <Box mx=\"auto\" />\n        <Box p={2}>\n          <SearchBar\n            defaultValue={query.searchTerm}\n            onSubmit={searchTerm =>\n              router.push({\n                pathname: pageRoute,\n                query: getQueryParams({ searchTerm, offset: null }),\n              })\n            }\n          />\n        </Box>\n      </Flex>\n      <StyledHr mb={26} borderWidth=\"0.5px\" borderColor=\"black.300\" />\n      {paypalPreApprovalError && (\n        <DismissibleMessage>\n          {({ dismiss }) => (\n            <MessageBox type=\"warning\" mb={3} withIcon onClose={dismiss}>\n              {paypalPreApprovalError === 'PRE_APPROVAL_EMAIL_CHANGED' ? (\n                <FormattedMessage\n                  id=\"paypal.preApproval.emailWarning\"\n                  defaultMessage=\"Warning: the associated PayPal email was changed from {oldEmail} to {newEmail}. If this was not intentional, click {refillBalance} and use the correct account.\"\n                  values={{\n                    oldEmail: <strong>{query.oldPaypalEmail}</strong>,\n                    newEmail: <strong>{query.newPaypalEmail}</strong>,\n                    refillBalance: (\n                      <q>\n                        <FormattedMessage id=\"ConnectPaypal.refill\" defaultMessage=\"Refill balance\" />\n                      </q>\n                    ),\n                  }}\n                />\n              ) : (\n                paypalPreApprovalError\n              )}\n            </MessageBox>\n          )}\n        </DismissibleMessage>\n      )}\n      <Box mb={4}>\n        {loading ? (\n          <LoadingPlaceholder height={150} />\n        ) : error ? (\n          <MessageBoxGraphqlError error={error} />\n        ) : (\n          <HostInfoCard host={data.host} />\n        )}\n      </Box>\n      {!expenses.loading && data?.host && (\n        <ScheduledExpensesBanner\n          host={data.host}\n          expenses={paginatedExpenses.nodes}\n          onSubmit={() => {\n            expenses.refetch();\n          }}\n          secondButton={\n            !(query.status === 'SCHEDULED_FOR_PAYMENT' && query.payout === 'BANK_ACCOUNT') ? (\n              <StyledButton\n                buttonSize=\"tiny\"\n                buttonStyle=\"successSecondary\"\n                mr={1}\n                onClick={() => {\n                  router.push({\n                    pathname: pageRoute,\n                    query: getQueryParams({ status: 'SCHEDULED_FOR_PAYMENT', payout: 'BANK_ACCOUNT', offset: null }),\n                  });\n                }}\n              >\n                <FormattedMessage id=\"expenses.list\" defaultMessage=\"List Expenses\" />\n              </StyledButton>\n            ) : null\n          }\n        />\n      )}\n      <Box mb={34}>\n        {data?.host ? (\n          <ExpensesFilters\n            collective={data.host}\n            filters={query}\n            onChange={queryParams =>\n              router.push({\n                pathname: pageRoute,\n                query: getQueryParams({ ...queryParams, offset: null }),\n              })\n            }\n          />\n        ) : loading ? (\n          <LoadingPlaceholder height={70} />\n        ) : null}\n      </Box>\n      {error ? null : !loading && !data.expenses?.nodes.length ? (\n        <MessageBox type=\"info\" withIcon data-cy=\"zero-expense-message\">\n          {hasFilters ? (\n            <FormattedMessage\n              id=\"ExpensesList.Empty\"\n              defaultMessage=\"No expense matches the given filters, <ResetLink>reset them</ResetLink> to see all expenses.\"\n              values={{\n                ResetLink(text) {\n                  return (\n                    <Link data-cy=\"reset-expenses-filters\" href={{ pathname: pageRoute }}>\n                      {text}\n                    </Link>\n                  );\n                },\n              }}\n            />\n          ) : (\n            <FormattedMessage id=\"expenses.empty\" defaultMessage=\"No expenses\" />\n          )}\n        </MessageBox>\n      ) : (\n        <React.Fragment>\n          <ExpensesList\n            isLoading={loading}\n            host={data?.host}\n            nbPlaceholders={paginatedExpenses.limit}\n            expenses={paginatedExpenses.nodes}\n            view=\"admin\"\n            onProcess={(expense, cache) => {\n              hasFilters && onExpenseUpdate(expense, cache, query.status);\n            }}\n          />\n          <Flex mt={5} justifyContent=\"center\">\n            <Pagination\n              route={pageRoute}\n              total={paginatedExpenses.totalCount}\n              limit={paginatedExpenses.limit}\n              offset={paginatedExpenses.offset}\n              ignoredQueryParams={ROUTE_PARAMS}\n            />\n          </Flex>\n        </React.Fragment>\n      )}\n    </Box>\n  );\n};\n\nHostDashboardExpenses.propTypes = {\n  hostSlug: PropTypes.string.isRequired,\n  isNewAdmin: PropTypes.bool,\n};\n\nexport default HostDashboardExpenses;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { clamp, isBoolean, isNil, round } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport EXPENSE_TYPE from '../../lib/constants/expenseTypes';\nimport { HOST_FEE_STRUCTURE } from '../../lib/constants/host-fee-structure';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { i18nExpenseType } from '../../lib/i18n/expense';\n\nimport { ALL_SECTIONS } from '../admin-panel/constants';\nimport { Box, Flex } from '../Grid';\nimport { getI18nLink } from '../I18nFormatters';\nimport Link from '../Link';\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\nimport StyledInputGroup from '../StyledInputGroup';\nimport StyledModal, { CollectiveModalHeader, ModalBody, ModalFooter } from '../StyledModal';\nimport StyledRadioList from '../StyledRadioList';\nimport StyledSelect from '../StyledSelect';\nimport { Label, P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst OPTION_LABELS = defineMessages({\n  [HOST_FEE_STRUCTURE.DEFAULT]: {\n    id: 'CollectiveFeesForm.Default',\n    defaultMessage: 'Use global host fees',\n  },\n  [HOST_FEE_STRUCTURE.CUSTOM_FEE]: {\n    id: 'CollectiveFeesForm.CustomFees',\n    defaultMessage: 'Set a custom fee for this Collective.',\n  },\n});\n\nconst getDefaultFee = (collective, host) => {\n  if (isNil(collective.hostFeePercent) || collective.hostFeePercent === host.hostFeePercent) {\n    return host.hostFeePercent;\n  } else {\n    return collective.hostFeePercent;\n  }\n};\n\nconst editAccountSettingsMutation = gql`\n  mutation EditAccountSettings(\n    $account: AccountReferenceInput!\n    $hostFeePercent: Float!\n    $isCustomFee: Boolean!\n    $key: AccountSettingsKey!\n    $value: JSON!\n  ) {\n    editAccountFeeStructure(account: $account, hostFeePercent: $hostFeePercent, isCustomFee: $isCustomFee) {\n      id\n      ... on AccountWithHost {\n        hostFeesStructure\n        hostFeePercent\n      }\n      childrenAccounts {\n        nodes {\n          id\n          ... on AccountWithHost {\n            hostFeesStructure\n            hostFeePercent\n          }\n        }\n      }\n    }\n\n    editAccountSetting(account: $account, key: $key, value: $value) {\n      id\n      settings\n    }\n  }\n`;\n\nconst DISPLAYED_EXPENSE_TYPES = [EXPENSE_TYPE.INVOICE, EXPENSE_TYPE.RECEIPT, EXPENSE_TYPE.GRANT];\n\nconst EXPENSE_TYPE_OPTIONS = [\n  { value: null, label: <FormattedMessage defaultMessage=\"Use global host settings\" /> },\n  { value: true, label: <FormattedMessage defaultMessage=\"Enabled\" /> },\n  { value: false, label: <FormattedMessage defaultMessage=\"Disabled\" /> },\n];\n\nconst EXPENSE_TYPE_SELECT_STYLES = {\n  option: { fontSize: '12px' },\n};\n\nconst CollectiveSettingsModal = ({ host, collective, ...props }) => {\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  const [hostFeePercent, setHostFeePercent] = useState(getDefaultFee(collective, host));\n  const [selectedOption, setSelectedOption] = useState(\n    hostFeePercent === host.hostFeePercent ? HOST_FEE_STRUCTURE.DEFAULT : HOST_FEE_STRUCTURE.CUSTOM_FEE,\n  );\n\n  const [expenseTypes, setExpenseTypes] = React.useState(() => collective.settings?.expenseTypes || {});\n  const [submitEditSettings, { loading }] = useMutation(editAccountSettingsMutation, { context: API_V2_CONTEXT });\n  const hasParent = Boolean(collective.parent);\n\n  return (\n    <StyledModal maxWidth={432} trapFocus {...props}>\n      <CollectiveModalHeader collective={collective} mb={3} />\n      <ModalBody>\n        <P fontSize=\"16px\" lineHeight=\"24px\" fontWeight=\"500\" mb={2}>\n          <FormattedMessage defaultMessage=\"Expense types\" />\n        </P>\n        <div>\n          {DISPLAYED_EXPENSE_TYPES.map(expenseType => (\n            <Flex key={expenseType} mb={3} alignItems=\"center\">\n              <Box mr={2} flex=\"0 1 70px\">\n                <Label htmlFor={`select-expense-type-${expenseType}`} fontWeight=\"normal\">\n                  {i18nExpenseType(intl, expenseType)}\n                </Label>\n              </Box>\n              <StyledSelect\n                inputId={`select-expense-type-${expenseType}`}\n                fontSize=\"12px\"\n                minWidth={195}\n                styles={EXPENSE_TYPE_SELECT_STYLES}\n                options={EXPENSE_TYPE_OPTIONS}\n                onChange={({ value }) => setExpenseTypes({ ...expenseTypes, [expenseType]: value })}\n                value={\n                  isBoolean(expenseTypes[expenseType])\n                    ? EXPENSE_TYPE_OPTIONS.find(({ value }) => value === expenseTypes[expenseType])\n                    : EXPENSE_TYPE_OPTIONS[0]\n                }\n              />\n            </Flex>\n          ))}\n        </div>\n\n        <P fontSize=\"16px\" lineHeight=\"24px\" fontWeight=\"500\" mb={2}>\n          <FormattedMessage id=\"CollectiveFeesForm.Title\" defaultMessage=\"Set fee structure\" />\n        </P>\n\n        {hasParent ? (\n          <MessageBox type=\"info\" withIcon lineHeight=\"18px\">\n            <FormattedMessage defaultMessage=\"Events and Projects inherit the host fees structure configuration of their parents.\" />\n          </MessageBox>\n        ) : (\n          <React.Fragment>\n            <P>\n              <FormattedMessage defaultMessage=\"This change will also apply to all the projects and events created by this collective\" />\n            </P>\n\n            <StyledRadioList\n              id=\"fees-structure-radio\"\n              name=\"fees-structure-radio\"\n              options={[HOST_FEE_STRUCTURE.DEFAULT, HOST_FEE_STRUCTURE.CUSTOM_FEE]}\n              value={selectedOption}\n              onChange={({ value }) => setSelectedOption(value)}\n            >\n              {({ key, radio }) => (\n                <Flex key={key} mt={3}>\n                  <Box mr={12}>{radio}</Box>\n                  <Box>\n                    <P mb={2} fontWeight=\"500\">\n                      {intl.formatMessage(OPTION_LABELS[key])}\n                    </P>\n                    {key === HOST_FEE_STRUCTURE.DEFAULT && (\n                      <P fontSize=\"11px\" lineHeight=\"16px\" color=\"black.600\" fontWeight=\"normal\">\n                        <FormattedMessage\n                          id=\"CollectiveFeesForm.DefaultDescription\"\n                          defaultMessage=\"Set the global (default) fee in your <Link>settings</Link>.\"\n                          values={{\n                            Link: getI18nLink({\n                              as: Link,\n                              href: `/${host.slug}/admin/${ALL_SECTIONS.FISCAL_HOSTING}`,\n                              openInNewTab: true,\n                            }),\n                          }}\n                        />\n                      </P>\n                    )}\n                    {key === HOST_FEE_STRUCTURE.CUSTOM_FEE && (\n                      <StyledInputGroup\n                        append=\"%\"\n                        type=\"number\"\n                        min=\"0\"\n                        max=\"100\"\n                        maxWidth={90}\n                        appendProps={{ color: 'black.600' }}\n                        fontWeight=\"normal\"\n                        value={isNaN(hostFeePercent) ? '' : hostFeePercent}\n                        step=\"0.01\"\n                        onClick={() => setSelectedOption(key)}\n                        onChange={e => setHostFeePercent(parseFloat(e.target.value))}\n                        onBlur={e => {\n                          const newValue = clamp(round(parseFloat(e.target.value), 2), 0, 100);\n                          setHostFeePercent(isNaN(newValue) ? host.hostFeePercent : newValue);\n                        }}\n                      />\n                    )}\n                  </Box>\n                </Flex>\n              )}\n            </StyledRadioList>\n          </React.Fragment>\n        )}\n      </ModalBody>\n      <ModalFooter>\n        <Flex justifyContent=\"center\">\n          <StyledButton\n            buttonStyle=\"primary\"\n            minWidth={90}\n            loading={loading}\n            onClick={async () => {\n              const isCustomFee = selectedOption === HOST_FEE_STRUCTURE.CUSTOM_FEE;\n              try {\n                await submitEditSettings({\n                  variables: {\n                    account: { id: collective.id },\n                    hostFeePercent: isCustomFee ? hostFeePercent : host.hostFeePercent,\n                    isCustomFee,\n                    key: 'expenseTypes',\n                    value: expenseTypes,\n                  },\n                });\n\n                props?.onClose();\n              } catch (e) {\n                addToast({ type: TOAST_TYPE.ERROR, variant: 'light', message: i18nGraphqlException(intl, e) });\n              }\n            }}\n          >\n            <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n          </StyledButton>\n          <StyledButton ml={3} minWidth={90} onClick={props.onClose} disabled={loading}>\n            <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n          </StyledButton>\n        </Flex>\n      </ModalFooter>\n    </StyledModal>\n  );\n};\n\nCollectiveSettingsModal.propTypes = {\n  onClose: PropTypes.func,\n  collective: PropTypes.shape({\n    id: PropTypes.string,\n    hostFeePercent: PropTypes.number,\n    settings: PropTypes.object,\n    parent: PropTypes.object,\n    type: PropTypes.string,\n  }).isRequired,\n  host: PropTypes.shape({\n    slug: PropTypes.string,\n    hostFeePercent: PropTypes.number,\n  }).isRequired,\n};\n\nexport default CollectiveSettingsModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { usePopper } from 'react-popper';\nimport styled from 'styled-components';\nimport { v4 as uuid } from 'uuid';\n\nimport useGlobalBlur from '../lib/hooks/useGlobalBlur';\nimport useEscapeKey, { ESCAPE_KEY } from '../lib/hooks/useKeyboardKey';\n\nconst Arrow = styled('div')`\n  position: absolute;\n  font-size: 8px;\n  width: 3em;\n  height: 3em;\n\n  &::before {\n    content: '';\n    margin: auto;\n    display: block;\n    width: 0;\n    height: 0;\n    border-style: solid;\n  }\n`;\n\nconst StyledMenuPopoverContainer = styled(`div`)`\n  max-width: 320px;\n  z-index: 1000000;\n  opacity: 0.96 !important;\n  border-radius: 4px;\n  font-size: 12px;\n  text-transform: initial;\n  white-space: normal;\n  color: white;\n  background: white;\n  box-shadow: 0px 4px 8px rgba(20, 20, 20, 0.16);\n  border: 1px solid #e2e2e2;\n\n  &[data-popper-placement*='bottom'] {\n    ${Arrow} {\n      top: 0;\n      left: 0;\n      margin-top: -1em;\n      width: 3em;\n      height: 1em;\n      &::before {\n        border-width: 0 1.5em 1em 1.5em;\n        border-color: transparent transparent white transparent;\n        filter: drop-shadow(0 0 0 grey);\n      }\n    }\n  }\n  &[data-popper-placement*='top'] {\n    ${Arrow} {\n      bottom: 0;\n      left: 0;\n      margin-bottom: -0.9em;\n      width: 3em;\n      height: 1em;\n      &::before {\n        border-width: 1em 1.5em 0 1.5em;\n        border-color: white transparent transparent transparent;\n        filter: drop-shadow(0 0 0 grey);\n      }\n    }\n  }\n  &[data-popper-placement*='right'] {\n    ${Arrow} {\n      left: 0;\n      margin-left: -0.9em;\n      height: 3em;\n      width: 1em;\n      &::before {\n        border-width: 1.5em 1em 1.5em 0;\n        border-color: transparent white transparent transparent;\n        filter: drop-shadow(0 0 0 grey);\n      }\n    }\n  }\n  &[data-popper-placement*='left'] {\n    ${Arrow} {\n      right: 0;\n      margin-right: -0.9em;\n      height: 3em;\n      width: 1em;\n      &::before {\n        border-width: 1.5em 0 1.5em 1em;\n        border-color: transparent transparent transparent white;\n        filter: drop-shadow(0 0 0 grey);\n      }\n    }\n  }\n`;\n\nconst InnerMenuContainer = styled.div`\n  outline: none;\n`;\n\nconst TooltipContent = ({ onClose, content, arrowProps, containerProps }) => {\n  const innerRef = React.useRef();\n\n  // Close on click outside\n  useGlobalBlur(innerRef, isOutside => {\n    if (isOutside) {\n      onClose();\n    }\n  });\n\n  // Close when Escape is pressed\n  useEscapeKey({ callback: onClose, keyMatch: ESCAPE_KEY });\n\n  // Focus menu when opening\n  React.useEffect(() => {\n    innerRef.current.focus();\n  }, []);\n\n  return (\n    <StyledMenuPopoverContainer {...containerProps}>\n      <InnerMenuContainer ref={innerRef} tabIndex=\"-1\">\n        {content({ onClose })}\n      </InnerMenuContainer>\n      <Arrow {...arrowProps} />\n    </StyledMenuPopoverContainer>\n  );\n};\n\nTooltipContent.propTypes = {\n  content: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  arrowProps: PropTypes.object,\n  containerProps: PropTypes.any,\n};\n\nconst MenuPopover = ({ children, placement, content }) => {\n  const [isMenuDisplayed, setIsMenuDisplayed] = useState(false);\n  const [referenceElement, setReferenceElement] = useState(null);\n  const [popperElement, setPopperElement] = useState(null);\n  const [arrowElement, setArrowElement] = useState(null);\n  const [id, setId] = useState(null);\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [{ name: 'arrow', options: { element: arrowElement } }],\n  });\n\n  React.useEffect(() => {\n    setId(`menu-popover-${uuid()}`); // We only set `id` on the client to avoid mismatches with SSR\n  }, []);\n\n  return (\n    <React.Fragment>\n      {children({ ref: setReferenceElement, onClick: () => setIsMenuDisplayed(true) })}\n\n      {id && isMenuDisplayed && (\n        <TooltipContent\n          placement={placement}\n          content={content}\n          onClose={() => setIsMenuDisplayed(false)}\n          arrowProps={{\n            ref: setArrowElement,\n            style: styles.arrow,\n            ...attributes.arrow,\n          }}\n          containerProps={{\n            ref: setPopperElement,\n            style: styles.popper,\n            ...attributes.popper,\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nMenuPopover.propTypes = {\n  /** Tooltip place */\n  placement: PropTypes.oneOf([\n    'auto',\n    'auto-start',\n    'auto-end',\n    'top',\n    'top-start',\n    'top-end',\n    'bottom',\n    'bottom-start',\n    'bottom-end',\n    'right',\n    'right-start',\n    'right-end',\n    'left',\n    'left-start',\n    'left-end',\n  ]),\n  /** The popup content */\n  content: PropTypes.func.isRequired,\n  /** The trigger. Either:\n   *  - A render func, that gets passed props to set on the trigger\n   *  - A React node, rendered inside an div\n   */\n  children: PropTypes.func,\n};\n\nMenuPopover.defaultProps = {\n  placement: 'top-start',\n};\n\nexport default MenuPopover;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { formatCurrency } from '../../lib/currency-utils';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport { Flex } from '../Grid';\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\nimport StyledLink from '../StyledLink';\nimport StyledModal, { CollectiveModalHeader, ModalBody, ModalFooter } from '../StyledModal';\nimport StyledTextarea from '../StyledTextarea';\nimport { Label, P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst unhostAccountMutation = gql`\n  mutation UnhostAccount($account: AccountReferenceInput!, $message: String) {\n    removeHost(account: $account, message: $message) {\n      id\n      slug\n      name\n      ... on AccountWithHost {\n        host {\n          id\n        }\n      }\n    }\n  }\n`;\n\nconst UnhostAccountModal = ({ collective, host, ...props }) => {\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  const [message, setMessage] = useState('');\n  const [unhostAccount, { loading }] = useMutation(unhostAccountMutation, {\n    context: API_V2_CONTEXT,\n    variables: {\n      account: {\n        id: collective.id,\n      },\n      message,\n    },\n    refetchQueries: ['HostDashboardHostedCollectives'],\n    awaitRefetchQueries: true,\n  });\n\n  return (\n    <StyledModal maxWidth={432} trapFocus {...props}>\n      <CollectiveModalHeader collective={collective} mb={3} />\n      <ModalBody>\n        <div>\n          <P fontSize=\"16px\" fontWeight=\"700\" lineHeight=\"24px\" color=\"red.900\" mb={2}>\n            <FormattedMessage\n              defaultMessage=\"Are you sure you want to un-host {collectiveName}?\"\n              values={{ collectiveName: collective.name }}\n            />\n          </P>\n          <P fontSize=\"14px\" lineHeight=\"20px\" color=\"black.700\" mb={2}>\n            <FormattedMessage\n              defaultMessage=\"{fiscalHostName} will no longer be the Fiscal Host for this Collective. Un-hosting this Collective means no longer holding funds for them, neither managing tax compliance and accounting.\"\n              values={{ fiscalHostName: host.name }}\n            />\n          </P>\n          {collective.stats.balance.valueInCents > 0 && (\n            <MessageBox type=\"warning\" mb={2}>\n              <FormattedMessage\n                defaultMessage=\"The Collective's balance must be zero to un-host, including its Events or Projects. There is a remaining balance of {collectiveBalanceAmount}. You can pay out these funds by <Link>processing expenses.</Link>\"\n                values={{\n                  collectiveBalanceAmount: formatCurrency(\n                    collective.stats.balance.valueInCents,\n                    collective.stats.balance.currency,\n                    { locale: intl.locale },\n                  ),\n                  Link: value => (\n                    <StyledLink\n                      color=\"black.800\"\n                      href=\"https://docs.opencollective.com/help/expenses-and-getting-paid/submitting-expenses\"\n                      textDecoration=\"underline\"\n                      openInNewTab\n                    >\n                      {value}\n                    </StyledLink>\n                  ),\n                }}\n              />\n            </MessageBox>\n          )}\n          <Label\n            htmlFor=\"unhost-account-message\"\n            fontSize=\"16px\"\n            fontWeight=\"700\"\n            lineHeight=\"24px\"\n            color=\"black.800.900\"\n            mb=\"6px\"\n          >\n            <FormattedMessage defaultMessage=\"Include a message to the Collective admins (Optional)\" />\n          </Label>\n          <StyledTextarea\n            id=\"unhost-account-message\"\n            width=\"100%\"\n            minHeight={126}\n            maxHeight={300}\n            onChange={e => setMessage(e.target.value)}\n            value={message}\n            fontSize=\"13px\"\n          />\n        </div>\n      </ModalBody>\n      <ModalFooter>\n        <Flex justifyContent=\"center\">\n          <StyledButton\n            buttonStyle={'danger'}\n            minWidth={90}\n            disabled={collective.stats.balance.valueInCents > 0}\n            loading={loading}\n            onClick={async () => {\n              try {\n                await unhostAccount();\n                const successMsgArgs = { accountName: collective.name, accountSlug: collective.slug };\n                addToast({\n                  type: TOAST_TYPE.SUCCESS,\n                  message: intl.formatMessage(\n                    { defaultMessage: '{accountName} (@{accountSlug}) has been un-hosted' },\n                    successMsgArgs,\n                  ),\n                });\n                props?.onClose();\n              } catch (e) {\n                addToast({ type: TOAST_TYPE.ERROR, variant: 'light', message: i18nGraphqlException(intl, e) });\n              }\n            }}\n          >\n            <FormattedMessage defaultMessage=\"Un-host Collective\" />\n          </StyledButton>\n          <StyledButton ml={3} minWidth={120} onClick={props.onClose} disabled={loading}>\n            <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n          </StyledButton>\n        </Flex>\n      </ModalFooter>\n    </StyledModal>\n  );\n};\n\nUnhostAccountModal.propTypes = {\n  onClose: PropTypes.func,\n  collective: PropTypes.shape({\n    id: PropTypes.string,\n    hostFeePercent: PropTypes.number,\n    isFrozen: PropTypes.bool,\n    settings: PropTypes.object,\n    parent: PropTypes.object,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    slug: PropTypes.string,\n    stats: PropTypes.shape({\n      balance: PropTypes.shape({\n        valueInCents: PropTypes.number,\n        currency: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n  host: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    slug: PropTypes.string,\n  }).isRequired,\n};\n\nexport default UnhostAccountModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DotsVerticalRounded } from '@styled-icons/boxicons-regular/DotsVerticalRounded';\nimport { Unlink } from '@styled-icons/boxicons-regular/Unlink';\nimport { Pause } from '@styled-icons/feather/Pause';\nimport { Play } from '@styled-icons/feather/Play';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { Flex } from '../Grid';\nimport MenuPopover from '../MenuPopover';\nimport StyledButton from '../StyledButton';\nimport StyledRoundButton from '../StyledRoundButton';\nimport { Span } from '../Text';\n\nimport FreezeAccountModal from './FreezeAccountModal';\nimport UnhostAccountModal from './UnhostAccountModal';\n\nconst FreezeAccountButton = ({ collective, onClick }) => {\n  return (\n    <StyledButton\n      isBorderless\n      buttonStyle={collective.isFrozen ? 'standard' : 'dangerSecondary'}\n      onClick={onClick}\n      borderRadius={0}\n    >\n      {collective.isFrozen ? <Play size={18} color=\"#75777A\" /> : <Pause size={16} />}\n      <Span ml={3} fontSize=\"14px\" lineHeight=\"20px\" css={{ verticalAlign: 'middle' }}>\n        {collective.isFrozen ? (\n          <FormattedMessage defaultMessage=\"Unfreeze\" />\n        ) : (\n          <FormattedMessage defaultMessage=\"Freeze\" />\n        )}\n      </Span>\n    </StyledButton>\n  );\n};\n\nFreezeAccountButton.propTypes = {\n  collective: PropTypes.object,\n  onClick: PropTypes.func,\n};\n\nconst UnhostAccountButton = ({ onClick }) => {\n  return (\n    <StyledButton\n      isBorderless\n      buttonStyle={'dangerSecondary'}\n      onClick={onClick}\n      borderRadius={0}\n      width=\"100%\"\n      display=\"flex\"\n    >\n      <Unlink size={18} />\n      <Span ml={3} fontSize=\"14px\" lineHeight=\"20px\" css={{ verticalAlign: 'middle' }}>\n        <FormattedMessage defaultMessage=\"Un-host\" />\n      </Span>\n    </StyledButton>\n  );\n};\n\nUnhostAccountButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nconst HostAdminCollectiveCardMoreButton = ({ collective, host }) => {\n  const intl = useIntl();\n  const [hasFreezeModal, setHasFreezeModal] = React.useState(false);\n  const [hasUnhostModal, setHasUnhostModal] = React.useState(false);\n  return (\n    <React.Fragment>\n      <MenuPopover\n        content={({ onClose }) => (\n          <Flex flexDirection=\"column\" alignItems=\"start\">\n            <FreezeAccountButton\n              collective={collective}\n              onClick={() => {\n                setHasFreezeModal(true);\n                onClose();\n              }}\n            />\n            <UnhostAccountButton\n              onClick={() => {\n                setHasUnhostModal(true);\n                onClose();\n              }}\n            />\n          </Flex>\n        )}\n      >\n        {btnProps => (\n          <StyledRoundButton size={32} title={intl.formatMessage({ defaultMessage: 'More options' })} {...btnProps}>\n            <DotsVerticalRounded size={18} color=\"#75777A\" />\n          </StyledRoundButton>\n        )}\n      </MenuPopover>\n      {hasFreezeModal && <FreezeAccountModal collective={collective} onClose={() => setHasFreezeModal(false)} />}\n      {hasUnhostModal && (\n        <UnhostAccountModal collective={collective} host={host} onClose={() => setHasUnhostModal(false)} />\n      )}\n    </React.Fragment>\n  );\n};\n\nHostAdminCollectiveCardMoreButton.propTypes = {\n  collective: PropTypes.object.isRequired,\n  host: PropTypes.object.isRequired,\n};\n\nexport default HostAdminCollectiveCardMoreButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SliderAlt } from '@styled-icons/boxicons-regular/SliderAlt';\nimport { FormattedDate, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { CollectiveType } from '../../lib/constants/collectives';\nimport { HOST_FEE_STRUCTURE } from '../../lib/constants/host-fee-structure';\nimport { getCurrencySymbol } from '../../lib/currency-utils';\nimport { formatHostFeeStructure } from '../../lib/i18n/host-fee-structure';\n\nimport Container from '../Container';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport StyledCollectiveCard from '../StyledCollectiveCard';\nimport StyledHr from '../StyledHr';\nimport StyledRoundButton from '../StyledRoundButton';\nimport { P, Span } from '../Text';\n\nimport AddFundsModal from './AddFundsModal';\nimport CollectiveSettingsModal from './CollectiveSettingsModal';\nimport HostAdminCollectiveCardMoreButton from './HostAdminCollectiveCardMoreButton';\n\nconst SectionTitle = props => (\n  <Flex alignItems=\"center\" mb={1}>\n    <P\n      textTransform=\"uppercase\"\n      fontSize=\"9px\"\n      lineHeight=\"14px\"\n      fontWeight=\"600\"\n      color=\"black.500\"\n      letterSpacing=\"0.6px\"\n      {...props}\n    />\n    <StyledHr borderColor=\"black.300\" flex=\"1\" ml={3} />\n  </Flex>\n);\n\nconst PlusIcon = styled.div`\n  position: absolute;\n  background: white;\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  font-size: 14px;\n  left: 20px;\n  top: -3px;\n  color: ${props => props.theme.colors.green[600]};\n`;\n\nexport const BoldMsg = msg => (\n  <Span color=\"black.900\" fontWeight=\"bold\" fontSize=\"14px\">\n    {msg}\n  </Span>\n);\n\nconst HostAdminCollectiveCard = ({ since, collective, host, ...props }) => {\n  const intl = useIntl();\n  const [currentModal, setCurrentModal] = React.useState(null);\n  const balance = collective.stats.balance.valueInCents || 0;\n  const nbFinancialContributors = collective.totalFinancialContributors || 0;\n  return (\n    <StyledCollectiveCard collective={collective} bodyHeight={320} {...props}>\n      <Box px={3} mb={16}>\n        <Container mb={22} lineHeight=\"19px\" color=\"black.600\">\n          <P mb={2} fontSize=\"12px\">\n            <FormattedMessage\n              id=\"FinancialContributorsCountWithBold\"\n              defaultMessage=\"<bold>{count}</bold> {count, plural, one {financial contributor} other {financial contributors} }\"\n              values={{ count: nbFinancialContributors, bold: BoldMsg }}\n            />\n          </P>\n          <P fontSize=\"12px\">\n            <FormattedMessage\n              id=\"AmountBalance\"\n              defaultMessage=\"{amount} balance\"\n              values={{\n                amount: (\n                  <Span fontSize=\"14px\">\n                    <FormattedMoneyAmount\n                      amount={balance}\n                      currency={collective.currency}\n                      currencyCodeStyles={{ color: 'black.900', fontWeight: 'bold' }}\n                    />\n                  </Span>\n                ),\n              }}\n            />\n          </P>\n        </Container>\n        <SectionTitle>\n          <FormattedMessage id=\"FeeStructure\" defaultMessage=\"Fee structure\" />\n        </SectionTitle>\n        <P fontSize=\"12px\" lineHeight=\"18px\" color=\"black.800\" mb={3}>\n          {formatHostFeeStructure(intl, collective.hostFeesStructure)}\n          {collective.hostFeesStructure === HOST_FEE_STRUCTURE.CUSTOM_FEE && ` (${collective.hostFeePercent}%)`}\n        </P>\n        <SectionTitle>\n          <FormattedMessage id=\"HostingSince\" defaultMessage=\"Hosting since\" />\n        </SectionTitle>\n        <P fontSize=\"12px\" lineHeight=\"18px\" color=\"black.800\">\n          <FormattedDate value={since} day=\"numeric\" month=\"long\" year=\"numeric\" />\n        </P>\n        <Container display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" position=\"relative\" mt={20}>\n          <Flex>\n            <StyledRoundButton\n              data-cy=\"hosted-collective-add-funds-btn\"\n              buttonStyle=\"successSecondary\"\n              size={32}\n              fontSize=\"16px\"\n              onClick={() => setCurrentModal('addFunds')}\n              title={intl.formatMessage({ id: 'menu.addFunds', defaultMessage: 'Add Funds' })}\n            >\n              {getCurrencySymbol(collective.currency)}\n              <PlusIcon>+</PlusIcon>\n            </StyledRoundButton>\n\n            <StyledRoundButton\n              ml={2}\n              size={32}\n              onClick={() => setCurrentModal('accountSettings')}\n              title={intl.formatMessage({ defaultMessage: 'Account settings' })}\n            >\n              <SliderAlt size={14} color=\"#9D9FA3\" />\n            </StyledRoundButton>\n          </Flex>\n          {[CollectiveType.COLLECTIVE, CollectiveType.FUND].includes(collective.type) && (\n            <HostAdminCollectiveCardMoreButton collective={collective} host={host} />\n          )}\n        </Container>\n      </Box>\n      {currentModal === 'addFunds' && <AddFundsModal collective={collective} onClose={() => setCurrentModal(null)} />}\n      {currentModal === 'accountSettings' && (\n        <CollectiveSettingsModal collective={collective} host={host} onClose={() => setCurrentModal(null)} />\n      )}\n    </StyledCollectiveCard>\n  );\n};\n\nHostAdminCollectiveCard.propTypes = {\n  since: PropTypes.string,\n  host: PropTypes.object,\n  collective: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n    hostFeesStructure: PropTypes.oneOf([null, ...Object.values(HOST_FEE_STRUCTURE)]),\n    hostFeePercent: PropTypes.number,\n    totalFinancialContributors: PropTypes.number,\n    isFrozen: PropTypes.bool,\n    parent: PropTypes.object,\n    stats: PropTypes.shape({\n      balance: PropTypes.shape({\n        valueInCents: PropTypes.number,\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default HostAdminCollectiveCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { isEmpty, omitBy } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport { Box, Flex, Grid } from '../Grid';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport MessageBox from '../MessageBox';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport Pagination from '../Pagination';\nimport SearchBar from '../SearchBar';\nimport StyledHr from '../StyledHr';\nimport { H1 } from '../Text';\n\nimport HostAdminCollectiveCard from './HostAdminCollectiveCard';\nimport HostAdminCollectiveFilters, { COLLECTIVE_FILTER } from './HostAdminCollectiveFilters';\n\nconst COLLECTIVES_PER_PAGE = 20;\n\n// TODO: This query is using `legacyId` for host and member.account to interface with the\n// legacy `AddFundsForm`. Once the new add funds form will be implemented, we can remove these fields.\nconst hostedCollectivesQuery = gql`\n  query HostDashboardHostedCollectives(\n    $hostSlug: String!\n    $limit: Int!\n    $offset: Int!\n    $orderBy: OrderByInput\n    $hostFeesStructure: HostFeeStructure\n    $searchTerm: String\n  ) {\n    host(slug: $hostSlug) {\n      id\n      legacyId\n      slug\n      name\n      currency\n      isHost\n      type\n      settings\n      hostFeePercent\n      plan {\n        id\n        hostFees\n        hostFeeSharePercent\n      }\n      memberOf(\n        role: HOST\n        limit: $limit\n        offset: $offset\n        orderBy: $orderBy\n        hostFeesStructure: $hostFeesStructure\n        searchTerm: $searchTerm\n        isApproved: true\n      ) {\n        offset\n        limit\n        totalCount\n        nodes {\n          id\n          createdAt\n          account {\n            id\n            legacyId\n            name\n            slug\n            website\n            type\n            currency\n            imageUrl(height: 96)\n            isFrozen\n            tags\n            settings\n            createdAt\n            stats {\n              id\n              balance {\n                valueInCents\n                currency\n              }\n            }\n            ... on AccountWithHost {\n              hostFeesStructure\n              hostFeePercent\n            }\n            ... on AccountWithContributions {\n              totalFinancialContributors\n            }\n            ... on AccountWithParent {\n              parent {\n                id\n                slug\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst checkIfQueryHasFilters = query =>\n  Object.entries(query).some(([key, value]) => {\n    return !['view', 'offset', 'limit', 'hostCollectiveSlug', 'sort-by'].includes(key) && value;\n  });\n\nconst getVariablesFromQuery = query => {\n  return {\n    offset: parseInt(query.offset) || 0,\n    limit: parseInt(query.limit) || COLLECTIVES_PER_PAGE,\n    searchTerm: query.searchTerm,\n    hostFeesStructure: query['fees-structure'],\n    orderBy: {\n      field: 'CREATED_AT',\n      direction: query['sort-by'] === 'oldest' ? 'ASC' : 'DESC',\n    },\n  };\n};\n\nconst ROUTE_PARAMS = ['hostCollectiveSlug', 'slug', 'section', 'view'];\n\nconst updateQuery = (router, newParams) => {\n  const query = omitBy({ ...router.query, ...newParams }, (value, key) => !value || ROUTE_PARAMS.includes(key));\n  const pathname = router.asPath.split('?')[0];\n  return router.push({ pathname, query });\n};\n\nconst HostDashboardHostedCollectives = ({ hostSlug }) => {\n  const router = useRouter() || {};\n  const query = router.query;\n  const hasFilters = React.useMemo(() => checkIfQueryHasFilters(query), [query]);\n  const { data, error, loading, variables } = useQuery(hostedCollectivesQuery, {\n    variables: { hostSlug, ...getVariablesFromQuery(omitBy(query, isEmpty)) },\n    context: API_V2_CONTEXT,\n  });\n\n  const hostedMemberships = data?.host?.memberOf;\n  return (\n    <Box maxWidth={1000} m=\"0 auto\" px={2}>\n      <Flex alignItems=\"center\" mb={24} flexWrap=\"wrap\">\n        <H1 fontSize=\"32px\" lineHeight=\"40px\" py={2} fontWeight=\"normal\">\n          <FormattedMessage id=\"HostedCollectives\" defaultMessage=\"Hosted Collectives\" />\n        </H1>\n        <Box mx=\"auto\" />\n        <Box p={2}>\n          <SearchBar\n            defaultValue={query.searchTerm}\n            onSubmit={searchTerm => updateQuery(router, { searchTerm, offset: null })}\n          />\n        </Box>\n      </Flex>\n      <StyledHr mb={26} borderWidth=\"0.5px\" />\n      <Box mb={34}>\n        {data?.host ? (\n          <HostAdminCollectiveFilters\n            values={query}\n            filters={[COLLECTIVE_FILTER.SORT_BY, COLLECTIVE_FILTER.FEE_STRUCTURE]}\n            onChange={queryParams => updateQuery(router, { ...queryParams, offset: null })}\n          />\n        ) : loading ? (\n          <LoadingPlaceholder height={70} />\n        ) : null}\n      </Box>\n\n      {error && <MessageBoxGraphqlError error={error} mb={2} />}\n\n      {!error && !loading && !hostedMemberships?.nodes.length ? (\n        <MessageBox type=\"info\" withIcon data-cy=\"zero-collective-message\">\n          {hasFilters ? (\n            <FormattedMessage id=\"discover.searchNoResult\" defaultMessage=\"No Collectives match the current search.\" />\n          ) : (\n            <FormattedMessage id=\"menu.collective.none\" defaultMessage=\"No Collectives yet\" />\n          )}\n        </MessageBox>\n      ) : (\n        <React.Fragment>\n          <Grid gridGap={24} gridTemplateColumns=\"repeat(auto-fill, minmax(200px, 1fr))\">\n            {loading\n              ? Array.from(new Array(COLLECTIVES_PER_PAGE)).map((_, index) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <LoadingPlaceholder key={index} height={362} borderRadius=\"8px\" />\n                ))\n              : hostedMemberships?.nodes.map(member => (\n                  <HostAdminCollectiveCard\n                    key={member.id}\n                    host={data.host}\n                    collective={member.account}\n                    since={member.createdAt}\n                  />\n                ))}\n          </Grid>\n          <Flex mt={5} justifyContent=\"center\">\n            <Pagination\n              total={hostedMemberships?.totalCount}\n              limit={variables.limit}\n              offset={variables.offset}\n              ignoredQueryParams={ROUTE_PARAMS}\n            />\n          </Flex>\n        </React.Fragment>\n      )}\n    </Box>\n  );\n};\n\nHostDashboardHostedCollectives.propTypes = {\n  hostSlug: PropTypes.string.isRequired,\n  router: PropTypes.object,\n};\n\nexport default HostDashboardHostedCollectives;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport { FormattedMessage } from 'react-intl';\n\nimport { fetchCSVFileFromRESTService } from '../../../lib/api';\nimport { simpleDateToISOString } from '../../../lib/date-utils';\nimport { useAsyncCall } from '../../../lib/hooks/useAsyncCall';\n\nimport Link from '../../Link';\nimport StyledButton from '../../StyledButton';\nimport StyledLink from '../../StyledLink';\n\nconst getHostReportURL = (hostSlug, params) => {\n  const { dateFrom, dateTo, accountsSlugs, format = 'txt' } = params || {};\n  const url = new URL(`${process.env.REST_URL}/v2/${hostSlug}/hostTransactions.${format}`);\n\n  if (dateFrom) {\n    url.searchParams.set('dateFrom', dateFrom);\n  }\n  if (dateTo) {\n    url.searchParams.set('dateTo', dateTo);\n  }\n  if (accountsSlugs?.length) {\n    url.searchParams.set('account', accountsSlugs.join(','));\n  }\n\n  url.searchParams.set('fetchAll', '1');\n\n  return url.toString();\n};\n\nconst prepareDateArgs = dateInterval => {\n  if (!dateInterval) {\n    return {};\n  } else {\n    return {\n      dateFrom: simpleDateToISOString(dateInterval.from, false, dateInterval.timezoneType),\n      dateTo: simpleDateToISOString(dateInterval.to, true, dateInterval.timezoneType),\n    };\n  }\n};\n\nconst triggerCSVDownload = (host, reportUrl, dateInterval) => {\n  let filename = `host-${host.slug}-transactions`;\n  if (dateInterval?.from) {\n    const until = dateInterval.to || dayjs().format('YYYY-MM-DD');\n    filename += `-${dateInterval.from}-${until}`;\n  }\n\n  return fetchCSVFileFromRESTService(reportUrl, filename);\n};\n\nconst HostCSVDownloadButton = ({ host, collectives, dateInterval }) => {\n  const accountsSlugs = collectives?.map(c => c.slug);\n  const hostReportUrl = getHostReportURL(host?.slug, { ...prepareDateArgs(dateInterval), accountsSlugs });\n  const { loading: isFetching, call: downloadCSV } = useAsyncCall(\n    () => triggerCSVDownload(host, hostReportUrl, dateInterval),\n    { useErrorToast: true },\n  );\n\n  return (\n    <StyledLink\n      as={Link}\n      width=\"100%\"\n      href={hostReportUrl}\n      onClick={e => {\n        e.preventDefault();\n        downloadCSV();\n      }}\n    >\n      <StyledButton\n        buttonStyle=\"primary\"\n        buttonSize=\"small\"\n        py=\"7px\"\n        minWidth={140}\n        width=\"100%\"\n        loading={isFetching}\n        disabled={!host}\n      >\n        <FormattedMessage defaultMessage=\"Generate CSV report\" />\n      </StyledButton>\n    </StyledLink>\n  );\n};\n\nHostCSVDownloadButton.propTypes = {\n  collectives: PropTypes.arrayOf(PropTypes.shape({ slug: PropTypes.string.isRequired })),\n  dateInterval: PropTypes.object,\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    legacyId: PropTypes.number.isRequired,\n    createdAt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default HostCSVDownloadButton;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nexport const ChartWrapper = styled.div`\n  position: relative;\n\n  .apexcharts-legend-series {\n    background: white;\n    padding: 8px;\n    border-radius: 10px;\n    & > span {\n      vertical-align: middle;\n    }\n  }\n  .apexcharts-toolbar {\n    z-index: 0;\n  }\n\n  .apexcharts-legend-marker {\n    margin-right: 8px;\n  }\n`;\n\nChartWrapper.propTypes = {\n  children: PropTypes.node,\n};\n","import { max, min } from 'lodash';\n\nexport const getActiveYearsOptions = host => {\n  const currentYear = new Date().getFullYear();\n  const firstYear = host ? parseInt(host.createdAt.split('-')[0]) : currentYear;\n  const activeYears = [...Array(currentYear - firstYear + 1).keys()].map(year => year + firstYear);\n  return activeYears.map(year => ({ value: year, label: year })).reverse();\n};\n\nexport const formatAmountForLegend = (value, currency, locale, isCompactNotation = true) => {\n  return new Intl.NumberFormat(locale, {\n    currency,\n    style: 'currency',\n    notation: isCompactNotation ? 'compact' : 'standard',\n  }).format(value);\n};\n\nexport const getMinMaxDifference = numberArray => {\n  const minVal = min(numberArray);\n  const maxVal = max(numberArray);\n  return maxVal - minVal;\n};\n","import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { get, groupBy } from 'lodash';\nimport dynamic from 'next/dynamic';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\nimport { i18nTransactionSettlementStatus } from '../../../lib/i18n/transaction';\n\nimport { ChartWrapper } from '../../ChartWrapper';\nimport { Box, Flex } from '../../Grid';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport { StyledSelectFilter } from '../../StyledSelectFilter';\nimport { P } from '../../Text';\n\nimport { formatAmountForLegend, getActiveYearsOptions } from './helpers';\n\n// Dynamic imports\nconst Chart = dynamic(() => import('react-apexcharts'), { ssr: false });\n\nconst hostFeeSectionTimeSeriesQuery = gql`\n  query HostFeeSectionTimeSeries($hostSlug: String!, $dateFrom: DateTime!, $dateTo: DateTime!) {\n    host(slug: $hostSlug) {\n      id\n      legacyId\n      createdAt\n      currency\n      hostMetricsTimeSeries(dateFrom: $dateFrom, dateTo: $dateTo, timeUnit: MONTH) {\n        hostFees {\n          nodes {\n            date\n            amount {\n              value\n              valueInCents\n              currency\n            }\n          }\n        }\n        hostFeeShare {\n          nodes {\n            date\n            settlementStatus\n            amount {\n              value\n              valueInCents\n              currency\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst getChartOptions = (intl, hostCurrency) => ({\n  chart: {\n    id: 'chart-host-report-fees',\n    stacked: true,\n  },\n  legend: {\n    show: true,\n    showForSingleSeries: true,\n    horizontalAlign: 'left',\n    fontWeight: 'bold',\n    fontSize: '12px',\n    markers: {\n      width: 16,\n      height: 16,\n    },\n  },\n  dataLabels: { enabled: false },\n  grid: {\n    raw: { opacity: 0 },\n    column: { opacity: 0 },\n    xaxis: { lines: { show: true } },\n    yaxis: { lines: { show: false } },\n  },\n  plotOptions: {\n    bar: {\n      columnWidth: '50%',\n    },\n  },\n  colors: ['#46347F', '#95DDF4', '#F5C451', '#0EA755'], // TODO(HostReport): Use host primary colors\n  xaxis: {\n    categories: [...new Array(12)].map(\n      (_, idx) => `${intl.formatDate(new Date(0, idx), { month: 'short' }).toUpperCase()}`,\n    ),\n  },\n  yaxis: {\n    labels: {\n      minWidth: 38,\n      formatter: value => formatAmountForLegend(value, hostCurrency, intl.locale),\n    },\n  },\n  tooltip: {\n    y: {\n      formatter: value => formatAmountForLegend(value, hostCurrency, intl.locale, false), // Never use compact notation in tooltip\n    },\n  },\n});\n\nconst SERIES_NAMES = defineMessages({\n  hostRevenue: { defaultMessage: 'Net Host Fees' },\n  hostFeeShare: { id: 'Transaction.kind.HOST_FEE_SHARE', defaultMessage: 'Platform share' },\n});\n\nconst getHostFeesWithoutShare = (hostFeeNodes, hostFeeShareNodes) => {\n  const totalHostFeeSharePerMonthInCents = hostFeeShareNodes.reduce((result, node) => {\n    const monthKey = new Date(node.date).getMonth();\n    result[monthKey] = (result[monthKey] || 0) + node.amount.valueInCents;\n    return result;\n  }, {});\n\n  return hostFeeNodes.map(node => {\n    const monthKey = new Date(node.date).getMonth();\n    if (totalHostFeeSharePerMonthInCents[monthKey]) {\n      const valueInCents = node.amount.valueInCents - totalHostFeeSharePerMonthInCents[monthKey];\n      return { ...node, amount: { ...node.amount, valueInCents, value: valueInCents / 100 } };\n    } else {\n      return node;\n    }\n  });\n};\n\nconst getSeriesFromData = (intl, timeSeries) => {\n  const dataToSeries = data => {\n    const series = new Array(12).fill(0); // = 12 months\n    data?.forEach(({ date, amount }) => (series[new Date(date).getMonth()] = amount.value));\n    return series;\n  };\n\n  const hostFeeNodes = get(timeSeries, 'hostFees.nodes', []);\n  const hostFeeShareNodes = get(timeSeries, 'hostFeeShare.nodes', []);\n  return [\n    {\n      name: intl.formatMessage(SERIES_NAMES.hostRevenue),\n      data: dataToSeries(getHostFeesWithoutShare(hostFeeNodes, hostFeeShareNodes)),\n    },\n    ...Object.entries(groupBy(hostFeeShareNodes, 'settlementStatus')).map(([status, nodes]) => ({\n      name: `${intl.formatMessage(SERIES_NAMES.hostFeeShare)} (${i18nTransactionSettlementStatus(intl, status)})`,\n      data: dataToSeries(nodes),\n    })),\n  ];\n};\n\nconst getQueryVariables = (hostSlug, year) => {\n  return {\n    hostSlug,\n    dateFrom: `${year}-01-01T00:00:00Z`,\n    dateTo: `${year}-12-31T23:59:59Z`,\n  };\n};\n\nexport const HostFeesSectionHistorical = ({ hostSlug }) => {\n  const intl = useIntl();\n  const [selectedYear, setSelectedYear] = useState(() => new Date().getFullYear());\n  const variables = getQueryVariables(hostSlug, selectedYear);\n  const { loading, data } = useQuery(hostFeeSectionTimeSeriesQuery, { variables, context: API_V2_CONTEXT });\n  const host = data?.host;\n  const timeSeries = data?.host?.hostMetricsTimeSeries;\n  const series = useMemo(() => getSeriesFromData(intl, timeSeries), [timeSeries]);\n  const yearsOptions = useMemo(() => getActiveYearsOptions(host), [host]);\n  const chartOptions = useMemo(() => getChartOptions(intl, host?.currency), [host?.currency]);\n  return (\n    <Box py={3}>\n      <Flex alignItems=\"center\" px={2} mb={2}>\n        <P fontSize=\"11px\" fontWeight=\"700\" mr={3} textTransform=\"uppercase\">\n          <FormattedMessage id=\"HostFeesSection.Title\" defaultMessage=\"Host Fees per year\" />\n        </P>\n        <StyledSelectFilter\n          inputId=\"host-report-host-fees-year-select\"\n          options={yearsOptions}\n          defaultValue={{ value: selectedYear, label: selectedYear }}\n          onChange={({ value }) => setSelectedYear(value)}\n          isSearchable={false}\n          minWidth={100}\n          isLoading={loading}\n          disabled={loading}\n        />\n      </Flex>\n      {loading ? (\n        <LoadingPlaceholder height={250} />\n      ) : (\n        <ChartWrapper>\n          <Chart type=\"bar\" width=\"100%\" height=\"250px\" options={chartOptions} series={series} />\n        </ChartWrapper>\n      )}\n    </Box>\n  );\n};\n\nHostFeesSectionHistorical.propTypes = {\n  collectives: PropTypes.arrayOf(PropTypes.object),\n  hostSlug: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@styled-icons/fa-solid/ChevronDown/ChevronDown';\nimport { ChevronUp } from '@styled-icons/fa-solid/ChevronUp/ChevronUp';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { formatCurrency } from '../../../lib/currency-utils';\n\nimport Container from '../../Container';\nimport { Box, Flex } from '../../Grid';\nimport Image from '../../Image';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport StyledLinkButton from '../../StyledLinkButton';\nimport { P, Span } from '../../Text';\n\nimport { HostFeesSectionHistorical } from './HostFeesSectionHistorical';\n\nconst getValuesToDisplay = (isLoading, host, locale) => {\n  if (isLoading) {\n    const loadingComponent = <LoadingPlaceholder height={21} width={120} />;\n    return { fees: loadingComponent, netHostFee: loadingComponent, sharedRevenue: loadingComponent };\n  } else {\n    const { hostFees, hostFeeShare } = host.hostMetrics;\n    return {\n      fees: formatCurrency(hostFees.valueInCents, host.currency, { locale }),\n      sharedRevenue: formatCurrency(hostFeeShare.valueInCents, host.currency, { locale }),\n      netHostFee: formatCurrency(hostFees.valueInCents - hostFeeShare.valueInCents, host.currency, { locale }),\n    };\n  }\n};\n\nconst HostFeesSection = ({ host, collectives, isLoading }) => {\n  const [showHostFeeChart, setShowHostFeeChart] = useState(false);\n  const { locale } = useIntl();\n  const valuesToDisplay = getValuesToDisplay(isLoading, host, locale);\n  return (\n    <React.Fragment>\n      <Flex flexWrap=\"wrap\">\n        <Container flex=\"1 1 230px\" px={3}>\n          <Container mt=\"24px\">\n            <Flex alignItems=\"center\">\n              <Image width={14} height={7} src=\"/static/images/host-fees-timeline.svg\" />\n              <Span ml=\"10px\" fontSize=\"12px\" fontWeight=\"500\" textTransform=\"uppercase\">\n                <FormattedMessage defaultMessage=\"Total Collected\" />\n              </Span>\n            </Flex>\n          </Container>\n          <Box pt=\"12px\" pb=\"10px\" fontSize=\"18px\" fontWeight=\"500\">\n            {valuesToDisplay.fees}\n          </Box>\n          <P fontSize=\"12px\" fontWeight=\"400\" mt=\"10px\">\n            <FormattedMessage defaultMessage=\"Host Fees charged to Collectives during this time period (these are added continuously to your budget).\" />\n          </P>\n        </Container>\n        <Container\n          display={['none', 'none', 'flex']}\n          borderLeft=\"1px solid\"\n          borderColor=\"primary.800\"\n          height=\"88px\"\n          mt=\"39px\"\n        />\n\n        <Container flex=\"1 1 230px\" px={3}>\n          <Container mt=\"24px\">\n            <Flex alignItems=\"center\">\n              <Image width={9.42} height={12} mr={10} src=\"/static/images/host-fees-oc.svg\" />\n              <Span ml=\"10px\" fontSize=\"12px\" fontWeight=\"500\" textTransform=\"uppercase\">\n                <FormattedMessage defaultMessage=\"Platform Share\" />\n              </Span>\n            </Flex>\n          </Container>\n          <Box pt=\"12px\" pb=\"10px\" fontSize=\"18px\" fontWeight=\"500\">\n            {valuesToDisplay.sharedRevenue}\n          </Box>\n          <P fontSize=\"12px\" fontWeight=\"400\" mt=\"10px\">\n            <FormattedMessage defaultMessage=\"Portion of Host Fees paid to Open Collective (which are either paid as you go, or charged monthly through settlement expenses, depending on the payment method.)\" />\n          </P>\n        </Container>\n        <Container\n          display={['none', 'none', 'flex']}\n          borderLeft=\"1px solid\"\n          borderColor=\"primary.800\"\n          height=\"88px\"\n          mt=\"39px\"\n        />\n        <Container flex=\"1 1 230px\" px={3}>\n          <Container mt=\"24px\">\n            <Flex alignItems=\"center\">\n              <Image width={6.5} height={12} mr={10} src=\"/static/images/host-fees-money-sign.svg\" />\n              <Span ml=\"10px\" fontSize=\"12px\" fontWeight=\"500\" textTransform=\"uppercase\">\n                <FormattedMessage defaultMessage=\"Net Host Fees\" />\n              </Span>\n            </Flex>\n          </Container>\n          <Box pt=\"12px\" pb=\"10px\" fontSize=\"18px\" fontWeight=\"500\">\n            {valuesToDisplay.netHostFee}\n          </Box>\n          <P fontSize=\"12px\" fontWeight=\"400\" mt=\"10px\">\n            <FormattedMessage defaultMessage=\"Net amount of Host Fees retained by your Organization after removing the Platform Share.\" />\n          </P>\n        </Container>\n      </Flex>\n\n      <Flex flexWrap=\"wrap\" my={3} justifyContent=\"space-between\">\n        <Container px={2} textAlign=\"right\">\n          <StyledLinkButton asLink onClick={() => setShowHostFeeChart(!showHostFeeChart)}>\n            <P fontSize=\"12px\" fontWeight=\"400\" mt=\"16px\">\n              <FormattedMessage defaultMessage=\"See historic\" />\n              <Span pl=\"8px\">\n                {showHostFeeChart ? <ChevronUp size={12} /> : <ChevronDown fontVariant=\"solid\" size={12} />}\n              </Span>\n            </P>\n          </StyledLinkButton>\n        </Container>\n      </Flex>\n      {showHostFeeChart && isLoading && <LoadingPlaceholder height={250} />}\n      {showHostFeeChart && !isLoading && <HostFeesSectionHistorical collectives={collectives} hostSlug={host.slug} />}\n    </React.Fragment>\n  );\n};\n\nHostFeesSection.propTypes = {\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n    hostMetrics: PropTypes.shape({\n      hostFees: PropTypes.shape({ valueInCents: PropTypes.number.isRequired }).isRequired,\n      hostFeeShare: PropTypes.shape({ valueInCents: PropTypes.number.isRequired }).isRequired,\n    }),\n  }),\n  collectives: PropTypes.arrayOf(PropTypes.object),\n  isLoading: PropTypes.bool,\n};\n\nexport default HostFeesSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from 'next/image';\nimport { FormattedMessage } from 'react-intl';\n\nimport Container from '../../Container';\nimport FormattedMoneyAmount, { DEFAULT_AMOUNT_STYLES } from '../../FormattedMoneyAmount';\nimport { Box, Flex } from '../../Grid';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport { P, Span } from '../../Text';\n\nconst AMOUNT_STYLES = { ...DEFAULT_AMOUNT_STYLES, fontSize: '18px', lineHeight: '26px' };\n\nconst PlatformTipsCollected = ({ host, isLoading }) => {\n  return (\n    <Container p={24} bg=\"blue.50\" border=\"1px solid\" borderColor=\"blue.700\" borderRadius=\"8px\">\n      <Flex alignItems=\"center\" my={2}>\n        <Image src=\"/static/images/opencollective-icon.png\" width={14} height={14} alt=\"\" />\n        <P textTransform=\"uppercase\" ml={2} fontSize=\"12px\" fontWeight=\"500\" color=\"black.700\" letterSpacing=\"0.06em\">\n          <FormattedMessage id=\"PlatformTipsCollected\" defaultMessage=\"Platform Tips\" />\n        </P>\n      </Flex>\n      <Box mt={20} mb={10}>\n        {isLoading ? (\n          <Flex>\n            <LoadingPlaceholder height={26} maxWidth={200} />\n            <Span mx={2}>{' / '}</Span>\n            <LoadingPlaceholder height={26} maxWidth={200} />\n          </Flex>\n        ) : (\n          <P fontSize=\"14px\" color=\"black.700\" textTransform=\"capitalize\">\n            <FormattedMessage\n              id=\"AmountCollected\"\n              defaultMessage=\"{amount} collected\"\n              values={{\n                amount: (\n                  <FormattedMoneyAmount\n                    amount={host.hostMetrics.platformTips.valueInCents}\n                    currency={host.currency}\n                    amountStyles={AMOUNT_STYLES}\n                  />\n                ),\n              }}\n            />\n            <Span mx={2}>{' / '}</Span>\n            <FormattedMessage\n              defaultMessage=\"{amount} owed to {account}\"\n              values={{\n                account: 'Open Collective',\n                amount: (\n                  <FormattedMoneyAmount\n                    amount={host.hostMetrics.pendingPlatformTips.valueInCents}\n                    currency={host.currency}\n                    amountStyles={AMOUNT_STYLES}\n                  />\n                ),\n              }}\n            />\n          </P>\n        )}\n      </Box>\n      <P fontSize=\"12px\" lineHeight=\"18px\" color=\"black.700\">\n        <FormattedMessage\n          id=\"Host.PlatformTip.description\"\n          defaultMessage=\"Contributors optionally add Platform Tips to transactions. Amounts owed to Open Collective that have been deposited into the Host's bank account are charged as part of monthly Settlement Expenses.\"\n        />\n      </P>\n    </Container>\n  );\n};\n\nPlatformTipsCollected.propTypes = {\n  isLoading: PropTypes.bool,\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    currency: PropTypes.string,\n    hostMetrics: PropTypes.shape({\n      platformTips: PropTypes.shape({ valueInCents: PropTypes.number }),\n      pendingPlatformTips: PropTypes.shape({ valueInCents: PropTypes.number }),\n    }),\n  }),\n};\n\nexport default PlatformTipsCollected;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { round } from 'lodash';\nimport styled from 'styled-components';\nimport { borderRadius, color } from 'styled-system';\n\nimport { Box, Flex } from './Grid';\nimport { P } from './Text';\n\nconst ChartContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  overflow: hidden; /** To force children to obey the border-radius of the parent */\n  ${borderRadius}\n`;\n\nconst LegendContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 8px;\n  width: 100%;\n`;\n\nconst Label = styled.div`\n  display: inline-block;\n  background: rgba(255, 255, 255, 0.8);\n  padding: 4px 6px;\n  font-size: 12px;\n  border-radius: 4px;\n  white-space: nowrap;\n`;\n\nconst Area = styled.div`\n  padding: 12px 8px;\n  flex-shrink: 0;\n  flex-grow: 1;\n  flex-basis: ${props => props.percentage};\n  ${color}\n`;\n\nconst Square = styled.div`\n  width: 8px;\n  height: 8px;\n  border-radius: 1.2px;\n  margin-right: 8px;\n  ${color}\n`;\n\nconst Legend = ({ color, label }) => {\n  return (\n    <Flex alignItems=\"center\" mr={2}>\n      <Square backgroundColor={color} />\n      <P fontSize=\"12px\" lineHeight=\"16px\" color=\"black.600\" whiteSpace=\"nowrap\">\n        {label}\n      </P>\n    </Flex>\n  );\n};\n\nLegend.propTypes = {\n  color: PropTypes.string,\n  label: PropTypes.node,\n};\n\nconst getPreparedAreaPercentage = (areas, area) => {\n  if (area.percentage) {\n    return `${round(area.percentage * 100, 2)}%`;\n  } else {\n    return `${round(100 / areas.length, 2)}%`;\n  }\n};\n\nconst ProportionalAreaChart = ({ areas, borderRadius }) => {\n  const hasLegend = areas.some(area => area.legend);\n  return (\n    <React.Fragment>\n      {/** Main Graph */}\n      <ChartContainer borderRadius={borderRadius}>\n        {areas.map(area => (\n          <Area key={area.key} percentage={getPreparedAreaPercentage(areas, area)} backgroundColor={area.color}>\n            {area.label && <Label>{area.label}</Label>}\n          </Area>\n        ))}\n      </ChartContainer>\n      {/** Legends */}\n      {hasLegend && (\n        <LegendContainer>\n          {areas.map(area => (\n            <Box key={area.key} flexBasis={getPreparedAreaPercentage(areas, area)}>\n              <Legend label={area.legend} color={area.color} />\n            </Box>\n          ))}\n        </LegendContainer>\n      )}\n    </React.Fragment>\n  );\n};\n\nProportionalAreaChart.propTypes = {\n  borderRadius: PropTypes.string,\n  /** The series to represent */\n  areas: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string.isRequired,\n      label: PropTypes.node,\n      /** How much space should be taken by this area. Defaults to proportional (100 / numberOfAreas)% */\n      percentage: PropTypes.number,\n      color: PropTypes.string,\n      legend: PropTypes.node,\n    }),\n  ).isRequired,\n};\n\nProportionalAreaChart.defaultProps = {\n  borderRadius: '6px',\n};\n\nexport default React.memo(ProportionalAreaChart);\n","import React, { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { get } from 'lodash';\nimport dynamic from 'next/dynamic';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\n\nimport { ChartWrapper } from '../../ChartWrapper';\nimport ContainerOverlay from '../../ContainerOverlay';\nimport { Box, Flex } from '../../Grid';\nimport { StyledSelectFilter } from '../../StyledSelectFilter';\nimport StyledSpinner from '../../StyledSpinner';\nimport { P } from '../../Text';\n\nimport { formatAmountForLegend, getActiveYearsOptions, getMinMaxDifference } from './helpers';\n\n// Dynamic imports\nconst Chart = dynamic(() => import('react-apexcharts'), { ssr: false });\n\nconst totalMoneyManagedQuery = gql`\n  query TotalMoneyManagedQuery(\n    $hostSlug: String!\n    $dateFrom: DateTime!\n    $account: [AccountReferenceInput!]\n    $dateTo: DateTime!\n  ) {\n    host(slug: $hostSlug) {\n      id\n      hostMetricsTimeSeries(dateFrom: $dateFrom, dateTo: $dateTo, account: $account, timeUnit: MONTH) {\n        totalMoneyManaged {\n          nodes {\n            date\n            amount {\n              value\n              valueInCents\n              currency\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst getQueryVariables = (hostSlug, year, collectives) => {\n  return {\n    hostSlug,\n    account: collectives?.map(collective => ({ legacyId: collective.legacyId })),\n    dateFrom: `${year}-01-01T00:00:00Z`,\n    dateTo: `${year}-12-31T23:59:59Z`,\n  };\n};\n\nconst getSeriesFromData = (intl, timeSeries, year) => {\n  const currentYear = new Date().getUTCFullYear();\n  const currentMonth = new Date().getUTCMonth();\n  const dataToSeries = data => {\n    let series;\n    // For previous years we show all the months in the chart\n    if (year < currentYear) {\n      series = new Array(12).fill(0); // = 12 months\n      // For current year we only show upto the current month (as no data is available for future)\n    } else {\n      series = new Array(currentMonth + 1).fill(0); // = upto current month\n    }\n    data?.forEach(({ date, amount }) => (series[new Date(date).getUTCMonth()] = amount.value));\n    return series;\n  };\n\n  const totalMoneyManagedProgressNodes = get(timeSeries, 'totalMoneyManaged.nodes', []);\n  return [\n    {\n      name: intl.formatMessage({ defaultMessage: 'Total Managed Amount' }),\n      data: dataToSeries(totalMoneyManagedProgressNodes),\n    },\n  ];\n};\n\nconst getChartOptions = (intl, hostCurrency, isCompactNotation) => ({\n  chart: {\n    id: 'chart-host-report-money-managed',\n  },\n  stroke: {\n    curve: 'straight',\n    width: 2,\n  },\n  markers: {\n    size: 4,\n  },\n  colors: ['#46347F'],\n  xaxis: {\n    categories: [...new Array(12)].map(\n      (_, idx) => `${intl.formatDate(new Date(0, idx), { month: 'short' }).toUpperCase()}`,\n    ),\n  },\n  yaxis: {\n    labels: {\n      minWidth: 38,\n      formatter: value => formatAmountForLegend(value, hostCurrency, intl.locale, isCompactNotation),\n    },\n  },\n  tooltip: {\n    y: {\n      formatter: value => formatAmountForLegend(value, hostCurrency, intl.locale, false), // Never use compact notation in tooltip\n    },\n  },\n});\n\nconst TotalMoneyManagedHistorical = ({ host, collectives }) => {\n  const intl = useIntl();\n  const yearsOptions = useMemo(() => getActiveYearsOptions(host), [null]);\n  const [selectedYear, setSelectedYear] = useState(() => new Date().getFullYear());\n  const variables = getQueryVariables(host.slug, selectedYear, collectives);\n  const { loading, data, previousData } = useQuery(totalMoneyManagedQuery, {\n    variables,\n    context: API_V2_CONTEXT,\n  });\n  const hostTimeSeriesData = loading && !data ? previousData?.host : data?.host;\n  const timeSeries = hostTimeSeriesData?.hostMetricsTimeSeries;\n  const series = React.useMemo(() => getSeriesFromData(intl, timeSeries, selectedYear), [timeSeries]);\n  const isCompactNotation = getMinMaxDifference(series[0].data) >= 10000;\n  const chartOptions = useMemo(\n    () => getChartOptions(intl, host.currency, isCompactNotation),\n    [host.currency, isCompactNotation],\n  );\n  return (\n    <Box py={3}>\n      <Flex alignItems=\"center\" px={2} mb={2}>\n        <P fontSize=\"11px\" fontWeight=\"700\" mr={3} textTransform=\"uppercase\">\n          <FormattedMessage defaultMessage=\"Total money managed per year\" />\n        </P>\n        <StyledSelectFilter\n          inputId=\"host-report-money-managed-year-select\"\n          options={yearsOptions}\n          defaultValue={{ value: selectedYear, label: selectedYear }}\n          onChange={({ value }) => setSelectedYear(value)}\n          isSearchable={false}\n          minWidth={100}\n        />\n      </Flex>\n      <ChartWrapper>\n        {loading && (\n          <ContainerOverlay>\n            <StyledSpinner size={64} />\n          </ContainerOverlay>\n        )}\n        <Chart type=\"line\" width=\"100%\" height=\"250px\" options={chartOptions} series={series} />\n      </ChartWrapper>\n    </Box>\n  );\n};\n\nTotalMoneyManagedHistorical.propTypes = {\n  host: PropTypes.shape({\n    slug: PropTypes.string,\n    stats: PropTypes.shape({ balance: PropTypes.shape({ valueInCents: PropTypes.number }) }).isRequired,\n    hostMetrics: PropTypes.object.isRequired,\n    currency: PropTypes.string,\n  }).isRequired,\n  collectives: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default TotalMoneyManagedHistorical;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@styled-icons/fa-solid/ChevronDown/ChevronDown';\nimport { ChevronUp } from '@styled-icons/fa-solid/ChevronUp/ChevronUp';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { formatCurrency } from '../../../lib/currency-utils';\n\nimport Container from '../../Container';\nimport { Flex } from '../../Grid';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport ProportionalAreaChart from '../../ProportionalAreaChart';\nimport StyledLinkButton from '../../StyledLinkButton';\nimport { P, Span } from '../../Text';\n\nimport TotalMoneyManagedHistorical from './TotalMoneyManagedHistorical';\n\nconst getMoneyManagedChartAreas = (hostBalance, collectivesBalance, hostCurrency, isLoading, locale) => {\n  return [\n    {\n      key: 'organization',\n      color: 'primary.800',\n      label: isLoading ? (\n        <LoadingPlaceholder width={195} height={16} />\n      ) : (\n        <P fontSize=\"12px\" lineHeight=\"18px\" color=\"black.700\">\n          <Span fontWeight=\"bold\">{formatCurrency(hostBalance, hostCurrency, { locale })}</Span>\n          <Span mx=\"6px\" color=\"black.600\">\n            {' | '}\n          </Span>\n          <FormattedMessage id=\"TotalMoneyManagedSection.hostBalance\" defaultMessage=\"Host Organization balance\" />\n        </P>\n      ),\n    },\n    {\n      key: 'my-collectives',\n      color: 'primary.500',\n      label: isLoading ? (\n        <LoadingPlaceholder width={165} height={16} />\n      ) : (\n        <P fontSize=\"12px\" lineHeight=\"18px\">\n          <Span fontWeight=\"700\">{formatCurrency(collectivesBalance, hostCurrency, { locale })}</Span>{' '}\n          <Span mx=\"6px\" color=\"black.600\">\n            {' | '}\n          </Span>\n          <FormattedMessage id=\"TotalMoneyManagedSection.collectivesBalance\" defaultMessage=\"Collectives balance\" />\n        </P>\n      ),\n    },\n  ];\n};\n\nconst TotalMoneyManagedSection = ({ host, collectives, isLoading }) => {\n  const { locale } = useIntl();\n  const [showMoneyManagedChart, setShowMoneyManagedChart] = useState(false);\n\n  // Compute some general stats\n  const hostMetrics = host?.hostMetrics;\n  const hostBalance = host?.stats.balance.valueInCents;\n\n  let collectivesBalance;\n  if (!collectives || collectives.length === 0) {\n    collectivesBalance = hostMetrics?.totalMoneyManaged.valueInCents - hostBalance;\n  } else {\n    collectivesBalance = hostMetrics?.totalMoneyManaged.valueInCents;\n  }\n\n  // Generate graph data (memoized for performances)\n  const chartArgs = [hostBalance, collectivesBalance, host?.currency, isLoading, locale];\n  const chartAreas = React.useMemo(() => getMoneyManagedChartAreas(...chartArgs), chartArgs);\n\n  return (\n    <div>\n      {(!collectives || collectives.length === 0) && (\n        <Flex flexWrap=\"wrap\" my={14} alignItems=\"baseline\">\n          {isLoading ? (\n            <LoadingPlaceholder height={21} width={125} />\n          ) : (\n            <Span fontSize={18} fontWeight=\"500\">\n              {formatCurrency(hostMetrics.totalMoneyManaged.valueInCents, host.currency, { locale })}\n            </Span>\n          )}\n        </Flex>\n      )}\n      {/*\n      <Container display=\"flex\" fontSize=\"11px\" fontWeight=\"700\" lineHeight=\"12px\" alignItems=\"center\">\n        <Span textTransform=\"uppercase\">\n          <FormattedMessage\n            id=\"TotalMoneyManagedSection.subHeading\"\n            defaultMessage=\"My Organization and My initiatives\"\n          />\n        </Span>\n      </Container>\n      */}\n      <Container mt={18} mb={12}>\n        <ProportionalAreaChart areas={chartAreas} />\n      </Container>\n      <Flex flexWrap=\"wrap\" justifyContent=\"space-between\">\n        <Container px={2} textAlign=\"right\">\n          <StyledLinkButton asLink onClick={() => setShowMoneyManagedChart(!showMoneyManagedChart)}>\n            <P fontSize=\"12px\" fontWeight=\"400\" mt=\"16px\">\n              <FormattedMessage defaultMessage=\"See historic\" />\n              <Span pl=\"8px\">\n                {showMoneyManagedChart ? <ChevronUp size={12} /> : <ChevronDown fontVariant=\"solid\" size={12} />}\n              </Span>\n            </P>\n          </StyledLinkButton>\n        </Container>\n      </Flex>\n      {isLoading && <LoadingPlaceholder height={250} />}\n      {!isLoading && showMoneyManagedChart && <TotalMoneyManagedHistorical host={host} collectives={collectives} />}\n    </div>\n  );\n};\n\nTotalMoneyManagedSection.propTypes = {\n  isLoading: PropTypes.bool,\n  host: PropTypes.shape({\n    slug: PropTypes.string,\n    stats: PropTypes.shape({ balance: PropTypes.shape({ valueInCents: PropTypes.number }) }).isRequired,\n    hostMetrics: PropTypes.object.isRequired,\n    currency: PropTypes.string,\n  }),\n  collectives: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default TotalMoneyManagedSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport dynamic from 'next/dynamic';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { alignSeries } from '../../../lib/charts';\nimport { formatCurrency } from '../../../lib/currency-utils';\nimport { i18nTransactionKind } from '../../../lib/i18n/transaction';\n\nimport { Box } from '../../Grid';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport ProportionalAreaChart from '../../ProportionalAreaChart';\nimport { P, Span } from '../../Text';\n\nimport { formatAmountForLegend } from './helpers';\n\n// Dynamic imports\nconst Chart = dynamic(() => import('react-apexcharts'), { ssr: false });\n\nconst StyledBox = styled(Box)`\n  .apexcharts-toolbar {\n    z-index: 0;\n  }\n`;\nconst getChartOptions = (intl, timeUnit, hostCurrency, series) => {\n  return {\n    chart: {\n      id: 'chart-transactions-overview',\n    },\n    legend: {\n      show: true,\n      horizontalAlign: 'left',\n    },\n    colors: ['#29CC75', '#F55882'],\n    grid: {\n      xaxis: { lines: { show: true } },\n      yaxis: { lines: { show: false } },\n    },\n    stroke: {\n      curve: 'straight',\n      width: 1.5,\n    },\n    dataLabels: {\n      enabled: false,\n    },\n\n    xaxis: {\n      labels: {\n        formatter: function (value) {\n          // Show data aggregated yearly\n          if (timeUnit === 'YEAR') {\n            return dayjs(value).utc().year();\n            // Show data aggregated monthly\n          } else if (timeUnit === 'MONTH') {\n            return dayjs(value).utc().format('MMM-YYYY');\n            // Show data aggregated by week or day\n          } else if (timeUnit === 'WEEK' || timeUnit === 'DAY') {\n            return dayjs(value).utc().format('DD-MMM-YYYY');\n          }\n        },\n      },\n    },\n\n    yaxis: {\n      labels: {\n        formatter: value => formatAmountForLegend(value, hostCurrency, intl.locale),\n      },\n    },\n    tooltip: {\n      y: {\n        formatter: (value, { seriesIndex, dataPointIndex }) => {\n          const formatAmount = amount => formatAmountForLegend(amount, hostCurrency, intl.locale, false); // Never use compact notation in tooltip\n          const dataPoint = series[seriesIndex].data[dataPointIndex];\n          if (dataPoint.kinds && Object.keys(dataPoint.kinds).length > 1) {\n            const formatKindAmount = ([kind, amount]) => `${formatAmount(amount)} ${i18nTransactionKind(intl, kind)}`;\n            const amountsByKind = Object.entries(dataPoint.kinds).map(formatKindAmount).join(', ');\n            const prettyKindAmounts = `<small style=\"font-weight: normal; text-transform: lowercase;\">(${amountsByKind})</small>`;\n            return `${formatAmount(value)} ${prettyKindAmounts}`;\n          } else {\n            return formatAmount(value);\n          }\n        },\n      },\n    },\n  };\n};\n\nconst getTransactionsAreaChartData = (host, locale) => {\n  if (!host) {\n    return [];\n  }\n\n  const currency = host.currency;\n  const { contributionsCount, dailyAverageIncomeAmount } = host.contributionStats;\n  const { expensesCount, dailyAverageAmount } = host.expenseStats;\n  return [\n    {\n      key: 'contributions',\n      percentage: 0.5,\n      color: 'green.500',\n      label: (\n        <P fontSize=\"12px\" lineHeight=\"18px\">\n          <FormattedMessage\n            defaultMessage=\"{count, plural, one {# contribution} other {# contributions}}\"\n            values={{ count: contributionsCount }}\n          />\n          <Span mx=\"6px\" color=\"black.600\">\n            {' | '}\n          </Span>\n          <FormattedMessage\n            defaultMessage=\"Daily average: {amount}\"\n            values={{\n              amount: <strong>{formatCurrency(dailyAverageIncomeAmount.valueInCents, currency, { locale })}</strong>,\n            }}\n          />\n        </P>\n      ),\n    },\n    {\n      key: 'expenses',\n      percentage: 0.5,\n      color: 'red.500',\n      label: (\n        <P fontSize=\"12px\" lineHeight=\"18px\">\n          <FormattedMessage\n            defaultMessage=\"{count, plural, one {# expense} other {# expenses}}\"\n            values={{ count: expensesCount }}\n          />\n          <Span mx=\"6px\" color=\"black.600\">\n            {' | '}\n          </Span>\n          <FormattedMessage\n            defaultMessage=\"Daily average: {amount}\"\n            values={{\n              amount: <strong>{formatCurrency(dailyAverageAmount.valueInCents, currency, { locale })}</strong>,\n            }}\n          />\n        </P>\n      ),\n    },\n  ];\n};\n\nconst getTransactionsBreakdownChartData = host => {\n  if (!host) {\n    return [];\n  }\n\n  const contributionStats = host?.contributionStats;\n  const expenseStats = host?.expenseStats;\n  const { recurringContributionsCount, oneTimeContributionsCount } = contributionStats;\n  const { invoicesCount, reimbursementsCount, grantsCount } = expenseStats;\n  const hasGrants = grantsCount > 0;\n  const areas = [\n    {\n      key: 'one-time',\n      percentage: 0.25,\n      color: 'green.400',\n      legend: (\n        <FormattedMessage\n          defaultMessage=\"{count, plural, one {# One-time} other {# One-time}}\"\n          values={{ count: oneTimeContributionsCount }}\n        />\n      ),\n    },\n    {\n      key: 'recurring',\n      percentage: 0.25,\n      color: 'green.300',\n      legend: (\n        <FormattedMessage\n          defaultMessage=\"{count, plural, one {# Recurring} other {# Recurring}}\"\n          values={{ count: recurringContributionsCount }}\n        />\n      ),\n    },\n    {\n      key: 'invoices',\n      percentage: hasGrants ? 0.166 : 0.25,\n      color: 'red.600',\n      legend: (\n        <FormattedMessage\n          defaultMessage=\"{count, plural, one {# Invoice} other {# Invoices}}\"\n          values={{ count: invoicesCount }}\n        />\n      ),\n    },\n    {\n      key: 'receipts',\n      percentage: hasGrants ? 0.166 : 0.25,\n      color: 'red.400',\n      legend: (\n        <FormattedMessage\n          defaultMessage=\"{count, plural, one {# Reimbursement} other {# Reimbursements}}\"\n          values={{ count: reimbursementsCount }}\n        />\n      ),\n    },\n  ];\n\n  // Grants are only enabled for a few hosts/collectives, we only display the metric if active\n  if (hasGrants) {\n    areas.push({\n      key: 'grants',\n      percentage: 0.166,\n      color: 'red.300',\n      legend: (\n        <FormattedMessage\n          defaultMessage=\"{count, plural, one {# Grant} other {# Grants}}\"\n          values={{ count: grantsCount }}\n        />\n      ),\n    });\n  }\n\n  return areas;\n};\n\n/**\n * Transforms a list of datapoints like [{ date, kind, amount }] into a series like:\n * `[{ x: date, y: 3000, kinds: { ADDED_FUNDS: 2000, CONTRIBUTION: 1000 } }]`\n */\nconst getSeriesDataFromTotalReceivedNodes = nodes => {\n  const keyedData = {};\n  nodes.forEach(({ date, amount, kind }) => {\n    if (!keyedData[date]) {\n      keyedData[date] = { x: date, y: 0, kinds: {} };\n    }\n\n    keyedData[date].y += amount.value;\n    keyedData[date]['kinds'][kind] = amount.value;\n  });\n\n  return Object.values(keyedData);\n};\n\nconst getSeries = (host, intl) => {\n  const getNodes = timeSeries => host?.hostMetricsTimeSeries?.[timeSeries]?.nodes || [];\n  const series = [\n    {\n      name: intl.formatMessage({ id: 'Contributions', defaultMessage: 'Contributions' }),\n      data: getSeriesDataFromTotalReceivedNodes(getNodes('totalReceived')),\n    },\n    {\n      name: intl.formatMessage({ id: 'Expenses', defaultMessage: 'Expenses' }),\n      data: getNodes('totalSpent').map(({ date, amount }) => ({ x: date, y: Math.abs(amount.value) })),\n    },\n  ];\n\n  alignSeries(series);\n\n  return series;\n};\n\nconst TransactionsOverviewSection = ({ host, isLoading }) => {\n  const intl = useIntl();\n  const { locale } = intl;\n  const timeUnit = host?.hostMetricsTimeSeries?.timeUnit;\n  const series = React.useMemo(() => getSeries(host, intl), [host]);\n  const areaChartData = React.useMemo(() => getTransactionsAreaChartData(host, locale), [host, locale]);\n  const transactionBreakdownChart = React.useMemo(() => getTransactionsBreakdownChartData(host), [host]);\n  return (\n    <React.Fragment>\n      <Box mt={18} mb={12}>\n        {isLoading ? (\n          <LoadingPlaceholder height=\"98px\" borderRadius=\"8px\" />\n        ) : (\n          <div>\n            <ProportionalAreaChart areas={areaChartData} borderRadius=\"6px 6px 0 0\" />\n            <ProportionalAreaChart areas={transactionBreakdownChart} borderRadius=\"0 0 6px 6px\" />\n          </div>\n        )}\n      </Box>\n      <StyledBox mt=\"24px\" mb=\"12px\">\n        {isLoading ? (\n          <LoadingPlaceholder height={21} width=\"100%\" borderRadius=\"8px\" />\n        ) : (\n          <Chart\n            type=\"area\"\n            width=\"100%\"\n            height=\"250px\"\n            options={getChartOptions(intl, timeUnit, host.currency, series)}\n            series={series}\n          />\n        )}\n      </StyledBox>\n    </React.Fragment>\n  );\n};\n\nTransactionsOverviewSection.propTypes = {\n  isLoading: PropTypes.bool,\n  host: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    currency: PropTypes.string,\n    createdAt: PropTypes.string,\n    hostMetricsTimeSeries: PropTypes.shape({\n      timeUnit: PropTypes.string,\n      totalReceived: PropTypes.shape({\n        nodes: PropTypes.shape({\n          date: PropTypes.string,\n          kind: PropTypes.string,\n          amount: PropTypes.shape({\n            valueInCents: PropTypes.number,\n          }),\n        }),\n      }),\n      totalSpent: PropTypes.shape({\n        nodes: PropTypes.shape({\n          date: PropTypes.string,\n          kind: PropTypes.string,\n          amount: PropTypes.shape({\n            valueInCents: PropTypes.number,\n          }),\n        }),\n      }),\n    }),\n  }),\n};\n\nexport default TransactionsOverviewSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { Question } from '@styled-icons/remix-line/Question';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { CollectiveType } from '../../lib/constants/collectives';\nimport { simpleDateToISOString } from '../../lib/date-utils';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport Container from '../Container';\nimport PeriodFilter from '../filters/PeriodFilter';\nimport { Box, Flex, Grid } from '../Grid';\nimport MessageBox from '../MessageBox';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport NotFound from '../NotFound';\nimport { PERIOD_FILTER_PRESETS } from '../PeriodFilterPresetsSelect';\nimport StyledCard from '../StyledCard';\nimport StyledHr from '../StyledHr';\nimport StyledTooltip from '../StyledTooltip';\nimport { H1, H2 } from '../Text';\n\nimport HostCSVDownloadButton from './reports-section/HostCSVDownloadButton';\nimport HostFeesSection from './reports-section/HostFeesSection';\nimport PlatformTipsCollected from './reports-section/PlatformTipsCollected';\nimport TotalMoneyManagedSection from './reports-section/TotalMoneyManagedSection';\nimport TransactionsOverviewSection from './reports-section/TransactionsOverviewSection';\n\nconst hostReportPageQuery = gql`\n  query HostReportsPage(\n    $hostSlug: String!\n    $account: [AccountReferenceInput!]\n    $dateFrom: DateTime\n    $dateTo: DateTime\n  ) {\n    host(slug: $hostSlug) {\n      id\n      legacyId\n      slug\n      name\n      currency\n      isHost\n      isActive\n      type\n      createdAt\n      hostFeePercent\n      isTrustedHost\n      stats {\n        id\n        balance(dateTo: $dateTo) {\n          valueInCents\n          currency\n        }\n      }\n      contributionStats(account: $account, dateFrom: $dateFrom, dateTo: $dateTo) {\n        contributionsCount\n        oneTimeContributionsCount\n        recurringContributionsCount\n        dailyAverageIncomeAmount {\n          valueInCents\n        }\n      }\n      expenseStats(account: $account, dateFrom: $dateFrom, dateTo: $dateTo) {\n        expensesCount\n        dailyAverageAmount {\n          valueInCents\n        }\n        invoicesCount\n        reimbursementsCount\n        grantsCount\n      }\n      hostMetrics(account: $account, dateFrom: $dateFrom, dateTo: $dateTo) {\n        hostFees {\n          valueInCents\n          currency\n        }\n        hostFeeShare {\n          valueInCents\n          currency\n        }\n        pendingPlatformFees {\n          valueInCents\n          currency\n        }\n        platformTips {\n          valueInCents\n          currency\n        }\n        pendingPlatformTips {\n          valueInCents\n          currency\n        }\n        pendingHostFeeShare {\n          valueInCents\n          currency\n        }\n        totalMoneyManaged {\n          valueInCents\n          currency\n        }\n      }\n      hostMetricsTimeSeries(account: $account, dateFrom: $dateFrom, dateTo: $dateTo) {\n        timeUnit\n        totalReceived {\n          timeUnit\n          nodes {\n            date\n            kind\n            amount {\n              value\n            }\n          }\n        }\n        totalSpent {\n          timeUnit\n          nodes {\n            date\n            kind\n            amount {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst SectionTitle = ({ children, hint = null }) => (\n  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb={22}>\n    <H2 fontWeight=\"500\" fontSize=\"20px\" lineHeight=\"28px\">\n      {children}\n    </H2>\n    {hint && (\n      <Box mx={2}>\n        <StyledTooltip content={hint}>\n          <Question size={18} color=\"#75777A\" />\n        </StyledTooltip>\n      </Box>\n    )}\n    <StyledHr borderColor=\"black.300\" flex=\"1\" ml={2} />\n  </Flex>\n);\n\nSectionTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n  hint: PropTypes.node,\n};\n\nconst FilterLabel = styled.label`\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 8px;\n  color: #4e5052;\n`;\n\nconst prepareCollectivesForFilter = collectives => {\n  return !collectives?.length ? null : collectives.map(collective => ({ legacyId: collective.value.id }));\n};\n\nconst getDefaultDateInterval = () => {\n  const interval = PERIOD_FILTER_PRESETS.thisMonth.getInterval();\n  return {\n    timezoneType: 'UTC', // To match the monthly host report sent by email\n    from: interval.from.format('YYYY-MM-DD'),\n    to: interval.to.format('YYYY-MM-DD'),\n  };\n};\n\nconst HostDashboardReports = ({ hostSlug }) => {\n  const [dateInterval, setDateInterval] = React.useState(getDefaultDateInterval);\n  const [collectives, setCollectives] = React.useState(null);\n  const dateFrom = simpleDateToISOString(dateInterval?.from, false, dateInterval?.timezoneType);\n  const dateTo = simpleDateToISOString(dateInterval?.to, true, dateInterval?.timezoneType);\n  const variables = { hostSlug, account: collectives, dateFrom, dateTo };\n  const { data, error, loading } = useQuery(hostReportPageQuery, { variables, context: API_V2_CONTEXT });\n  const host = data?.host;\n\n  if (!loading) {\n    if (error) {\n      return <MessageBoxGraphqlError error={error} maxWidth={500} m=\"0 auto\" />;\n    } else if (!host) {\n      return <NotFound />;\n    } else if (!host.isActive) {\n      return (\n        <MessageBox withIcon type=\"error\" maxWidth={400} m=\"0 auto\">\n          <FormattedMessage id=\"host.onlyActive\" defaultMessage=\"This page is only available for active fiscal hosts\" />\n        </MessageBox>\n      );\n    }\n  }\n\n  return (\n    <Box m=\"0 auto\" px={2}>\n      <Flex alignItems=\"center\" mb={24} flexWrap=\"wrap\">\n        <H1 fontSize=\"32px\" lineHeight=\"40px\" py={2} fontWeight=\"normal\">\n          <FormattedMessage id=\"Reports\" defaultMessage=\"Reports\" />\n        </H1>\n        <Box mx=\"auto\" />\n      </Flex>\n      <Container\n        position={['relative', 'sticky']}\n        top=\"0\"\n        background=\"white\"\n        zIndex=\"10\"\n        py={3}\n        mb={4}\n        boxShadow=\"5px 12px 7px -10px #44444429\"\n      >\n        <Grid gridTemplateColumns={['100%', '1fr 2fr auto']} gridGap={['8px', null, null, '28px']} width=\"100%\">\n          <div>\n            <FilterLabel htmlFor=\"transactions-period-filter\">\n              <FormattedMessage id=\"TransactionsOverviewSection.PeriodFilter\" defaultMessage=\"Filter by Date\" />\n            </FilterLabel>\n            <PeriodFilter onChange={setDateInterval} value={dateInterval} minDate={host?.createdAt} />\n          </div>\n          <div>\n            <FilterLabel htmlFor=\"transactions-collective-filter\">\n              <FormattedMessage\n                id=\"TransactionsOverviewSection.CollectiveFilter\"\n                defaultMessage=\"Filter by Collective\"\n              />\n            </FilterLabel>\n            <CollectivePickerAsync\n              inputId=\"TransactionsCollectiveFilter\"\n              data-cy=\"transactions-collective-filter\"\n              types={[CollectiveType.COLLECTIVE, CollectiveType.EVENT, CollectiveType.PROJECT, CollectiveType.FUND]}\n              isMulti\n              hostCollectiveIds={[host?.legacyId]}\n              onChange={value => setCollectives(prepareCollectivesForFilter(value))}\n              styles={{ control: baseStyles => ({ ...baseStyles, borderRadius: 16 }) }}\n              isLoading={loading}\n              disabled={loading}\n              useCompactMode\n            />\n          </div>\n          <Flex alignItems=\"flex-end\" width=\"100%\" mt={[24, 0]}>\n            <HostCSVDownloadButton host={host} collectives={collectives} dateInterval={dateInterval} />\n          </Flex>\n        </Grid>\n      </Container>\n      <StyledCard mb={5} borderRadius=\"12px\" padding=\"32px 24px\" borderColor=\"black.400\">\n        <Container mb={38}>\n          <SectionTitle\n            hint={\n              <FormattedMessage\n                id=\"Host.Metrics.TotalMoneyManages.description\"\n                defaultMessage=\"Total amount held in your bank account for the Host and its Collectives.\"\n              />\n            }\n          >\n            <FormattedMessage id=\"Host.Metrics.TotalMoneyManages\" defaultMessage=\"Total Money Managed\" />\n          </SectionTitle>\n          <TotalMoneyManagedSection host={host} isLoading={loading} collectives={collectives} />\n        </Container>\n        <Container mb={38}>\n          <SectionTitle>\n            <FormattedMessage id=\"Host.Metrics.HostFees\" defaultMessage=\"Host Fees\" />\n          </SectionTitle>\n          <HostFeesSection host={host} collectives={collectives} isLoading={loading} />\n        </Container>\n        <Container mb={38}>\n          {/*\n          <SectionTitle\n            hint={\n              <FormattedMessage\n                id=\"HostDashboardReports.TransactionsOverview.description\"\n                defaultMessage=\"Transactions related to contributions and expenses.\"\n              />\n            }\n          >\n          */}\n          <SectionTitle>\n            <FormattedMessage id=\"TransactionsOverview\" defaultMessage=\"Contributions and Expenses\" />\n          </SectionTitle>\n          <TransactionsOverviewSection host={host} isLoading={loading} />\n        </Container>\n        <Box mb={4}>\n          <PlatformTipsCollected host={host} isLoading={loading} />\n        </Box>\n      </StyledCard>\n    </Box>\n  );\n};\n\nHostDashboardReports.propTypes = {\n  hostSlug: PropTypes.string.isRequired,\n};\n\nexport default HostDashboardReports;\n","export const VAT_OPTIONS = {\n  HOST: 'HOST',\n  OWN: 'OWN',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { FormattedMessage, FormattedRelativeTime, useIntl } from 'react-intl';\n\nimport { isIndividualAccount } from '../../lib/collective.lib';\nimport dayjs from '../../lib/dayjs';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport Avatar from '../Avatar';\nimport Container from '../Container';\nimport { generateDateTitle } from '../DateTime';\nimport { Box, Flex } from '../Grid';\nimport LinkCollective from '../LinkCollective';\nimport StyledButton from '../StyledButton';\nimport StyledLink from '../StyledLink';\nimport { P, Span } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst revokeAuthorizationMutation = gql`\n  mutation RevokeAuthorization($id: String!) {\n    revokeOAuthAuthorization(oAuthAuthorization: { id: $id }) {\n      id\n    }\n  }\n`;\n\nexport const AuthorizedApp = ({ authorization, onRevoke }) => {\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  const [revokeAuthorization, { loading }] = useMutation(revokeAuthorizationMutation, {\n    context: API_V2_CONTEXT,\n    onCompleted: onRevoke,\n  });\n\n  return (\n    <Flex\n      data-cy=\"connected-oauth-app\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      maxWidth={776}\n      mb={3}\n      flexWrap=\"wrap\"\n    >\n      <Flex alignItems=\"center\">\n        <Avatar collective={authorization.application.account} size={64} />\n        <Box ml={24}>\n          <P fontWeight=\"800\" fontSize=\"15px\">\n            {authorization.application.name}\n          </P>\n          <Container display=\"flex\" alignItems=\"center\" flexWrap=\"wrap\" fontSize=\"12px\" mt={2} color=\"black.700\">\n            <time dateTime={authorization.createdAt} title={generateDateTitle(intl, new Date(authorization.createdAt))}>\n              <FormattedMessage defaultMessage=\"Connected on {date, date, simple}\" values={{ date: new Date() }} />\n            </time>\n            <Span mr={1}>\n              {authorization.lastUsedAt && (\n                <React.Fragment>\n                  &nbsp;•&nbsp;\n                  <time\n                    dateTime={authorization.lastUsedAt}\n                    title={generateDateTitle(intl, new Date(authorization.lastUsedAt))}\n                  >\n                    <FormattedMessage\n                      defaultMessage=\"Last used {timeElapsed}\"\n                      values={{\n                        timeElapsed: (\n                          <FormattedRelativeTime\n                            value={dayjs(authorization.lastUsedAt).diff(dayjs(), 'second')}\n                            unit=\"second\"\n                            updateIntervalInSeconds={60}\n                          />\n                        ),\n                      }}\n                    />\n                  </time>\n                </React.Fragment>\n              )}\n            </Span>\n            {!isIndividualAccount(authorization.account) && (\n              <Flex alignItems=\"center\">\n                <FormattedMessage\n                  id=\"CreatedBy\"\n                  defaultMessage=\"by {name}\"\n                  values={{\n                    name: (\n                      <Flex alignItems=\"center\" ml={2}>\n                        <Avatar collective={authorization.account} size={24} mr={1} />\n                        <StyledLink as={LinkCollective} collective={authorization.account} color=\"black.700\" />\n                      </Flex>\n                    ),\n                  }}\n                />\n              </Flex>\n            )}\n          </Container>\n        </Box>\n      </Flex>\n      <Container ml={2} textAlign=\"center\" mt={2} width={['100%', 'auto']}>\n        <StyledButton\n          data-cy=\"oauth-app-revoke-btn\"\n          buttonSize=\"small\"\n          buttonStyle=\"dangerSecondary\"\n          isBorderless\n          loading={loading}\n          onClick={async () => {\n            try {\n              await revokeAuthorization({ variables: { id: authorization.id } });\n              addToast({\n                type: TOAST_TYPE.SUCCESS,\n                message: intl.formatMessage(\n                  { defaultMessage: `Authorization for {appName} revoked` },\n                  { appName: authorization.application.name },\n                ),\n              });\n            } catch (e) {\n              addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(intl, e) });\n            }\n          }}\n        >\n          <FormattedMessage defaultMessage=\"Revoke access\" />\n        </StyledButton>\n      </Container>\n    </Flex>\n  );\n};\n\nAuthorizedApp.propTypes = {\n  authorization: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    lastUsedAt: PropTypes.string.isRequired,\n    account: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string,\n    }).isRequired,\n    application: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      account: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        slug: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        imageUrl: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n  }),\n  onRevoke: PropTypes.func,\n};\n","import { gql } from '@apollo/client';\n\nexport const authorizedAppsQuery = gql`\n  query AuthorizedApps($limit: Int, $offset: Int) {\n    loggedInAccount {\n      id\n      oAuthAuthorizations(limit: $limit, offset: $offset) {\n        totalCount\n        nodes {\n          id\n          createdAt\n          lastUsedAt\n          account {\n            id\n            name\n            slug\n            type\n            imageUrl(height: 48)\n          }\n          application {\n            id\n            name\n            account {\n              id\n              name\n              slug\n              type\n              imageUrl(height: 128)\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\nimport useLoggedInUser from '../../../lib/hooks/useLoggedInUser';\nimport { getSettingsRoute } from '../../../lib/url-helpers';\n\nimport { Box, Flex } from '../../Grid';\nimport { getI18nLink } from '../../I18nFormatters';\nimport Link from '../../Link';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport MessageBox from '../../MessageBox';\nimport MessageBoxGraphqlError from '../../MessageBoxGraphqlError';\nimport { AuthorizedApp } from '../../oauth/AuthorizedApp';\nimport { authorizedAppsQuery } from '../../oauth/queries';\nimport Pagination from '../../Pagination';\nimport StyledHr from '../../StyledHr';\nimport { P } from '../../Text';\nimport { ALL_SECTIONS } from '../constants';\n\nconst AuthorizedAppsSection = () => {\n  const router = useRouter() || {};\n  const query = router.query;\n  const variables = { limit: 10, offset: query.offset ? parseInt(query.offset) : 0 };\n  const { data, loading, error, refetch } = useQuery(authorizedAppsQuery, { variables, context: API_V2_CONTEXT });\n  const { LoggedInUser } = useLoggedInUser();\n  const authorizations = data?.loggedInAccount?.oAuthAuthorizations;\n\n  // Redirect to previous page when removing the last item of a page\n  React.useEffect(() => {\n    if (variables.offset && variables.offset >= authorizations?.totalCount) {\n      const pathname = router.asPath.split('?')[0];\n      const offset = Math.max(0, variables.offset - variables.limit);\n      router.push({ pathname, query: { offset, limit: variables.limit } });\n      refetch();\n    }\n  }, [authorizations?.totalCount, variables.offset]);\n\n  return loading ? (\n    <LoadingPlaceholder height={300} />\n  ) : error ? (\n    <MessageBoxGraphqlError error={error} />\n  ) : !data?.loggedInAccount?.oAuthAuthorizations?.totalCount ? (\n    <div>\n      {LoggedInUser.collective.settings.oauthBeta ? (\n        <P>\n          <FormattedMessage defaultMessage=\"You haven't configured any application yet\" />\n        </P>\n      ) : (\n        <MessageBox type=\"info\" withIcon mt={3}>\n          <FormattedMessage\n            defaultMessage=\"No Authorized App yet. You can create your own OAuth application from the <ForDevelopersLink>For Developers</ForDevelopersLink> section.\"\n            values={{\n              ForDevelopersLink: getI18nLink({\n                as: Link,\n                href: getSettingsRoute(LoggedInUser.collective, ALL_SECTIONS.FOR_DEVELOPERS),\n              }),\n            }}\n          />\n        </MessageBox>\n      )}\n    </div>\n  ) : (\n    <Box mt={3}>\n      {authorizations.nodes.map((authorization, index) => (\n        <React.Fragment key={authorization.id}>\n          <AuthorizedApp authorization={authorization} onRevoke={refetch} />\n          {index !== authorizations.nodes.length - 1 && <StyledHr my={4} borderColor=\"black.300\" />}\n        </React.Fragment>\n      ))}\n      {authorizations.totalCount > variables.limit && (\n        <Flex mt={5} justifyContent=\"center\">\n          <Pagination\n            total={authorizations.totalCount}\n            limit={variables.limit}\n            offset={variables.offset}\n            ignoredQueryParams={['slug', 'section']}\n          />\n        </Flex>\n      )}\n    </Box>\n  );\n};\n\nexport default AuthorizedAppsSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport ConfirmationModal, { CONFIRMATION_MODAL_TERMINATE } from '../ConfirmationModal';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst deleteApplicationMutation = gql`\n  mutation DeleteOAuthApplication($id: String!) {\n    deleteApplication(application: { id: $id }) {\n      id\n      account {\n        id\n      }\n    }\n  }\n`;\n\nconst DeleteOAuthApplicationModal = ({ application, onDelete, ...props }) => {\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  const [deleteApplication] = useMutation(deleteApplicationMutation, {\n    context: API_V2_CONTEXT,\n    update: (cache, { data }) => {\n      // Remove object from cache\n      cache.evict({ id: cache.identify(application) });\n      cache.gc();\n\n      // Remove object from parent query\n      const accountCacheId = cache.identify(data.deleteApplication.account);\n      cache.modify({ id: accountCacheId, fields: { oAuthApplications: (_, { DELETE }) => DELETE } });\n    },\n  });\n\n  return (\n    <ConfirmationModal\n      isDanger\n      type=\"delete\"\n      header={<FormattedMessage defaultMessage=\"Delete application {name}\" values={{ name: application.name }} />}\n      {...props}\n      continueHandler={async () => {\n        try {\n          await deleteApplication({ variables: { id: application.id } });\n          await onDelete(application);\n          addToast({\n            type: TOAST_TYPE.SUCCESS,\n            message: intl.formatMessage({ defaultMessage: 'Application {name} deleted' }, { name: application.name }),\n          });\n          return CONFIRMATION_MODAL_TERMINATE;\n        } catch (e) {\n          addToast({ type: TOAST_TYPE.ERROR, variant: 'light', message: i18nGraphqlException(intl, e) });\n        }\n      }}\n    >\n      <P>\n        <FormattedMessage defaultMessage=\"This will permanently delete the application, revoking all tokens associated with it. Are you sure you want to continue?\" />\n      </P>\n    </ConfirmationModal>\n  );\n};\n\nDeleteOAuthApplicationModal.propTypes = {\n  application: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default DeleteOAuthApplicationModal;\n","import { verifyFieldLength } from '../../lib/form-utils';\n\nexport const validateOauthApplicationValues = (intl, values) => {\n  const errors = {};\n  verifyFieldLength(intl, errors, values, 'name', 3, 100);\n  return errors;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { Form, Formik } from 'formik';\nimport { pick } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport { Flex } from '../Grid';\nimport Link from '../Link';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport StyledButton from '../StyledButton';\nimport StyledCard from '../StyledCard';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputFormikField from '../StyledInputFormikField';\nimport StyledLink from '../StyledLink';\nimport StyledTextarea from '../StyledTextarea';\nimport { H3, H4, P, Span } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\nimport WarnIfUnsavedChanges from '../WarnIfUnsavedChanges';\n\nimport DeleteOAuthApplicationModal from './DeleteOAuthApplicationModal';\nimport { validateOauthApplicationValues } from './lib';\n\nconst applicationSettingsFragment = gql`\n  fragment ApplicationSettings on Application {\n    id\n    name\n    description\n    redirectUri\n    clientId\n    clientSecret\n  }\n`;\n\nconst applicationQuery = gql`\n  query OAuthApplicationQuery($id: String!) {\n    application(id: $id) {\n      id\n      ...ApplicationSettings\n    }\n  }\n  ${applicationSettingsFragment}\n`;\n\nconst updateApplicationMutation = gql`\n  mutation UpdateOAuthApplication($application: ApplicationUpdateInput!) {\n    updateApplication(application: $application) {\n      id\n      ...ApplicationSettings\n    }\n  }\n  ${applicationSettingsFragment}\n`;\n\nconst CodeContainer = styled(Span)`\n  overflow-wrap: anywhere;\n  user-select: all;\n  margin-right: 8px;\n`;\n\nconst ObfuscatedClientSecret = ({ secret }) => {\n  const [show, setShow] = React.useState(false);\n  return (\n    <P>\n      {show && <CodeContainer data-cy=\"unhidden-secret\">{secret}</CodeContainer>}\n      <StyledLink data-cy=\"show-secret-btn\" as=\"button\" color=\"blue.600\" onClick={() => setShow(!show)}>\n        {show ? <FormattedMessage id=\"Hide\" defaultMessage=\"Hide\" /> : <FormattedMessage defaultMessage=\"Show\" />}\n      </StyledLink>\n    </P>\n  );\n};\n\nObfuscatedClientSecret.propTypes = {\n  secret: PropTypes.string,\n};\n\nconst LABEL_STYLES = { fontWeight: 700, fontSize: '16px', lineHeight: '24px' };\n\nconst OAuthApplicationSettings = ({ backPath, id }) => {\n  const intl = useIntl();\n  const router = useRouter();\n  const { addToast } = useToasts();\n  const [showDeleteModal, setShowDeleteModal] = React.useState(false);\n  const { data, loading, error } = useQuery(applicationQuery, { variables: { id }, context: API_V2_CONTEXT });\n  const [updateApplication] = useMutation(updateApplicationMutation, { context: API_V2_CONTEXT });\n  return (\n    <div data-cy=\"oauth-app-settings\">\n      <P mt={3} mb={4}>\n        <StyledLink data-cy=\"go-back-link\" as={Link} color=\"black.800\" href={backPath}>\n          &larr; <FormattedMessage defaultMessage=\"Go back to all your apps\" />\n        </StyledLink>\n      </P>\n      {loading ? (\n        <LoadingPlaceholder height={300} />\n      ) : error ? (\n        <MessageBoxGraphqlError error={error} />\n      ) : (\n        <div>\n          <Flex width=\"100%\" alignItems=\"center\">\n            <H3 fontSize=\"18px\" fontWeight=\"700\">\n              {data.application.name}\n            </H3>\n            <StyledHr ml={2} flex=\"1\" borderColor=\"black.400\" />\n          </Flex>\n          <StyledCard maxWidth=\"600px\" p={3} my={4}>\n            <H4 fontSize=\"16px\" lineHeight=\"24px\" fontWeight=\"700\" color=\"black.800\" mb=\"20px\">\n              <FormattedMessage defaultMessage=\"Client ID and client secret\" />\n            </H4>\n            <Flex flexWrap=\"wrap\" justifyContent=\"space-between\">\n              <Flex flexDirection=\"column\" width=\"35%\">\n                <P fontSize=\"15px\" fontWeight=\"500\" color=\"black.800\" mb={2}>\n                  <FormattedMessage defaultMessage=\"Client ID\" />\n                </P>\n                <CodeContainer data-cy=\"oauth-app-client-id\" fontSize=\"14px\" color=\"black.800\" css={{}}>\n                  {data.application.clientId}\n                </CodeContainer>\n              </Flex>\n              <Flex flexDirection=\"column\" width=\"65%\">\n                <P fontSize=\"15px\" fontWeight=\"500\" color=\"black.800\" mb={2}>\n                  <FormattedMessage defaultMessage=\"Client secret\" />\n                </P>\n                <ObfuscatedClientSecret secret={data.application.clientSecret} />\n              </Flex>\n            </Flex>\n          </StyledCard>\n          <Formik\n            initialValues={data.application}\n            validate={values => validateOauthApplicationValues(intl, values)}\n            onSubmit={async (values, { resetForm }) => {\n              try {\n                const filteredValues = pick(values, ['name', 'description', 'redirectUri']);\n                const applicationInput = { id: data.application.id, ...filteredValues };\n                const result = await updateApplication({ variables: { application: applicationInput } });\n                addToast({\n                  type: TOAST_TYPE.SUCCESS,\n                  message: intl.formatMessage(\n                    { defaultMessage: 'Application \"{name}\" updated' },\n                    { name: result.data.updateApplication.name },\n                  ),\n                });\n                resetForm({ values: result.data.updateApplication });\n              } catch (e) {\n                addToast({ type: TOAST_TYPE.ERROR, variant: 'light', message: i18nGraphqlException(intl, e) });\n              }\n            }}\n          >\n            {({ isSubmitting, dirty }) => (\n              <Form>\n                <WarnIfUnsavedChanges hasUnsavedChanges={dirty && !showDeleteModal} />\n                <StyledInputFormikField\n                  name=\"name\"\n                  label={intl.formatMessage({ defaultMessage: 'Name of the app' })}\n                  labelProps={LABEL_STYLES}\n                  required\n                >\n                  {({ field }) => (\n                    <StyledInput\n                      {...field}\n                      placeholder={intl.formatMessage(\n                        { id: 'examples', defaultMessage: 'e.g., {examples}' },\n                        { examples: 'Back Your Stack' },\n                      )}\n                    />\n                  )}\n                </StyledInputFormikField>\n                <StyledInputFormikField\n                  name=\"description\"\n                  label={intl.formatMessage({ id: 'Fields.description', defaultMessage: 'Description' })}\n                  hint={intl.formatMessage({\n                    defaultMessage: 'A short description of your app so users know what it does.',\n                  })}\n                  labelProps={LABEL_STYLES}\n                  mt={20}\n                >\n                  {({ field }) => (\n                    <StyledTextarea\n                      {...field}\n                      height=\"98px\"\n                      resize=\"none\"\n                      placeholder={intl.formatMessage({\n                        id: 'oauthApp.descriptionPlaceholder',\n                        defaultMessage:\n                          'Discover the Open Source projects your organization is using that need financial support.',\n                      })}\n                    />\n                  )}\n                </StyledInputFormikField>\n                <StyledInputFormikField\n                  name=\"redirectUri\"\n                  label={intl.formatMessage({ defaultMessage: 'Callback URL' })}\n                  labelProps={LABEL_STYLES}\n                  mt={20}\n                  required\n                >\n                  {({ field }) => <StyledInput {...field} type=\"url\" placeholder=\"http://example.com/path\" />}\n                </StyledInputFormikField>\n                <Flex gap=\"16px\" justifyContent=\"space-between\" mt={4}>\n                  <StyledButton\n                    type=\"submit\"\n                    buttonStyle=\"primary\"\n                    buttonSize=\"small\"\n                    loading={isSubmitting}\n                    disabled={!dirty}\n                    minWidth=\"125px\"\n                  >\n                    <FormattedMessage defaultMessage=\"Update app\" />\n                  </StyledButton>\n                  <StyledButton\n                    type=\"button\"\n                    buttonStyle=\"dangerSecondary\"\n                    buttonSize=\"small\"\n                    disabled={isSubmitting}\n                    onClick={() => setShowDeleteModal(true)}\n                  >\n                    <FormattedMessage defaultMessage=\"Delete app\" />\n                  </StyledButton>\n                </Flex>\n              </Form>\n            )}\n          </Formik>\n          {showDeleteModal && (\n            <DeleteOAuthApplicationModal\n              application={data.application}\n              onClose={() => setShowDeleteModal(false)}\n              onDelete={() => router.push(backPath)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nOAuthApplicationSettings.propTypes = {\n  id: PropTypes.string.isRequired,\n  backPath: PropTypes.string.isRequired,\n};\n\nexport default OAuthApplicationSettings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { Form, Formik } from 'formik';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport { Flex } from '../Grid';\nimport StyledButton from '../StyledButton';\nimport StyledInput from '../StyledInput';\nimport StyledInputFormikField from '../StyledInputFormikField';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport StyledTextarea from '../StyledTextarea';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nimport { validateOauthApplicationValues } from './lib';\n\nconst createApplicationMutation = gql`\n  mutation CreateApplication($application: ApplicationCreateInput!) {\n    createApplication(application: $application) {\n      id\n      name\n    }\n  }\n`;\n\nconst LABEL_STYLES = { fontWeight: 700, fontSize: '14px', lineHeight: '17px' };\n\nconst INITIAL_VALUES = {\n  name: '',\n  description: '',\n  redirectUri: '',\n};\n\nconst CreateOauthApplicationModal = ({ account, onSuccess, onClose, ...props }) => {\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  const [createApplication] = useMutation(createApplicationMutation, {\n    context: API_V2_CONTEXT,\n    update: cache => {\n      const accountCacheId = cache.identify(account);\n      cache.modify({ id: accountCacheId, fields: { oAuthApplications: (_, { DELETE }) => DELETE } });\n    },\n  });\n\n  return (\n    <StyledModal width=\"576px\" onClose={onClose} data-cy=\"create-oauth-app-modal\" {...props}>\n      <ModalHeader>\n        <FormattedMessage defaultMessage=\"Create OAuth app\" />\n      </ModalHeader>\n      <Formik\n        initialValues={INITIAL_VALUES}\n        validate={values => validateOauthApplicationValues(intl, values)}\n        onSubmit={async values => {\n          try {\n            const appInput = { ...values, account: { id: account.id } };\n            const result = await createApplication({ variables: { application: appInput } });\n            addToast({\n              type: TOAST_TYPE.SUCCESS,\n              message: intl.formatMessage(\n                { defaultMessage: 'Application \"{name}\" created' },\n                { name: result.data.createApplication.name },\n              ),\n            });\n            onSuccess(result.data.createApplication, account);\n          } catch (e) {\n            addToast({ type: TOAST_TYPE.ERROR, variant: 'light', message: i18nGraphqlException(intl, e) });\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <ModalBody mt=\"36px\">\n              <StyledInputFormikField\n                name=\"name\"\n                label={intl.formatMessage({ defaultMessage: 'Name of the app' })}\n                labelProps={LABEL_STYLES}\n                required\n              >\n                {({ field }) => (\n                  <StyledInput\n                    {...field}\n                    placeholder={intl.formatMessage(\n                      { id: 'examples', defaultMessage: 'e.g., {examples}' },\n                      { examples: 'Back Your Stack' },\n                    )}\n                  />\n                )}\n              </StyledInputFormikField>\n              <StyledInputFormikField\n                name=\"description\"\n                label={intl.formatMessage({ id: 'Fields.description', defaultMessage: 'Description' })}\n                hint={intl.formatMessage({\n                  defaultMessage: 'A short description of your app so users know what it does.',\n                })}\n                labelProps={LABEL_STYLES}\n                mt={20}\n              >\n                {({ field }) => (\n                  <StyledTextarea\n                    {...field}\n                    height=\"98px\"\n                    resize=\"none\"\n                    placeholder={intl.formatMessage({\n                      id: 'oauthApp.descriptionPlaceholder',\n                      defaultMessage:\n                        'Discover the Open Source projects your organization is using that need financial support.',\n                    })}\n                  />\n                )}\n              </StyledInputFormikField>\n              <StyledInputFormikField\n                name=\"redirectUri\"\n                label={intl.formatMessage({ defaultMessage: 'Callback URL' })}\n                labelProps={LABEL_STYLES}\n                mt={20}\n                required\n              >\n                {({ field }) => <StyledInput {...field} type=\"url\" placeholder=\"http://example.com/path\" />}\n              </StyledInputFormikField>\n            </ModalBody>\n            <ModalFooter>\n              <Flex gap=\"16px\" justifyContent=\"center\">\n                <StyledButton type=\"submit\" buttonStyle=\"primary\" buttonSize=\"small\" loading={isSubmitting}>\n                  <FormattedMessage defaultMessage=\"Create app\" />\n                </StyledButton>\n                <StyledButton\n                  type=\"button\"\n                  buttonStyle=\"secondary\"\n                  buttonSize=\"small\"\n                  disabled={isSubmitting}\n                  onClick={() => onClose()}\n                >\n                  <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n                </StyledButton>\n              </Flex>\n            </ModalFooter>\n          </Form>\n        )}\n      </Formik>\n    </StyledModal>\n  );\n};\n\nCreateOauthApplicationModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired,\n  account: PropTypes.object.isRequired,\n};\n\nexport default CreateOauthApplicationModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, NetworkStatus, useQuery } from '@apollo/client';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { getOauthAppSettingsRoute } from '../../lib/url-helpers';\n\nimport Avatar from '../Avatar';\nimport { Box, Flex, Grid } from '../Grid';\nimport { getI18nLink } from '../I18nFormatters';\nimport Image from '../Image';\nimport Link from '../Link';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport CreateOauthApplicationModal from '../oauth/CreateOauthApplicationModal';\nimport Pagination from '../Pagination';\nimport StyledButton from '../StyledButton';\nimport StyledCard from '../StyledCard';\nimport StyledHr from '../StyledHr';\nimport StyledLink from '../StyledLink';\nimport { H3, P } from '../Text';\n\nconst applicationsQuery = gql`\n  query ApplicationsQuery($slug: String!, $limit: Int, $offset: Int) {\n    account(slug: $slug) {\n      id\n      name\n      slug\n      type\n      imageUrl(height: 128)\n      oAuthApplications(limit: $limit, offset: $offset) {\n        totalCount\n        nodes {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst OAuthApplicationsList = ({ account, onApplicationCreated, offset = 0 }) => {\n  const variables = { slug: account.slug, limit: 12, offset: offset };\n  const [showCreateApplicationModal, setShowCreateApplicationModal] = React.useState(false);\n  const { data, loading, error, networkStatus } = useQuery(applicationsQuery, {\n    variables,\n    context: API_V2_CONTEXT,\n  });\n\n  const showLoadingState = loading || networkStatus === NetworkStatus.refetch;\n  return (\n    <div data-cy=\"oauth-apps-list\">\n      <Flex width=\"100%\" alignItems=\"center\">\n        <H3 fontSize=\"18px\" fontWeight=\"700\">\n          <FormattedMessage defaultMessage=\"OAuth Apps\" />\n        </H3>\n        <StyledHr mx={2} flex=\"1\" borderColor=\"black.400\" />\n        <StyledButton data-cy=\"create-app-btn\" buttonSize=\"tiny\" onClick={() => setShowCreateApplicationModal(true)}>\n          + <FormattedMessage defaultMessage=\"Create OAuth app\" />\n        </StyledButton>\n        {showCreateApplicationModal && (\n          <CreateOauthApplicationModal\n            account={data.account}\n            onClose={() => setShowCreateApplicationModal(false)}\n            onSuccess={onApplicationCreated}\n          />\n        )}\n      </Flex>\n      <P my={2} color=\"black.700\">\n        <FormattedMessage defaultMessage=\"You can register new apps that you developed using Open Collective's API.\" />{' '}\n        <FormattedMessage\n          defaultMessage=\"For more information about OAuth applications, check <link>our documentation</link>.\"\n          values={{\n            link: getI18nLink({\n              href: 'https://docs.opencollective.com/help/developers/oauth',\n            }),\n          }}\n        />\n      </P>\n      <Box my={4}>\n        {error ? (\n          <MessageBoxGraphqlError error={error} />\n        ) : !showLoadingState && !data.account.oAuthApplications.totalCount ? (\n          <StyledCard p=\"24px\">\n            <Flex>\n              <Flex flex=\"0 0 64px\" height=\"64px\" justifyContent=\"center\" alignItems=\"center\">\n                <Image src=\"/static/icons/apps.png\" width=\"52px\" height=\"52px\" alt=\"\" />\n              </Flex>\n              <Flex flexDirection=\"column\" ml={3}>\n                <P fontSize=\"14px\" fontWeight=\"700\" lineHeight=\"20px\" mb=\"12px\">\n                  <FormattedMessage defaultMessage=\"You don't have any app yet\" />\n                </P>\n                <P fontSize=\"12px\" lineHeight=\"18px\" color=\"black.700\">\n                  <FormattedMessage\n                    defaultMessage=\"You can create apps that integrate with the Open Collective platform. <CreateAppLink>Create an app</CreateAppLink> using the Open Collective's API.\"\n                    values={{\n                      CreateAppLink: children => (\n                        <StyledLink\n                          data-cy=\"create-app-link\"\n                          as=\"button\"\n                          color=\"blue.500\"\n                          onClick={() => setShowCreateApplicationModal(true)}\n                        >\n                          {children}\n                        </StyledLink>\n                      ),\n                    }}\n                  />\n                </P>\n              </Flex>\n            </Flex>\n          </StyledCard>\n        ) : (\n          <Grid gridTemplateColumns={['1fr', null, null, '1fr 1fr', '1fr 1fr 1fr']} gridGap=\"46px\">\n            {showLoadingState\n              ? Array.from({ length: variables.limit }, (_, index) => <LoadingPlaceholder key={index} height=\"64px\" />)\n              : data.account.oAuthApplications.nodes.map(app => (\n                  <Flex key={app.id} data-cy=\"oauth-app\" alignItems=\"center\">\n                    <Box mr={24}>\n                      <Avatar radius={64} collective={data.account} />\n                    </Box>\n                    <Flex flexDirection=\"column\">\n                      <P fontSize=\"18px\" lineHeight=\"26px\" fontWeight=\"500\" color=\"black.900\">\n                        {app.name}\n                      </P>\n                      <P mt=\"10px\" fontSize=\"14px\">\n                        <Link href={getOauthAppSettingsRoute(data.account, app)}>\n                          <FormattedMessage id=\"Settings\" defaultMessage=\"Settings\" />\n                        </Link>\n                      </P>\n                    </Flex>\n                  </Flex>\n                ))}\n          </Grid>\n        )}\n      </Box>\n      {data?.account?.oAuthApplications?.totalCount > variables.limit && (\n        <Flex mt={5} justifyContent=\"center\">\n          <Pagination\n            total={data.account.oAuthApplications.totalCount}\n            limit={variables.limit}\n            offset={variables.offset}\n            ignoredQueryParams={['slug', 'section']}\n          />\n        </Flex>\n      )}\n    </div>\n  );\n};\n\nOAuthApplicationsList.propTypes = {\n  account: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n  onApplicationCreated: PropTypes.func.isRequired,\n  offset: PropTypes.number,\n};\n\nexport default OAuthApplicationsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport ConfirmationModal, { CONFIRMATION_MODAL_TERMINATE } from '../ConfirmationModal';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst deletePersonalTokenMutation = gql`\n  mutation DeletePersonalToken($id: String!) {\n    deletePersonalToken(personalToken: { id: $id }) {\n      id\n      account {\n        id\n      }\n    }\n  }\n`;\n\nconst DeletePersonalTokenModal = ({ personalToken, onDelete, ...props }) => {\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  const [deleteToken] = useMutation(deletePersonalTokenMutation, {\n    context: API_V2_CONTEXT,\n    update: (cache, { data }) => {\n      cache.evict({ id: cache.identify(personalToken) });\n      cache.gc();\n\n      // Remove object from parent query\n      const accountCacheId = cache.identify(data.deletePersonalToken.account);\n      cache.modify({ id: accountCacheId, fields: { personalTokens: (_, { DELETE }) => DELETE } });\n    },\n  });\n\n  return (\n    <ConfirmationModal\n      isDanger\n      type=\"delete\"\n      header={<FormattedMessage defaultMessage=\"Delete token {name}\" values={{ name: personalToken.name || '' }} />}\n      {...props}\n      continueHandler={async () => {\n        try {\n          await deleteToken({ variables: { id: personalToken.id } });\n          await onDelete(personalToken);\n          addToast({\n            type: TOAST_TYPE.SUCCESS,\n            message: intl.formatMessage(\n              { defaultMessage: 'Personal token \"{name}\" deleted' },\n              { name: personalToken.name || '' },\n            ),\n          });\n          return CONFIRMATION_MODAL_TERMINATE;\n        } catch (e) {\n          addToast({ type: TOAST_TYPE.ERROR, variant: 'light', message: i18nGraphqlException(intl, e) });\n        }\n      }}\n    >\n      <P>\n        <FormattedMessage defaultMessage=\"This will permanently delete the token, revoking all access associated with it. Are you sure you want to continue?\" />\n      </P>\n    </ConfirmationModal>\n  );\n};\n\nDeletePersonalTokenModal.propTypes = {\n  personalToken: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default DeletePersonalTokenModal;\n","import { verifyFieldLength } from '../../lib/form-utils';\nimport { OAuthScope } from '../../lib/graphql/types/v2/graphql';\n\nexport const validatePersonalTokenValues = (intl, values) => {\n  const errors = {};\n  verifyFieldLength(intl, errors, values, 'name', 3, 100);\n  return errors;\n};\n\nexport const getScopesOptions = () => {\n  const scopes = Object.values(OAuthScope);\n  return scopes.map(scope => ({ label: scope, value: scope }));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { Form, Formik } from 'formik';\nimport { pick } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { stripTime } from '../../lib/date-utils';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport { Flex } from '../Grid';\nimport { getI18nLink } from '../I18nFormatters';\nimport Link from '../Link';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport StyledButton from '../StyledButton';\nimport StyledCard from '../StyledCard';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputFormikField from '../StyledInputFormikField';\nimport StyledLink from '../StyledLink';\nimport StyledSelect from '../StyledSelect';\nimport { H3, H4, P, Span } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\nimport WarnIfUnsavedChanges from '../WarnIfUnsavedChanges';\n\nimport DeletePersonalTokenModal from './DeletePersonalTokenModal';\nimport { getScopesOptions, validatePersonalTokenValues } from './lib';\n\nconst personalTokenSettingsFragment = gql`\n  fragment PersonalTokenSettings on PersonalToken {\n    id\n    name\n    scope\n    expiresAt\n    token\n  }\n`;\n\nconst personalTokenQuery = gql`\n  query PersonalTokenQuery($id: String!) {\n    personalToken(id: $id) {\n      id\n      ...PersonalTokenSettings\n    }\n  }\n  ${personalTokenSettingsFragment}\n`;\n\nconst updatePersonalTokenMutation = gql`\n  mutation UpdatePersonalToken($personalToken: PersonalTokenUpdateInput!) {\n    updatePersonalToken(personalToken: $personalToken) {\n      id\n      ...PersonalTokenSettings\n    }\n  }\n  ${personalTokenSettingsFragment}\n`;\n\nconst CodeContainer = styled(Span)`\n  overflow-wrap: anywhere;\n  user-select: all;\n  margin-right: 8px;\n`;\n\nconst ObfuscatedClientSecret = ({ secret }) => {\n  const [show, setShow] = React.useState(false);\n  return (\n    <P>\n      {show && <CodeContainer data-cy=\"unhidden-secret\">{secret}</CodeContainer>}\n      <StyledLink data-cy=\"show-secret-btn\" as=\"button\" color=\"blue.600\" onClick={() => setShow(!show)}>\n        {show ? <FormattedMessage id=\"Hide\" defaultMessage=\"Hide\" /> : <FormattedMessage defaultMessage=\"Show\" />}\n      </StyledLink>\n    </P>\n  );\n};\n\nObfuscatedClientSecret.propTypes = {\n  secret: PropTypes.string,\n};\n\nconst LABEL_STYLES = { fontWeight: 700, fontSize: '16px', lineHeight: '24px' };\n\nconst PersonalTokenSettings = ({ backPath, id }) => {\n  const intl = useIntl();\n  const router = useRouter();\n  const { addToast } = useToasts();\n  const [showDeleteModal, setShowDeleteModal] = React.useState(false);\n  const { data, loading, error } = useQuery(personalTokenQuery, { variables: { id }, context: API_V2_CONTEXT });\n  const [updateToken] = useMutation(updatePersonalTokenMutation, { context: API_V2_CONTEXT });\n\n  return (\n    <div data-cy=\"personal-token-settings\">\n      <P mt={3} mb={4}>\n        <StyledLink data-cy=\"go-back-link\" as={Link} color=\"black.800\" href={backPath}>\n          &larr; <FormattedMessage defaultMessage=\"Go back to all your tokens\" />\n        </StyledLink>\n      </P>\n      {loading ? (\n        <LoadingPlaceholder height={300} />\n      ) : error ? (\n        <MessageBoxGraphqlError error={error} />\n      ) : (\n        <div>\n          <Flex width=\"100%\" alignItems=\"center\">\n            <H3 fontSize=\"18px\" fontWeight=\"700\">\n              {data.personalToken.name}\n            </H3>\n            <StyledHr ml={2} flex=\"1\" borderColor=\"black.400\" />\n          </Flex>\n          <StyledCard maxWidth=\"600px\" p={3} my={4}>\n            <H4 fontSize=\"16px\" lineHeight=\"24px\" fontWeight=\"700\" color=\"black.800\" mb=\"20px\">\n              <FormattedMessage defaultMessage=\"Personal Token\" />\n            </H4>\n            <Flex flexWrap=\"wrap\" justifyContent=\"space-between\">\n              <Flex flexDirection=\"column\" width=\"100%\">\n                <CodeContainer data-cy=\"personalToken-token\" fontSize=\"14px\" color=\"black.800\" css={{}}>\n                  {data.personalToken.token}\n                </CodeContainer>\n              </Flex>\n            </Flex>\n          </StyledCard>\n          <Formik\n            initialValues={{\n              ...data.personalToken,\n              name: data.personalToken.name || '',\n              expiresAt: data.personalToken.expiresAt ? stripTime(data.personalToken.expiresAt) : '',\n              scope: (data.personalToken.scope || []).map(scope => ({ value: scope, label: scope })),\n            }}\n            validate={values => validatePersonalTokenValues(intl, values)}\n            onSubmit={async (values, { resetForm }) => {\n              try {\n                const filteredValue = pick(values, ['name', 'scope', 'expiresAt']);\n                const personalToken = {\n                  ...filteredValue,\n                  id,\n                  scope: filteredValue.scope.map(s => s.value),\n                  expiresAt: filteredValue.expiresAt ? filteredValue.expiresAt : null,\n                };\n                const result = await updateToken({ variables: { personalToken } });\n                addToast({\n                  type: TOAST_TYPE.SUCCESS,\n                  message: intl.formatMessage(\n                    { defaultMessage: 'Personal token \"{name}\" updated' },\n                    { name: result.data.updatePersonalToken.name },\n                  ),\n                });\n                resetForm({\n                  values: {\n                    ...result.data.updatePersonalToken,\n                    expiresAt: stripTime(result.data.updatePersonalToken.expiresAt),\n                  },\n                });\n              } catch (e) {\n                addToast({ type: TOAST_TYPE.ERROR, variant: 'light', message: i18nGraphqlException(intl, e) });\n              }\n            }}\n          >\n            {({ isSubmitting, dirty }) => (\n              <Form>\n                <WarnIfUnsavedChanges hasUnsavedChanges={dirty && !showDeleteModal} />\n                <StyledInputFormikField\n                  name=\"name\"\n                  label={intl.formatMessage({ defaultMessage: 'Token name' })}\n                  labelProps={LABEL_STYLES}\n                  required\n                >\n                  {({ field }) => (\n                    <StyledInput\n                      {...field}\n                      placeholder={intl.formatMessage(\n                        { id: 'examples', defaultMessage: 'e.g., {examples}' },\n                        { examples: 'Back Your Stack' },\n                      )}\n                    />\n                  )}\n                </StyledInputFormikField>\n\n                <StyledInputFormikField\n                  name=\"scope\"\n                  label=\"Scopes\"\n                  labelProps={LABEL_STYLES}\n                  mt={20}\n                  hint={intl.formatMessage(\n                    {\n                      defaultMessage: 'Scopes define the access for personal tokens. <Link>More info</Link>.',\n                    },\n                    {\n                      Link: getI18nLink({\n                        href: 'https://docs.opencollective.com/help/developers/oauth#text-available-scopes',\n                        openInNewTab: true,\n                      }),\n                    },\n                  )}\n                >\n                  {({ form, field }) => (\n                    <StyledSelect\n                      options={getScopesOptions()}\n                      inputId={field.id}\n                      error={field.error}\n                      name={field.name}\n                      defaultValue={field.value}\n                      onBlur={() => form.setFieldTouched(field.name, true)}\n                      onChange={value => form.setFieldValue(field.name, value)}\n                      isMulti\n                      data-cy=\"personal-token-scope\"\n                    />\n                  )}\n                </StyledInputFormikField>\n\n                <StyledInputFormikField\n                  name=\"expiresAt\"\n                  label={intl.formatMessage({ defaultMessage: 'Expiration date' })}\n                  labelProps={LABEL_STYLES}\n                  mt={20}\n                  hint={intl.formatMessage({\n                    defaultMessage: 'Personal tokens can expire after a certain date.',\n                  })}\n                >\n                  {({ field }) => {\n                    return <StyledInput {...field} type=\"date\" min={stripTime(new Date())} />;\n                  }}\n                </StyledInputFormikField>\n                <Flex gap=\"16px\" justifyContent=\"space-between\" mt={4}>\n                  <StyledButton\n                    type=\"submit\"\n                    buttonStyle=\"primary\"\n                    buttonSize=\"small\"\n                    loading={isSubmitting}\n                    disabled={!dirty}\n                    minWidth=\"125px\"\n                  >\n                    <FormattedMessage defaultMessage=\"Update token\" />\n                  </StyledButton>\n                  <StyledButton\n                    type=\"button\"\n                    buttonStyle=\"dangerSecondary\"\n                    buttonSize=\"small\"\n                    disabled={isSubmitting}\n                    onClick={() => setShowDeleteModal(true)}\n                    data-cy=\"personalToken-delete\"\n                  >\n                    <FormattedMessage defaultMessage=\"Delete token\" />\n                  </StyledButton>\n                </Flex>\n              </Form>\n            )}\n          </Formik>\n          {showDeleteModal && (\n            <DeletePersonalTokenModal\n              personalToken={data.personalToken}\n              onClose={() => setShowDeleteModal(false)}\n              onDelete={() => router.push(backPath)}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nPersonalTokenSettings.propTypes = {\n  id: PropTypes.string.isRequired,\n  backPath: PropTypes.string.isRequired,\n};\n\nexport default PersonalTokenSettings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { Form, Formik } from 'formik';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { stripTime } from '../../lib/date-utils';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport { Flex } from '../Grid';\nimport { getI18nLink } from '../I18nFormatters';\nimport StyledButton from '../StyledButton';\nimport StyledInput from '../StyledInput';\nimport StyledInputFormikField from '../StyledInputFormikField';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport StyledSelect from '../StyledSelect';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nimport { getScopesOptions, validatePersonalTokenValues } from './lib';\n\nconst createPersonalTokenMutation = gql`\n  mutation CreatePersonalToken($personalToken: PersonalTokenCreateInput!) {\n    createPersonalToken(personalToken: $personalToken) {\n      id\n      name\n    }\n  }\n`;\n\nconst LABEL_STYLES = { fontWeight: 700, fontSize: '14px', lineHeight: '17px' };\n\nconst INITIAL_VALUES = {\n  name: '',\n  scope: [],\n  expiresAt: '',\n};\n\nconst CreatePersonalTokenModal = ({ account, onSuccess, onClose, ...props }) => {\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  const [createPersonalToken] = useMutation(createPersonalTokenMutation, {\n    context: API_V2_CONTEXT,\n    update: cache => {\n      const accountCacheId = cache.identify(account);\n      cache.modify({ id: accountCacheId, fields: { personalTokens: (_, { DELETE }) => DELETE } });\n    },\n  });\n\n  return (\n    <StyledModal width=\"576px\" onClose={onClose} data-cy=\"create-personal-token-modal\" {...props}>\n      <ModalHeader>\n        <FormattedMessage defaultMessage=\"Create Personal token\" />\n      </ModalHeader>\n      <Formik\n        initialValues={INITIAL_VALUES}\n        validate={values => validatePersonalTokenValues(intl, values)}\n        onSubmit={async values => {\n          try {\n            const tokenInput = {\n              ...values,\n              account: { id: account.id },\n              scope: values.scope.map(scope => scope.value),\n              expiresAt: values.expiresAt ? values.expiresAt : null,\n            };\n            const result = await createPersonalToken({ variables: { personalToken: tokenInput } });\n            addToast({\n              type: TOAST_TYPE.SUCCESS,\n              message: intl.formatMessage(\n                { defaultMessage: 'Personal token \"{name}\" created' },\n                { name: result.data.createPersonalToken.name },\n              ),\n            });\n            onSuccess(result.data.createPersonalToken, account);\n          } catch (e) {\n            addToast({ type: TOAST_TYPE.ERROR, variant: 'light', message: i18nGraphqlException(intl, e) });\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <ModalBody mt=\"36px\">\n              <StyledInputFormikField\n                name=\"name\"\n                label={intl.formatMessage({ defaultMessage: 'Token Name' })}\n                labelProps={LABEL_STYLES}\n                required\n              >\n                {({ field }) => (\n                  <StyledInput\n                    {...field}\n                    placeholder={intl.formatMessage(\n                      { id: 'examples', defaultMessage: 'e.g., {examples}' },\n                      { examples: 'Back Your Stack' },\n                    )}\n                  />\n                )}\n              </StyledInputFormikField>\n              <StyledInputFormikField\n                name=\"scope\"\n                label=\"Scopes\"\n                labelProps={LABEL_STYLES}\n                mt={20}\n                hint={intl.formatMessage(\n                  {\n                    defaultMessage: 'Scopes define the access for personal tokens. <Link>More info</Link>.',\n                  },\n                  {\n                    Link: getI18nLink({\n                      href: 'https://docs.opencollective.com/help/developers/oauth#text-available-scopes',\n                      openInNewTab: true,\n                    }),\n                  },\n                )}\n              >\n                {({ form, field }) => (\n                  <StyledSelect\n                    options={getScopesOptions()}\n                    inputId={field.id}\n                    error={field.error}\n                    name={field.name}\n                    defaultValue={field.value}\n                    onBlur={() => form.setFieldTouched(field.name, true)}\n                    onChange={value => form.setFieldValue(field.name, value)}\n                    isMulti\n                    data-cy=\"personal-token-scope\"\n                  />\n                )}\n              </StyledInputFormikField>\n\n              <StyledInputFormikField\n                name=\"expiresAt\"\n                label={intl.formatMessage({ defaultMessage: 'Expiration date' })}\n                labelProps={LABEL_STYLES}\n                mt={20}\n                hint={intl.formatMessage({\n                  defaultMessage: 'Personal tokens can expire after a certain date.',\n                })}\n              >\n                {({ field }) => {\n                  return <StyledInput {...field} type=\"date\" min={stripTime(new Date())} />;\n                }}\n              </StyledInputFormikField>\n            </ModalBody>\n            <ModalFooter>\n              <Flex gap=\"16px\" justifyContent=\"center\">\n                <StyledButton type=\"submit\" buttonStyle=\"primary\" buttonSize=\"small\" loading={isSubmitting}>\n                  <FormattedMessage defaultMessage=\"Create token\" />\n                </StyledButton>\n                <StyledButton\n                  type=\"button\"\n                  buttonStyle=\"secondary\"\n                  buttonSize=\"small\"\n                  disabled={isSubmitting}\n                  onClick={() => onClose()}\n                >\n                  <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n                </StyledButton>\n              </Flex>\n            </ModalFooter>\n          </Form>\n        )}\n      </Formik>\n    </StyledModal>\n  );\n};\n\nCreatePersonalTokenModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func.isRequired,\n  account: PropTypes.object.isRequired,\n};\n\nexport default CreatePersonalTokenModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, NetworkStatus, useQuery } from '@apollo/client';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { getPersonalTokenSettingsRoute } from '../../lib/url-helpers';\n\nimport Avatar from '../Avatar';\nimport { Box, Flex, Grid } from '../Grid';\nimport Image from '../Image';\nimport Link from '../Link';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport Pagination from '../Pagination';\nimport StyledButton from '../StyledButton';\nimport StyledCard from '../StyledCard';\nimport StyledHr from '../StyledHr';\nimport StyledLink from '../StyledLink';\nimport { H3, P } from '../Text';\n\nimport CreatePersonalTokenModal from './CreatePersonalTokenModal';\n\nconst personalTokenQuery = gql`\n  query PersonalTokens($slug: String!, $limit: Int, $offset: Int) {\n    individual(slug: $slug) {\n      id\n      name\n      slug\n      type\n      imageUrl(height: 128)\n      personalTokens(limit: $limit, offset: $offset) {\n        totalCount\n        nodes {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst PersonalTokensList = ({ account, onPersonalTokenCreated, offset = 0 }) => {\n  const variables = { slug: account.slug, limit: 12, offset: offset };\n  const [showCreatePersonalToken, setShowCreatePersonalTokenModal] = React.useState(false);\n  const { data, loading, error, networkStatus } = useQuery(personalTokenQuery, {\n    variables,\n    context: API_V2_CONTEXT,\n  });\n\n  const showLoadingState = loading || networkStatus === NetworkStatus.refetch;\n\n  return (\n    <div data-cy=\"personal-tokens-list\">\n      <Flex width=\"100%\" alignItems=\"center\">\n        <H3 fontSize=\"18px\" fontWeight=\"700\">\n          <FormattedMessage defaultMessage=\"Personal Tokens\" />\n        </H3>\n        <StyledHr mx={2} flex=\"1\" borderColor=\"black.400\" />\n        <StyledButton\n          data-cy=\"create-personal-token-btn\"\n          buttonSize=\"tiny\"\n          onClick={() => setShowCreatePersonalTokenModal(true)}\n        >\n          + <FormattedMessage defaultMessage=\"Create Personal token\" />\n        </StyledButton>\n        {showCreatePersonalToken && (\n          <CreatePersonalTokenModal\n            account={data.individual}\n            onClose={() => setShowCreatePersonalTokenModal(false)}\n            onSuccess={onPersonalTokenCreated}\n          />\n        )}\n      </Flex>\n      <P my={2} color=\"black.700\">\n        <FormattedMessage\n          defaultMessage=\"Personal tokens are used to authenticate with the API. They are not tied to a specific application. Pass it as {headerName} HTTP header or {queryParam} query parameter in the URL.\"\n          values={{\n            headerName: <code>Personal-Token</code>,\n            queryParam: <code>personalToken</code>,\n          }}\n        />\n      </P>\n      <Box my={4}>\n        {error ? (\n          <MessageBoxGraphqlError error={error} />\n        ) : !showLoadingState && !data.individual.personalTokens.totalCount ? (\n          <StyledCard p=\"24px\">\n            <Flex>\n              <Flex flex=\"0 0 64px\" height=\"64px\" justifyContent=\"center\" alignItems=\"center\">\n                <Image src=\"/static/icons/apps.png\" width=\"52px\" height=\"52px\" alt=\"\" />\n              </Flex>\n              <Flex flexDirection=\"column\" ml={3}>\n                <P fontSize=\"14px\" fontWeight=\"700\" lineHeight=\"20px\" mb=\"12px\">\n                  <FormattedMessage defaultMessage=\"You don't have any token yet\" />\n                </P>\n                <P fontSize=\"12px\" lineHeight=\"18px\" color=\"black.700\">\n                  <FormattedMessage\n                    defaultMessage=\"You can create personal token that integrate with the Open Collective platform. <CreateTokenLink>Create Personal Token</CreateTokenLink>.\"\n                    values={{\n                      CreateTokenLink: children => (\n                        <StyledLink\n                          data-cy=\"create-token-link\"\n                          as=\"button\"\n                          color=\"blue.500\"\n                          onClick={() => setShowCreatePersonalTokenModal(true)}\n                        >\n                          {children}\n                        </StyledLink>\n                      ),\n                    }}\n                  />\n                </P>\n              </Flex>\n            </Flex>\n          </StyledCard>\n        ) : (\n          <Grid gridTemplateColumns={['1fr', null, null, '1fr 1fr', '1fr 1fr 1fr']} gridGap=\"46px\">\n            {showLoadingState\n              ? Array.from({ length: variables.limit }, (_, index) => <LoadingPlaceholder key={index} height=\"64px\" />)\n              : data.individual.personalTokens.nodes.map(token => (\n                  <Flex key={token.id} data-cy=\"personal-token\" alignItems=\"center\">\n                    <Box mr={24}>\n                      <Avatar radius={64} collective={data.individual} />\n                    </Box>\n                    <Flex flexDirection=\"column\">\n                      <P fontSize=\"18px\" lineHeight=\"26px\" fontWeight=\"500\" color=\"black.900\">\n                        {token.name ?? <FormattedMessage defaultMessage={'Unnamed token'} />}\n                      </P>\n                      <P mt=\"10px\" fontSize=\"14px\">\n                        <Link href={getPersonalTokenSettingsRoute(data.individual, token)}>\n                          <FormattedMessage id=\"Settings\" defaultMessage=\"Settings\" />\n                        </Link>\n                      </P>\n                    </Flex>\n                  </Flex>\n                ))}\n          </Grid>\n        )}\n      </Box>\n      {data?.individual?.personalTokens?.totalCount > variables.limit && (\n        <Flex mt={5} justifyContent=\"center\">\n          <Pagination\n            total={data.individual.personalTokens.totalCount}\n            limit={variables.limit}\n            offset={variables.offset}\n            ignoredQueryParams={['slug', 'section']}\n          />\n        </Flex>\n      )}\n    </div>\n  );\n};\n\nPersonalTokensList.propTypes = {\n  account: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n  onPersonalTokenCreated: PropTypes.func.isRequired,\n  offset: PropTypes.number,\n};\n\nexport default PersonalTokensList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\n\nimport { isIndividualAccount } from '../../../lib/collective.lib';\nimport { CollectiveType } from '../../../lib/constants/collectives';\nimport { getOauthAppSettingsRoute, getPersonalTokenSettingsRoute } from '../../../lib/url-helpers';\n\nimport OAuthApplicationSettings from '../../oauth/OAuthApplicationSettings';\nimport OAuthApplicationsList from '../../oauth/OAuthApplicationsList';\nimport PersonalTokenSettings from '../../personal-token/PersonalTokenSettings';\nimport PersonalTokensList from '../../personal-token/PersonalTokensList';\n\nconst ForDevelopers = ({ account }) => {\n  const router = useRouter() || {};\n  const query = router.query;\n  const [subSection, id] = query.subpath || [];\n  if (subSection === 'oauth' && id) {\n    return <OAuthApplicationSettings id={id} backPath={router.asPath.replace(/\\/oauth\\/.+/, '')} />;\n  } else if (subSection === 'personal-tokens' && id) {\n    return <PersonalTokenSettings id={id} backPath={router.asPath.replace(/\\/personal-tokens\\/.+/, '')} />;\n  } else {\n    return (\n      <React.Fragment>\n        <OAuthApplicationsList\n          account={account}\n          offset={query.offset ? parseInt(query.offset) : 0}\n          onApplicationCreated={(app, account) => router.push(getOauthAppSettingsRoute(account, app))}\n        />\n        {isIndividualAccount(account) && (\n          <PersonalTokensList\n            account={account}\n            offset={query.offset ? parseInt(query.offset) : 0}\n            onPersonalTokenCreated={(app, account) => router.push(getPersonalTokenSettingsRoute(account, app))}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n};\n\nForDevelopers.propTypes = {\n  account: PropTypes.shape({\n    type: PropTypes.oneOf(Object.keys(CollectiveType)).isRequired,\n    slug: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ForDevelopers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { saveAs } from 'file-saver';\n\n/**\n * A generic wrapper to handle the flow of downloading a file (fetching from URL,\n * saving...etc).\n */\nexport default class FileDownloader extends React.Component {\n  static propTypes = {\n    filename: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    buildFetchParams: PropTypes.func,\n    children: PropTypes.func,\n  };\n\n  static defaultProps = {\n    buildFetchParams: () => {},\n  };\n\n  state = {\n    loading: false,\n    error: false,\n    downloaded: false,\n  };\n\n  downloadFile = async () => {\n    try {\n      this.setState({ loading: true });\n      const response = await fetch(this.props.url, this.props.buildFetchParams());\n      const file = await response.blob();\n      saveAs(file, this.props.filename);\n      this.setState({ loading: false, downloaded: true });\n    } catch (e) {\n      this.setState({ error: e.message, loading: false });\n    }\n  };\n\n  render() {\n    const { loading, error, downloaded } = this.state;\n    return this.props.children({\n      loading,\n      error,\n      downloaded,\n      downloadFile: this.downloadFile,\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckCircle } from '@styled-icons/feather/CheckCircle';\nimport { Clipboard } from '@styled-icons/feather/Clipboard';\nimport { Printer } from '@styled-icons/feather/Printer';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { giftCardsDownloadUrl } from '../lib/url-helpers';\nimport { getWebsiteUrl } from '../lib/utils';\n\nimport FileDownloader from './FileDownloader';\nimport { Box, Flex } from './Grid';\nimport StyledButton from './StyledButton';\nimport StyledInput from './StyledInput';\nimport { P } from './Text';\n\nconst RedeemLinksTextarea = styled(StyledInput).attrs({ as: 'textarea' })`\n  width: 95%;\n  max-width: 450px;\n  min-height: 175px;\n  padding: 8px;\n  border-radius: 8px;\n  resize: vertical;\n  overflow-wrap: normal;\n`;\n\n/**\n * Displays created gift cards, with an option to print them.\n */\nexport default class CreateGiftCardsSuccess extends React.Component {\n  static propTypes = {\n    cards: PropTypes.arrayOf(\n      PropTypes.shape({\n        uuid: PropTypes.string.isRequired,\n        currency: PropTypes.string.isRequired,\n        initialBalance: PropTypes.number.isRequired,\n        expiryDate: PropTypes.string,\n      }),\n    ).isRequired,\n    deliverType: PropTypes.oneOf(['manual', 'email']).isRequired,\n    collectiveSlug: PropTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.redeemLinkTextareaRef = React.createRef();\n  }\n\n  getRedeemLinkFromVC = vc => {\n    const code = vc.uuid.split('-')[0];\n    return `${getWebsiteUrl()}/${this.props.collectiveSlug}/redeem/${code}`;\n  };\n\n  copyLinksToClipboard = () => {\n    try {\n      this.redeemLinkTextareaRef.current.select();\n      document.execCommand('copy');\n    } catch (e) {\n      // TODO: this should be reported to the user\n      // eslint-disable-next-line no-console\n      console.error('Cannot copy to clipboard', e);\n    }\n  };\n\n  buildFetchParams = () => {\n    return {};\n  };\n\n  renderManualSuccess() {\n    const filename = `${this.props.collectiveSlug}-giftcards-${Date.now()}.pdf`;\n    const downloadUrl = giftCardsDownloadUrl(filename);\n\n    return (\n      <React.Fragment>\n        <Box mb={3}>\n          <FormattedMessage\n            id=\"giftCards.create.successCreate\"\n            defaultMessage=\"Your {count, plural, one {gift card has} other {{count} gift cards have}} been created.\"\n            values={{ count: this.props.cards.length }}\n          />\n        </Box>\n\n        <Flex width={1} flexDirection=\"column\" alignItems=\"center\">\n          <Flex my={3} flexWrap=\"wrap\" justifyContent=\"center\">\n            <StyledButton\n              m={2}\n              minWidth={270}\n              buttonSize=\"large\"\n              buttonStyle=\"primary\"\n              onClick={this.copyLinksToClipboard}\n            >\n              <Clipboard size=\"1em\" />\n              &nbsp;\n              <FormattedMessage id=\"CreateGiftCardsSuccess.RedeemLinks\" defaultMessage=\"Copy links\" />\n            </StyledButton>\n            {this.props.cards.length < 300 && (\n              <FileDownloader\n                url={downloadUrl}\n                filename={filename}\n                buildFetchParams={() => ({\n                  method: 'POST',\n                  headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\n                  body: JSON.stringify({ cards: this.props.cards }),\n                })}\n              >\n                {({ loading, downloadFile }) => (\n                  <StyledButton minWidth={270} m={2} buttonSize=\"large\" loading={loading} onClick={downloadFile}>\n                    <Printer size=\"1em\" />\n                    &nbsp;\n                    <FormattedMessage id=\"CreateGiftCardsSuccess.Download\" defaultMessage=\"Download cards\" />\n                  </StyledButton>\n                )}\n              </FileDownloader>\n            )}\n          </Flex>\n          <RedeemLinksTextarea\n            ref={this.redeemLinkTextareaRef}\n            className=\"result-redeem-links\"\n            readOnly\n            value={this.props.cards.map(this.getRedeemLinkFromVC).join('\\n')}\n          />\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  renderEmailSuccess() {\n    return (\n      <FormattedMessage\n        id=\"giftCards.create.successSent\"\n        defaultMessage=\"Your {count, plural, one {gift card has} other {{count} gift cards have}} been sent!\"\n        values={{ count: this.props.cards.length }}\n      />\n    );\n  }\n\n  render() {\n    const { deliverType } = this.props;\n\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"center\">\n        <P color=\"green.700\">\n          <CheckCircle size=\"3em\" />\n        </P>\n        {deliverType === 'email' ? this.renderEmailSuccess() : this.renderManualSuccess()}\n      </Flex>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\n\nimport { paymentMethodLabelWithIcon } from '../lib/payment_method_label';\n\nimport StyledSelect from './StyledSelect';\n\nclass PaymentMethodSelect extends Component {\n  static propTypes = {\n    /** The id of the search input */\n    inputId: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    /** To control the component state */\n    value: PropTypes.object,\n    /** The payment methods to display. **Cannot be empty !** */\n    paymentMethods: PropTypes.arrayOf(PropTypes.object).isRequired,\n    /** The default payment method. Will use the first one if not provided. */\n    defaultPaymentMethod: PropTypes.object,\n    /** @ignore Provided by injectIntl */\n    intl: PropTypes.object,\n  };\n\n  paymentMethodValueAndLabel = (intl, paymentMethod) => {\n    return {\n      value: paymentMethod,\n      label: paymentMethodLabelWithIcon(intl, paymentMethod),\n    };\n  };\n\n  render() {\n    const { intl, paymentMethods, defaultPaymentMethod, value, onChange, inputId, ...props } = this.props;\n\n    const options = paymentMethods.map(paymentMethod => this.paymentMethodValueAndLabel(intl, paymentMethod));\n\n    return (\n      <StyledSelect\n        inputId={inputId}\n        name=\"paymentMethod\"\n        options={options}\n        minWidth={300}\n        onChange={({ value }) => onChange(value)}\n        value={value ? this.paymentMethodValueAndLabel(intl, value) : undefined}\n        defaultValue={defaultPaymentMethod ? this.paymentMethodValueAndLabel(intl, defaultPaymentMethod) : options[0]}\n        {...props}\n      />\n    );\n  }\n}\n\nexport default injectIntl(PaymentMethodSelect);\n","/**\n * Return the correct border color index depending on `error` and `success`.\n *\n * ## Examples\n *\n *    > getInputBorderColor(true)\n *    'red.500'\n */\nexport const getInputBorderColor = (error, success) => {\n  if (error) {\n    return 'red.500';\n  }\n\n  if (success) {\n    return 'green.300';\n  }\n\n  return 'black.300';\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { themeGet } from '@styled-system/theme-get';\nimport { Editor, EditorState } from 'draft-js';\nimport { debounce, omit, uniq } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { getInputBorderColor } from '../lib/styled_components_utils';\n\nimport Container from './Container';\nimport { Span } from './Text';\n\nconst InputContainer = styled(Container)`\n  .DraftEditor-root {\n    padding: 0.5em;\n    cursor: text;\n    font-weight: 400;\n    border: 1px solid;\n    border-radius: 4px;\n    border-color: inherit;\n\n    &:hover,\n    &:focus {\n      border-color: ${themeGet('colors.primary.300')};\n    }\n  }\n\n  .public-DraftEditor-content {\n    min-height: 3em;\n    max-height: 18em;\n    overflow-y: auto;\n  }\n\n  .public-DraftEditor-content[contenteditable='false'] {\n    cursor: not-allowed;\n  }\n`;\n\nexport default class StyledMultiEmailInput extends Component {\n  static propTypes = {\n    /** Editor initial state */\n    initialState: PropTypes.instanceOf(EditorState),\n    /** Callback for state update like `({emails, invalids}) => void` */\n    onChange: PropTypes.func,\n    /** Callback for when component is unmount. Useful to save editor state. */\n    onClose: PropTypes.func,\n    /** On array of invalid emails */\n    invalids: PropTypes.arrayOf(PropTypes.string),\n    /** disabled */\n    disabled: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.onChangeParent = debounce(this.onChangeParent.bind(this), 100, { trailing: true });\n    this.onBlur = this.onBlur.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.state = {\n      editorState: props.initialState || EditorState.createEmpty(),\n      showErrors: false,\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.props.onClose) {\n      this.props.onClose(this.state.editorState);\n    }\n  }\n\n  extractEmails(str) {\n    return uniq(str.split(/[\\s,;]/gm)).reduce(\n      (result, term) => {\n        if (term.length === 0) {\n          return result;\n        } else if (term.match(/.+@.+\\..+/)) {\n          result.emails.push(term);\n        } else {\n          result.invalids.push(term);\n        }\n        return result;\n      },\n      { emails: [], invalids: [] },\n    );\n  }\n\n  onChange(editorState) {\n    this.setState({ editorState });\n    if (this.props.onChange) {\n      this.onChangeParent(editorState);\n    }\n  }\n\n  onChangeParent(editorState) {\n    const stringContent = editorState.getCurrentContent().getPlainText();\n    const returnedState = this.extractEmails(stringContent);\n    this.props.onChange(returnedState);\n  }\n\n  onBlur() {\n    this.setState({ showErrors: true });\n  }\n\n  onFocus() {\n    this.setState({ showErrors: false });\n  }\n\n  render() {\n    const { invalids, disabled } = this.props;\n\n    return (\n      <InputContainer\n        width=\"100%\"\n        bg={disabled ? 'black.50' : 'white.full'}\n        fontSize=\"14px\"\n        borderColor={getInputBorderColor(invalids && invalids.length > 0)}\n        {...omit(this.props, ['invalids', 'onChange', 'initialState', 'onClose'])}\n      >\n        <Editor\n          editorState={this.state.editorState}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n          readOnly={disabled}\n          stripPastedStyles\n        />\n        {this.state.showErrors && invalids && invalids.length > 0 && (\n          <Span className=\"multiemails-errors\" display=\"block\" color=\"red.500\" pt={2} fontSize=\"10px\">\n            <strong>\n              <FormattedMessage id=\"multiemail.invalids\" defaultMessage=\"Invalid emails:\" />{' '}\n            </strong>\n            {invalids.join(', ')}\n          </Span>\n        )}\n      </InputContainer>\n    );\n  }\n}\n","import { injectIntl } from 'react-intl';\nimport SelectCreatable from 'react-select/creatable';\n\nimport { makeStyledSelect } from './StyledSelect';\n\n/**\n * A StyledSelect with creatable activated. See https://react-select.com/creatable\n */\nexport default injectIntl(makeStyledSelect(SelectCreatable));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { RadioButtonChecked } from '@styled-icons/material/RadioButtonChecked';\nimport { RadioButtonUnchecked } from '@styled-icons/material/RadioButtonUnchecked';\nimport { themeGet } from '@styled-system/theme-get';\nimport dayjs from 'dayjs';\nimport { get, truncate } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { isPrepaid } from '../lib/constants/payment-methods';\nimport { gqlV1 } from '../lib/graphql/helpers';\nimport { compose, reportValidityHTML5 } from '../lib/utils';\n\nimport CollectivePicker from './CollectivePicker';\nimport Container from './Container';\nimport CreateGiftCardsSuccess from './CreateGiftCardsSuccess';\nimport { Box, Flex } from './Grid';\nimport { I18nSupportLink } from './I18nFormatters';\nimport Link from './Link';\nimport Loading from './Loading';\nimport MessageBox from './MessageBox';\nimport PaymentMethodSelect from './PaymentMethodSelect';\nimport StyledButton from './StyledButton';\nimport StyledCheckbox from './StyledCheckbox';\nimport StyledInput from './StyledInput';\nimport StyledInputAmount from './StyledInputAmount';\nimport StyledMultiEmailInput from './StyledMultiEmailInput';\nimport StyledSelectCreatable from './StyledSelectCreatable';\n\nconst MIN_AMOUNT = 500;\nconst MAX_AMOUNT = 100000000;\nconst WARN_NB_GIFT_CARDS_WITHOUT_HOST_LIMIT = 10;\nconst WARN_NB_GIFT_CARDS_WITH_CREDIT_CARD = 10;\nconst WARN_GIFT_CARDS_AMOUNT_WITH_CREDIT_CARD = 1000e2;\n\nconst messages = defineMessages({\n  emailCustomMessage: {\n    id: 'giftCards.email.customMessage',\n    defaultMessage: 'Will be sent in the invitation email',\n  },\n  limitToHostsPlaceholder: {\n    id: 'giftCards.limitToHosts.placeholder',\n    defaultMessage: 'All Hosts',\n  },\n  limitToCollectivesPlaceholder: {\n    id: 'giftCards.limitToCollectives.placeholder',\n    defaultMessage:\n      'All Collectives {nbHosts, plural, =0 {} =1 {under the selected Host} other {under the selected Hosts}}',\n  },\n  notBatched: {\n    id: 'giftCards.notBatched',\n    defaultMessage: 'Not batched',\n  },\n});\n\nconst InlineField = ({ name, children, label, isLabelClickable }) => (\n  <Flex flexWrap=\"wrap\" alignItems=\"center\" mb=\"2.5em\" className={`field-${name}`}>\n    <Box width={[1, 0.3]}>\n      <label htmlFor={`giftcard-${name}`} style={{ cursor: isLabelClickable ? 'pointer' : 'inherit', width: '100%' }}>\n        {label}\n      </label>\n    </Box>\n    {children}\n  </Flex>\n);\n\nInlineField.propTypes = {\n  name: PropTypes.string,\n  children: PropTypes.node,\n  label: PropTypes.node,\n  isLabelClickable: PropTypes.bool,\n};\n\n/** Entry title */\nexport const Title = styled.summary``;\n\nconst DeliverTypeRadioSelector = styled(Flex)`\n  justify-content: space-evenly;\n  align-items: center;\n  padding: 1.25em 1em;\n  margin-bottom: 2.5em;\n  background: white;\n  box-shadow: 0px 3px 10px ${themeGet('colors.black.200')};\n  border-top: 1px solid ${themeGet('colors.black.200')};\n  border-bottom: 1px solid ${themeGet('colors.black.200')};\n`;\n\nconst RadioButtonContainer = styled.label`\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  width: auto;\n  svg {\n    height: 30px;\n    width: 30px;\n    color: ${themeGet('colors.primary.400')};\n    transition: color 0.2s;\n    &:hover {\n      color: ${themeGet('colors.primary.500')};\n    }\n  }\n`;\n\nconst RadioButtonWithLabel = ({ checked, onClick, name, children }) => {\n  const icon = checked ? <RadioButtonChecked /> : <RadioButtonUnchecked />;\n  return (\n    <RadioButtonContainer htmlFor=\"radio-buttons\" data-name={name}>\n      <div\n        role=\"presentation\"\n        onClick={onClick}\n        onKeyDown={event => {\n          if (event.key === 'Enter') {\n            event.preventDefault();\n            onClick();\n          }\n        }}\n      >\n        <Box className=\"radio-btn\" textAlign=\"center\">\n          {icon}\n        </Box>\n        <div id=\"radio-buttons\" style={{ marginTop: 8, cursor: 'pointer' }}>\n          {children}\n        </div>\n      </div>\n    </RadioButtonContainer>\n  );\n};\n\nRadioButtonWithLabel.propTypes = {\n  checked: PropTypes.bool,\n  onClick: PropTypes.func,\n  name: PropTypes.string,\n  children: PropTypes.node,\n};\n\nconst FieldLabelDetails = styled.span`\n  color: ${themeGet('colors.black.600')};\n  font-weight: normal;\n`;\n\nclass CreateGiftCardsForm extends Component {\n  static propTypes = {\n    collectiveId: PropTypes.number.isRequired,\n    collectiveSlug: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n    createGiftCards: PropTypes.func.isRequired,\n    collectiveSettings: PropTypes.object.isRequired,\n    data: PropTypes.shape({\n      loading: PropTypes.bool,\n      error: PropTypes.object,\n      Collective: PropTypes.shape({\n        paymentMethods: PropTypes.array,\n      }),\n      allHosts: PropTypes.shape({\n        collectives: PropTypes.arrayOf(\n          PropTypes.shape({\n            id: PropTypes.number,\n          }),\n        ),\n      }),\n    }),\n    /** @ignore from injectIntl */\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.form = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      deliverType: 'email', // email or manual\n      values: {\n        batch: null,\n        amount: MIN_AMOUNT,\n        emails: [],\n        customMessage: '',\n        numberOfGiftCards: 1,\n        limitedToHosts: [],\n        expiryDate: dayjs().add(12, 'month').format('YYYY-MM-DD'),\n      },\n      errors: { emails: [] },\n      multiEmailsInitialState: null,\n      submitting: false,\n      createdGiftCards: null,\n      serverError: null,\n      hasAcceptedWarning: false,\n    };\n  }\n\n  onChange(fieldName, value) {\n    const errors = {};\n\n    // Format value\n    if (fieldName === 'emails') {\n      const { emails, invalids } = value;\n      value = emails;\n      errors.emails = invalids;\n    } else if (fieldName === 'numberOfGiftCards') {\n      const intNumberOfGiftCards = parseInt(value);\n      value = !isNaN(intNumberOfGiftCards) ? intNumberOfGiftCards : 1;\n    }\n\n    // Set value\n    this.setState(state => ({\n      values: Object.assign(state.values, { [fieldName]: value }),\n      errors: Object.assign(state.errors, errors),\n    }));\n  }\n\n  isSubmitEnabled() {\n    // Others fields validity are checked with HTML5 validation (see `onSubmit`)\n    const { values, errors, deliverType } = this.state;\n\n    if (this.isPaymentMethodDiscouraged() && !this.state.hasAcceptedWarning) {\n      return false;\n    }\n\n    if (deliverType === 'email') {\n      return values.emails.length > 0 && errors.emails.length === 0;\n    } else {\n      return values.numberOfGiftCards !== 0;\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const { values, submitting, deliverType } = this.state;\n    if (!submitting && reportValidityHTML5(this.form.current)) {\n      const paymentMethod = values.paymentMethod || this.getDefaultPaymentMethod();\n      const limitations = {};\n      if (this.canLimitToFiscalHosts()) {\n        limitations.limitedToHostCollectiveIds = this.optionsToIdsList(values.limitedToHosts);\n      }\n\n      this.setState({ submitting: true });\n      const variables = {\n        CollectiveId: this.props.collectiveId,\n        amount: values.amount,\n        PaymentMethodId: paymentMethod.id,\n        expiryDate: values.expiryDate,\n        batch: values.batch,\n        ...limitations,\n      };\n\n      if (deliverType === 'email') {\n        variables.emails = values.emails;\n        variables.customMessage = values.customMessage;\n      } else if (deliverType === 'manual') {\n        variables.numberOfGiftCards = values.numberOfGiftCards;\n      }\n\n      this.props\n        .createGiftCards({ variables })\n        .then(({ data }) => {\n          this.setState({ createdGiftCards: data.createGiftCards, submitting: false });\n          window.scrollTo(0, 0);\n        })\n        .catch(e => {\n          this.setState({ serverError: e.message, submitting: false });\n        });\n    }\n  }\n\n  getDefaultPaymentMethod() {\n    return get(this.props, 'data.Collective.paymentMethods', [])[0];\n  }\n\n  getError(fieldName) {\n    return this.state.errors[fieldName];\n  }\n\n  changeDeliverType(deliverType) {\n    this.setState(state => {\n      // Use the emails count to pre-fill the number count\n      const values = { ...state.values };\n      if (state.deliverType === 'email' && deliverType === 'manual' && values.emails.length) {\n        values.numberOfGiftCards = values.emails.length;\n      }\n      return { values, deliverType };\n    });\n  }\n\n  getGiftCardsCount() {\n    const { values, deliverType } = this.state;\n    return deliverType === 'email' ? values.emails.length : values.numberOfGiftCards;\n  }\n\n  shouldLimitToSpecificHosts() {\n    return (\n      this.canLimitToFiscalHosts() &&\n      !this.state.values.limitedToHosts?.length &&\n      this.getGiftCardsCount() >= WARN_NB_GIFT_CARDS_WITHOUT_HOST_LIMIT\n    );\n  }\n\n  isPaymentMethodDiscouraged() {\n    const { values } = this.state;\n    const paymentMethod = values.paymentMethod || this.getDefaultPaymentMethod();\n    if (paymentMethod?.type !== 'CREDITCARD') {\n      return false;\n    }\n\n    const count = this.getGiftCardsCount();\n    return (\n      count >= WARN_NB_GIFT_CARDS_WITH_CREDIT_CARD || count * values.amount >= WARN_GIFT_CARDS_AMOUNT_WITH_CREDIT_CARD\n    );\n  }\n\n  renderSubmit() {\n    const { submitting } = this.state;\n    const count = this.getGiftCardsCount();\n    const enable = this.isSubmitEnabled();\n    return (\n      <StyledButton\n        type=\"submit\"\n        buttonSize=\"large\"\n        buttonStyle=\"primary\"\n        minWidth=\"16em\"\n        disabled={!submitting && !enable}\n        loading={submitting}\n        data-cy=\"submit-new-gift-cards\"\n      >\n        <FormattedMessage id=\"giftCards.generate\" defaultMessage=\"Create {count} gift cards\" values={{ count }} />\n      </StyledButton>\n    );\n  }\n\n  renderNoPaymentMethodMessage() {\n    return (\n      <Flex justifyContent=\"center\">\n        <Link href={`/${this.props.collectiveSlug}/admin/payment-methods`}>\n          <StyledButton buttonSize=\"large\" mt=\"2em\" justifyContent=\"center\">\n            <FormattedMessage\n              id=\"giftCards.create.requirePM\"\n              defaultMessage=\"Add a payment method to create gift cards\"\n            />\n          </StyledButton>\n        </Link>\n      </Flex>\n    );\n  }\n\n  renderEmailFields() {\n    const { submitting, errors, multiEmailsInitialState } = this.state;\n    return (\n      <Box>\n        <Flex flexDirection=\"column\" mb=\"2em\">\n          <label style={{ width: '100%' }} htmlFor=\"gift-cards-recipients\">\n            <Flex flexDirection=\"column\">\n              <FormattedMessage id=\"giftCards.create.recipients\" defaultMessage=\"Recipients\" />\n              <FieldLabelDetails>\n                <FormattedMessage\n                  id=\"giftCards.create.recipientsDetails\"\n                  defaultMessage=\"A list of emails that will receive a gift card\"\n                />\n              </FieldLabelDetails>\n            </Flex>\n          </label>\n          <StyledMultiEmailInput\n            id=\"gift-cards-recipients\"\n            className=\"gift-cards-recipients\"\n            mt=\"0.25em\"\n            invalids={errors.emails}\n            initialState={multiEmailsInitialState}\n            onClose={s => this.setState({ multiEmailsInitialState: s })}\n            onChange={value => this.onChange('emails', value)}\n            disabled={submitting}\n          />\n        </Flex>\n        <InlineField\n          name=\"customMessage\"\n          label={\n            <Flex flexDirection=\"column\">\n              <FormattedMessage id=\"giftCards.create.customMessage\" defaultMessage=\"Custom message\" />\n              <FieldLabelDetails>\n                <FormattedMessage id=\"forms.optional\" defaultMessage=\"Optional\" />\n              </FieldLabelDetails>\n            </Flex>\n          }\n        >\n          <StyledInput\n            id=\"giftcard-customMessage\"\n            type=\"text\"\n            maxLength=\"255\"\n            placeholder={this.props.intl.formatMessage(messages.emailCustomMessage)}\n            onChange={e => this.onChange('customMessage', e.target.value)}\n            style={{ flexGrow: 1 }}\n            disabled={submitting}\n          />\n        </InlineField>\n      </Box>\n    );\n  }\n\n  renderManualFields() {\n    const { collectiveSettings } = this.props;\n    const giftCardsMaxDailyCount = get(collectiveSettings, `giftCardsMaxDailyCount`) || 100;\n    return (\n      <Container display=\"flex\" flexDirection=\"column\" width={1} justifyContent=\"center\">\n        <Flex justifyContent=\"center\" mt={3} mb={4} alignItems=\"center\">\n          <label htmlFor=\"giftcard-numberOfGiftCards\">\n            <FormattedMessage id=\"giftCards.create.number\" defaultMessage=\"Number of gift cards\" />\n          </label>\n          <StyledInput\n            id=\"giftcard-numberOfGiftCards\"\n            name=\"giftcard-numberOfGiftCards\"\n            type=\"number\"\n            step=\"1\"\n            min=\"1\"\n            ml={3}\n            max={giftCardsMaxDailyCount}\n            maxWidth=\"6.5em\"\n            onChange={e => this.onChange('numberOfGiftCards', e.target.value)}\n            value={this.state.values.numberOfGiftCards}\n            disabled={this.state.submitting}\n            onWheel={e => {\n              // Prevent accidentally changing the number when scrolling\n              e.preventDefault();\n              e.target.blur();\n            }}\n          />\n        </Flex>\n      </Container>\n    );\n  }\n\n  optionsToIdsList(options) {\n    return options ? options.map(({ value }) => value.id) : [];\n  }\n\n  canLimitToFiscalHosts() {\n    const paymentMethod = this.state.values.paymentMethod || this.getDefaultPaymentMethod();\n    return !isPrepaid(paymentMethod); // Prepaid are already limited to specific fiscal hosts\n  }\n\n  /** Get batch options for select. First option is always \"No batch\" */\n  getBatchesOptions = memoizeOne((batches, intl) => {\n    const noBatchOption = { label: intl.formatMessage(messages.notBatched), value: null };\n    if (!batches) {\n      return [noBatchOption];\n    } else {\n      return [\n        noBatchOption,\n        ...batches.filter(b => b.name !== null).map(batch => ({ label: batch.name, value: batch.name })),\n      ];\n    }\n  });\n\n  render() {\n    const { data, intl, collectiveSlug, currency, collectiveSettings } = this.props;\n    const { submitting, values, createdGiftCards, serverError, deliverType } = this.state;\n    const loading = get(data, 'loading');\n    const error = get(data, 'error');\n    const paymentMethods = get(data, 'Collective.paymentMethods', []);\n    const batches = get(data, 'Collective.giftCardsBatches');\n    const hosts = get(data, 'allHosts.collectives', []);\n    const batchesOptions = this.getBatchesOptions(batches, intl);\n\n    if (loading) {\n      return <Loading />;\n    } else if (error) {\n      return (\n        <MessageBox type=\"error\" withIcon>\n          {error.message}\n        </MessageBox>\n      );\n    } else if (paymentMethods.length === 0) {\n      return this.renderNoPaymentMethodMessage();\n    } else if (createdGiftCards) {\n      return (\n        <CreateGiftCardsSuccess cards={createdGiftCards} deliverType={deliverType} collectiveSlug={collectiveSlug} />\n      );\n    }\n\n    return (\n      <form ref={this.form} onSubmit={this.onSubmit}>\n        <MessageBox type=\"info\" fontSize=\"13px\" withIcon mb={4}>\n          <FormattedMessage\n            id=\"GiftCard.Limitinfo\"\n            defaultMessage=\"Your account is currently limited to {limit} gift cards per day. If you want to increase that limit, please contact <SupportLink>support</SupportLink>.\"\n            values={{\n              SupportLink: I18nSupportLink,\n              limit: get(collectiveSettings, `giftCardsMaxDailyCount`) || 100,\n            }}\n          />\n        </MessageBox>\n        <Flex flexDirection=\"column\">\n          <InlineField name=\"amount\" label={<FormattedMessage id=\"Fields.amount\" defaultMessage=\"Amount\" />}>\n            <StyledInputAmount\n              id=\"giftcard-amount\"\n              currency={currency}\n              prepend={currency}\n              onChange={value => this.onChange('amount', value)}\n              error={this.getError('amount')}\n              value={values.amount}\n              min={MIN_AMOUNT}\n              max={MAX_AMOUNT}\n              disabled={submitting}\n              required\n            />\n          </InlineField>\n\n          <InlineField\n            name=\"paymentMethod\"\n            label={<FormattedMessage id=\"paymentmethod.label\" defaultMessage=\"Payment Method\" />}\n          >\n            <PaymentMethodSelect\n              inputId=\"gift-card-payment-method\"\n              disabled={submitting}\n              paymentMethods={paymentMethods}\n              defaultPaymentMethod={this.getDefaultPaymentMethod()}\n              onChange={pm => this.onChange('paymentMethod', pm)}\n            />\n          </InlineField>\n\n          <InlineField name=\"expiryDate\" isLabelClickable label={<FormattedMessage defaultMessage=\"Expiry date\" />}>\n            <StyledInput\n              id=\"giftcard-expiryDate\"\n              name=\"expiryDate\"\n              value={values.expiryDate}\n              onChange={e => this.onChange('expiryDate', e.target.value)}\n              type=\"date\"\n              required\n              min={dayjs().add(1, 'day').format('YYYY-MM-DD')}\n            />\n          </InlineField>\n\n          <InlineField\n            name=\"batch\"\n            label={\n              <Flex flexDirection=\"column\">\n                <FormattedMessage id=\"giftCards.batch\" defaultMessage=\"Batch name\" />\n                <FieldLabelDetails>\n                  <FormattedMessage id=\"forms.optional\" defaultMessage=\"Optional\" />\n                </FieldLabelDetails>\n              </Flex>\n            }\n          >\n            <StyledSelectCreatable\n              id=\"giftcard-batch\"\n              inputId=\"giftcard-batch\"\n              onChange={({ value }) => this.onChange('batch', truncate(value, { length: 200 }))}\n              minWidth={300}\n              disabled={submitting}\n              fontSize=\"14px\"\n              options={batchesOptions}\n              defaultValue={batchesOptions[0]}\n            />\n          </InlineField>\n\n          {this.canLimitToFiscalHosts() && (\n            <InlineField\n              name=\"limitToHosts\"\n              label={\n                <Flex flexDirection=\"column\">\n                  <FormattedMessage id=\"giftCards.create.limitToHosts\" defaultMessage=\"Limit to the following Hosts\" />\n                  <FieldLabelDetails>\n                    <FormattedMessage id=\"forms.optional\" defaultMessage=\"Optional\" />\n                  </FieldLabelDetails>\n                </Flex>\n              }\n            >\n              <CollectivePicker\n                inputId=\"create-gift-card-host-picker\"\n                placeholder={intl.formatMessage(messages.limitToHostsPlaceholder)}\n                disabled={hosts.length === 0}\n                minWidth={300}\n                maxWidth={600}\n                sortFunc={collectives => collectives} /** Sort is handled by the API */\n                groupByType={false}\n                collectives={hosts}\n                defaultValue={values.limitedToHosts}\n                onChange={options => this.onChange('limitedToHosts', options)}\n                isMulti\n                useCompactMode={values.limitedToHosts?.length >= 3}\n              />\n            </InlineField>\n          )}\n\n          <DeliverTypeRadioSelector className=\"deliver-type-selector\">\n            <RadioButtonWithLabel\n              name=\"email\"\n              checked={deliverType === 'email'}\n              onClick={() => this.changeDeliverType('email')}\n            >\n              <FormattedMessage id=\"giftCards.create.sendEmails\" defaultMessage=\"Send the cards by email\" />\n            </RadioButtonWithLabel>\n            <RadioButtonWithLabel\n              name=\"manual\"\n              checked={deliverType === 'manual'}\n              onClick={() => this.changeDeliverType('manual')}\n            >\n              <FormattedMessage id=\"giftCards.create.generateCodes\" defaultMessage=\"I'll send the codes myself\" />\n            </RadioButtonWithLabel>\n          </DeliverTypeRadioSelector>\n\n          {/* Show different fields based on deliver type */}\n          {deliverType === 'email' && this.renderEmailFields()}\n          {deliverType === 'manual' && this.renderManualFields()}\n\n          {serverError && (\n            <MessageBox type=\"error\" withIcon>\n              {serverError}\n            </MessageBox>\n          )}\n\n          {/** Show some warnings to encourage best practices */}\n          {this.shouldLimitToSpecificHosts() && (\n            <MessageBox type=\"warning\" fontSize=\"14px\" lineHeight=\"20px\" withIcon mb={4}>\n              <FormattedMessage\n                defaultMessage=\"We strongly recommend limiting your gift cards to specific fiscal hosts - otherwise, malicious users could create fake Collectives to withdraw the funds. Collectives under trusted fiscal hosts have all been vetted and confirmed as legitimate.\"\n                values={{ SupportLink: I18nSupportLink }}\n              />\n            </MessageBox>\n          )}\n          {this.isPaymentMethodDiscouraged() && (\n            <MessageBox type=\"warning\" fontSize=\"14px\" lineHeight=\"20px\" withIcon mb={4}>\n              <FormattedMessage\n                defaultMessage=\"Credit card payments incur processor fees, which can add up on large campaigns. Banks may also flag the numerous transactions as suspicious. We strongly recommend adding a prepaid budget via bank transfer instead. <SupportLink>Contact us</SupportLink> to learn more.\"\n                values={{ SupportLink: I18nSupportLink }}\n              />\n              <Box mt={2}>\n                <StyledCheckbox\n                  name=\"accept-payment-method-warning\"\n                  checked={this.state.hasAcceptedWarning}\n                  onChange={() => this.setState({ hasAcceptedWarning: !this.state.hasAcceptedWarning })}\n                  label={<FormattedMessage defaultMessage=\"I understand, let me continue\" />}\n                />\n              </Box>\n            </MessageBox>\n          )}\n\n          <Box mb=\"1em\" alignSelf=\"center\" mt={3}>\n            {this.renderSubmit()}\n          </Box>\n        </Flex>\n      </form>\n    );\n  }\n}\n\n/**\n * A query to get a collective source payment methods. This will not return\n * gift cards, as a gift card cannot be used as a source payment method\n * for another payment method.\n */\nexport const collectiveSourcePaymentMethodsQuery = gqlV1/* GraphQL */ `\n  query CollectiveSourcePaymentMethods($id: Int) {\n    Collective(id: $id) {\n      id\n      giftCardsBatches {\n        id\n        name\n        count\n      }\n      paymentMethods(type: [\"CREDITCARD\", \"PREPAID\"], hasBalanceAboveZero: true) {\n        id\n        uuid\n        name\n        data\n        monthlyLimitPerMember\n        service\n        type\n        balance\n        currency\n        expiryDate\n        batch\n      }\n    }\n    allHosts(limit: 100, onlyOpenHosts: false, minNbCollectivesHosted: 1) {\n      id\n      collectives {\n        id\n        type\n        name\n        slug\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst addCollectiveSourcePaymentMethodsQuery = graphql(collectiveSourcePaymentMethodsQuery, {\n  options: props => ({\n    variables: { id: props.collectiveId },\n    fetchPolicy: 'network-only',\n  }),\n});\n\nconst createGiftCardsMutation = gqlV1/* GraphQL */ `\n  mutation CreateGiftCards(\n    $CollectiveId: Int!\n    $numberOfGiftCards: Int\n    $emails: [String]\n    $PaymentMethodId: Int\n    $amount: Int\n    $monthlyLimitPerMember: Int\n    $description: String\n    $expiryDate: String\n    $currency: String\n    $limitedToTags: [String]\n    $limitedToHostCollectiveIds: [Int]\n    $customMessage: String\n    $batch: String\n  ) {\n    createGiftCards(\n      amount: $amount\n      monthlyLimitPerMember: $monthlyLimitPerMember\n      CollectiveId: $CollectiveId\n      PaymentMethodId: $PaymentMethodId\n      description: $description\n      expiryDate: $expiryDate\n      currency: $currency\n      limitedToTags: $limitedToTags\n      limitedToHostCollectiveIds: $limitedToHostCollectiveIds\n      numberOfGiftCards: $numberOfGiftCards\n      emails: $emails\n      customMessage: $customMessage\n      batch: $batch\n    ) {\n      id\n      name\n      uuid\n      batch\n      limitedToHostCollectiveIds\n      description\n      initialBalance\n      monthlyLimitPerMember\n      expiryDate\n      currency\n      data\n    }\n  }\n`;\n\nconst addCreateGiftCardsMutation = graphql(createGiftCardsMutation, {\n  name: 'createGiftCards',\n});\n\nconst addGraphql = compose(addCollectiveSourcePaymentMethodsQuery, addCreateGiftCardsMutation);\n\nexport default injectIntl(addGraphql(CreateGiftCardsForm));\n","import { gql } from '@apollo/client';\n\nimport { collectiveNavbarFieldsFragment } from '../collective-page/graphql/fragments';\n\nexport const adminPanelQuery = gql`\n  query AdminPanel($slug: String!) {\n    account(slug: $slug) {\n      id\n      legacyId\n      slug\n      name\n      isHost\n      type\n      settings\n      isArchived\n      isIncognito\n      imageUrl(height: 256)\n      features {\n        id\n        ...NavbarFields\n        VIRTUAL_CARDS\n        USE_PAYMENT_METHODS\n        EMIT_GIFT_CARDS\n      }\n      policies {\n        REQUIRE_2FA_FOR_ADMINS\n      }\n      ... on AccountWithParent {\n        parent {\n          id\n          slug\n          policies {\n            REQUIRE_2FA_FOR_ADMINS\n          }\n        }\n      }\n      ... on AccountWithHost {\n        hostFeePercent\n        host {\n          id\n          slug\n          name\n          settings\n          policies {\n            EXPENSE_AUTHOR_CANNOT_APPROVE {\n              enabled\n              amountInCents\n              appliesToHostedCollectives\n              appliesToSingleAdminCollectives\n            }\n            COLLECTIVE_MINIMUM_ADMINS {\n              numberOfAdmins\n              applies\n              freeze\n            }\n          }\n        }\n      }\n      ... on AccountWithHost {\n        isApproved\n      }\n    }\n  }\n  ${collectiveNavbarFieldsFragment}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Flex } from '../../Grid';\nimport StyledHr from '../../StyledHr';\nimport { H3 } from '../../Text';\n\nconst SettingsSectionTitle = ({ children, ...props }) => {\n  return (\n    <Flex alignItems=\"center\" mb={3} width=\"100%\" {...props}>\n      <H3 fontSize=\"18px\" lineHeight=\"26px\">\n        {children}\n      </H3>\n      <StyledHr ml={2} flex=\"1 1\" borderColor=\"black.400\" />\n    </Flex>\n  );\n};\n\nSettingsSectionTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default SettingsSectionTitle;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/client';\nimport { FormattedMessage } from 'react-intl';\n\nimport { CollectiveType } from '../../../lib/constants/collectives';\nimport { getErrorFromGraphqlException } from '../../../lib/errors';\nimport { API_V2_CONTEXT, gqlV1 } from '../../../lib/graphql/helpers';\n\nimport { adminPanelQuery } from '../../admin-panel/queries';\nimport Container from '../../Container';\nimport { getI18nLink } from '../../I18nFormatters';\nimport MessageBox from '../../MessageBox';\nimport StyledButton from '../../StyledButton';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../../StyledModal';\nimport { P } from '../../Text';\nimport SettingsSectionTitle from '../sections/SettingsSectionTitle';\n\nconst archiveCollectiveMutation = gqlV1/* GraphQL */ `\n  mutation ArchiveCollective($id: Int!) {\n    archiveCollective(id: $id) {\n      id\n      isArchived\n    }\n  }\n`;\n\nconst unarchiveCollectiveMutation = gqlV1/* GraphQL */ `\n  mutation UnarchiveCollective($id: Int!) {\n    unarchiveCollective(id: $id) {\n      id\n      isArchived\n    }\n  }\n`;\n\nconst ArchiveCollective = ({ collective }) => {\n  const [archiveStatus, setArchiveStatus] = useState({\n    processing: false,\n    isArchived: collective.isArchived,\n    error: null,\n    confirmationMsg: '',\n  });\n  const { processing, isArchived, error, confirmationMsg } = archiveStatus;\n  const defaultAction = isArchived ? 'Archive' : 'Unarchive';\n  const [modal, setModal] = useState({ type: defaultAction, show: false });\n\n  const adminPanelMutationParams = {\n    refetchQueries: [{ query: adminPanelQuery, variables: { slug: collective.slug }, context: API_V2_CONTEXT }],\n  };\n  const [archiveCollective] = useMutation(archiveCollectiveMutation, adminPanelMutationParams);\n  const [unarchiveCollective] = useMutation(unarchiveCollectiveMutation, adminPanelMutationParams);\n\n  const handleArchiveCollective = async ({ id }) => {\n    setModal({ type: 'Archive', show: false });\n    try {\n      setArchiveStatus({ ...archiveStatus, processing: true });\n      await archiveCollective({ variables: { id } });\n      setArchiveStatus({\n        ...archiveStatus,\n        processing: false,\n        isArchived: true,\n      });\n    } catch (err) {\n      const errorMsg = getErrorFromGraphqlException(err).message;\n      setArchiveStatus({ ...archiveStatus, processing: false, error: errorMsg });\n    }\n  };\n\n  const handleUnarchiveCollective = async ({ id }) => {\n    setModal({ type: 'Unarchive', show: false });\n    try {\n      setArchiveStatus({ ...archiveStatus, processing: true });\n      await unarchiveCollective({ variables: { id } });\n      setArchiveStatus({\n        ...archiveStatus,\n        processing: false,\n        isArchived: false,\n      });\n    } catch (err) {\n      const errorMsg = getErrorFromGraphqlException(err).message;\n      setArchiveStatus({ ...archiveStatus, processing: false, error: errorMsg });\n    }\n  };\n\n  const hasBalance = collective.stats.balance > 0 && (collective.type === 'COLLECTIVE' || collective.type === 'FUND');\n\n  const closeModal = () => setModal({ ...modal, show: false });\n\n  return (\n    <Container display=\"flex\" flexDirection=\"column\" width={1} alignItems=\"flex-start\" mb={50}>\n      <SettingsSectionTitle>\n        <FormattedMessage\n          id=\"collective.archive.title\"\n          defaultMessage={\n            'Archive {type, select, EVENT {this Event} PROJECT {this Project} FUND {this Fund} COLLECTIVE {this Collective} ORGANIZATION {this Organization} other {this account}}'\n          }\n          values={{ type: collective.type }}\n        />\n      </SettingsSectionTitle>\n      {!isArchived && (\n        <P mb={3} lineHeight=\"16px\" fontSize=\"14px\">\n          <FormattedMessage\n            id=\"collective.archive.description\"\n            defaultMessage={\n              'Archiving {type, select, EVENT {this Event} PROJECT {this Project} FUND {this Fund} COLLECTIVE {this Collective} ORGANIZATION {this Organization} other {this account}} means it will visually appear inactive and no new activity will be allowed.'\n            }\n            values={{ type: collective.type }}\n          />\n          &nbsp;\n          {collective.type === 'COLLECTIVE' && (\n            <FormattedMessage\n              id=\"collective.archive.subscriptions\"\n              defaultMessage={'Recurring financial contributions will be automatically canceled.'}\n            />\n          )}\n        </P>\n      )}\n      {error && (\n        <P my={3} color=\"#ff5252\">\n          {error}\n        </P>\n      )}\n      {!isArchived && (\n        <StyledButton\n          onClick={() => setModal({ type: 'Archive', show: true })}\n          loading={processing}\n          disabled={collective.isHost || hasBalance}\n          mb={2}\n        >\n          <FormattedMessage\n            id=\"collective.archive.title\"\n            defaultMessage={\n              'Archive {type, select, EVENT {this Event} PROJECT {this Project} FUND {this Fund} COLLECTIVE {this Collective} ORGANIZATION {this Organization} other {this account}}'\n            }\n            values={{ type: collective.type }}\n          />\n        </StyledButton>\n      )}\n      {!isArchived && hasBalance && (\n        <P color=\"rgb(224, 183, 0)\" my={1}>\n          <FormattedMessage\n            id=\"collective.archive.availableBalance\"\n            defaultMessage={\n              \"Only {type, select, EVENT {Events} PROJECT {Projects} FUND {Funds} COLLECTIVE {Collectives} other {Accounts}} with a balance of zero can be archived. To pay out the funds, submit an expense, donate to another Collective, or send the funds to your Fiscal Host using the 'empty balance' option.\"\n            }\n            values={{ type: collective.type }}\n          />\n        </P>\n      )}\n      {!isArchived && collective.isHost && (\n        <P color=\"rgb(224, 183, 0)\" my={1}>\n          {collective.type === CollectiveType.COLLECTIVE ? (\n            <FormattedMessage\n              id=\"collective.archive.selfHosted\"\n              defaultMessage={`To archive this Independent Collective, first go to your <SettingsLink>Fiscal Host settings</SettingsLink> and click 'Reset Fiscal Host'.`}\n              values={{ SettingsLink: getI18nLink({ href: `/${collective.host?.slug}/admin/host` }) }}\n            />\n          ) : (\n            <FormattedMessage\n              id=\"collective.archive.isHost\"\n              defaultMessage={\n                \"You can't archive {type, select, ORGANIZATION {your Organization} other {your account}} while being a Host. Please deactivate as Host first (in your Fiscal Hosting settings).\"\n              }\n              values={{ type: collective.type }}\n            />\n          )}\n        </P>\n      )}\n      {isArchived && confirmationMsg && (\n        <MessageBox withIcon type=\"info\" mb={4}>\n          {confirmationMsg}\n        </MessageBox>\n      )}\n\n      {isArchived && (\n        <StyledButton onClick={() => setModal({ type: 'Unarchive', show: true })} loading={processing}>\n          <FormattedMessage\n            id=\"collective.unarchive.button\"\n            defaultMessage={\n              'Unarchive {type, select, EVENT {this Event} PROJECT {this Project} FUND {this Fund} COLLECTIVE {this Collective} ORGANIZATION {this Organization} other {this account}}'\n            }\n            values={{ type: collective.type }}\n          />\n        </StyledButton>\n      )}\n\n      {modal.show && (\n        <StyledModal width=\"570px\" onClose={closeModal}>\n          <ModalHeader onClose={closeModal}>\n            {modal.type === 'Unarchive' ? (\n              <FormattedMessage\n                id=\"unarchive.modal.header\"\n                defaultMessage=\"Unarchive {name}\"\n                values={{ name: collective.name }}\n              />\n            ) : (\n              <FormattedMessage\n                id=\"archive.modal.header\"\n                defaultMessage=\"Archive {name}\"\n                values={{ name: collective.name }}\n              />\n            )}\n          </ModalHeader>\n          <ModalBody>\n            <P>\n              {modal.type !== 'Unarchive' && (\n                <React.Fragment>\n                  <FormattedMessage\n                    id=\"archive.account.confirmation\"\n                    defaultMessage={\n                      'Are you sure you want to archive {type, select, EVENT {this Event} PROJECT {this Project} FUND {this Fund} COLLECTIVE {this Collective} ORGANIZATION {this Organization} other {this account}}?'\n                    }\n                    values={{ type: collective.type }}\n                  />\n                  <MessageBox fontSize={13} type=\"warning\" withIcon mt={3} mb={3}>\n                    <FormattedMessage defaultMessage=\"Note that archiving will cancel all active recurring contributions.\" />\n                  </MessageBox>\n                </React.Fragment>\n              )}\n              {modal.type === 'Unarchive' && (\n                <FormattedMessage\n                  id=\"unarchive.account.confirmation\"\n                  defaultMessage={\n                    'Are you sure you want to unarchive {type, select, EVENT {this Event} PROJECT {this Project} FUND {this Fund} COLLECTIVE {this Collective} ORGANIZATION {this Organization} other {this account}}?'\n                  }\n                  values={{ type: collective.type }}\n                />\n              )}\n            </P>\n          </ModalBody>\n          <ModalFooter>\n            <Container display=\"flex\" justifyContent=\"flex-end\">\n              <StyledButton mx={20} onClick={() => setModal({ ...modal, show: false })}>\n                <FormattedMessage id=\"actions.cancel\" defaultMessage={'Cancel'} />\n              </StyledButton>\n              <StyledButton\n                buttonStyle=\"primary\"\n                data-cy=\"action\"\n                onClick={() => {\n                  if (modal.type === 'Unarchive') {\n                    handleUnarchiveCollective({ id: collective.id });\n                  } else {\n                    handleArchiveCollective({ id: collective.id });\n                  }\n                }}\n              >\n                {modal.type === 'Unarchive' ? (\n                  <FormattedMessage id=\"collective.unarchive.confirm.btn\" defaultMessage={'Unarchive'} />\n                ) : (\n                  <FormattedMessage id=\"collective.archive.confirm.btn\" defaultMessage={'Archive'} />\n                )}\n              </StyledButton>\n            </Container>\n          </ModalFooter>\n        </StyledModal>\n      )}\n    </Container>\n  );\n};\n\nArchiveCollective.propTypes = {\n  collective: PropTypes.object.isRequired,\n  archiveCollective: PropTypes.func,\n  unarchiveCollective: PropTypes.func,\n};\n\nexport default ArchiveCollective;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/client';\nimport { withRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport { CollectiveType } from '../../../lib/constants/collectives';\nimport { getErrorFromGraphqlException } from '../../../lib/errors';\nimport { gqlV1 } from '../../../lib/graphql/helpers';\n\nimport Container from '../../Container';\nimport { getI18nLink } from '../../I18nFormatters';\nimport StyledButton from '../../StyledButton';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../../StyledModal';\nimport { P } from '../../Text';\nimport { withUser } from '../../UserProvider';\nimport SettingsSectionTitle from '../sections/SettingsSectionTitle';\n\nconst deleteCollectiveMutation = gqlV1/* GraphQL */ `\n  mutation DeleteCollective($id: Int!) {\n    deleteCollective(id: $id) {\n      id\n    }\n  }\n`;\n\nconst deleteUserCollectiveMutation = gqlV1/* GraphQL */ `\n  mutation DeleteUserCollective($id: Int!) {\n    deleteUserCollective(id: $id) {\n      id\n    }\n  }\n`;\n\nconst DeleteCollective = ({ collective, ...props }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [deleteStatus, setDeleteStatus] = useState({ deleting: false, error: null });\n  const [deleteCollective] = useMutation(deleteCollectiveMutation);\n  const [deleteUserCollective] = useMutation(deleteUserCollectiveMutation);\n  const isSelfHosted = collective.host?.id === collective.id;\n\n  const handleDelete = async () => {\n    try {\n      setDeleteStatus({ ...deleteStatus, deleting: true });\n      if (collective.type === 'USER') {\n        await deleteUserCollective({ variables: { id: collective.id } });\n      } else {\n        await deleteCollective({ variables: { id: collective.id } });\n        await props.refetchLoggedInUser();\n      }\n      await props.router.push(`/deleteCollective/confirmed?type=${collective.type}`);\n    } catch (err) {\n      const errorMsg = getErrorFromGraphqlException(err).message;\n      setDeleteStatus({ deleting: false, error: errorMsg });\n    }\n  };\n\n  const { deleting, error } = deleteStatus;\n\n  const closeModal = () => setShowModal(false);\n\n  return (\n    <Container display=\"flex\" flexDirection=\"column\" width={1} alignItems=\"flex-start\" mb={50}>\n      <SettingsSectionTitle>\n        <FormattedMessage\n          id=\"collective.delete.title\"\n          defaultMessage={\n            'Delete {type, select, EVENT {this Event} PROJECT {this Project} FUND {this Fund} COLLECTIVE {this Collective} ORGANIZATION {this Organization} other {this account}}'\n          }\n          values={{ type: collective.type }}\n        />\n      </SettingsSectionTitle>\n      <P mb={3}>\n        <FormattedMessage\n          id=\"collective.delete.description\"\n          defaultMessage={\n            '{type, select, EVENT {This Event} PROJECT {This Project} FUND {This Fund} COLLECTIVE {This Collective} ORGANIZATION {This Organization} other {This account}} will be deleted, along with all related data.'\n          }\n          values={{ type: collective.type }}\n        />\n      </P>\n      {error && (\n        <P my={3} color=\"#ff5252\">\n          {error}\n        </P>\n      )}\n      <StyledButton\n        onClick={() => setShowModal(true)}\n        loading={deleting}\n        disabled={collective.isHost || !collective.isDeletable}\n        mb={2}\n      >\n        <FormattedMessage\n          id=\"collective.delete.title\"\n          defaultMessage={\n            'Delete {type, select, EVENT {this Event} PROJECT {this Project} FUND {this Fund} COLLECTIVE {this Collective} ORGANIZATION {this Organization} other {this account}}'\n          }\n          values={{ type: collective.type }}\n        />\n      </StyledButton>\n      {collective.isHost && (\n        <P color=\"rgb(224, 183, 0)\" my={1}>\n          {isSelfHosted ? (\n            <FormattedMessage\n              id=\"collective.delete.selfHost\"\n              defaultMessage={`To delete this Independent Collective, first go to your <SettingsLink>Fiscal Host settings</SettingsLink> and click 'Reset Fiscal Host'.`}\n              values={{ SettingsLink: getI18nLink({ href: `/${collective.host?.slug}/admin/host` }) }}\n            />\n          ) : (\n            <FormattedMessage\n              id=\"collective.delete.isHost\"\n              defaultMessage={\n                \"You can't delete {type, select, ORGANIZATION {your Organization} other {your account}} while being a Host. Please deactivate as Host first (in your Fiscal Hosting settings).\"\n              }\n              values={{ type: collective.type }}\n            />\n          )}{' '}\n        </P>\n      )}\n      {!collective.isDeletable &&\n        collective.type !== CollectiveType.EVENT &&\n        collective.type !== CollectiveType.PROJECT && (\n          <P color=\"rgb(224, 183, 0)\" my={1}>\n            <FormattedMessage\n              id=\"collective.delete.isNotDeletable-message\"\n              defaultMessage={\n                '{type, select, EVENT {Events} PROJECT {Projects} FUND {Funds} COLLECTIVE {Collectives} ORGANIZATION {Organizations} other {Accounts}} with transactions, orders, events or paid expenses cannot be deleted. Please archive it instead.'\n              }\n              values={{ type: collective.type }}\n            />{' '}\n          </P>\n        )}\n      {!collective.isDeletable &&\n        (collective.type === CollectiveType.EVENT || collective.type === CollectiveType.PROJECT) && (\n          <P color=\"rgb(224, 183, 0)\" my={1}>\n            <FormattedMessage\n              id=\"collective.event.delete.isNotDeletable-message\"\n              defaultMessage={\n                '{type, select, EVENT {Events} PROJECT {Projects} other {Accounts}} with transactions, orders or paid expenses cannot be deleted. Please archive it instead.'\n              }\n              values={{ type: collective.type }}\n            />\n          </P>\n        )}\n      {showModal && (\n        <StyledModal width=\"570px\" onClose={closeModal}>\n          <ModalHeader onClose={closeModal}>\n            <FormattedMessage\n              id=\"collective.delete.modal.header\"\n              defaultMessage={'Delete {name}'}\n              values={{ name: collective.name }}\n            />\n          </ModalHeader>\n          <ModalBody>\n            <P>\n              <FormattedMessage\n                id=\"collective.delete.modal.body\"\n                defaultMessage={\n                  'Are you sure you want to delete {type, select, EVENT {this Event} PROJECT {this Project} FUND {this Fund} COLLECTIVE {this Collective} ORGANIZATION {this Organization} other {this account}}?'\n                }\n                values={{ type: collective.type }}\n              />\n            </P>\n          </ModalBody>\n          <ModalFooter>\n            <Container display=\"flex\" justifyContent=\"flex-end\">\n              <StyledButton mx={20} onClick={() => setShowModal(false)}>\n                <FormattedMessage id=\"actions.cancel\" defaultMessage={'Cancel'} />\n              </StyledButton>\n              <StyledButton\n                buttonStyle=\"primary\"\n                data-cy=\"delete\"\n                onClick={() => {\n                  setShowModal(false);\n                  handleDelete();\n                }}\n              >\n                <FormattedMessage id=\"actions.delete\" defaultMessage=\"Delete\" />\n              </StyledButton>\n            </Container>\n          </ModalFooter>\n        </StyledModal>\n      )}\n    </Container>\n  );\n};\n\nDeleteCollective.propTypes = {\n  collective: PropTypes.object.isRequired,\n  refetchLoggedInUser: PropTypes.func,\n  router: PropTypes.object,\n};\n\nexport default withUser(withRouter(DeleteCollective));\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { formatCurrency } from '../../lib/currency-utils';\n\nimport Container from '../Container';\nimport SendMoneyToCollectiveBtn from '../SendMoneyToCollectiveBtn';\nimport StyledButton from '../StyledButton';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport { P } from '../Text';\n\nconst SendFundsToCollectiveSection = ({ collective, toCollective, LoggedInUser }) => {\n  const { locale } = useIntl();\n  const [modal, setModal] = useState({ type: 'Transfer', show: false, isApproved: false });\n\n  const confirmTransfer = () => {\n    setModal({ ...modal, show: true, isApproved: false });\n  };\n\n  const closeModal = () => setModal({ ...modal, show: false, isApproved: false });\n\n  return (\n    <Fragment>\n      {collective.stats.balance > 0 && (\n        <SendMoneyToCollectiveBtn\n          fromCollective={collective}\n          toCollective={toCollective}\n          LoggedInUser={LoggedInUser}\n          amount={collective.stats.balance}\n          currency={collective.currency}\n          confirmTransfer={confirmTransfer}\n          isTransferApproved={modal.isApproved}\n        />\n      )}\n      {collective.stats.balance === 0 && (\n        <StyledButton disabled={true}>\n          <FormattedMessage\n            id=\"SendMoneyToCollective.btn\"\n            defaultMessage=\"Send {amount} to {collective}\"\n            values={{\n              amount: formatCurrency(0, collective.currency, { locale }),\n              collective: toCollective.name,\n            }}\n          />\n        </StyledButton>\n      )}\n      {modal.show && (\n        <StyledModal width=\"570px\" onClose={closeModal}>\n          <ModalHeader onClose={closeModal}>\n            <FormattedMessage\n              id=\"collective.emptyBalance.header\"\n              values={{ action: modal.type }}\n              defaultMessage={'{action} Balance'}\n            />\n          </ModalHeader>\n          <ModalBody>\n            <P>\n              <FormattedMessage\n                id=\"collective.emptyBalance.body\"\n                values={{ collective: toCollective.name, action: modal.type.toLowerCase() }}\n                defaultMessage={'Are you sure you want to {action} to {collective}?'}\n              />\n            </P>\n          </ModalBody>\n          <ModalFooter>\n            <Container display=\"flex\" justifyContent=\"flex-end\">\n              <StyledButton mx={20} onClick={() => setModal({ ...modal, show: false, isApproved: false })}>\n                <FormattedMessage id=\"actions.cancel\" defaultMessage={'Cancel'} />\n              </StyledButton>\n              <StyledButton\n                buttonStyle=\"primary\"\n                data-cy=\"action\"\n                onClick={() => setModal({ ...modal, show: false, isApproved: true })}\n              >\n                <FormattedMessage id=\"confirm\" defaultMessage={'Confirm'} />\n              </StyledButton>\n            </Container>\n          </ModalFooter>\n        </StyledModal>\n      )}\n    </Fragment>\n  );\n};\n\nSendFundsToCollectiveSection.propTypes = {\n  collective: PropTypes.object.isRequired,\n  toCollective: PropTypes.object.isRequired,\n  LoggedInUser: PropTypes.object.isRequired,\n};\n\nexport default SendFundsToCollectiveSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { CollectiveType } from '../../../lib/constants/collectives';\n\nimport Container from '../../Container';\nimport { P } from '../../Text';\nimport SettingsSectionTitle from '../sections/SettingsSectionTitle';\nimport SendFundsToCollectiveSection from '../SendFundsToCollectiveSection';\n\nconst EmptyBalance = ({ collective, LoggedInUser }) => {\n  if (!collective.host || collective.host.id === collective.id) {\n    return null;\n  }\n\n  return (\n    <Container display=\"flex\" flexDirection=\"column\" width={1} alignItems=\"flex-start\" mb={50}>\n      <SettingsSectionTitle>\n        <FormattedMessage\n          id=\"collective.balance.title\"\n          defaultMessage={\n            'Empty {type, select, EVENT {Event} PROJECT {Project} FUND {Fund} COLLECTIVE {Collective} other {account}} balance'\n          }\n          values={{ type: collective.type }}\n        />\n      </SettingsSectionTitle>\n      <P mb={2} lineHeight=\"16px\" fontSize=\"14px\">\n        <FormattedMessage\n          id=\"collective.balance.description\"\n          defaultMessage={\n            'Transfer remaining balance to {type, select, PROJECT {the Collective} EVENT {the Collective} other {the Fiscal Host}}. {type, select, EVENT {Event} PROJECT {Project} FUND {Fund} COLLECTIVE {Collective} other {account}} balance must be zero to archive {type, select, EVENT {the Event} PROJECT {the Project} other {or change Hosts}}. {type, select, EVENT {} PROJECT {} other {Alternatively, you can submit an expense or donate to another Collective to zero the balance.}}'\n          }\n          values={{ type: collective.type }}\n        />\n      </P>\n      {[CollectiveType.FUND, CollectiveType.COLLECTIVE].includes(collective.type) &&\n        !collective.host.hostCollective && (\n          <P color=\"rgb(224, 183, 0)\" my={2}>\n            <FormattedMessage\n              id=\"collective.balance.notAvailable\"\n              defaultMessage={\n                \"The Host doesn't support this feature. Submit an expense, donate to another Collective, or contact support if you're blocked.\"\n              }\n            />\n          </P>\n        )}\n      {[CollectiveType.FUND, CollectiveType.COLLECTIVE].includes(collective.type) && collective.host.hostCollective && (\n        <SendFundsToCollectiveSection\n          LoggedInUser={LoggedInUser}\n          collective={collective}\n          toCollective={collective.host.hostCollective}\n        />\n      )}\n      {[CollectiveType.PROJECT, CollectiveType.EVENT].includes(collective.type) && collective.parentCollective && (\n        <SendFundsToCollectiveSection\n          LoggedInUser={LoggedInUser}\n          collective={collective}\n          toCollective={collective.parentCollective}\n        />\n      )}\n    </Container>\n  );\n};\n\nEmptyBalance.propTypes = {\n  collective: PropTypes.object.isRequired,\n  LoggedInUser: PropTypes.object.isRequired,\n};\n\nexport default EmptyBalance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { P } from '../Text';\n\nconst SettingsSubtitle = ({ children }) => {\n  return (\n    <P fontSize=\"14px\" lineHeight=\"21px\" color=\"black.700\" mt={2}>\n      {children}\n    </P>\n  );\n};\n\nSettingsSubtitle.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default SettingsSubtitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { get, sortBy, startCase } from 'lodash';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport { v4 as uuid } from 'uuid';\n\nimport { gqlV1 } from '../../../lib/graphql/helpers';\n\nimport Container from '../../Container';\nimport GoalsCover from '../../GoalsCover';\nimport { Box, Flex } from '../../Grid';\nimport Link from '../../Link';\nimport MessageBox from '../../MessageBox';\nimport StyledButton from '../../StyledButton';\nimport StyledCheckbox from '../../StyledCheckbox';\nimport StyledInput from '../../StyledInput';\nimport StyledInputField from '../../StyledInputField';\nimport StyledInputGroup from '../../StyledInputGroup';\nimport StyledSelect from '../../StyledSelect';\nimport StyledTextarea from '../../StyledTextarea';\nimport SettingsSubtitle from '../SettingsSubtitle';\n\nconst BORDER = '1px solid #efefef';\nconst getInterpolationOption = value => ({ label: startCase(value), value });\nconst INTERPOLATION_OPTIONS = ['auto', 'logarithm', 'linear'].map(getInterpolationOption);\nclass CollectiveGoals extends React.Component {\n  static propTypes = {\n    collective: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      slug: PropTypes.string.isRequired,\n      settings: PropTypes.object,\n    }).isRequired,\n    currency: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n    editCollectiveSettings: PropTypes.func.isRequired,\n    title: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    const { intl, collective } = props;\n\n    this.state = {\n      collectivePage: get(collective.settings, 'collectivePage', {}),\n      isTouched: false,\n      error: null,\n      submitting: false,\n      submitted: false,\n      goalsInterpolation: get(collective.settings, 'goalsInterpolation', 'auto'),\n      goals: sortBy(get(collective.settings, 'goals', []), 'amount').map(goal => ({\n        ...goal,\n        key: goal.key || uuid(),\n      })),\n    };\n    this.defaultType = 'yearlyBudget';\n    this.messages = defineMessages({\n      add: { id: 'goal.add', defaultMessage: 'Add goal' },\n      remove: { id: 'Remove', defaultMessage: 'Remove' },\n      type: { id: 'goal.type.label', defaultMessage: 'Type' },\n      balance: { id: 'goal.balance.label', defaultMessage: 'Balance' },\n      monthlyBudget: { id: 'MonthlyBudget', defaultMessage: 'Monthly budget' },\n      yearlyBudget: { id: 'YearlyBudget', defaultMessage: 'Yearly budget' },\n      title: { id: 'goal.title.label', defaultMessage: 'Title' },\n      description: { id: 'Fields.description', defaultMessage: 'Description' },\n      amount: { id: 'Fields.amount', defaultMessage: 'Amount' },\n      showToggle: { id: 'goal.show', defaultMessage: 'Show goals on my Profile page' },\n    });\n\n    const getOptions = arr => {\n      return arr.map(key => {\n        return { value: key, label: intl.formatMessage(this.messages[key]) };\n      });\n    };\n\n    this.fields = [\n      {\n        name: 'title',\n        label: intl.formatMessage(this.messages.title),\n        placeholder: 'Please add a title to your new goal',\n        maxLength: 64,\n      },\n      {\n        name: 'type',\n        type: 'select',\n        options: getOptions(['balance', 'monthlyBudget', 'yearlyBudget']),\n        label: intl.formatMessage(this.messages.type),\n      },\n      {\n        name: 'amount',\n        pre: props.currency,\n        type: 'currency',\n        label: intl.formatMessage(this.messages.amount),\n        placeholder: '0.00',\n      },\n      {\n        name: 'description',\n        type: 'textarea',\n        label: intl.formatMessage(this.messages.description),\n        placeholder: 'Tell your community about your goal.',\n      },\n    ];\n  }\n\n  editGoal = (index, fieldName, value) => {\n    if (value === 'onetime') {\n      value = null;\n    }\n\n    this.setState(state => {\n      const goal = state.goals[index];\n      const updatedGoal = { ...goal, type: goal.type || this.defaultType, [fieldName]: value };\n      const updatedGoals = [...state.goals];\n      updatedGoals[index] = updatedGoal;\n      return { isTouched: true, goals: updatedGoals };\n    });\n  };\n\n  toggleGoalsOnCollectivePage = ({ checked }) => {\n    this.setState(state => ({\n      isTouched: true,\n      collectivePage: { ...state.collectivePage, showGoals: checked },\n    }));\n  };\n\n  addGoal = () => {\n    const newGoal = { type: this.defaultType, key: uuid() };\n    this.setState(state => ({ isTouched: true, goals: [...state.goals, newGoal] }));\n  };\n\n  removeGoal = index => {\n    this.setState(state => {\n      if (index < 0 || index > state.goals.length) {\n        return null;\n      } else {\n        const updatedGoals = [...state.goals];\n        updatedGoals.splice(index, 1);\n        return { isTouched: true, goals: updatedGoals };\n      }\n    });\n  };\n\n  handleSubmit = async () => {\n    try {\n      this.setState({ isSubmitting: true });\n      await this.props.editCollectiveSettings({\n        variables: {\n          id: this.props.collective.id,\n          settings: {\n            ...this.props.collective.settings,\n            goals: this.state.goals,\n            goalsInterpolation: this.state.goalsInterpolation,\n            collectivePage: this.state.collectivePage,\n          },\n        },\n      });\n      this.setState({ isSubmitting: false, isTouched: false, submitted: true });\n      setTimeout(() => this.setState({ submitted: false }), 2000);\n    } catch (e) {\n      this.setState({ isSubmitting: false, error: e.toString() });\n    }\n  };\n\n  renderGoal = (goal, index) => {\n    const { intl } = this.props;\n\n    const defaultValues = {\n      ...goal,\n      type: goal.type || this.defaultType,\n    };\n\n    return (\n      <Container mt={4} pb={4} borderBottom={BORDER} key={`goal-${index}-${goal.key}`}>\n        <form>\n          <Box mb={4}>\n            <StyledInputField name={this.fields[0].name} label={this.fields[0].label}>\n              <StyledInput\n                width=\"100%\"\n                type=\"text\"\n                placeholder={this.fields[0].placeholder}\n                onChange={event => this.editGoal(index, this.fields[0].name, event.target.value)}\n                value={defaultValues[this.fields[0].name] || ''}\n              />\n            </StyledInputField>\n          </Box>\n          <Box mb={4}>\n            <StyledInputField name={this.fields[1].name} label={this.fields[1].label}>\n              <StyledSelect\n                inputId={`collective-goals-${this.fields[1].name}`}\n                options={this.fields[1].options}\n                onChange={obj => this.editGoal(index, this.fields[1].name, obj.value)}\n                isSearchable={false}\n                defaultValue={\n                  goal.type && {\n                    value: goal.type,\n                    label: intl.formatMessage(this.messages[goal.type]),\n                  }\n                }\n              />\n            </StyledInputField>\n          </Box>\n          <Box mb={4}>\n            <StyledInputField name={this.fields[2].name} label={this.fields[2].label}>\n              <StyledInputGroup\n                prepend={this.fields[2].pre}\n                type={this.fields[2].type}\n                placeholder={this.fields[2].placeholder}\n                onChange={event => this.editGoal(index, this.fields[2].name, event.target.value * 100)}\n                value={defaultValues[this.fields[2].name] / 100 || ''}\n              />\n            </StyledInputField>\n          </Box>\n          <Box mb={4}>\n            <StyledInputField name={this.fields[3].name} label={this.fields[3].label}>\n              <StyledTextarea\n                placeholder={this.fields[3].placeholder}\n                onChange={event => this.editGoal(index, this.fields[3].name, event.target.value)}\n                value={defaultValues[this.fields[3].name] || ''}\n                width=\"100%\"\n              />\n            </StyledInputField>\n          </Box>\n        </form>\n        <Container className=\"goalActions\" textAlign=\"right\">\n          <StyledButton isBorderless={true} buttonStyle=\"dangerSecondary\" onClick={() => this.removeGoal(index)}>\n            {intl.formatMessage(this.messages.remove)}\n          </StyledButton>\n        </Container>\n      </Container>\n    );\n  };\n\n  render() {\n    const { intl, collective } = this.props;\n    const { goals, goalsInterpolation, collectivePage, isSubmitting, submitted, isTouched, error } = this.state;\n\n    return (\n      <Container>\n        <Container borderBottom={BORDER} mb={4} pb={4}>\n          <SettingsSubtitle>\n            <FormattedMessage\n              id=\"EditGoals.Instructions\"\n              defaultMessage=\"You can define custom goals to motivate contributors and track your progress. Goals appear in automated email notifications to your contributors. You can also choose to display them on your Collective by ticking the box below.\"\n            />\n          </SettingsSubtitle>\n          <Container mt={4}>\n            <StyledCheckbox\n              name=\"show-on-collective-page\"\n              label={intl.formatMessage(this.messages.showToggle)}\n              onChange={this.toggleGoalsOnCollectivePage}\n              defaultChecked={Boolean(collectivePage.showGoals)}\n            />\n          </Container>\n        </Container>\n        <Box mb={3}>\n          <StyledSelect\n            options={INTERPOLATION_OPTIONS}\n            onChange={({ value }) => this.setState({ goalsInterpolation: value, isTouched: true })}\n            value={getInterpolationOption(goalsInterpolation)}\n            isSearchable={false}\n          />\n        </Box>\n        <Container textAlign=\"left\">\n          <Container background=\"rgb(245, 247, 250)\" pt={5} pb={40} px={3}>\n            <GoalsCover collective={{ ...collective, settings: { goals } }} interpolation={goalsInterpolation} />\n          </Container>\n          <Container borderTop={BORDER}>{goals.map(this.renderGoal)}</Container>\n        </Container>\n        <Container textAlign=\"center\" py={4} mb={4} borderBottom={BORDER}>\n          <StyledButton width=\"100%\" color=\"#297EFF\" borderColor=\"#297EFF\" onClick={() => this.addGoal()}>\n            {intl.formatMessage(this.messages.add)} +\n          </StyledButton>\n        </Container>\n        {error && (\n          <MessageBox type=\"error\" withIcon my={3}>\n            {error}\n          </MessageBox>\n        )}\n        <Flex justifyContent=\"center\" flexWrap=\"wrap\" mt={5}>\n          <Link href={`/${collective.slug}`}>\n            <StyledButton mx={2} minWidth={200}>\n              <FormattedMessage id=\"ViewCollectivePage\" defaultMessage=\"View Profile page\" />\n            </StyledButton>\n          </Link>\n          <StyledButton\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            loading={isSubmitting}\n            disabled={submitted || !isTouched}\n            mx={2}\n            minWidth={200}\n          >\n            {submitted ? (\n              <FormattedMessage id=\"saved\" defaultMessage=\"Saved\" />\n            ) : (\n              <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n            )}\n          </StyledButton>\n        </Flex>\n      </Container>\n    );\n  }\n}\n\nconst editCollectiveSettingsMutation = gqlV1/* GraphQL */ `\n  mutation EditCollectiveSettings($id: Int!, $settings: JSON) {\n    editCollective(collective: { id: $id, settings: $settings }) {\n      id\n      settings\n    }\n  }\n`;\n\nconst addEditCollectiveSettingsMutation = graphql(editCollectiveSettingsMutation, {\n  name: 'editCollectiveSettings',\n});\n\nexport default injectIntl(addEditCollectiveSettingsMutation(CollectiveGoals));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { useFormik } from 'formik';\nimport { trim } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { editCollectivePageQuery } from '../../lib/graphql/queries';\n\nimport { getI18nLink, I18nSignInLink } from '../I18nFormatters';\nimport StyledButton from '../StyledButton';\nimport StyledInput from '../StyledInput';\nimport StyledInputField from '../StyledInputField';\nimport { P } from '../Text';\n\nconst createConnectedAccountMutation = gql`\n  mutation createConnectedAccount($connectedAccount: ConnectedAccountCreateInput!, $account: AccountReferenceInput!) {\n    createConnectedAccount(connectedAccount: $connectedAccount, account: $account) {\n      id\n      settings\n      service\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\nconst EditPayPalAccount = props => {\n  const isReceiving = props.variation === 'RECEIVING';\n  const mutationOptions = {\n    context: API_V2_CONTEXT,\n    refetchQueries: [{ query: editCollectivePageQuery, variables: { slug: props.collective.slug } }],\n    awaitRefetchQueries: true,\n  };\n  const [connectedAccount, setConnectedAccount] = React.useState(props.connectedAccount);\n  const [createConnectedAccount, { loading: isCreating, error: createError }] = useMutation(\n    createConnectedAccountMutation,\n    mutationOptions,\n  );\n  const formik = useFormik({\n    initialValues: {\n      token: '',\n      clientId: '',\n    },\n    async onSubmit(values) {\n      const {\n        data: { createConnectedAccount: createdAccount },\n      } = await createConnectedAccount({\n        variables: {\n          connectedAccount: {\n            token: trim(values.token),\n            clientId: trim(values.clientId),\n            service: 'paypal',\n          },\n          account: { slug: props.collective.slug },\n        },\n      });\n      setConnectedAccount(createdAccount);\n    },\n    validate(values) {\n      const errors = {};\n      if (!values.token) {\n        errors.token = 'Required';\n      }\n      if (!values.clientId) {\n        errors.clientId = 'Required';\n      }\n      return errors;\n    },\n  });\n\n  if (!connectedAccount) {\n    return (\n      <form onSubmit={formik.handleSubmit}>\n        <P fontSize=\"12px\" color=\"black.700\" fontWeight=\"normal\" mb={3}>\n          {isReceiving ? null : (\n            <FormattedMessage\n              id=\"collective.create.connectedAccounts.paypal.description\"\n              defaultMessage=\"Connect a PayPal account to pay expenses with one click. (<a>Instructions</a>).\"\n              values={{\n                a: getI18nLink({\n                  href: 'https://docs.opencollective.com/help/fiscal-hosts/payouts/payouts-with-paypal',\n                  openInNewTab: true,\n                }),\n              }}\n            />\n          )}\n        </P>\n        <StyledInputField\n          name=\"clientId\"\n          label=\"Client ID\"\n          error={(formik.touched.clientId && formik.errors.clientId) || createError?.message}\n          disabled={isCreating}\n        >\n          {inputProps => (\n            <StyledInput\n              type=\"text\"\n              {...inputProps}\n              onChange={formik.handleChange}\n              value={formik.values.clientId}\n              autoComplete=\"off\"\n            />\n          )}\n        </StyledInputField>\n        <StyledInputField\n          mt={2}\n          name=\"token\"\n          label=\"Secret\"\n          error={(formik.touched.token && formik.errors.token) || createError?.message}\n          disabled={isCreating}\n        >\n          {inputProps => (\n            <StyledInput\n              type=\"text\"\n              {...inputProps}\n              onChange={formik.handleChange}\n              value={formik.values.token}\n              autoComplete=\"off\"\n            />\n          )}\n        </StyledInputField>\n\n        <StyledButton type=\"submit\" mt={2} minWidth={150} loading={isCreating}>\n          <FormattedMessage defaultMessage=\"Connect {service}\" values={{ service: 'PayPal' }} />\n        </StyledButton>\n      </form>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <P>\n          <FormattedMessage\n            id=\"collective.connectedAccounts.paypal.connected\"\n            defaultMessage=\"PayPal connected on {updatedAt, date, short}\"\n            values={{\n              updatedAt: new Date(connectedAccount.updatedAt || connectedAccount.createdAt),\n            }}\n          />\n        </P>\n        <P mt={3} fontStyle=\"italic\">\n          <FormattedMessage\n            defaultMessage=\"Please contact <SupportLink>support</SupportLink> to disconnect PayPal.\"\n            values={{ SupportLink: I18nSignInLink }}\n          />\n        </P>\n      </React.Fragment>\n    );\n  }\n};\n\nEditPayPalAccount.propTypes = {\n  connectedAccount: PropTypes.object,\n  collective: PropTypes.object,\n  intl: PropTypes.object.isRequired,\n  variation: PropTypes.string,\n};\n\nexport default EditPayPalAccount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { useFormik } from 'formik';\nimport { trim } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { editCollectivePageQuery } from '../../lib/graphql/queries';\n\nimport StyledButton from '../StyledButton';\nimport StyledInput from '../StyledInput';\nimport StyledInputField from '../StyledInputField';\nimport { P } from '../Text';\n\nconst createConnectedAccountMutation = gql`\n  mutation createConnectedAccount($connectedAccount: ConnectedAccountCreateInput!, $account: AccountReferenceInput!) {\n    createConnectedAccount(connectedAccount: $connectedAccount, account: $account) {\n      id\n      settings\n      service\n      createdAt\n      updatedAt\n    }\n  }\n`;\n\nconst deleteConnectedAccountMutation = gql`\n  mutation deleteConnectedAccount($connectedAccount: ConnectedAccountReferenceInput!) {\n    deleteConnectedAccount(connectedAccount: $connectedAccount) {\n      id\n    }\n  }\n`;\n\nconst EditPrivacyAccount = props => {\n  const mutationOptions = {\n    context: API_V2_CONTEXT,\n    refetchQueries: [{ query: editCollectivePageQuery, variables: { slug: props.collective.slug } }],\n    awaitRefetchQueries: true,\n  };\n  const [connectedAccount, setConnectedAccount] = React.useState(props.connectedAccount);\n  const [createConnectedAccount, { loading: isCreating, error: createError }] = useMutation(\n    createConnectedAccountMutation,\n    mutationOptions,\n  );\n  const [deleteConnectedAccount, { loading: isDeleting }] = useMutation(\n    deleteConnectedAccountMutation,\n    mutationOptions,\n  );\n  const formik = useFormik({\n    initialValues: {\n      token: '',\n    },\n    async onSubmit(values) {\n      const {\n        data: { createConnectedAccount: createdAccount },\n      } = await createConnectedAccount({\n        variables: {\n          connectedAccount: {\n            token: trim(values.token),\n            service: 'privacy',\n          },\n          account: { slug: props.collective.slug },\n        },\n      });\n      setConnectedAccount(createdAccount);\n    },\n    validate(values) {\n      const errors = {};\n      if (!values.token) {\n        errors.token = 'Required';\n      }\n      return errors;\n    },\n  });\n\n  const handleDelete = async () => {\n    await deleteConnectedAccount({ variables: { connectedAccount: { legacyId: props.connectedAccount.id } } });\n    setConnectedAccount();\n  };\n\n  if (!connectedAccount) {\n    return (\n      <form onSubmit={formik.handleSubmit}>\n        <P fontSize=\"12px\" color=\"black.600\" fontWeight=\"normal\">\n          <FormattedMessage\n            id=\"collective.create.connectedAccounts.privacy.description\"\n            defaultMessage=\"Connect a Privacy account to emit Virtual Credit Cards to your collectives.\"\n          />\n        </P>\n        <StyledInputField\n          mt={2}\n          name=\"token\"\n          label=\"API Key\"\n          error={(formik.touched.token && formik.errors.token) || createError?.message}\n          disabled={isCreating}\n        >\n          {inputProps => (\n            <StyledInput type=\"text\" {...inputProps} onChange={formik.handleChange} value={formik.values.token} />\n          )}\n        </StyledInputField>\n        <StyledButton mt={2} type=\"submit\" loading={isCreating}>\n          <FormattedMessage defaultMessage=\"Connect {service}\" values={{ service: 'Privacy' }} />\n        </StyledButton>\n      </form>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <P>\n          <FormattedMessage\n            id=\"collective.connectedAccounts.privacy.connected\"\n            defaultMessage=\"Privacy connected on {updatedAt, date, short}\"\n            values={{\n              updatedAt: new Date(connectedAccount.updatedAt || connectedAccount.createdAt),\n            }}\n          />\n        </P>\n        <P>\n          <StyledButton type=\"submit\" mt={2} loading={isDeleting} onClick={handleDelete}>\n            <FormattedMessage id=\"collective.connectedAccounts.disconnect.button\" defaultMessage=\"Disconnect\" />\n          </StyledButton>\n        </P>\n      </React.Fragment>\n    );\n  }\n};\n\nEditPrivacyAccount.propTypes = {\n  connectedAccount: PropTypes.object,\n  collective: PropTypes.object,\n  intl: PropTypes.object.isRequired,\n  variation: PropTypes.string,\n};\n\nexport default EditPrivacyAccount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport { connectAccount, disconnectAccount } from '../../lib/api';\n\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\nimport { P } from '../Text';\n\nconst EditTransferWiseAccount = ({ collective, ...props }) => {\n  const router = useRouter();\n  const error = router.query?.error;\n  const [connectedAccount, setConnectedAccount] = React.useState(props.connectedAccount);\n  const handleConnect = async () => {\n    const json = await connectAccount(collective.id, 'transferwise');\n    window.location.href = json.redirectUrl;\n  };\n  const handleDisconnect = async () => {\n    const json = await disconnectAccount(collective.id, 'transferwise');\n    if (json.deleted === true) {\n      setConnectedAccount(null);\n    }\n  };\n\n  if (!connectedAccount) {\n    return (\n      <React.Fragment>\n        <P fontSize=\"13px\" color=\"black.700\" fontWeight=\"normal\" mb={3}>\n          <FormattedMessage\n            id=\"collective.create.connectedAccounts.transferwise.description\"\n            defaultMessage=\"Connect a Wise account to pay expenses with one click.\"\n          />\n        </P>\n        {error && (\n          <MessageBox withIcon type=\"error\" mb={3}>\n            {error}\n          </MessageBox>\n        )}\n\n        <StyledButton mt={2} type=\"submit\" onClick={handleConnect}>\n          <FormattedMessage defaultMessage=\"Connect {service}\" values={{ service: 'Wise' }} />\n        </StyledButton>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <P>\n          <FormattedMessage\n            id=\"collective.connectedAccounts.transferwise.connected\"\n            defaultMessage=\"Wise connected on {updatedAt, date, short}\"\n            values={{\n              updatedAt: new Date(connectedAccount.createdAt),\n            }}\n          />\n        </P>\n        <P>\n          <StyledButton type=\"submit\" mt={2} onClick={handleDisconnect}>\n            <FormattedMessage\n              id=\"collective.connectedAccounts.disconnect.button\"\n              defaultMessage=\"Disconnect\"\n              buttonStyle=\"dangerSecondary\"\n            />\n          </StyledButton>\n        </P>\n      </React.Fragment>\n    );\n  }\n};\n\nEditTransferWiseAccount.propTypes = {\n  connectedAccount: PropTypes.object,\n  collective: PropTypes.object,\n  intl: PropTypes.object.isRequired,\n};\n\nexport default EditTransferWiseAccount;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { cloneDeep, pick } from 'lodash';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport { gqlV1 } from '../../lib/graphql/helpers';\n\nimport { Box, Flex } from '../Grid';\nimport InputSwitch from '../InputSwitch';\nimport StyledButton from '../StyledButton';\nimport StyledTextarea from '../StyledTextarea';\nimport { Label, P, Span } from '../Text';\nimport { TOAST_TYPE, withToasts } from '../ToastProvider';\n\nconst DEFAULT_TWEETS = {\n  newBacker: '{backerTwitterHandle} thank you for your contribution of {amount} 🙏 - it makes a difference!',\n  tenBackers: `🎉 {collective} just reached 10 financial contributors! Thank you {topBackersTwitterHandles} 🙌\n  Support them too!`,\n  fiftyBackers: `🎉 {collective} just reached 50 financial contributors!! 🙌\n  Support them too!`,\n  oneHundred: `🎉 {collective} just reached 100 financial contributors!! 🙌\n  Support them too!`,\n  oneThousandBackers: `🎉 {collective} just reached 1,000 financial contributors!!! 🙌\n  Support them too!`,\n};\n\nclass EditTwitterAccount extends React.Component {\n  static propTypes = {\n    connectedAccount: PropTypes.object.isRequired,\n    collective: PropTypes.object,\n    intl: PropTypes.object.isRequired,\n    editConnectedAccount: PropTypes.func.isRequired,\n    addToast: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n    this.renderNotification = this.renderNotification.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.messages = defineMessages({\n      'newBacker.toggle.label': {\n        id: 'connectedAccounts.twitter.newBacker.toggle.label',\n        defaultMessage: 'New financial contributors',\n      },\n      'newBacker.toggle.description': {\n        id: 'connectedAccounts.twitter.newBacker.toggle.description',\n        defaultMessage:\n          'Whenever you have a new contributor that has provided a twitter username, a tweet will be sent from your connected account',\n      },\n      'monthlyStats.toggle.label': {\n        id: 'connectedAccounts.twitter.monthlyStats.toggle.label',\n        defaultMessage: 'Monthly stats',\n      },\n      'monthlyStats.toggle.description': {\n        id: 'connectedAccounts.twitter.monthlyStats.toggle.description',\n        defaultMessage:\n          'On the first of the month, automatically send a tweet with your latest stats (new and top contributors)',\n      },\n      'updatePublished.toggle.label': {\n        id: 'connectedAccounts.twitter.updatePublished.toggle.label',\n        defaultMessage: 'Update published',\n      },\n      'updatePublished.toggle.description': {\n        id: 'connectedAccounts.twitter.updatePublished.toggle.description',\n        defaultMessage: 'Send a tweet whenever you publish an Update',\n      },\n      'tenBackers.toggle.label': {\n        id: 'connectedAccounts.twitter.tenBackers.toggle.label',\n        defaultMessage: '10 contributors',\n      },\n      'tenBackers.toggle.description': {\n        id: 'connectedAccounts.twitter.tenBackers.toggle.description',\n        defaultMessage: 'Whenever one of the Collectives that you are Hosting reaches 10 contributors',\n      },\n      'oneHundredBackers.toggle.label': {\n        id: 'connectedAccounts.twitter.oneHundredBackers.toggle.label',\n        defaultMessage: '100 contributors',\n      },\n      'oneHundredBackers.toggle.description': {\n        id: 'connectedAccounts.twitter.oneHundredBackers.toggle.description',\n        defaultMessage: 'Whenever one of the Collectives that you are Hosting reaches 100 contributors',\n      },\n      'oneThousandBackers.toggle.label': {\n        id: 'connectedAccounts.twitter.oneThousandBackers.toggle.label',\n        defaultMessage: '1,000 contributors',\n      },\n      'oneThousandBackers.toggle.description': {\n        id: 'connectedAccounts.twitter.oneThousandBackers.toggle.description',\n        defaultMessage: 'Whenever one of the Collectives that you are Hosting reaches 1,000 contributors',\n      },\n    });\n\n    const connectedAccount = cloneDeep(props.connectedAccount);\n    connectedAccount.settings = connectedAccount.settings || {};\n    this.getNotificationTypes().forEach(notificationType => {\n      connectedAccount.settings[notificationType] = connectedAccount.settings[notificationType] || { active: false };\n    });\n\n    this.state = { isSaving: false, isModified: false, connectedAccount };\n  }\n\n  getNotificationTypes = () => {\n    const notificationTypes = [];\n    if (this.props.collective.type === 'COLLECTIVE') {\n      notificationTypes.push('newBacker', 'monthlyStats', 'updatePublished');\n    }\n    if (this.props.collective.isHost) {\n      notificationTypes.push('tenBackers', 'oneHundredBackers', 'oneThousandBackers');\n    }\n\n    return notificationTypes;\n  };\n\n  async onClick() {\n    this.setState({ isSaving: true });\n    try {\n      const connectedAccount = pick(this.state.connectedAccount, ['id', 'settings']);\n      await this.props.editConnectedAccount({ variables: { connectedAccount } });\n      this.setState({ isModified: false });\n      this.props.addToast({ type: TOAST_TYPE.SUCCESS, message: 'Twitter settings updated' });\n    } finally {\n      this.setState({ isSaving: false });\n    }\n  }\n\n  handleChange(notification, attr, val) {\n    const connectedAccount = cloneDeep(this.state.connectedAccount);\n    connectedAccount.settings[notification][attr] = val;\n    this.setState({ connectedAccount, isModified: true });\n  }\n\n  renderNotification(notificationType) {\n    const { intl } = this.props;\n    const { connectedAccount } = this.state;\n    const defaultTweet = DEFAULT_TWEETS[notificationType];\n    return (\n      <Box margin=\"16px 0\" key={notificationType}>\n        <Flex alignItems=\"center\">\n          <Box flex=\"0 1\" flexBasis={['100%', '25%']}>\n            <Label htmlFor={`${notificationType}.active`} fontWeight=\"700\" fontSize=\"14px\" cursor=\"pointer\">\n              {intl.formatMessage(this.messages[`${notificationType}.toggle.label`])}\n            </Label>\n          </Box>\n          <div>\n            <InputSwitch\n              id={`${notificationType}.active`}\n              name={`${notificationType}.active`}\n              checked={connectedAccount.settings[notificationType].active}\n              onChange={event => this.handleChange(notificationType, 'active', event.target.checked)}\n            />\n          </div>\n        </Flex>\n        {this.messages[`${notificationType}.toggle.description`] && (\n          <Flex>\n            <Box flex=\"0 1\" flexBasis={[0, '25%']} />\n            <Box flex=\"1 1\" flexBasis={['100%', '75%']} pl=\"12px\">\n              <P fontSize=\"13px\" color=\"black.600\">\n                {intl.formatMessage(this.messages[`${notificationType}.toggle.description`])}\n              </P>\n            </Box>\n          </Flex>\n        )}\n        {defaultTweet && (\n          <Flex mt={2} flexWrap=\"wrap\">\n            <Box flex=\"0 1\" flexBasis={[0, '25%']} />\n            <Box flex=\"1 1\" flexBasis={['100%', '75%']} pl=\"12px\">\n              <StyledTextarea\n                maxLength={280}\n                minHeight=\"100px\"\n                width=\"100%\"\n                showCount={true}\n                name={`${notificationType}.tweet`}\n                defaultValue={connectedAccount.settings[notificationType].tweet || ''}\n                placeholder={defaultTweet}\n                onChange={event => this.handleChange(notificationType, 'tweet', event.target.value)}\n              />\n            </Box>\n          </Flex>\n        )}\n      </Box>\n    );\n  }\n\n  render() {\n    return (\n      <details>\n        <summary>\n          <Span fontSize=\"15px\" color=\"blue.500\">\n            <FormattedMessage id=\"Settings\" defaultMessage=\"Settings\" />\n          </Span>\n        </summary>\n        <div>\n          {this.getNotificationTypes().map(this.renderNotification)}\n          <Flex flexWrap=\"wrap\">\n            <Box width={[1, '25%']} />\n            <Box width={[1, '75%']}>\n              <StyledButton\n                disabled={!this.state.isModified}\n                buttonStyle=\"primary\"\n                buttonSize=\"small\"\n                onClick={this.onClick}\n                loading={this.state.isSaving}\n                minWidth={100}\n              >\n                <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n              </StyledButton>\n            </Box>\n          </Flex>\n        </div>\n      </details>\n    );\n  }\n}\n\nconst editConnectedAccountMutation = gqlV1/* GraphQL */ `\n  mutation EditConnectedAccount($connectedAccount: ConnectedAccountInputType!) {\n    editConnectedAccount(connectedAccount: $connectedAccount) {\n      id\n      settings\n    }\n  }\n`;\n\nconst addEditConnectedAccountMutation = graphql(editConnectedAccountMutation, {\n  name: 'editConnectedAccount',\n});\n\nexport default injectIntl(addEditConnectedAccountMutation(withToasts(EditTwitterAccount)));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { capitalize } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { connectAccount, disconnectAccount } from '../../lib/api';\nimport { getFromLocalStorage, LOCAL_STORAGE_KEYS } from '../../lib/local-storage';\nimport { getWebsiteUrl } from '../../lib/utils';\n\nimport { Box, Flex } from '../Grid';\nimport StyledButton from '../StyledButton';\nimport { P } from '../Text';\n\nimport EditPayPalAccount from './EditPayPalAccount';\nimport EditPrivacyAccount from './EditPrivacyAccount';\nimport EditTransferWiseAccount from './EditTransferWiseAccount';\nimport EditTwitterAccount from './EditTwitterAccount';\n\nclass EditConnectedAccount extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object.isRequired,\n    connectedAccounts: PropTypes.arrayOf(PropTypes.object),\n    options: PropTypes.object,\n    editMode: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n    service: PropTypes.string,\n    connectedAccount: PropTypes.object,\n    variation: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: props.editMode || false,\n      connectedAccount: props.connectedAccount,\n    };\n    this.connect = this.connect.bind(this);\n    this.disconnect = this.disconnect.bind(this);\n\n    this.messages = defineMessages({\n      'collective.connectedAccounts.reconnect.button': {\n        id: 'collective.connectedAccounts.reconnect.button',\n        defaultMessage: 'Reconnect',\n      },\n      'collective.connectedAccounts.disconnect.button': {\n        id: 'collective.connectedAccounts.disconnect.button',\n        defaultMessage: 'Disconnect',\n      },\n      'collective.connectedAccounts.stripe.description': {\n        id: 'collective.create.connectedAccounts.stripe.description',\n        defaultMessage: 'Connect a Stripe account to start accepting financial contributions.',\n      },\n      'collective.connectedAccounts.stripe.connected': {\n        id: 'collective.connectedAccounts.stripe.connected',\n        defaultMessage: 'Stripe account connected on {updatedAt, date, short}',\n      },\n      'collective.connectedAccounts.twitter.description': {\n        id: 'collective.connectedAccounts.twitter.description',\n        defaultMessage: 'Connect a Twitter account to automatically thank new financial contributors',\n      },\n      'collective.connectedAccounts.twitter.connected': {\n        id: 'collective.connectedAccounts.twitter.connected',\n        defaultMessage: 'Twitter account @{username} connected on {updatedAt, date, short}',\n      },\n      'collective.connectedAccounts.github.description': {\n        id: 'collective.connectedAccounts.github.description',\n        defaultMessage: 'Connect a GitHub account to verify your identity and add it to your profile',\n      },\n      'collective.connectedAccounts.github.connected': {\n        id: 'collective.connectedAccounts.github.connected',\n        defaultMessage: 'GitHub account {username} connected on {updatedAt, date, short}',\n      },\n    });\n    this.services = ['stripe', 'paypal', 'twitter', 'github', 'transferwise', 'privacy'];\n  }\n\n  connect(service) {\n    const { collective, options } = this.props;\n\n    if (service === 'github' || service === 'twitter') {\n      const redirectUrl = `${getWebsiteUrl()}/api/connected-accounts/${service}/oauthUrl`;\n      const redirectUrlParams = new URLSearchParams({ CollectiveId: collective.id });\n\n      const accessToken = getFromLocalStorage(LOCAL_STORAGE_KEYS.ACCESS_TOKEN);\n      if (accessToken) {\n        redirectUrlParams.set('access_token', accessToken); // eslint-disable-line camelcase\n      }\n\n      window.location.href = `${redirectUrl}?${redirectUrlParams.toString()}`;\n\n      return;\n    }\n\n    connectAccount(collective.id, service, options)\n      .then(json => {\n        return (window.location.href = json.redirectUrl);\n      })\n      .catch(err => {\n        // TODO: this should be reported to the user\n        // eslint-disable-next-line no-console\n        console.error(`>>> /api/connected-accounts/${service} error`, err);\n      });\n  }\n\n  disconnect(service) {\n    const { collective } = this.props;\n\n    disconnectAccount(collective.id, service)\n      .then(json => {\n        if (json.deleted === true) {\n          this.setState({\n            connectedAccount: null,\n          });\n        }\n      })\n      .catch(err => {\n        // TODO: this should be reported to the user\n        // eslint-disable-next-line no-console\n        console.error(`>>> /api/connected-accounts/${service}/disconnect error`, err);\n      });\n  }\n\n  render() {\n    const { intl, service, collective, variation } = this.props;\n    const { connectedAccount } = this.state;\n\n    let vars = {};\n    if (connectedAccount) {\n      vars = {\n        username: connectedAccount.username,\n        updatedAt: new Date(connectedAccount.updatedAt),\n      };\n    }\n\n    if (service === 'transferwise') {\n      // Notice we're passing props.connectedAccount to EditTransferWiseAccount\n      // This happens because the component will take care of refetching data from\n      // the DB to make sure it is displaying accurate information.\n      return (\n        <EditTransferWiseAccount collective={collective} connectedAccount={this.props.connectedAccount} intl={intl} />\n      );\n    } else if (service === 'paypal') {\n      return (\n        <EditPayPalAccount\n          collective={collective}\n          connectedAccount={this.props.connectedAccount}\n          variation={variation}\n          intl={intl}\n        />\n      );\n    } else if (service === 'privacy') {\n      return <EditPrivacyAccount collective={collective} connectedAccount={this.props.connectedAccount} intl={intl} />;\n    }\n\n    return (\n      <Flex width=\"100%\">\n        {!connectedAccount && (\n          <Box>\n            <P fontSize=\"12px\" color=\"black.600\" fontWeight=\"normal\" mb={2}>\n              {intl.formatMessage(this.messages[`collective.connectedAccounts.${service}.description`])}\n            </P>\n            <StyledButton\n              data-cy={`connect-${service}-button`}\n              buttonSize=\"small\"\n              onClick={() => this.connect(service)}\n              mb={2}\n            >\n              {intl.formatMessage({ defaultMessage: 'Connect {service}' }, { service: capitalize(service) })}\n            </StyledButton>\n          </Box>\n        )}\n        {connectedAccount && (\n          <Flex flexDirection=\"column\" width=\"100%\">\n            <Box>{intl.formatMessage(this.messages[`collective.connectedAccounts.${service}.connected`], vars)}</Box>\n            <Box mt={1}>\n              <StyledButton buttonSize=\"small\" onClick={() => this.connect(service)}>\n                {intl.formatMessage(this.messages['collective.connectedAccounts.reconnect.button'])}\n              </StyledButton>{' '}\n              <StyledButton buttonSize=\"small\" onClick={() => this.disconnect(service)}>\n                {intl.formatMessage(this.messages['collective.connectedAccounts.disconnect.button'])}\n              </StyledButton>\n            </Box>\n            {connectedAccount.service === 'twitter' && (\n              <Box my={3}>\n                <EditTwitterAccount collective={collective} connectedAccount={connectedAccount} />\n              </Box>\n            )}\n          </Flex>\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default injectIntl(EditConnectedAccount);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { groupBy } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport { capitalize } from '../../../lib/utils';\n\nimport { Box } from '../../Grid';\nimport { getI18nLink } from '../../I18nFormatters';\nimport { P } from '../../Text';\nimport EditConnectedAccount from '../EditConnectedAccount';\n\nimport SettingsSectionTitle from './SettingsSectionTitle';\n\nconst TITLE_OVERRIDE = {\n  transferwise: 'Wise',\n};\n\nconst ConnectedAccounts = props => {\n  const connectedAccountsByService = groupBy(props.connectedAccounts, 'service');\n\n  let services = [];\n  if (props.services) {\n    services = [...props.services, ...services];\n  } else {\n    if (props.collective.type === 'COLLECTIVE' || props.collective.isHost) {\n      services.push('twitter');\n    }\n  }\n\n  return (\n    <div className=\"EditConnectedAccounts\">\n      <P mb={4}>\n        <FormattedMessage\n          defaultMessage=\"See <Link>the documentation</Link> to learn more about Connected Accounts.\"\n          values={{\n            Link: getI18nLink({\n              href: 'https://docs.opencollective.com/help/fiscal-hosts/fiscal-host-settings/connected-accounts',\n              openInNewTab: true,\n            }),\n          }}\n        />\n      </P>\n      {services.map(service => (\n        <Box key={`connect-${service}`} mb={4}>\n          <SettingsSectionTitle>{TITLE_OVERRIDE[service] || capitalize(service)}</SettingsSectionTitle>\n          <EditConnectedAccount\n            collective={props.collective}\n            service={service}\n            connectedAccount={connectedAccountsByService[service] && connectedAccountsByService[service][0]}\n            variation={props.variation}\n          />\n        </Box>\n      ))}\n    </div>\n  );\n};\n\nConnectedAccounts.propTypes = {\n  collective: PropTypes.object.isRequired,\n  connectedAccounts: PropTypes.arrayOf(PropTypes.object),\n  editMode: PropTypes.bool,\n  services: PropTypes.arrayOf(PropTypes.string),\n  variation: PropTypes.oneOf(['SENDING', 'RECEIVING']),\n};\n\nexport default ConnectedAccounts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Container from './Container';\nimport { Box } from './Grid';\nimport Image from './Image';\nimport StyledButton from './StyledButton';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from './StyledModal';\n\n/*\n * A image preview modal that can be used to display a preview image for a\n * an Email Template or an Invoice Receipt.\n */\nconst PreviewModal = ({ previewImage, heading, subheading, imgHeight, imgWidth, onClose }) => {\n  return (\n    <StyledModal onClose={onClose} trapFocus>\n      <ModalHeader>{heading}</ModalHeader>\n      <ModalBody mb={0}>\n        {subheading && (\n          <Box pt=\"6px\" pb=\"32px\" fontSize=\"14px\" fontWeight={400} lineHeight=\"20px\" color=\"black.700\">\n            {subheading}\n          </Box>\n        )}\n        <Image src={previewImage} alt=\"Position of custom message\" height={imgHeight} width={imgWidth} />\n      </ModalBody>\n      <ModalFooter>\n        <Container display=\"flex\" justifyContent=\"center\">\n          <StyledButton buttonStyle=\"secondary\" onClick={onClose}>\n            <FormattedMessage id=\"Close\" defaultMessage=\"Close\" />\n          </StyledButton>\n        </Container>\n      </ModalFooter>\n    </StyledModal>\n  );\n};\n\nPreviewModal.propTypes = {\n  previewImage: PropTypes.string.isRequired,\n  heading: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  subheading: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  imgHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  imgWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  onClose: PropTypes.func,\n};\n\nexport default PreviewModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { FormattedMessage } from 'react-intl';\n\nimport { CollectiveType } from '../../../lib/constants/collectives';\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\n\nimport Container from '../../Container';\nimport { Box, Flex } from '../../Grid';\nimport MessageBox from '../../MessageBox';\nimport PreviewModal from '../../PreviewModal';\nimport RichTextEditor from '../../RichTextEditor';\nimport StyledButton from '../../StyledButton';\nimport StyledHr from '../../StyledHr';\nimport { P, Span } from '../../Text';\nimport { TOAST_TYPE, useToasts } from '../../ToastProvider';\n\nconst updateCustomMessageMutation = gql`\n  mutation UpdateCustomMessage($account: AccountReferenceInput!, $key: AccountSettingsKey!, $value: JSON!) {\n    editAccountSetting(account: $account, key: $key, value: $value) {\n      id\n      type\n      isActive\n      settings\n    }\n  }\n`;\n\nconst CustomMessage = ({ collective }) => {\n  const thankYouMessage =\n    collective?.settings?.customEmailMessage || collective?.parentCollective?.settings?.customEmailMessage;\n  const [customMessage, setCustomMessage] = useState(thankYouMessage);\n  const [isModified, setIsModified] = useState(false);\n  const [showPreview, setShowPreview] = useState(false);\n  const { addToast } = useToasts();\n\n  const [updateCustomEmailMessage, { loading }] = useMutation(updateCustomMessageMutation, {\n    context: API_V2_CONTEXT,\n    onError: e => {\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        message: (\n          <FormattedMessage\n            defaultMessage=\"Error updating custom email message: {error}\"\n            values={{\n              error: e.message,\n            }}\n          />\n        ),\n      });\n    },\n    onCompleted: () => {\n      addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: <FormattedMessage defaultMessage=\"Email message updated\" />,\n      });\n    },\n  });\n\n  const handleSubmit = async message => {\n    await updateCustomEmailMessage({\n      variables: {\n        account: { legacyId: collective.id },\n        key: 'customEmailMessage',\n        value: message || '',\n      },\n    });\n    setIsModified(false);\n  };\n\n  const onChange = async value => {\n    setCustomMessage(value);\n    setIsModified(true);\n  };\n\n  return (\n    <Container>\n      <P fontSize=\"14px\" fontWeight={400} lineHeight=\"20ppx\">\n        <FormattedMessage defaultMessage=\"Add a custom message to be included in the email sent to financial contributors of your Collective, Project, or Event.\" />\n      </P>\n      <StyledHr mt=\"32px\" mb=\"34px\" borderStyle=\"dotted\" />\n      <Container maxWidth=\"1000px\">\n        <Flex justifyContent=\"space-between\" flexDirection={['column', 'row']}>\n          <Box mb={2} fontSize=\"18px\" fontWeight={700} lineHeight=\"26px\">\n            <FormattedMessage defaultMessage=\"Custom Message\" />\n          </Box>\n          <StyledButton\n            buttonStyle=\"secondary\"\n            buttonSize=\"tiny\"\n            maxWidth=\"78px\"\n            pt=\"4px\"\n            pb=\"4px\"\n            pl=\"14px\"\n            pr=\"14px\"\n            height=\"24px\"\n            onClick={() => setShowPreview(true)}\n          >\n            <Span fontSize=\"13px\" fontWeight={500} lineHeight=\"16px\">\n              <FormattedMessage defaultMessage=\"Preview\" />\n            </Span>\n          </StyledButton>\n        </Flex>\n        <RichTextEditor\n          kind=\"ACCOUNT_CUSTOM_EMAIL\"\n          inputName=\"message\"\n          onChange={e => onChange(e.target.value)}\n          defaultValue={customMessage}\n          withBorders\n          editorMinHeight=\"150px\"\n          maxLength={500}\n          showCount\n        />\n      </Container>\n      {[CollectiveType.EVENT, CollectiveType.PROJECT].includes(collective.type) ? (\n        <MessageBox type=\"info\" mt=\"24px\">\n          <P fontSize=\"13px\" fontWeight={400} lineHeight=\"20px\">\n            <FormattedMessage defaultMessage=\"The above text will override the customized message set by the parent Collective of this Event or Project.\" />\n          </P>\n        </MessageBox>\n      ) : (\n        <MessageBox type=\"info\" mt=\"24px\">\n          <P fontSize=\"13px\" fontWeight={400} lineHeight=\"20px\">\n            <FormattedMessage defaultMessage=\"The above text will be considered as the default customized email response for all contributions to your Collective, and all of your Events and Projects. You also have the ability to customize the messages for Events & Projects from within their individual Setting's Menus.\" />\n          </P>\n        </MessageBox>\n      )}\n      <Flex justifyContent={['center', 'left']}>\n        <StyledButton\n          disabled={loading || !isModified}\n          mt=\"35px\"\n          buttonStyle=\"primary\"\n          width=\"157px\"\n          onClick={() => handleSubmit(customMessage)}\n        >\n          <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n        </StyledButton>\n      </Flex>\n      {showPreview && (\n        <PreviewModal\n          heading={<FormattedMessage defaultMessage=\"Preview Notification\" />}\n          subheading={\n            <FormattedMessage defaultMessage=\"This is the preview of the email template which your financial contributor will receive.\" />\n          }\n          onClose={() => setShowPreview(false)}\n          previewImage=\"/static/images/custom-email-preview.png\"\n          imgHeight=\"715px\"\n          imgWidth=\"809px\"\n        />\n      )}\n    </Container>\n  );\n};\n\nCustomMessage.propTypes = {\n  collective: PropTypes.shape({\n    id: PropTypes.number,\n    type: PropTypes.string,\n    settings: PropTypes.shape({\n      customEmailMessage: PropTypes.string,\n    }),\n    parentCollective: PropTypes.shape({\n      settings: PropTypes.shape({\n        customEmailMessage: PropTypes.string,\n      }),\n    }),\n  }),\n  isInheritSettings: PropTypes.bool,\n};\n\nexport default CustomMessage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport FAQ, { Content, Entry, Title } from './FAQ';\n\nconst EditCollectivePageFAQ = ({ defaultOpen, ...props }) => (\n  <FAQ {...props}>\n    <Entry open={defaultOpen}>\n      <Title>\n        <FormattedMessage\n          id=\"EditCollectivePageFAQ.Data\"\n          defaultMessage=\"If I disable a section will its content be deleted?\"\n        />\n      </Title>\n      <Content>\n        <FormattedMessage\n          id=\"EditCollectivePageFAQ.DataDetails\"\n          defaultMessage=\"No, your data is preserved when you disable a section. You can re-enable it any time.\"\n        />\n      </Content>\n    </Entry>\n    <Entry open={defaultOpen}>\n      <Title>\n        <FormattedMessage id=\"EditCollectivePageFAQ.EditHidden\" defaultMessage=\"Can I edit a disabled section?\" />\n      </Title>\n      <Content>\n        <FormattedMessage\n          id=\"EditCollectivePageFAQ.EditHiddenDetails\"\n          defaultMessage=\"No. To edit a section, you need to make it to visible.\"\n        />\n      </Content>\n    </Entry>\n    <Entry open={defaultOpen}>\n      <Title>\n        <FormattedMessage id=\"EditCollectivePageFAQ.Publish\" defaultMessage=\"When will changes be published?\" />\n      </Title>\n      <Content>\n        <FormattedMessage id=\"EditCollectivePageFAQ.PublishDetails\" defaultMessage='As soon as you click \"Save\".' />\n      </Content>\n    </Entry>\n    <Entry open={defaultOpen}>\n      <Title>\n        <FormattedMessage id=\"EditCollectivePageFAQ.HideBudget\" defaultMessage=\"Why can't I hide my budget section?\" />\n      </Title>\n      <Content>\n        <FormattedMessage\n          id=\"EditCollectivePageFAQ.HideBudgetDetails\"\n          defaultMessage=\"Open Collective is all about transparency, and visibility of the budget section is a key part of that.\"\n        />\n      </Content>\n    </Entry>\n  </FAQ>\n);\n\nEditCollectivePageFAQ.propTypes = {\n  defaultOpen: PropTypes.bool,\n};\n\nexport default EditCollectivePageFAQ;\n","import { gql } from '@apollo/client';\n\nimport { gqlV1 } from '../../lib/graphql/helpers';\n\nexport const editCollectiveSettingsMutation = gqlV1/* GraphQL */ `\n  mutation EditCollectiveSettings($id: Int!, $settings: JSON) {\n    editCollective(collective: { id: $id, settings: $settings }) {\n      id\n      settings\n    }\n  }\n`;\n\nexport const editAccountSettingsMutation = gql`\n  mutation EditAccountSetting($account: AccountReferenceInput!, $key: AccountSettingsKey!, $value: JSON!) {\n    editAccountSetting(account: $account, key: $key, value: $value) {\n      id\n      settings\n    }\n  }\n`;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { closestCenter, DndContext, DragOverlay } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, verticalListSortingStrategy } from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\nimport { InfoCircle } from '@styled-icons/fa-solid/InfoCircle';\nimport { DragIndicator } from '@styled-icons/material/DragIndicator';\nimport { cloneDeep, flatten, get, isEqual, set } from 'lodash';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled, { css } from 'styled-components';\n\nimport { getCollectiveSections, getSectionPath } from '../../../lib/collective-sections';\nimport { CollectiveType } from '../../../lib/constants/collectives';\nimport { formatErrorMessage, getErrorFromGraphqlException } from '../../../lib/errors';\nimport { API_V2_CONTEXT, gqlV1 } from '../../../lib/graphql/helpers';\nimport i18nNavbarCategory from '../../../lib/i18n/navbar-categories';\nimport i18nCollectivePageSection from '../../../lib/i18n-collective-page-section';\n\nimport { Sections } from '../../collective-page/_constants';\nimport Container from '../../Container';\nimport EditCollectivePageFAQ from '../../faqs/EditCollectivePageFAQ';\nimport { Box, Flex } from '../../Grid';\nimport Link from '../../Link';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport MessageBox from '../../MessageBox';\nimport StyledButton from '../../StyledButton';\nimport StyledCard from '../../StyledCard';\nimport StyledHr from '../../StyledHr';\nimport StyledSelect from '../../StyledSelect';\nimport StyledTooltip from '../../StyledTooltip';\nimport { P, Span } from '../../Text';\nimport { editAccountSettingsMutation } from '../mutations';\nimport SettingsSubtitle from '../SettingsSubtitle';\n\nexport const getSettingsQuery = gql`\n  query GetSettingsForEditCollectivePage($slug: String!) {\n    account(slug: $slug) {\n      id\n      type\n      currency\n      isActive\n      isHost\n      settings\n      policies {\n        EXPENSE_AUTHOR_CANNOT_APPROVE {\n          enabled\n          amountInCents\n          appliesToHostedCollectives\n          appliesToSingleAdminCollectives\n        }\n        COLLECTIVE_MINIMUM_ADMINS {\n          numberOfAdmins\n          applies\n          freeze\n        }\n      }\n      ... on AccountWithHost {\n        host {\n          id\n          policies {\n            EXPENSE_AUTHOR_CANNOT_APPROVE {\n              enabled\n              amountInCents\n              appliesToHostedCollectives\n              appliesToSingleAdminCollectives\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const collectiveSettingsV1Query = gqlV1/* GraphQL */ `\n  query EditCollectivePage($slug: String) {\n    Collective(slug: $slug) {\n      id\n      settings\n    }\n  }\n`;\n\nconst ItemContainer = styled.div`\n  ${props =>\n    props.isDragging &&\n    css`\n      border-color: #99c9ff;\n      background: #f0f8ff;\n      & > * {\n        opacity: 0;\n      }\n    `}\n\n  background: ${props =>\n    props.isDragging\n      ? '#f0f8ff'\n      : !props.isDragOverlay\n      ? 'transparent'\n      : props.isSubSection\n      ? props.theme.colors.black[100]\n      : 'white'};\n\n  ${props =>\n    props.isDragOverlay &&\n    css`\n      box-shadow: 0px 4px 6px rgba(26, 27, 31, 0.16);\n    `}\n`;\n\nconst CollectiveSectionEntry = ({\n  isEnabled,\n  version,\n  restrictedTo,\n  section,\n  onSectionToggle,\n  collectiveType,\n  isSubSection,\n  hasData,\n  showMissingDataWarning,\n  showDragIcon,\n  dragHandleProps,\n}) => {\n  const intl = useIntl();\n\n  let options = [\n    {\n      label: <FormattedMessage id=\"EditCollectivePage.ShowSection.AlwaysVisible\" defaultMessage=\"Always visible\" />,\n      value: 'ALWAYS',\n    },\n    {\n      label: <FormattedMessage id=\"EditCollectivePage.ShowSection.OnlyAdmins\" defaultMessage=\"Only for admins\" />,\n      value: 'ADMIN',\n    },\n    {\n      label: <FormattedMessage defaultMessage=\"Disabled\" />,\n      value: 'DISABLED',\n    },\n  ];\n\n  // Remove the \"Only for admins\" option if it's not a FUND or PROJECT\n  // That can be re-considered later\n  if (collectiveType !== CollectiveType.FUND && collectiveType !== CollectiveType.PROJECT) {\n    options = options.filter(({ value }) => value !== 'ADMIN');\n  }\n  // Can't hide the budget, except if already hidden\n  if (section === 'budget') {\n    if (isEnabled && !isEqual(restrictedTo, ['ADMIN'])) {\n      options = options.filter(({ value }) => value !== 'ADMIN' && value !== 'DISABLED');\n    }\n    // New budget version not available for\n    if (collectiveType !== CollectiveType.USER) {\n      options.push({\n        label: (\n          <FormattedMessage id=\"EditCollectivePage.ShowSection.AlwaysVisibleV2\" defaultMessage=\"New version visible\" />\n        ),\n        value: 'ALWAYS_V2',\n      });\n    }\n  }\n\n  let defaultValue;\n  if (!isEnabled) {\n    defaultValue = options.find(({ value }) => value === 'DISABLED');\n  } else if (restrictedTo && restrictedTo.includes('ADMIN')) {\n    defaultValue = options.find(({ value }) => value === 'ADMIN');\n  } else if (version === 2) {\n    defaultValue = options.find(({ value }) => value === 'ALWAYS_V2');\n  } else {\n    defaultValue = options.find(({ value }) => value === 'ALWAYS');\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" padding=\"4px 16px\">\n      {showDragIcon && (\n        <Container mr={3} cursor=\"move\" {...dragHandleProps}>\n          <DragIndicator size={14} />\n        </Container>\n      )}\n      <P\n        letterSpacing={isSubSection ? undefined : 0}\n        fontSize=\"14px\"\n        fontWeight={isSubSection ? '500' : '700'}\n        css={{ flex: '1' }}\n      >\n        {i18nCollectivePageSection(intl, section)}\n      </P>\n\n      <StyledSelect\n        inputId={`section-select-${section}`}\n        fontSize=\"11px\"\n        name={`show-section-${section}`}\n        defaultValue={defaultValue}\n        options={options}\n        minWidth={150}\n        isSearchable={false}\n        onChange={({ value }) => {\n          const isEnabled = value !== 'DISABLED' || value === 'ALWAYS_V2';\n          const restrictedTo = value === 'ADMIN' ? ['ADMIN'] : [];\n          const version = value === 'ALWAYS_V2' ? 2 : 1;\n          onSectionToggle(section, { isEnabled, restrictedTo, version });\n        }}\n        formatOptionLabel={option => <Span fontSize=\"11px\">{option.label}</Span>}\n      />\n      {/**\n        Our query uses GQLV2, but the `filterSectionsByData` helper only work with GQLV1 at the moment.\n        We'll switch this flag once either https://github.com/opencollective/opencollective/issues/2807\n        or https://github.com/opencollective/opencollective/issues/3275 will be resolved.\n      */}\n      {showMissingDataWarning && (\n        <Box width={16} ml={2}>\n          {!hasData && (\n            <StyledTooltip\n              content={() => (\n                <FormattedMessage\n                  id=\"EditCollectivePage.EmptySection\"\n                  defaultMessage=\"This section does not appear to have any associated data and will not appear publicly until it does.\"\n                />\n              )}\n            >\n              <InfoCircle size={16} />\n            </StyledTooltip>\n          )}\n        </Box>\n      )}\n    </Flex>\n  );\n};\n\nCollectiveSectionEntry.propTypes = {\n  isEnabled: PropTypes.bool,\n  restrictedTo: PropTypes.array,\n  section: PropTypes.oneOf(Object.values(Sections)),\n  index: PropTypes.number,\n  version: PropTypes.number,\n  onMove: PropTypes.func,\n  onDrop: PropTypes.func,\n  onSectionToggle: PropTypes.func,\n  collectiveType: PropTypes.string,\n  fontWeight: PropTypes.string,\n  hasData: PropTypes.bool,\n  showMissingDataWarning: PropTypes.bool,\n  showDragIcon: PropTypes.bool,\n  parentItem: PropTypes.object,\n  dragHandleProps: PropTypes.object,\n  isSubSection: PropTypes.bool,\n};\n\nconst MenuCategory = ({ item, collective, onSectionToggle, setSubSections, dragHandleProps }) => {\n  const intl = useIntl();\n\n  const [draggingId, setDraggingId] = React.useState(null);\n  function handleDragStart(event) {\n    setDraggingId(event.active.id);\n  }\n  function handleDragEnd(event) {\n    const { active, over } = event;\n    setDraggingId(null);\n    if (active.id !== over.id) {\n      const oldSubsections = item.sections;\n      const oldIndex = oldSubsections.findIndex(item => item.name === active.id);\n      const newIndex = oldSubsections.findIndex(item => item.name === over.id);\n\n      const newSections = arrayMove(oldSubsections, oldIndex, newIndex);\n      setSubSections(newSections);\n    }\n  }\n\n  const draggingItem = item.sections.find(item => item.name === draggingId);\n\n  return (\n    <React.Fragment>\n      <Container\n        display=\"flex\"\n        px={3}\n        py=\"10px\"\n        fontSize=\"14px\"\n        fontWeight=\"bold\"\n        boxShadow=\"0 3px 4px 0px #6b6b6b38\"\n        alignItems=\"center\"\n      >\n        <Container display=\"inline-block\" mr={3} cursor=\"move\" {...dragHandleProps}>\n          <DragIndicator size={14} />\n        </Container>\n        <Container>{i18nNavbarCategory(intl, item.name)}</Container>\n      </Container>\n      <Container>\n        <DndContext collisionDetection={closestCenter} onDragStart={handleDragStart} onDragEnd={handleDragEnd}>\n          <SortableContext items={item.sections?.map(item => item.name)} strategy={verticalListSortingStrategy}>\n            {item.sections?.map(section => (\n              <Container key={section.name} pl={1} borderLeft=\"8px solid\" borderColor=\"black.200\" bg=\"black.100\">\n                <DraggableItem\n                  id={section.name}\n                  item={section}\n                  collective={collective}\n                  onSectionToggle={onSectionToggle}\n                  showDragIcon={item.sections.length > 1}\n                  isSubSection\n                />\n              </Container>\n            ))}\n          </SortableContext>\n          <DragOverlay>\n            {draggingItem ? (\n              <Item item={draggingItem} collective={collective} showDragIcon isDragOverlay isSubSection />\n            ) : null}\n          </DragOverlay>\n        </DndContext>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nMenuCategory.propTypes = {\n  item: PropTypes.object,\n  index: PropTypes.number,\n  collective: PropTypes.object,\n  onMove: PropTypes.func,\n  onDrop: PropTypes.func,\n  onSectionToggle: PropTypes.func,\n  setSubSections: PropTypes.func,\n  isDragOverlay: PropTypes.bool,\n  dragHandleProps: PropTypes.object,\n};\n\nconst Item = React.forwardRef(\n  (\n    {\n      dragHandleProps,\n      isDragging,\n      isDragOverlay,\n      style,\n      setSubSections,\n      onSectionToggle,\n      collective,\n      item,\n      isSubSection,\n      showDragIcon,\n    },\n    ref,\n  ) => {\n    return (\n      <ItemContainer\n        ref={ref}\n        style={style}\n        isDragging={isDragging}\n        isDragOverlay={isDragOverlay}\n        isSubSection={isSubSection}\n      >\n        {item.type === 'CATEGORY' ? (\n          <MenuCategory\n            item={item}\n            collective={collective}\n            onSectionToggle={onSectionToggle}\n            setSubSections={setSubSections}\n            dragHandleProps={dragHandleProps}\n          />\n        ) : item.type === 'SECTION' ? (\n          <CollectiveSectionEntry\n            section={item.name}\n            isEnabled={item.isEnabled}\n            version={item.version}\n            collectiveType={collective.type}\n            restrictedTo={item.restrictedTo}\n            onSectionToggle={onSectionToggle}\n            isSubSection={isSubSection}\n            showDragIcon={showDragIcon}\n            dragHandleProps={dragHandleProps}\n          />\n        ) : null}\n      </ItemContainer>\n    );\n  },\n);\n\nItem.propTypes = {\n  dragHandleProps: PropTypes.object,\n  isDragging: PropTypes.bool,\n  isDragOverlay: PropTypes.bool,\n  style: PropTypes.object,\n  item: PropTypes.object,\n  collective: PropTypes.object,\n  onSectionToggle: PropTypes.func,\n  setSubSections: PropTypes.func,\n  isSubSection: PropTypes.bool,\n  showDragIcon: PropTypes.bool,\n};\n\nItem.displayName = 'Item';\n\nconst MemoizedItem = memo(Item);\n\nconst DraggableItem = props => {\n  const { attributes, listeners, isDragging, setNodeRef, transform, transition } = useSortable({ id: props.id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <MemoizedItem\n      ref={setNodeRef}\n      style={style}\n      dragHandleProps={{ ...attributes, ...listeners }}\n      isDragging={isDragging}\n      {...props}\n    />\n  );\n};\n\nDraggableItem.propTypes = {\n  item: PropTypes.object,\n  collective: PropTypes.object,\n  onSectionToggle: PropTypes.func,\n  setSubSections: PropTypes.func,\n  isSubSection: PropTypes.bool,\n  showDragIcon: PropTypes.bool,\n  id: PropTypes.string,\n};\n\nconst EditCollectivePage = ({ collective }) => {\n  const intl = useIntl();\n  const [isDirty, setDirty] = React.useState(false);\n  const [sections, setSections] = React.useState([]);\n  const [draggingId, setDraggingId] = React.useState(null);\n\n  const { loading, data } = useQuery(getSettingsQuery, {\n    variables: { slug: collective.slug },\n    context: API_V2_CONTEXT,\n  });\n\n  const [submitSetting, { loading: isSubmitting, error }] = useMutation(editAccountSettingsMutation, {\n    context: API_V2_CONTEXT,\n    // Refresh the settings for GQLV1 cache, to refresh the navbar\n    refetchQueries: [{ query: collectiveSettingsV1Query, variables: { slug: collective.slug } }],\n  });\n\n  // Load sections from fetched collective\n  React.useEffect(() => {\n    if (data?.account) {\n      const sections = getCollectiveSections(data.account);\n      setSections(sections);\n    }\n  }, [data?.account]);\n\n  const onSectionToggle = (selectedSection, { isEnabled, restrictedTo, version }) => {\n    const newSections = cloneDeep(sections);\n    const sectionPath = getSectionPath(sections, selectedSection);\n    set(newSections, `${sectionPath}`, { ...get(newSections, sectionPath), isEnabled, restrictedTo, version });\n    setSections(newSections);\n    setDirty(true);\n  };\n\n  function handleDragStart(event) {\n    setDraggingId(event.active.id);\n  }\n\n  function handleDragEnd(event) {\n    const { active, over } = event;\n    setDraggingId(null);\n    if (active.id !== over.id) {\n      const oldIndex = sections.findIndex(item => item.name === active.id);\n      const newIndex = sections.findIndex(item => item.name === over.id);\n      const newSections = arrayMove(sections, oldIndex, newIndex);\n      setSections(newSections);\n      setDirty(true);\n    }\n  }\n\n  const draggingSection = sections.find(section => section.name === draggingId);\n\n  return (\n    <DndContext collisionDetection={closestCenter} onDragStart={handleDragStart} onDragEnd={handleDragEnd}>\n      <SettingsSubtitle>\n        <FormattedMessage\n          id=\"EditCollectivePage.SectionsDescription\"\n          defaultMessage=\"Drag and drop to reorder sections. Toggle on and off with the visibility setting dropdown. Remember to click save at the bottom!\"\n        />\n      </SettingsSubtitle>\n      <Flex flexWrap=\"wrap\" mt={4}>\n        <Box width=\"100%\" maxWidth={436}>\n          {loading || !sections ? (\n            <LoadingPlaceholder height={400} />\n          ) : (\n            <div>\n              <StyledCard mb={4} overflowX={'visible'} overflowY=\"visible\" position=\"relative\">\n                <SortableContext items={sections?.map(item => item.name)} strategy={verticalListSortingStrategy}>\n                  {sections.map((item, index) => {\n                    return (\n                      <React.Fragment key={item.name}>\n                        {index !== 0 && <StyledHr borderColor=\"black.200\" />}\n\n                        <DraggableItem\n                          id={item.name}\n                          item={item}\n                          collective={collective}\n                          onSectionToggle={onSectionToggle}\n                          fontWeight=\"bold\"\n                          showDragIcon\n                          setSubSections={subSections => {\n                            const newSections = cloneDeep(sections);\n                            const subSectionsIdx = newSections.findIndex(\n                              e => e.type === 'CATEGORY' && e.name === item.name,\n                            );\n                            newSections[subSectionsIdx] = { ...newSections[subSectionsIdx], sections: subSections };\n                            setSections(newSections);\n                            setDirty(true);\n                          }}\n                        />\n                      </React.Fragment>\n                    );\n                  })}\n                </SortableContext>\n                <DragOverlay>\n                  {draggingSection ? (\n                    <Item item={draggingSection} collective={collective} isDragOverlay showDragIcon />\n                  ) : null}\n                </DragOverlay>\n              </StyledCard>\n              {error && (\n                <MessageBox type=\"error\" fontSize=\"14px\" withIcon my={2}>\n                  {formatErrorMessage(intl, getErrorFromGraphqlException(error))}\n                </MessageBox>\n              )}\n              <Flex flexWrap=\"wrap\" alignItems=\"center\" justifyContent={['center', 'flex-start']}>\n                <StyledButton\n                  buttonStyle=\"primary\"\n                  m={2}\n                  minWidth={150}\n                  loading={isSubmitting}\n                  disabled={!isDirty}\n                  onClick={async () => {\n                    await submitSetting({\n                      variables: {\n                        account: { id: data.account.id },\n                        key: 'collectivePage',\n                        value: {\n                          ...data.account.settings.collectivePage,\n                          sections,\n                          showGoals: flatten(sections, item => item.sections || item).some(\n                            ({ section }) => section === Sections.GOALS,\n                          ),\n                        },\n                      },\n                    });\n\n                    setDirty(false);\n                  }}\n                >\n                  <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n                </StyledButton>\n                <Box m={2}>\n                  <Link href={`/${collective.slug}`}>\n                    <Span fontSize=\"14px\">\n                      <FormattedMessage id=\"ViewCollectivePage\" defaultMessage=\"View Profile page\" />\n                    </Span>\n                  </Link>\n                </Box>\n              </Flex>\n            </div>\n          )}\n        </Box>\n        <Box ml={[0, null, null, 42]} maxWidth={400} width=\"100%\">\n          <EditCollectivePageFAQ withNewButtons withBorderLeft />\n        </Box>\n      </Flex>\n    </DndContext>\n  );\n};\n\nEditCollectivePage.propTypes = {\n  collective: PropTypes.shape({\n    slug: PropTypes.string,\n    type: PropTypes.string,\n  }),\n};\n\nexport default EditCollectivePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport SettingsSectionTitle from './edit-collective/sections/SettingsSectionTitle';\nimport Container from './Container';\nimport { Box } from './Grid';\nimport InputField from './InputField';\nimport StyledLink from './StyledLink';\nimport { Label, Strong } from './Text';\n\nconst ParameterColumnHeader = styled.th`\n  font-size: 12px;\n  font-weight: bold;\n  padding: 0.1rem 1rem 0.1rem 0;\n`;\n\nclass ExportImages extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { tierIndex: 0 };\n  }\n\n  render() {\n    const { collective } = this.props;\n\n    if (collective.tiers.length === 0) {\n      return <div />;\n    }\n\n    const tiers = collective.tiers.map(tier => {\n      const encodedTierName = encodeURIComponent(tier.name);\n      return {\n        id: tier.id,\n        name: tier.name,\n        images: [\n          {\n            name: 'Tier badge',\n            url: `https://opencollective.com/${collective.slug}/tiers/${tier.slug}/badge.svg?label=${encodedTierName}&color=brightgreen`,\n            code: `<img alt=\"open collective badge\" src=\"https://opencollective.com/${collective.slug}/tiers/${tier.slug}/badge.svg?label=${encodedTierName}&color=brightgreen\" />`,\n            options: [\n              {\n                name: 'label',\n                description: 'badge label',\n                defaultValue: `tier name (${tier.name})`,\n              },\n              {\n                name: 'color',\n                description: 'badge color (brightgreen, green, yellowgreen, yellow, orange, red, lightgrey, blue)',\n                defaultValue: 'brightgreen',\n              },\n            ],\n          },\n          {\n            name: 'Financial contributors widget',\n            url: `https://opencollective.com/${collective.slug}/tiers/${tier.slug}.svg?avatarHeight=36`,\n            code: `<object type=\"image/svg+xml\" data=\"https://opencollective.com/${collective.slug}/tiers/${tier.slug}.svg?avatarHeight=36&width=600\"></object>`,\n            options: [\n              {\n                name: 'width',\n                description: 'image width',\n              },\n              {\n                name: 'height',\n                description: 'image height',\n              },\n              {\n                name: 'limit',\n                description: 'max contributors to show',\n                defaultValue: '(unlimited)',\n              },\n              {\n                name: 'avatarHeight',\n                description: 'max avatar/logo height',\n              },\n              {\n                name: 'button',\n                description: 'show \"become a contributor\" button',\n                defaultValue: 'true',\n              },\n              {\n                name: 'format',\n                description: 'image format (replace .svg with .png or .jpg)',\n              },\n            ],\n          },\n        ],\n      };\n    });\n\n    const tierOptions = tiers.map((tier, index) => {\n      return { [index]: tier.name };\n    });\n    const tier = tiers[this.state.tierIndex];\n\n    return (\n      <div>\n        <SettingsSectionTitle>\n          <FormattedMessage id=\"export.images.title\" defaultMessage=\"Export tier images\" />\n        </SettingsSectionTitle>\n        <p>\n          <FormattedMessage\n            id=\"ExportImages.Title\"\n            defaultMessage=\"You can export images showing the financial contributors to each tier.\"\n          />\n        </p>\n        <div>\n          <InputField\n            name=\"tiers\"\n            type=\"select\"\n            options={tierOptions}\n            onChange={tierIndex => this.setState({ tierIndex })}\n          />\n        </div>\n        {tier && (\n          <ul>\n            {tier.images.map(image => (\n              <Container as=\"li\" key={image.name} mb={4}>\n                <Label fontWeight=\"500\">{image.name}</Label>\n                <div\n                  style={{ maxWidth: '100%' }}\n                  dangerouslySetInnerHTML={{\n                    __html: image.code,\n                  }}\n                />\n                <Box my={1}>\n                  <StyledLink fontSize=\"14px\" href={image.url} openInNewTab>\n                    {image.url}\n                  </StyledLink>\n                </Box>\n                <Container as=\"pre\" whiteSpace=\"pre-wrap\" fontSize=\"11px\" maxWidth={880}>\n                  {image.code}\n                </Container>\n                <Container fontSize=\"14px\" mt={3}>\n                  <Strong>\n                    <FormattedMessage id=\"export.json.parameters.title\" defaultMessage=\"Parameters\" />\n                  </Strong>\n                  <Container as=\"table\" width=\"100%\" css={{ borderSpacing: 16 }}>\n                    <tbody>\n                      <tr>\n                        <ParameterColumnHeader>\n                          <FormattedMessage id=\"Parameter\" defaultMessage=\"Parameter\" />\n                        </ParameterColumnHeader>\n                        <ParameterColumnHeader>\n                          <FormattedMessage id=\"Fields.description\" defaultMessage=\"Description\" />\n                        </ParameterColumnHeader>\n                        <ParameterColumnHeader>\n                          <FormattedMessage id=\"DefaultValue\" defaultMessage=\"Default value\" />\n                        </ParameterColumnHeader>\n                      </tr>\n                      {image.options.map(option => (\n                        <tr key={option.name}>\n                          <td valign=\"top\">{option.name}</td>\n                          <td valign=\"top\">{option.description}</td>\n                          <td valign=\"top\">{option.defaultValue}</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Container>\n                </Container>\n              </Container>\n            ))}\n          </ul>\n        )}\n        <SettingsSectionTitle mt={4}>\n          <FormattedMessage id=\"ExportImages.AllFinancial\" defaultMessage=\"All financial contributors badge\" />\n        </SettingsSectionTitle>\n        <Box mb={2}>\n          <StyledLink\n            fontSize=\"14px\"\n            openInNewTab\n            href={`https://opencollective.com/${collective.slug}/tiers/badge.svg`}\n          >\n            {`https://opencollective.com/${collective.slug}/tiers/badge.svg`}\n          </StyledLink>\n        </Box>\n        <img alt=\"open collective badge\" src={`https://opencollective.com/${collective.slug}/tiers/badge.svg`} />\n      </div>\n    );\n  }\n}\n\nexport default ExportImages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { isOneOfTypes } from '../../../lib/collective-sections';\nimport { CollectiveType } from '../../../lib/constants/collectives';\nimport { exportMembers } from '../../../lib/export_file';\n\nimport Container from '../../Container';\nimport ExportImages from '../../ExportImages';\nimport { Box } from '../../Grid';\nimport StyledButton from '../../StyledButton';\nimport StyledLink from '../../StyledLink';\nimport { H4, P } from '../../Text';\n\nimport SettingsSectionTitle from './SettingsSectionTitle';\n\nclass Export extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { collective } = this.props;\n    const widgetCode = `<script src=\"https://opencollective.com/${collective.slug}/banner.js\"></script>`;\n\n    return (\n      <div>\n        <SettingsSectionTitle mt={2}>\n          <FormattedMessage id=\"Export.Format\" defaultMessage=\"Export {format}\" values={{ format: 'CSV' }} />\n        </SettingsSectionTitle>\n        <P mb={2}>\n          <FormattedMessage\n            id=\"ExportContributors.Description\"\n            defaultMessage=\"Export your contributor data in {format} format\"\n            values={{ format: 'CSV' }}\n          />\n        </P>\n        <StyledButton onClick={async () => await exportMembers(collective.slug)}>\n          <FormattedMessage id=\"Export.Format\" defaultMessage=\"Export {format}\" values={{ format: 'CSV' }} />\n        </StyledButton>\n\n        <SettingsSectionTitle mt={4}>\n          <FormattedMessage id=\"Export.Format\" defaultMessage=\"Export {format}\" values={{ format: 'JSON' }} />\n        </SettingsSectionTitle>\n        <p>\n          <FormattedMessage\n            id=\"ExportContributors.Description\"\n            defaultMessage=\"Export your contributor data in {format} format\"\n            values={{ format: 'JSON' }}\n          />\n        </p>\n        <ul>\n          <li>\n            <FormattedMessage\n              id=\"ExportContributors.All\"\n              defaultMessage=\"All contributors: {link}\"\n              values={{\n                link: (\n                  <StyledLink href={`/${collective.slug}/members/all.json`}>\n                    https://opencollective.com/\n                    {collective.slug}\n                    /members/all.json\n                  </StyledLink>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"ExportContributors.OnlyIndividuals\"\n              defaultMessage=\"Only individuals: {link}\"\n              values={{\n                link: (\n                  <StyledLink href={`/${collective.slug}/members/users.json`}>\n                    https://opencollective.com/\n                    {collective.slug}\n                    /members/users.json\n                  </StyledLink>\n                ),\n              }}\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"ExportContributors.OnlyOrganizations\"\n              defaultMessage=\"Only organizations: {link}\"\n              values={{\n                link: (\n                  <StyledLink href={`/${collective.slug}/members/organizations.json`}>\n                    https://opencollective.com/\n                    {collective.slug}\n                    /members/organizations.json\n                  </StyledLink>\n                ),\n              }}\n            />\n          </li>\n        </ul>\n\n        <H4 fontSize=\"14px\" fontWeight=\"500\">\n          <FormattedMessage id=\"export.json.parameters.title\" defaultMessage=\"Parameters\" />\n        </H4>\n        <Container as=\"table\" fontSize=\"14px\" mb={3} width=\"100%\" css={{ borderSpacing: 16 }}>\n          <tbody>\n            <tr>\n              <td>limit</td>\n              <td>\n                <FormattedMessage id=\"export.json.parameters.limit\" defaultMessage=\"number of contributors to return\" />\n              </td>\n            </tr>\n            <tr>\n              <td>offset</td>\n              <td>\n                <FormattedMessage\n                  id=\"export.json.parameters.offset\"\n                  defaultMessage=\"number of contributors to skip (for paging)\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <Container as=\"td\" pr={2}>\n                TierId\n              </Container>\n              <td>\n                <FormattedMessage\n                  id=\"export.json.parameters.TierId\"\n                  defaultMessage=\"only return contributors that belong to this Tier (select a tier on your Collective page and look at the URL to find its ID).\"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </Container>\n        <Container mb={4}>\n          {collective.tiers[0] && (\n            <div>\n              e.g.,\n              <br />\n              <a href={`/${collective.slug}/members/all.json?limit=10&offset=0&TierId=${collective.tiers[0].id}`}>\n                https://opencollective.com/\n                {collective.slug}\n                /members/all.json?limit=10&offset=0&TierId=\n                {collective.tiers[0].id}\n              </a>\n            </div>\n          )}\n          {!collective.tiers[0] && (\n            <div>\n              e.g.,\n              <br />\n              <a href={`/${collective.slug}/members/all.json?limit=10&offset=0`}>\n                https://opencollective.com/\n                {collective.slug}\n                /members/all.json?limit=10&offset=0\n              </a>\n            </div>\n          )}\n        </Container>\n\n        {!isOneOfTypes(collective, [CollectiveType.EVENT, CollectiveType.PROJECT]) && (\n          <React.Fragment>\n            <SettingsSectionTitle>\n              <FormattedMessage id=\"export.widget.title\" defaultMessage=\"Widget\" />\n            </SettingsSectionTitle>\n            <Container as=\"pre\" fontSize=\"11px\" whiteSpace=\"pre-wrap\" mb={4}>\n              {widgetCode}\n            </Container>\n            <Box my={4}>\n              <ExportImages collective={collective} />\n            </Box>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Export;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/client';\nimport { FormattedMessage } from 'react-intl';\n\nimport { getErrorFromGraphqlException } from '../../../lib/errors';\nimport { API_V2_CONTEXT, gqlV1 } from '../../../lib/graphql/helpers';\nimport useKeyboardShortcut, { ENTER_KEY } from '../../../lib/hooks/useKeyboardKey';\n\nimport { adminPanelQuery } from '../../admin-panel/queries';\nimport Container from '../../Container';\nimport StyledButton from '../../StyledButton';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../../StyledModal';\nimport { P } from '../../Text';\n\nimport SettingsSectionTitle from './SettingsSectionTitle';\n\nconst activateCollectiveAsHostMutation = gqlV1/* GraphQL */ `\n  mutation ActivateCollectiveAsHost($id: Int!) {\n    activateCollectiveAsHost(id: $id) {\n      id\n      currency\n      isHost\n      plan {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst deactivateCollectiveAsHostMutation = gqlV1/* GraphQL */ `\n  mutation DeactivateCollectiveAsHost($id: Int!) {\n    deactivateCollectiveAsHost(id: $id) {\n      id\n      currency\n      isHost\n      plan {\n        id\n        name\n      }\n    }\n  }\n`;\n\nconst activateBudgetMutation = gqlV1/* GraphQL */ `\n  mutation ActivateHostBudget($id: Int!) {\n    activateBudget(id: $id) {\n      id\n      isActive\n    }\n  }\n`;\n\nconst deactivateBudgetMutation = gqlV1/* GraphQL */ `\n  mutation DeactivateHostBudget($id: Int!) {\n    deactivateBudget(id: $id) {\n      id\n      isActive\n    }\n  }\n`;\n\nconst getCollectiveType = type => {\n  switch (type) {\n    case 'ORGANIZATION':\n      return 'Organization';\n    case 'COLLECTIVE':\n      return 'Collective';\n    default:\n      return 'Account';\n  }\n};\n\nconst FiscalHosting = ({ collective }) => {\n  const isHostAccount = collective.isHost;\n  const isBudgetActive = collective.isActive;\n\n  const collectiveType = getCollectiveType(collective.type);\n  const [activateAsHostStatus, setActivateAsHostStatus] = useState({\n    processing: false,\n    error: null,\n  });\n  const [activateBudgetStatus, setActivateBudgetStatus] = useState({\n    processing: false,\n    error: null,\n  });\n\n  const [activateAsHostModal, setActivateAsHostModal] = useState({\n    type: isHostAccount ? 'Activate' : 'Deactivate',\n    show: false,\n  });\n  const [activateBudgetModal, setActivateBudgetModal] = useState({\n    type: collective.isActive ? 'Activate' : 'Deactivate',\n    show: false,\n  });\n\n  const adminPanelMutationParams = {\n    refetchQueries: [{ query: adminPanelQuery, variables: { slug: collective.slug }, context: API_V2_CONTEXT }],\n  };\n  const [activateCollectiveAsHost] = useMutation(activateCollectiveAsHostMutation, adminPanelMutationParams);\n  const [deactivateCollectiveAsHost] = useMutation(deactivateCollectiveAsHostMutation, adminPanelMutationParams);\n\n  const [activateBudget] = useMutation(activateBudgetMutation);\n  const [deactivateBudget] = useMutation(deactivateBudgetMutation);\n\n  const handleActivateAsHost = async ({ id }) => {\n    setActivateAsHostModal({ type: 'Activate', show: false });\n    try {\n      setActivateAsHostStatus({ ...activateAsHostStatus, processing: true });\n      await activateCollectiveAsHost({ variables: { id } });\n      setActivateAsHostStatus({\n        ...activateAsHostStatus,\n        processing: false,\n      });\n    } catch (err) {\n      const errorMsg = getErrorFromGraphqlException(err).message;\n      setActivateAsHostStatus({ ...activateAsHostStatus, processing: false, error: errorMsg });\n    }\n  };\n\n  const handleDeactivateAsHost = async ({ id }) => {\n    setActivateAsHostModal({ type: 'Deactivate', show: false });\n    try {\n      setActivateAsHostStatus({ ...activateAsHostStatus, processing: true });\n      await deactivateCollectiveAsHost({ variables: { id } });\n      setActivateAsHostStatus({\n        ...activateAsHostStatus,\n        processing: false,\n      });\n    } catch (err) {\n      const errorMsg = getErrorFromGraphqlException(err).message;\n      setActivateAsHostStatus({ ...activateAsHostStatus, processing: false, error: errorMsg });\n    }\n  };\n\n  const closeActivateAsHost = () => setActivateAsHostModal({ ...activateAsHostModal, show: false });\n\n  const handleActivateBudget = async ({ id }) => {\n    setActivateBudgetModal({ type: 'Activate', show: false });\n    try {\n      setActivateBudgetStatus({ ...activateBudgetStatus, processing: true });\n      await activateBudget({ variables: { id } });\n      setActivateBudgetStatus({\n        ...activateBudgetStatus,\n        processing: false,\n      });\n    } catch (err) {\n      const errorMsg = getErrorFromGraphqlException(err).message;\n      setActivateBudgetStatus({ ...activateBudgetStatus, processing: false, error: errorMsg });\n    }\n  };\n\n  const handleDeactivateBudget = async ({ id }) => {\n    setActivateBudgetModal({ type: 'Deactivate', show: false });\n    try {\n      setActivateBudgetStatus({ ...activateBudgetStatus, processing: true });\n      await deactivateBudget({ variables: { id } });\n      setActivateBudgetStatus({\n        ...activateBudgetStatus,\n        processing: false,\n      });\n    } catch (err) {\n      const errorMsg = getErrorFromGraphqlException(err).message;\n      setActivateBudgetStatus({ ...activateBudgetStatus, processing: false, error: errorMsg });\n    }\n  };\n\n  const closeActivateBudget = () => setActivateBudgetModal({ ...activateBudgetModal, show: false });\n\n  const handlePrimaryBtnClick = () => {\n    if (activateBudgetModal.type === 'Deactivate') {\n      handleDeactivateBudget({ id: collective.id });\n    } else {\n      handleActivateBudget({ id: collective.id });\n    }\n  };\n\n  useKeyboardShortcut({ callback: handlePrimaryBtnClick, keyMatch: ENTER_KEY });\n\n  return (\n    <Container display=\"flex\" flexDirection=\"column\" width={1} alignItems=\"flex-start\">\n      {!isHostAccount && (\n        <P>\n          <FormattedMessage\n            id=\"collective.hostAccount.activate.description\"\n            defaultMessage={\n              'A Fiscal Host is a legal entity who holds Collective funds in their bank account, manages payouts, and generates invoices and receipts.'\n            }\n          />\n        </P>\n      )}\n\n      {isHostAccount && (\n        <SettingsSectionTitle>\n          <FormattedMessage id=\"host.deactivate\" defaultMessage=\"Deactivate as Host\" />\n        </SettingsSectionTitle>\n      )}\n\n      {isHostAccount && (\n        <P mb={2}>\n          <FormattedMessage\n            values={{ type: collectiveType.toLowerCase() }}\n            id=\"collective.hostAccount.deactivate.description\"\n            defaultMessage={\n              'After deactivating, you will not be able to act as a Host anymore. The profile will remain active as a {type}.'\n            }\n          />\n        </P>\n      )}\n\n      {activateAsHostStatus.error && <P color=\"#ff5252\">{activateAsHostStatus.error}</P>}\n\n      {!isHostAccount && (\n        <StyledButton\n          onClick={() => setActivateAsHostModal({ type: 'Activate', show: true })}\n          loading={activateAsHostStatus.processing}\n          disabled={false}\n          my={2}\n        >\n          <FormattedMessage id=\"collective.activateAsHost\" defaultMessage={'Activate as Host'} />\n        </StyledButton>\n      )}\n\n      {isHostAccount && (\n        <StyledButton\n          onClick={() => setActivateAsHostModal({ type: 'Deactivate', show: true })}\n          loading={activateAsHostStatus.processing}\n          disabled={collective.plan.hostedCollectives > 0}\n          mb={2}\n        >\n          <FormattedMessage id=\"host.deactivate\" defaultMessage={'Deactivate as Host'} />\n        </StyledButton>\n      )}\n\n      {collective.plan.hostedCollectives > 0 && (\n        <P color=\"rgb(224, 183, 0)\" my={1}>\n          <FormattedMessage\n            values={{ hostedCollectives: collective.plan.hostedCollectives }}\n            id=\"collective.hostAccount.deactivate.isHost\"\n            defaultMessage={\n              'You are currently hosting {hostedCollectives} Collectives. To deactivate, they need to be moved to a different Host or archived.'\n            }\n          />\n        </P>\n      )}\n\n      {activateAsHostModal.show && (\n        <StyledModal width=\"570px\" onClose={closeActivateAsHost}>\n          <ModalHeader onClose={closeActivateAsHost}>\n            {activateAsHostModal.type === 'Activate' && (\n              <FormattedMessage id=\"collective.activateAsHost\" defaultMessage={'Activate as Host'} />\n            )}\n            {activateAsHostModal.type === 'Deactivate' && (\n              <FormattedMessage id=\"host.deactivate\" defaultMessage={'Deactivate as Host'} />\n            )}\n          </ModalHeader>\n          <ModalBody>\n            <P mb=\"1rem\">\n              <FormattedMessage\n                id=\"collective.hostAccount.modal.description\"\n                defaultMessage={\n                  'A Fiscal Host is a legal entity (company or individual) who holds Collective funds in their bank account, and can generate invoices and receipts for Financial Contributors.{br}Think of a Fiscal Host as an umbrella organization for its Collectives.'\n                }\n                values={{\n                  br: <br />,\n                }}\n              />\n            </P>\n            <P>\n              {activateAsHostModal.type === 'Activate' && (\n                <FormattedMessage\n                  id=\"collective.hostAccount.modal.activate.body\"\n                  defaultMessage={'Are you sure you want to activate this Fiscal Host?'}\n                />\n              )}\n              {activateAsHostModal.type === 'Deactivate' && (\n                <FormattedMessage\n                  id=\"collective.hostAccount.modal.deactivate.body\"\n                  defaultMessage={'Are you sure you want to deactivate this Fiscal Host?'}\n                />\n              )}\n            </P>\n          </ModalBody>\n          <ModalFooter>\n            <Container display=\"flex\" justifyContent=\"flex-end\">\n              <StyledButton mx={20} onClick={() => setActivateAsHostModal({ ...activateAsHostModal, show: false })}>\n                <FormattedMessage id=\"actions.cancel\" defaultMessage={'Cancel'} />\n              </StyledButton>\n              <StyledButton\n                buttonStyle=\"primary\"\n                data-cy=\"action\"\n                onClick={() => {\n                  if (activateAsHostModal.type === 'Deactivate') {\n                    handleDeactivateAsHost({ id: collective.id });\n                  } else {\n                    handleActivateAsHost({ id: collective.id });\n                  }\n                }}\n              >\n                {activateAsHostModal.type === 'Activate' && (\n                  <FormattedMessage id=\"collective.activateAsHost\" defaultMessage={'Activate as Host'} />\n                )}\n                {activateAsHostModal.type === 'Deactivate' && (\n                  <FormattedMessage id=\"host.deactivate\" defaultMessage={'Deactivate as Host'} />\n                )}\n              </StyledButton>\n            </Container>\n          </ModalFooter>\n        </StyledModal>\n      )}\n\n      {isHostAccount && (\n        <Fragment>\n          {!isBudgetActive && collective.type === 'ORGANIZATION' && (\n            <SettingsSectionTitle mt={4}>\n              <FormattedMessage id=\"FiscalHosting.budget.activate\" defaultMessage=\"Activate Host Budget\" />\n            </SettingsSectionTitle>\n          )}\n\n          {isBudgetActive && (\n            <P mb={2}>\n              <FormattedMessage\n                id=\"FiscalHosting.budget.deactivate.description\"\n                defaultMessage={\n                  'Your Host Budget is activated. It can receive financial contributions and manage expenses.'\n                }\n              />\n            </P>\n          )}\n\n          {!isBudgetActive && collective.type === 'ORGANIZATION' && (\n            <P mb={2}>\n              <FormattedMessage\n                id=\"FiscalHosting.budget.activate.description\"\n                defaultMessage={\n                  'By activating the Host Budget, it will be able to receive financial contributions and manage expenses.'\n                }\n              />\n            </P>\n          )}\n\n          {activateBudgetStatus.error && <P color=\"#ff5252\">{activateBudgetStatus.error}</P>}\n\n          {!isBudgetActive && collective.type === 'ORGANIZATION' && (\n            <StyledButton\n              onClick={() => setActivateBudgetModal({ type: 'Activate', show: true })}\n              loading={activateBudgetStatus.processing}\n              mb={2}\n            >\n              <FormattedMessage id=\"FiscalHosting.budget.activate\" defaultMessage={'Activate Host Budget'} />\n            </StyledButton>\n          )}\n        </Fragment>\n      )}\n\n      {activateBudgetModal.show && (\n        <StyledModal width=\"570px\" onClose={closeActivateBudget}>\n          <ModalHeader onClose={closeActivateBudget}>\n            {activateBudgetModal.type === 'Activate' && (\n              <FormattedMessage id=\"FiscalHosting.budget.activate\" defaultMessage={'Activate Host Budget'} />\n            )}\n            {activateBudgetModal.type === 'Deactivate' && (\n              <FormattedMessage id=\"FiscalHosting.budget.deactivate\" defaultMessage={'Deactivate Host Budget'} />\n            )}\n          </ModalHeader>\n          <ModalBody>\n            <P>\n              {activateBudgetModal.type === 'Activate' && (\n                <FormattedMessage\n                  id=\"FiscalHosting.budget.modal.activate.body\"\n                  defaultMessage={'Are you sure you want to activate the Host budget?'}\n                />\n              )}\n              {activateBudgetModal.type === 'Deactivate' && (\n                <FormattedMessage\n                  id=\"FiscalHosting.budget.modal.deactivate.body\"\n                  defaultMessage={'Are you sure you want to deactivate the Host budget?'}\n                />\n              )}\n            </P>\n          </ModalBody>\n          <ModalFooter>\n            <Container display=\"flex\" justifyContent=\"flex-end\">\n              <StyledButton mx={20} onClick={() => setActivateBudgetModal({ ...activateBudgetModal, show: false })}>\n                <FormattedMessage id=\"actions.cancel\" defaultMessage={'Cancel'} />\n              </StyledButton>\n              <StyledButton buttonStyle=\"primary\" data-cy=\"action\" onClick={() => handlePrimaryBtnClick()}>\n                {activateBudgetModal.type === 'Activate' && (\n                  <FormattedMessage id=\"FiscalHosting.budget.activate\" defaultMessage={'Activate Host Budget'} />\n                )}\n                {activateBudgetModal.type === 'Deactivate' && (\n                  <FormattedMessage id=\"FiscalHosting.budget.deactivate\" defaultMessage={'Deactivate Host Budget'} />\n                )}\n              </StyledButton>\n            </Container>\n          </ModalFooter>\n        </StyledModal>\n      )}\n    </Container>\n  );\n};\n\nFiscalHosting.propTypes = {\n  collective: PropTypes.object.isRequired,\n};\n\nexport default FiscalHosting;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { themeGet } from '@styled-system/theme-get';\nimport dayjs from 'dayjs';\nimport { get } from 'lodash';\nimport { FormattedDate, FormattedMessage, injectIntl } from 'react-intl';\nimport styled, { withTheme } from 'styled-components';\n\nimport { formatCurrency } from '../lib/currency-utils';\n\nimport GiftCard from './icons/GiftCard';\nimport Avatar from './Avatar';\nimport Container from './Container';\nimport { Box, Flex } from './Grid';\nimport Link from './Link';\nimport StyledButton from './StyledButton';\nimport { Span } from './Text';\n\nconst DetailsColumnHeader = styled.span`\n  text-transform: uppercase;\n  color: ${themeGet('colors.black.500')};\n  font-weight: 300;\n  white-space: nowrap;\n`;\n\n/** Render a text status to indicate if gift card is claimed, and by whom */\nconst GiftCardStatus = ({ isConfirmed, collective, data }) => {\n  if (isConfirmed) {\n    return (\n      <FormattedMessage\n        id=\"giftCards.claimedBy\"\n        defaultMessage=\"claimed by {user}\"\n        values={{\n          user: <Link href={`/${collective.slug}`}>{collective.name}</Link>,\n        }}\n      />\n    );\n  } else if (get(data, 'email')) {\n    return (\n      <FormattedMessage\n        id=\"giftCards.sentTo\"\n        defaultMessage=\"sent to {email}\"\n        values={{ email: <a href={`mailto:${data.email}`}>{data.email}</a> }}\n      />\n    );\n  } else {\n    return <FormattedMessage id=\"giftCards.notYetClaimed\" defaultMessage=\"not yet claimed\" />;\n  }\n};\n\nGiftCardStatus.propTypes = {\n  isConfirmed: PropTypes.bool,\n  collective: PropTypes.shape({\n    slug: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  data: PropTypes.shape({\n    email: PropTypes.string,\n  }),\n};\n\n/**\n * Render GiftCard details like its status (claimed or not), who claimed it,\n * when was it created... It is not meant to be show to all users, but just to\n * the organizations that create the gift cards.\n */\nclass GiftCardDetails extends React.Component {\n  static propTypes = {\n    /** The gift card, which is actually a PaymentMethod */\n    giftCard: PropTypes.object.isRequired,\n    /** Collective slug */\n    collectiveSlug: PropTypes.string.isRequired,\n    /** @ignore Provided by styled-component withTheme(...) */\n    theme: PropTypes.object,\n    /** @ignore Provided by injectIntl */\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { expended: false };\n  }\n\n  toggleExpended() {\n    this.setState(state => ({ expended: !state.expended }));\n  }\n\n  getStatusColor(isConfirmed, balance, isExpired) {\n    const { colors } = this.props.theme;\n\n    if (balance === 0 || isExpired) {\n      return colors.black[200];\n    }\n\n    return isConfirmed ? colors.green[500] : colors.yellow[500];\n  }\n\n  renderDetails() {\n    const { giftCard, collectiveSlug } = this.props;\n    const redeemCode = giftCard.uuid.split('-')[0];\n    const email = get(giftCard, 'data.email');\n\n    return (\n      <Flex mt=\"0.75em\" fontSize=\"0.8em\">\n        {!giftCard.isConfirmed && (\n          <Flex flexDirection=\"column\" mr=\"2em\">\n            <DetailsColumnHeader>\n              <FormattedMessage id=\"giftCards.redeemCode\" defaultMessage=\"REDEEM CODE\" />\n            </DetailsColumnHeader>\n            <Link href={{ pathname: `/${collectiveSlug}/redeem/${redeemCode}`, query: { email } }}>{redeemCode}</Link>\n          </Flex>\n        )}\n        <Flex flexDirection=\"column\" mr=\"2em\">\n          <DetailsColumnHeader>\n            <FormattedMessage id=\"giftCards.emmited\" defaultMessage=\"Emitted\" />\n          </DetailsColumnHeader>\n          <FormattedDate value={giftCard.createdAt} />\n        </Flex>\n        <Flex flexDirection=\"column\" mr=\"2em\">\n          <DetailsColumnHeader>\n            <FormattedMessage id=\"giftCards.expiryDate\" defaultMessage=\"EXPIRY DATE\" />\n          </DetailsColumnHeader>\n          <span>{dayjs(giftCard.expiryDate).format('MM/YYYY')}</span>\n        </Flex>\n        <Flex flexDirection=\"column\" mr=\"2em\">\n          <DetailsColumnHeader>\n            <FormattedMessage id=\"giftCards.batch\" defaultMessage=\"Batch name\" />\n          </DetailsColumnHeader>\n          <span>\n            {giftCard.batch || (\n              <Span fontStyle=\"italic\" color=\"black.500\">\n                <FormattedMessage id=\"giftCards.notBatched\" defaultMessage=\"Not batched\" />\n              </Span>\n            )}\n          </span>\n        </Flex>\n        <Flex flexDirection=\"column\" mr=\"2em\">\n          <DetailsColumnHeader>\n            <FormattedMessage id=\"giftCards.description\" defaultMessage=\"DESCRIPTION\" />\n          </DetailsColumnHeader>\n          <span>{giftCard.description}</span>\n        </Flex>\n      </Flex>\n    );\n  }\n\n  renderValue() {\n    const { initialBalance, currency, monthlyLimitPerMember } = this.props.giftCard;\n    const { locale } = this.props.intl;\n\n    return monthlyLimitPerMember ? (\n      <FormattedMessage\n        id=\"giftCards.monthlyValue\"\n        defaultMessage=\"{value} monthly\"\n        values={{ value: formatCurrency(monthlyLimitPerMember, currency, { locale }) }}\n      />\n    ) : (\n      formatCurrency(initialBalance, currency, { locale })\n    );\n  }\n\n  render() {\n    const { isConfirmed, collective, balance, currency, expiryDate, data } = this.props.giftCard;\n    const isExpired = Boolean(expiryDate && new Date(expiryDate) < new Date());\n    const { locale } = this.props.intl;\n\n    return (\n      <Flex data-cy=\"vc-details\">\n        {/* Avatar column */}\n        <Box mr=\"20px\">\n          {isConfirmed ? (\n            <Link href={`/${collective.slug}`} title={collective.name}>\n              <Container>\n                <GiftCard\n                  alignSelf=\"center\"\n                  size=\"2.5em\"\n                  color={this.getStatusColor(isConfirmed, balance, isExpired)}\n                />\n                <Avatar collective={collective} radius={24} mt=\"-1em\" ml=\"1em\" css={{ position: 'absolute' }} />\n              </Container>\n            </Link>\n          ) : (\n            <GiftCard alignSelf=\"center\" size=\"2.5em\" color={this.getStatusColor(isConfirmed, balance, isExpired)} />\n          )}\n        </Box>\n        {/* Infos + details column */}\n        <Flex flexDirection=\"column\" p=\"0.1em\">\n          <Box>\n            <strong>{this.renderValue()}</strong>{' '}\n            <GiftCardStatus isConfirmed={isConfirmed} collective={collective} data={data} />\n          </Box>\n          <Box color={this.props.theme.colors.black[500]} fontSize=\"0.9em\">\n            <Flex alignItems=\"center\">\n              <FormattedMessage\n                id=\"giftCards.balance\"\n                defaultMessage=\"Balance: {balance}\"\n                values={{ balance: formatCurrency(balance, currency, { locale }) }}\n              />\n              {isExpired && (\n                <React.Fragment>\n                  <Box mx={1}>|</Box>\n                  <FormattedMessage id=\"GiftCard.Expired\" defaultMessage=\"Expired\" />\n                </React.Fragment>\n              )}\n              <Box mx={1}>|</Box>\n              <StyledButton\n                isBorderless\n                buttonSize=\"tiny\"\n                buttonStyle=\"secondary\"\n                fontSize=\"11px\"\n                onClick={() => this.toggleExpended()}\n                px={1}\n              >\n                {this.state.expended ? (\n                  <FormattedMessage id=\"closeDetails\" defaultMessage=\"Close Details\" />\n                ) : (\n                  <FormattedMessage id=\"viewDetails\" defaultMessage=\"View Details\" />\n                )}\n              </StyledButton>\n            </Flex>\n          </Box>\n          {this.state.expended && this.renderDetails()}\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default withTheme(injectIntl(GiftCardDetails));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { Add } from '@styled-icons/material/Add';\nimport { get, last, omitBy } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport { withRouter } from 'next/router';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport { gqlV1 } from '../../../lib/graphql/helpers';\n\nimport GiftCardDetails from '../../GiftCardDetails';\nimport { Box, Flex } from '../../Grid';\nimport Link from '../../Link';\nimport Loading from '../../Loading';\nimport Pagination from '../../Pagination';\nimport StyledButton from '../../StyledButton';\nimport StyledButtonSet from '../../StyledButtonSet';\nimport StyledSelect from '../../StyledSelect';\nimport { P } from '../../Text';\n\nconst messages = defineMessages({\n  notBatched: {\n    id: 'giftCards.notBatched',\n    defaultMessage: 'Not batched',\n  },\n  allBatches: {\n    id: 'giftCards.batches.all',\n    defaultMessage: 'All batches',\n  },\n});\n\nconst NOT_BATCHED_KEY = '__not-batched__';\n\n/**\n * A filterable list of gift cards meant to be displayed for organization\n * admins.\n */\nclass GiftCards extends React.Component {\n  static propTypes = {\n    collectiveId: PropTypes.number.isRequired,\n    collectiveSlug: PropTypes.string.isRequired,\n    /** Max number of items to display */\n    limit: PropTypes.number,\n    /** Provided by graphql */\n    data: PropTypes.object,\n    /** Provided by withRouter */\n    router: PropTypes.object,\n    /** @ignore */\n    intl: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { claimedFilter: 'all' };\n  }\n\n  getQueryParams(picked, newParams) {\n    return omitBy({ ...this.props.router.query, ...newParams }, (value, key) => !value || !picked.includes(key));\n  }\n\n  renderFilters(onlyConfirmed) {\n    let selected = 'all';\n    if (onlyConfirmed) {\n      selected = 'redeemed';\n    }\n    if (onlyConfirmed === false) {\n      selected = 'pending';\n    }\n\n    const query = this.getQueryParams(['filter', 'batch']);\n    return (\n      <StyledButtonSet\n        justifyContent=\"center\"\n        mt={[4, 0]}\n        items={['all', 'redeemed', 'pending']}\n        selected={selected}\n        buttonProps={{ p: 1 }}\n        display=\"block\"\n      >\n        {({ item, isSelected }) => (\n          <Link\n            href={{ pathname: `/${this.props.collectiveSlug}/admin/gift-cards`, query: { ...query, filter: item } }}\n          >\n            <P p=\"0.5em 1em\" color={isSelected ? 'white.full' : 'black.800'} style={{ margin: 0 }}>\n              {item === 'all' && <FormattedMessage id=\"giftCards.filterAll\" defaultMessage=\"All\" />}\n              {item === 'redeemed' && <FormattedMessage id=\"giftCards.filterRedeemed\" defaultMessage=\"Redeemed\" />}\n              {item === 'pending' && <FormattedMessage id=\"giftCards.filterPending\" defaultMessage=\"Pending\" />}\n            </P>\n          </Link>\n        )}\n      </StyledButtonSet>\n    );\n  }\n\n  renderNoGiftCardMessage(onlyConfirmed) {\n    if (onlyConfirmed === undefined) {\n      return (\n        <Link href={`/${this.props.collectiveSlug}/admin/gift-cards-create`}>\n          <FormattedMessage id=\"giftCards.createFirst\" defaultMessage=\"Create your first gift card!\" />\n        </Link>\n      );\n    } else if (onlyConfirmed) {\n      return <FormattedMessage id=\"giftCards.emptyClaimed\" defaultMessage=\"No gift cards claimed yet\" />;\n    } else {\n      return <FormattedMessage id=\"giftCards.emptyUnclaimed\" defaultMessage=\"No unclaimed gift cards\" />;\n    }\n  }\n\n  /** Get batch options for select. First option is always \"No batch\" */\n  getBatchesOptions = memoizeOne((batches, selected, intl) => {\n    if (!batches || batches.length < 2) {\n      return [[], null];\n    } else {\n      const options = [\n        { label: intl.formatMessage(messages.allBatches), value: undefined },\n        ...batches.map(batch => ({\n          label: `${batch.name || intl.formatMessage(messages.notBatched)} (${batch.count})`,\n          value: batch.name || NOT_BATCHED_KEY,\n        })),\n      ];\n\n      return [options, options.find(option => option.value === selected)];\n    }\n  });\n\n  render() {\n    const { data, collectiveSlug, intl } = this.props;\n    const queryResult = get(data, 'Collective.createdGiftCards', {});\n    const onlyConfirmed = get(data, 'variables.isConfirmed');\n    const batches = get(data, 'Collective.giftCardsBatches');\n    const { offset, limit, total, paymentMethods = [] } = queryResult;\n    const lastGiftCard = last(paymentMethods);\n    const [batchesOptions, selectedOption] = this.getBatchesOptions(batches, get(data, 'variables.batch'), intl);\n\n    return (\n      <Box mt={4}>\n        <Box mb={4}>\n          <Flex\n            mb={3}\n            flexDirection={['column-reverse', 'row']}\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n          >\n            {this.renderFilters(onlyConfirmed)}\n            <Flex justifyContent=\"center\">\n              <Link href={`/${collectiveSlug}/admin/gift-cards-create`}>\n                <StyledButton buttonStyle=\"primary\" buttonSize=\"medium\">\n                  <Add size=\"1em\" />\n                  {'  '}\n                  <FormattedMessage id=\"giftCards.create\" defaultMessage=\"Create gift cards\" />\n                </StyledButton>\n              </Link>\n            </Flex>\n          </Flex>\n          {batchesOptions.length > 1 && (\n            <Box mb={3}>\n              <StyledSelect\n                inputId=\"batches-options\"\n                options={batchesOptions}\n                onChange={({ value }) =>\n                  this.props.router.push({\n                    pathname: `/${collectiveSlug}/admin/gift-cards`,\n                    query: this.getQueryParams(['filter', 'batch'], { batch: value }),\n                  })\n                }\n                defaultValue={selectedOption}\n              />\n            </Box>\n          )}\n        </Box>\n        {data.loading ? (\n          <Loading />\n        ) : (\n          <div data-cy=\"gift-cards-list\">\n            {paymentMethods.length === 0 && (\n              <Flex justifyContent=\"center\" mt=\"4em\">\n                {this.renderNoGiftCardMessage(onlyConfirmed)}\n              </Flex>\n            )}\n            {paymentMethods.map(v => (\n              <div key={v.id}>\n                <GiftCardDetails giftCard={v} collectiveSlug={this.props.collectiveSlug} />\n                {v !== lastGiftCard && <hr />}\n              </div>\n            ))}\n            {total > limit && (\n              <Flex className=\"vc-pagination\" justifyContent=\"center\" mt={4}>\n                <Pagination offset={offset} total={total} limit={limit} />\n              </Flex>\n            )}\n          </div>\n        )}\n      </Box>\n    );\n  }\n}\n\nconst GIFT_CARDS_PER_PAGE = 15;\n\nconst getIsConfirmedFromFilter = filter => {\n  if (filter === undefined || filter === 'all') {\n    return undefined;\n  }\n  return filter === 'redeemed';\n};\n\n/** A query to get the gift cards created by a collective. Must be authenticated. */\nconst giftCardsQuery = gqlV1/* GraphQL */ `\n  query EditCollectiveGiftCards($CollectiveId: Int, $isConfirmed: Boolean, $limit: Int, $offset: Int, $batch: String) {\n    Collective(id: $CollectiveId) {\n      id\n      giftCardsBatches {\n        id\n        name\n        count\n      }\n      createdGiftCards(isConfirmed: $isConfirmed, limit: $limit, offset: $offset, batch: $batch) {\n        offset\n        limit\n        total\n        paymentMethods {\n          id\n          uuid\n          currency\n          name\n          service\n          type\n          batch\n          data\n          initialBalance\n          monthlyLimitPerMember\n          balance\n          expiryDate\n          isConfirmed\n          data\n          createdAt\n          expiryDate\n          description\n          collective {\n            id\n            slug\n            imageUrl\n            type\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst getGiftCardsVariablesFromProps = ({ collectiveId, router, limit }) => ({\n  CollectiveId: collectiveId,\n  isConfirmed: getIsConfirmedFromFilter(router.query.filter),\n  batch: router.query.batch === NOT_BATCHED_KEY ? null : router.query.batch,\n  offset: Number(router.query.offset) || 0,\n  limit: limit || GIFT_CARDS_PER_PAGE,\n});\n\nconst addGiftCardsData = graphql(giftCardsQuery, {\n  options: props => ({\n    variables: getGiftCardsVariablesFromProps(props),\n    fetchPolicy: 'network-only',\n  }),\n});\n\nexport default withRouter(injectIntl(addGiftCardsData(GiftCards)));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { FormattedMessage } from 'react-intl';\n\nimport { gqlV1 } from '../lib/graphql/helpers';\n\nimport CollectiveCard from './CollectiveCard';\nimport Container from './Container';\nimport Error from './Error';\nimport StyledButton from './StyledButton';\n\nconst COLLECTIVE_CARDS_PER_PAGE = 10;\n\nclass HostsWithData extends React.Component {\n  static propTypes = {\n    tags: PropTypes.arrayOf(PropTypes.string), // only fetch collectives that have those tags\n    onChange: PropTypes.func,\n    limit: PropTypes.number,\n    empty: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    fetchMore: PropTypes.func,\n    refetch: PropTypes.func,\n    data: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.fetchMore = this.fetchMore.bind(this);\n    this.refetch = this.refetch.bind(this);\n    this.state = {\n      role: null,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    const { onChange } = this.props;\n    onChange && this.node && onChange({ height: this.node.offsetHeight });\n  }\n\n  fetchMore(e) {\n    const { onChange } = this.props;\n    e.target.blur();\n    this.setState({ loading: true });\n    this.props.fetchMore().then(() => {\n      this.setState({ loading: false });\n      onChange && onChange({ height: this.node.offsetHeight });\n    });\n  }\n\n  refetch(role) {\n    this.setState({ role });\n    this.props.refetch({ role });\n  }\n\n  render() {\n    const { data } = this.props;\n\n    if (data.error) {\n      return <Error message={data.error.message} />;\n    }\n    if (!data.allHosts || !data.allHosts.collectives) {\n      return <div />;\n    }\n    const collectives = [...data.allHosts.collectives];\n    if (collectives.length === 0) {\n      return (\n        <div className=\"empty\" style={{ marginTop: '1rem' }}>\n          {this.props.empty || ''}\n        </div>\n      );\n    }\n\n    const limit = this.props.limit || COLLECTIVE_CARDS_PER_PAGE * 2;\n    return (\n      <Container ref={node => (this.node = node)}>\n        <Container\n          display=\"flex\"\n          flexWrap=\"wrap\"\n          flexDirection=\"row\"\n          justifyContent=\"center\"\n          overflow=\"hidden\"\n          margin=\"1rem 0\"\n        >\n          {collectives.map(collective => (\n            <CollectiveCard margin=\"1rem\" key={collective.id} collective={collective} />\n          ))}\n        </Container>\n        {collectives.length % 10 === 0 && collectives.length >= limit && (\n          <Container margin=\"1rem\" textAlign=\"center\">\n            <StyledButton onClick={this.fetchMore}>\n              {this.state.loading && <FormattedMessage id=\"loading\" defaultMessage=\"loading\" />}\n              {!this.state.loading && <FormattedMessage id=\"loadMore\" defaultMessage=\"load more\" />}\n            </StyledButton>\n          </Container>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst hostsQuery = gqlV1/* GraphQL */ `\n  query Hosts(\n    $tags: [String]\n    $currency: String\n    $limit: Int\n    $offset: Int\n    $orderBy: HostCollectiveOrderFieldType\n    $orderDirection: OrderDirection\n  ) {\n    allHosts(\n      tags: $tags\n      currency: $currency\n      limit: $limit\n      offset: $offset\n      orderBy: $orderBy\n      orderDirection: $orderDirection\n    ) {\n      id\n      total\n      collectives {\n        id\n        isHost\n        type\n        createdAt\n        slug\n        name\n        description\n        longDescription\n        currency\n        backgroundImage\n        stats {\n          id\n          collectives {\n            id\n            hosted\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const addHostsData = graphql(hostsQuery, {\n  options: props => ({\n    variables: {\n      tags: props.tags,\n      currency: props.currency,\n      orderBy: props.orderBy,\n      orderDirection: props.orderDirection,\n      offset: 0,\n      limit: props.limit || COLLECTIVE_CARDS_PER_PAGE * 2,\n    },\n  }),\n  props: ({ data, ownProps }) => ({\n    data,\n    fetchMore: () =>\n      data.fetchMore({\n        variables: {\n          offset: data.allHosts.collectives.length,\n          limit: ownProps.limit || COLLECTIVE_CARDS_PER_PAGE,\n        },\n        updateQuery: (previousResult, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return previousResult;\n          }\n          // Update the results object with new entries\n          const { __typename, total, collectives } = previousResult.allHosts;\n          const all = collectives.concat(fetchMoreResult.allHosts.collectives);\n          return Object.assign({}, previousResult, {\n            allHosts: { __typename, total, collectives: all },\n          });\n        },\n      }),\n  }),\n});\n\nexport default addHostsData(HostsWithData);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Box, Flex } from '../Grid';\nimport InputField from '../InputField';\n\nclass CreateOrganizationForm extends React.Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = { form: {} };\n\n    this.messages = defineMessages({\n      'order.organization.name': {\n        id: 'Fields.name',\n        defaultMessage: 'Name',\n      },\n      'order.organization.website': {\n        id: 'Fields.website',\n        defaultMessage: 'Website',\n      },\n      'order.organization.twitterHandle.description': {\n        id: 'tier.order.organization.twitterHandle.description',\n        defaultMessage: 'optional',\n      },\n    });\n  }\n\n  handleChange(attr, value) {\n    const { form } = this.state;\n    form[attr] = value;\n    this.setState({ form });\n    this.props.onChange(form);\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <section className=\"organizationDetailsForm\">\n        <Flex flexWrap=\"wrap\" key=\"organization.name.input\">\n          <Box width={1}>\n            <InputField\n              className=\"horizontal\"\n              type=\"text\"\n              name=\"organization_name\"\n              label={intl.formatMessage(this.messages['order.organization.name'])}\n              onChange={value => this.handleChange('name', value)}\n            />\n          </Box>\n        </Flex>\n        <Flex flexWrap=\"wrap\" key=\"organization.website.input\">\n          <Box width={1}>\n            <InputField\n              className=\"horizontal\"\n              type=\"text\"\n              name=\"organization_website\"\n              label={intl.formatMessage(this.messages['order.organization.website'])}\n              onChange={value => this.handleChange('website', value)}\n            />\n          </Box>\n        </Flex>\n        <Flex flexWrap=\"wrap\" key=\"organization.twitterHandle.input\">\n          <Box width={1}>\n            <InputField\n              className=\"horizontal\"\n              type=\"text\"\n              name=\"organization_twitterHandle\"\n              pre=\"@\"\n              label=\"Twitter\"\n              help={intl.formatMessage(this.messages['order.organization.twitterHandle.description'])}\n              onChange={value => this.handleChange('twitterHandle', value)}\n            />\n          </Box>\n        </Flex>\n      </section>\n    );\n  }\n}\n\nexport default injectIntl(CreateOrganizationForm);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { get, groupBy } from 'lodash';\nimport { withRouter } from 'next/router';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport { Box, Flex } from '../Grid';\nimport InputField from '../InputField';\nimport StyledButton from '../StyledButton';\n\nimport CreateOrganizationForm from './CreateOrganizationForm';\nimport EditConnectedAccount from './EditConnectedAccount';\n\nclass CreateHostForm extends React.Component {\n  static propTypes = {\n    organizations: PropTypes.arrayOf(PropTypes.object).isRequired,\n    collective: PropTypes.object.isRequired,\n    userCollective: PropTypes.object.isRequired,\n    createOrganization: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired, // when selecting the host to use\n    intl: PropTypes.object.isRequired,\n    router: PropTypes.object, // from withRouter\n  };\n\n  constructor(props) {\n    super(props);\n\n    const hostId = this.getDefaultHostId();\n\n    this.state = { form: { hostId } };\n\n    this.messages = defineMessages({\n      'hostType.label': {\n        id: 'host.types.label',\n        defaultMessage: 'Select Host type',\n      },\n      'hostId.label': {\n        id: 'host.hostId.label',\n        defaultMessage: 'Select Organization',\n      },\n      'host.types.user.label': {\n        id: 'host.types.user.label',\n        defaultMessage: 'An individual (me)',\n      },\n      'host.types.organization.label': {\n        id: 'host.types.organization.label',\n        defaultMessage: 'An Organization',\n      },\n      'organization.create': {\n        id: 'host.organization.create',\n        defaultMessage: 'Create an Organization',\n      },\n    });\n  }\n\n  async createOrganization(org) {\n    const organization = await this.props.createOrganization(org);\n\n    this.setState(state => ({\n      host: organization,\n      form: {\n        ...state.form,\n        hostId: organization.id,\n      },\n    }));\n  }\n\n  handleChange(attr, value) {\n    const { form } = this.state;\n\n    form[attr] = value;\n\n    this.setState({ form });\n  }\n\n  getDefaultHostId() {\n    return get(this.props, 'organizations[0].id', 0);\n  }\n\n  getOrganizationsOptions() {\n    const organizationsOptions = this.props.organizations.map(({ name, id }) => ({ label: name, value: id }));\n\n    organizationsOptions.push({\n      label: this.props.intl.formatMessage({\n        id: 'host.organization.create',\n        defaultMessage: 'Create an Organization',\n      }),\n      value: 0,\n    });\n\n    return organizationsOptions;\n  }\n\n  getInputFields() {\n    const fields = [\n      {\n        name: 'hostId',\n        type: 'select',\n        options: this.getOrganizationsOptions(),\n        value: this.state.form.hostId,\n      },\n    ];\n\n    return fields.map(field => {\n      if (this.messages[`${field.name}.label`]) {\n        field.label = this.props.intl.formatMessage(this.messages[`${field.name}.label`]);\n      }\n      return field;\n    });\n  }\n\n  getHost() {\n    if (this.state.host) {\n      return this.state.host;\n    } else {\n      return this.props.organizations.find(c => c.id === Number(this.state.form.hostId));\n    }\n  }\n\n  render() {\n    const host = this.getHost();\n\n    const connectedAccounts = host && groupBy(host.connectedAccounts, 'service');\n    const stripeAccount = connectedAccounts && connectedAccounts['stripe'] && connectedAccounts['stripe'][0];\n\n    return (\n      <div className=\"CreateHostForm\">\n        {this.getInputFields().map(\n          field =>\n            (!field.when || field.when()) && (\n              <Flex key={`${field.name}.input`}>\n                <Box width={1}>\n                  <InputField {...field} onChange={value => this.handleChange(field.name, value)} />\n                </Box>\n              </Flex>\n            ),\n        )}\n\n        {!host && (\n          <Fragment>\n            <CreateOrganizationForm onChange={org => this.handleChange('organization', org)} />\n            <StyledButton\n              buttonStyle=\"primary\"\n              type=\"submit\"\n              onClick={() => this.createOrganization(this.state.form.organization)}\n              className=\"createOrganizationBtn\"\n            >\n              <FormattedMessage id=\"organization.create\" defaultMessage=\"Create Organization\" />\n            </StyledButton>\n          </Fragment>\n        )}\n\n        {host && (\n          <Flex flexDirection={['column', 'row', 'row']} justifyContent=\"space-between\" alignItems=\"flex-end\">\n            <Box my={[3]}>\n              <StyledButton buttonStyle=\"primary\" type=\"submit\" onClick={() => this.props.onSubmit(host)}>\n                <FormattedMessage id=\"host.link\" defaultMessage=\"Yes, use this Organization as the Fiscal Host\" />\n              </StyledButton>\n            </Box>\n            {!stripeAccount && (\n              <Box textAlign=\"right\">\n                <EditConnectedAccount collective={host} service=\"stripe\" />\n              </Box>\n            )}\n          </Flex>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(CreateHostForm));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { cloneDeep, get } from 'lodash';\n\nimport { getErrorFromGraphqlException } from '../../lib/errors';\nimport { gqlV1 } from '../../lib/graphql/helpers';\nimport { compose } from '../../lib/utils';\n\nimport { Flex } from '../Grid';\nimport LoadingGrid from '../LoadingGrid';\n\nimport CreateHostForm from './CreateHostForm';\n\nclass CreateHostFormWithData extends React.Component {\n  static propTypes = {\n    LoggedInUser: PropTypes.object.isRequired,\n    collective: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    createCollective: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.createOrganization = this.createOrganization.bind(this);\n  }\n\n  async createOrganization(CollectiveInputType) {\n    this.setState({ status: 'loading' });\n    CollectiveInputType.type = 'ORGANIZATION';\n    try {\n      const res = await this.props.createCollective(CollectiveInputType);\n      const collective = res.data.createCollective;\n      return collective;\n    } catch (err) {\n      const errorMsg = getErrorFromGraphqlException(err).message;\n      this.setState({ result: { error: errorMsg } });\n      throw new Error(errorMsg);\n    }\n  }\n\n  render() {\n    const { data, collective } = this.props;\n\n    const userCollective = data.Collective;\n    if (!userCollective) {\n      return (\n        <Flex py={3} width={1} justifyContent=\"center\">\n          <LoadingGrid />\n        </Flex>\n      );\n    }\n\n    const organizations = [];\n    userCollective.memberOf.map(membership => {\n      organizations.push(membership.collective);\n    });\n\n    return (\n      <CreateHostForm\n        organizations={organizations}\n        collective={collective}\n        userCollective={userCollective}\n        createOrganization={this.createOrganization}\n        onSubmit={this.props.onSubmit}\n      />\n    );\n  }\n}\n\nconst editCollectiveConnectedAccountsQuery = gqlV1/* GraphQL */ `\n  query EditCollectiveConnectedAccounts($slug: String!) {\n    Collective(slug: $slug) {\n      id\n      isHost\n      slug\n      memberOf(role: \"ADMIN\", type: \"ORGANIZATION\") {\n        id\n        collective {\n          id\n          slug\n          name\n          isHost\n          createdAt\n          imageUrl\n          connectedAccounts {\n            id\n            service\n            createdAt\n            updatedAt\n          }\n        }\n      }\n      connectedAccounts {\n        id\n        service\n        createdAt\n        updatedAt\n      }\n    }\n  }\n`;\n\nexport const addEditCollectiveConnectedAccountsData = graphql(editCollectiveConnectedAccountsQuery, {\n  options: props => ({\n    variables: {\n      slug: get(props, 'LoggedInUser.collective.slug'),\n    },\n  }),\n});\n\nconst editCollectiveCreateHostMutation = gqlV1/* GraphQL */ `\n  mutation EditCollectiveCreateHost($collective: CollectiveInputType!) {\n    createCollective(collective: $collective) {\n      id\n      slug\n      name\n      imageUrl\n      createdAt\n    }\n  }\n`;\n\nconst addEditCollectiveCreateHostMutation = graphql(editCollectiveCreateHostMutation, {\n  props: ({ ownProps, mutate }) => ({\n    createCollective: async CollectiveInputType =>\n      await mutate({\n        variables: { collective: CollectiveInputType },\n        update: (proxy, { data: { createCollective } }) => {\n          const variables = {\n            slug: get(ownProps, 'LoggedInUser.collective.slug'),\n          };\n\n          // Retrieve the query from the cache\n          const data = cloneDeep(\n            proxy.readQuery({\n              query: editCollectiveConnectedAccountsQuery,\n              variables,\n            }),\n          );\n\n          // Insert new Collective at the beginning\n          const membership = {\n            createdAt: createCollective.createdAt,\n            id: Math.round(Math.random() * 10000000),\n            __typename: 'MemberType',\n            collective: {\n              ...createCollective,\n              isHost: false,\n              connectedAccounts: [],\n            },\n          };\n          data.Collective.memberOf.push(membership);\n\n          // write data back for the query\n          proxy.writeQuery({\n            query: editCollectiveConnectedAccountsQuery,\n            variables,\n            data,\n          });\n        },\n      }),\n  }),\n});\n\nconst addGraphql = compose(addEditCollectiveConnectedAccountsData, addEditCollectiveCreateHostMutation);\n\nexport default addGraphql(CreateHostFormWithData);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { get, groupBy } from 'lodash';\nimport { withRouter } from 'next/router';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { formatCurrency } from '../../../lib/currency-utils';\nimport { formatDate, getWebsiteUrl } from '../../../lib/utils';\n\nimport CollectiveCard from '../../CollectiveCard';\nimport Container from '../../Container';\nimport { Box, Flex } from '../../Grid';\nimport HostsWithData from '../../HostsWithData';\nimport { getI18nLink } from '../../I18nFormatters';\nimport Link from '../../Link';\nimport MessageBox from '../../MessageBox';\nimport StyledButton from '../../StyledButton';\nimport StyledInput from '../../StyledInput';\nimport StyledLink from '../../StyledLink';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../../StyledModal';\nimport { H4, P } from '../../Text';\nimport CreateHostFormWithData from '../CreateHostFormWithData';\nimport EditConnectedAccount from '../EditConnectedAccount';\n\nconst OptionLabel = styled.label`\n  display: block;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nconst Fineprint = styled.div`\n  font-size: 14px;\n`;\n\nconst EditCollectiveHostSection = styled.div`\n  h2 label {\n    cursor: pointer;\n    width: auto;\n  }\n\n  select {\n    cursor: pointer;\n  }\n`;\n\nclass Host extends React.Component {\n  static propTypes = {\n    goals: PropTypes.arrayOf(PropTypes.object),\n    collective: PropTypes.object.isRequired,\n    LoggedInUser: PropTypes.object.isRequired,\n    editCollectiveMutation: PropTypes.func.isRequired,\n    router: PropTypes.object.isRequired, // from withRouter\n    intl: PropTypes.object.isRequired, // from injectIntl\n  };\n\n  constructor(props) {\n    super(props);\n    this.changeHost = this.changeHost.bind(this);\n    this.updateSelectedOption = this.updateSelectedOption.bind(this);\n    this.state = {\n      collective: props.collective,\n      showModal: false,\n      action: '',\n      isSubmitting: false,\n    };\n  }\n\n  updateSelectedOption(option) {\n    this.props.router.push({\n      pathname: `/${this.props.collective.slug}/admin/host`,\n      query: {\n        selectedOption: option,\n      },\n    });\n  }\n\n  async changeHost(newHost = { id: null }) {\n    const { collective } = this.props;\n    this.setState({ showModal: false });\n    if (newHost.id === get(collective, 'host.id')) {\n      return;\n    }\n\n    this.setState({ isSubmitting: true });\n    try {\n      await this.props.editCollectiveMutation({\n        id: collective.id,\n        HostCollectiveId: newHost.id,\n      });\n      if (!newHost.id) {\n        this.updateSelectedOption('noHost');\n      }\n    } finally {\n      this.setState({ isSubmitting: false });\n    }\n  }\n\n  renderLegalNameSetInfoMessage(collective) {\n    return (\n      <MessageBox type=\"info\" fontSize=\"13px\" withIcon>\n        <FormattedMessage\n          id=\"collective.edit.host.legalName.info\"\n          defaultMessage=\"Please set the legal name {isSelfHosted, select, false {of the host} other {}} in the Info section of <SettingsLink>the settings</SettingsLink>. This is required if the legal name is different than the display name for tax and accounting purposes.\"\n          values={{\n            SettingsLink: getI18nLink({ href: `/${collective.host?.slug}/admin` }),\n            isSelfHosted: collective.id === collective.host?.id,\n          }}\n        />\n      </MessageBox>\n    );\n  }\n\n  render() {\n    const { LoggedInUser, collective, router, intl } = this.props;\n    const { showModal, action } = this.state;\n    const { locale } = intl;\n\n    const selectedOption = get(router, 'query.selectedOption', 'noHost');\n    const hostMembership = get(collective, 'members', []).find(m => m.role === 'HOST');\n\n    const closeModal = () => this.setState({ showModal: false });\n    const showLegalNameInfoBox = LoggedInUser?.isHostAdmin(collective) && !collective?.host?.legalName;\n\n    if (get(collective, 'host.id') === collective.id) {\n      return (\n        <Fragment>\n          <p>\n            <FormattedMessage\n              id=\"editCollective.selfHost.label\"\n              defaultMessage=\"{type, select, COLLECTIVE {Your Collective} FUND {Your Fund} other {Your Account}} hold its own funds; it doesn't use a Fiscal Host.\"\n              values={{\n                type: collective.type,\n              }}\n            />\n          </p>\n          {collective.stats.balance > 0 && (\n            <Fragment>\n              <p>\n                <FormattedMessage\n                  id=\"editCollective.selfHost.balance\"\n                  defaultMessage=\"Current balance: {balance}.\"\n                  values={{\n                    balance: formatCurrency(collective.stats.balance, collective.currency, { locale }),\n                    type: collective.type,\n                  }}\n                />{' '}\n                <FormattedMessage\n                  id=\"editCollective.selfHost.change.balanceNotEmpty\"\n                  defaultMessage=\"To change your Fiscal Host, you first need to empty {type, select, COLLECTIVE {your Collective's balance} FUND {your Fund's balance} other {your balance}} by submitting and paying expenses.\"\n                  values={{\n                    type: collective.type,\n                  }}\n                />\n              </p>\n            </Fragment>\n          )}\n          {showLegalNameInfoBox && <Container>{this.renderLegalNameSetInfoMessage(collective)}</Container>}\n          {collective.stats.balance === 0 && (\n            <Fragment>\n              <p>\n                <StyledButton\n                  buttonStyle=\"primary\"\n                  type=\"submit\"\n                  onClick={() => this.changeHost()}\n                  minWidth={200}\n                  loading={this.state.isSubmitting}\n                >\n                  <FormattedMessage id=\"editCollective.selfHost.removeBtn\" defaultMessage=\"Reset Fiscal Host\" />\n                </StyledButton>\n              </p>\n            </Fragment>\n          )}\n        </Fragment>\n      );\n    }\n\n    if (get(collective, 'host.id')) {\n      const name = collective.host.name;\n\n      return (\n        <Fragment>\n          <Flex flexDirection={['column', 'row']}>\n            <Box p={1} mr={3} width={[1, 1 / 2]}>\n              <CollectiveCard collective={collective.host} membership={hostMembership} />\n            </Box>\n            <Box>\n              {!collective.isActive && (\n                <Fragment>\n                  <p>\n                    <FormattedMessage\n                      id=\"editCollective.host.pending\"\n                      defaultMessage=\"You applied to be hosted by {host} on {date}. Your application is being reviewed.\"\n                      values={{\n                        host: get(collective, 'host.name'),\n                        date: formatDate(get(hostMembership, 'createdAt'), {\n                          day: 'numeric',\n                          month: 'long',\n                          year: 'numeric',\n                        }),\n                      }}\n                    />\n                  </p>\n                  <p>\n                    <StyledButton\n                      buttonStyle=\"primary\"\n                      type=\"submit\"\n                      onClick={() => this.setState({ showModal: true, action: 'Withdraw' })}\n                    >\n                      <FormattedMessage\n                        id=\"editCollective.host.cancelApplicationBtn\"\n                        defaultMessage=\"Withdraw application\"\n                      />\n                    </StyledButton>\n                  </p>\n                </Fragment>\n              )}\n              {collective.isActive && (\n                <Fragment>\n                  <p>\n                    <FormattedMessage\n                      id=\"editCollective.host.label\"\n                      defaultMessage=\"Your Fiscal Host is {host}.\"\n                      values={{ host: get(collective, 'host.name') }}\n                    />\n                  </p>\n                  {collective.stats.balance > 0 && (\n                    <p>\n                      <FormattedMessage\n                        id=\"editCollective.host.balance\"\n                        defaultMessage=\"It currently holds {balance} on behalf of {type, select, COLLECTIVE {your Collective} FUND {your Fund} other {your Account}}.\"\n                        values={{\n                          balance: formatCurrency(collective.stats.balance, collective.currency, { locale }),\n                          type: collective.type,\n                        }}\n                      />\n                    </p>\n                  )}\n                  {collective.stats.balance > 0 && (\n                    <p>\n                      <FormattedMessage\n                        id=\"editCollective.host.change.balanceNotEmpty\"\n                        defaultMessage=\"To change your Fiscal Host, you first need to empty {type, select, COLLECTIVE {your Collective's balance} FUND {your Fund's balance} other {your balance}}. You can do this by submitting expenses, making financial contributions, or sending the balance to your Fiscal Host using the {emptyBalanceLink} feature.\"\n                        values={{\n                          type: collective.type,\n                          emptyBalanceLink: (\n                            <Link href={`/${collective.slug}/admin/advanced`}>\n                              <FormattedMessage id=\"emptyBalance\" defaultMessage=\"Empty Balance\" />\n                            </Link>\n                          ),\n                        }}\n                      />\n                    </p>\n                  )}\n                  {collective.stats.balance === 0 && (\n                    <Fragment>\n                      <p>\n                        <StyledButton\n                          buttonStyle=\"primary\"\n                          type=\"submit\"\n                          onClick={() => this.setState({ showModal: true, action: 'Remove' })}\n                        >\n                          <FormattedMessage id=\"editCollective.host.removeBtn\" defaultMessage=\"Remove Host\" />\n                        </StyledButton>\n                      </p>\n                      <Fineprint>\n                        <FormattedMessage\n                          id=\"editCollective.host.change.removeFirst\"\n                          defaultMessage=\"Without a Fiscal Host, {type, select, COLLECTIVE {your Collective} FUND {your Fund} other {}} won't be able to accept financial contributions. You will be able to apply to another Fiscal Host.\"\n                          values={{ type: collective.type }}\n                        />\n                      </Fineprint>\n                    </Fragment>\n                  )}\n                  {showLegalNameInfoBox && (\n                    <Container mt={4}>{this.renderLegalNameSetInfoMessage(collective)}</Container>\n                  )}\n                </Fragment>\n              )}\n            </Box>\n          </Flex>\n          {showModal && (\n            <StyledModal width=\"570px\" onClose={closeModal}>\n              <ModalHeader onClose={closeModal}>\n                {action === 'Remove' ? (\n                  <FormattedMessage\n                    id=\"collective.editHost.remove\"\n                    values={{ name }}\n                    defaultMessage={'Remove {name}'}\n                  />\n                ) : (\n                  <FormattedMessage\n                    id=\"collective.editHost.header\"\n                    values={{ name }}\n                    defaultMessage={'Withdraw application to {name}'}\n                  />\n                )}\n              </ModalHeader>\n              <ModalBody>\n                <P>\n                  {action === 'Withdraw' && (\n                    <FormattedMessage\n                      id=\"collective.editHost.withdrawApp\"\n                      values={{ name }}\n                      defaultMessage={'Are you sure you want to withdraw your application to {name}?'}\n                    />\n                  )}\n                  {action === 'Remove' && (\n                    <FormattedMessage\n                      id=\"collective.editHost.removeHost\"\n                      values={{ name }}\n                      defaultMessage={'Are you sure you want to remove {name}?'}\n                    />\n                  )}\n                </P>\n              </ModalBody>\n              <ModalFooter>\n                <Container display=\"flex\" justifyContent=\"flex-end\">\n                  <StyledButton\n                    mx={20}\n                    onClick={() =>\n                      this.setState({\n                        showModal: false,\n                      })\n                    }\n                  >\n                    <FormattedMessage id=\"actions.cancel\" defaultMessage={'Cancel'} />\n                  </StyledButton>\n                  <StyledButton buttonStyle=\"primary\" onClick={() => this.changeHost()} data-cy=\"continue\">\n                    {/** TODO(i18n): This should be internationalized */}\n                    {action}\n                  </StyledButton>\n                </Container>\n              </ModalFooter>\n            </StyledModal>\n          )}\n        </Fragment>\n      );\n    }\n\n    const connectedAccounts = groupBy(collective.connectedAccounts, 'service');\n    const stripeAccount = connectedAccounts && connectedAccounts['stripe'] && connectedAccounts['stripe'][0];\n\n    return (\n      <EditCollectiveHostSection>\n        <H4 fontSize=\"15px\" mb={3}>\n          <FormattedMessage\n            id=\"acceptContributions.picker.subtitle\"\n            defaultMessage=\"Who will hold money on behalf of this Collective?\"\n          />\n        </H4>\n        <div id=\"noHost\">\n          <Flex>\n            <Box flex=\"0 0 35px\" mr={2} pl={2}>\n              <StyledInput\n                type=\"radio\"\n                name=\"host-radio\"\n                id=\"host-radio-noHost\"\n                checked={selectedOption === 'noHost'}\n                onChange={() => this.updateSelectedOption('noHost')}\n                className=\"hostRadio\"\n              />\n            </Box>\n            <Box mb={4}>\n              <OptionLabel htmlFor=\"host-radio-noHost\">\n                <FormattedMessage defaultMessage=\"No one\" />\n              </OptionLabel>\n              <FormattedMessage\n                id=\"collective.edit.host.noHost.description\"\n                defaultMessage=\"You can't receive financial contributions or use the budget features. You can still edit your profile page, submit expenses to be paid later, and post updates.\"\n              />\n            </Box>\n          </Flex>\n        </div>\n\n        <div id=\"selfHost\">\n          <Flex>\n            <Box flex=\"0 0 35px\" mr={2} pl={2}>\n              <StyledInput\n                type=\"radio\"\n                name=\"host-radio\"\n                id=\"host-radio-selfHost\"\n                checked={selectedOption === 'selfHost'}\n                onChange={() => this.updateSelectedOption('selfHost')}\n                className=\"hostRadio\"\n              />\n            </Box>\n            <Box mb={4}>\n              <OptionLabel htmlFor=\"host-radio-selfHost\">\n                <FormattedMessage id=\"acceptContributions.picker.ourselves\" defaultMessage=\"Independent Collective\" />\n              </OptionLabel>\n              <FormattedMessage\n                id=\"collective.edit.host.selfHost.description\"\n                defaultMessage=\"Simply connect a bank account for a single Collective. You will be responsible for accounting, taxes, payments, and liability.\"\n              />\n              &nbsp;\n              <StyledLink href=\"https://docs.opencollective.com/help/independent-collectives\" openInNewTab>\n                <FormattedMessage id=\"moreInfo\" defaultMessage=\"More info\" />\n              </StyledLink>\n              {selectedOption === 'selfHost' && LoggedInUser && (\n                <Flex\n                  flexDirection={['column', 'row', 'row']}\n                  justifyContent=\"space-between\"\n                  alignItems=\"flex-end\"\n                  mt={3}\n                >\n                  <Box mb={[3]}>\n                    <StyledButton\n                      buttonStyle=\"primary\"\n                      type=\"submit\"\n                      onClick={() => this.changeHost({ id: collective.id })}\n                      loading={this.state.isSubmitting}\n                      minWidth={200}\n                    >\n                      <FormattedMessage\n                        id=\"host.selfHost.confirm\"\n                        defaultMessage=\"Yes, Activate Independent Collective\"\n                      />\n                    </StyledButton>\n                  </Box>\n                  {!stripeAccount && (\n                    <Box textAlign=\"right\">\n                      <EditConnectedAccount\n                        collective={collective}\n                        service=\"stripe\"\n                        options={{\n                          redirect: `${getWebsiteUrl()}/${collective.slug}/admin/host?selectedOption=selfHost`,\n                        }}\n                      />\n                    </Box>\n                  )}\n                </Flex>\n              )}\n            </Box>\n          </Flex>\n        </div>\n\n        <div id=\"ownHost\">\n          <Flex>\n            <Box flex=\"0 0 35px\" mr={2} pl={2}>\n              <StyledInput\n                type=\"radio\"\n                id=\"host-radio-ownHost\"\n                name=\"host-radio\"\n                checked={selectedOption === 'ownHost'}\n                onChange={() => this.updateSelectedOption('ownHost')}\n                className=\"hostRadio\"\n              />\n            </Box>\n            <Box mb={4}>\n              <OptionLabel htmlFor=\"host-radio-ownHost\">\n                <FormattedMessage id=\"acceptContributions.organization.subtitle\" defaultMessage=\"Our Own Fiscal Host\" />\n              </OptionLabel>\n              <FormattedMessage\n                id=\"collective.edit.host.useOwn.description\"\n                defaultMessage=\"Select or create your own Fiscal Host, which you manage to hold funds for multiple Collectives, to hold funds and do associated admin for this Collective.\"\n              />\n              &nbsp;\n              <StyledLink href=\"https://docs.opencollective.com/help/fiscal-hosts/become-a-fiscal-host\" openInNewTab>\n                <FormattedMessage id=\"moreInfo\" defaultMessage=\"More info\" />\n              </StyledLink>\n              {selectedOption === 'ownHost' && LoggedInUser && (\n                <CreateHostFormWithData\n                  collective={collective}\n                  LoggedInUser={LoggedInUser}\n                  onSubmit={hostCollective => this.changeHost(hostCollective)}\n                />\n              )}\n            </Box>\n          </Flex>\n        </div>\n\n        <div id=\"findHost\">\n          <Flex>\n            <Box flex=\"0 0 35px\" mr={2} pl={2}>\n              <StyledInput\n                type=\"radio\"\n                name=\"host-radio\"\n                id=\"host-radio-findHost\"\n                checked={selectedOption === 'findHost'}\n                onChange={() => this.updateSelectedOption('findHost')}\n                className=\"hostRadio\"\n              />\n            </Box>\n            <Box mb={4}>\n              <OptionLabel htmlFor=\"host-radio-findHost\">\n                <FormattedMessage id=\"collective.edit.host.findHost.title\" defaultMessage=\"Apply to a Fiscal Host\" />\n              </OptionLabel>\n              <FormattedMessage\n                id=\"collective.edit.host.findHost.description\"\n                defaultMessage=\"Join an existing Fiscal Host who will hold funds on your behalf and take care of accounting, taxes, banking, admin, payments, and liability. Most Hosts charge a fee for this service (you can review the details before choosing a Host).\"\n              />\n              {selectedOption === 'findHost' && (\n                <div>\n                  <Container display=\"flex\" alignItems=\"baseline\" mt={2}>\n                    <H4 fontSize=\"13px\" mr={2}>\n                      <FormattedMessage\n                        id=\"collective.edit.host.suggestedHosts.title\"\n                        defaultMessage=\"Suggested Hosts\"\n                      />\n                    </H4>\n                    <StyledLink\n                      as={Link}\n                      fontSize=\"13px\"\n                      href={`${collective.slug}/accept-financial-contributions/host`}\n                    >\n                      <FormattedMessage id=\"collective.edit.host.viewAllHosts\" defaultMessage=\"View all Fiscal Hosts\" />\n                    </StyledLink>\n                  </Container>\n                  {collective.tags && collective.tags.length > 0 && (\n                    <Container color=\"#666f80\" fontSize=\"12px\">\n                      <FormattedMessage\n                        id=\"collective.edit.host.suggestedHosts.description\"\n                        defaultMessage=\"Based on the tags ({tags})\"\n                        values={{\n                          tags: collective.tags.join(', '),\n                        }}\n                      />\n                    </Container>\n                  )}\n                  <HostsWithData\n                    limit={6}\n                    tags={collective.tags}\n                    empty={\n                      <FormattedMessage\n                        id=\"collective.edit.host.suggestedHosts.empty\"\n                        defaultMessage=\"No suggestions. Please look at all Hosts or consider creating a new one.\"\n                      />\n                    }\n                  />\n                </div>\n              )}\n            </Box>\n          </Flex>\n        </div>\n      </EditCollectiveHostSection>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(Host));\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { Info } from '@styled-icons/feather/Info';\nimport { get } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\n\nimport { Box, Flex } from '../../Grid';\nimport InputField from '../../InputField';\nimport RichTextEditor from '../../RichTextEditor';\nimport StyledButton from '../../StyledButton';\nimport StyledInputField from '../../StyledInputField';\nimport StyledTooltip from '../../StyledTooltip';\nimport { P, Span } from '../../Text';\nimport { TOAST_TYPE, useToasts } from '../../ToastProvider';\n\nimport SettingsSectionTitle from './SettingsSectionTitle';\n\nconst VIRTUAL_CARDS_POLICY_MAX_LENGTH = 3000; // 600 words * 5 characters average length word\n\nconst updateAccountSettingsMutation = gql`\n  mutation UpdateAccountSettings($account: AccountReferenceInput!, $key: AccountSettingsKey!, $value: JSON!) {\n    editAccountSetting(account: $account, key: $key, value: $value) {\n      id\n      type\n      isActive\n      settings\n    }\n  }\n`;\n\nconst messages = defineMessages({\n  'policy.placeholder': {\n    id: 'Host.VirtualCards.Policy.Placeholder',\n    defaultMessage: 'E.g. deadlines to submit receipts, allowed charges, limits, or who to contact with questions.',\n  },\n});\n\nconst HostVirtualCards = props => {\n  const { formatMessage } = useIntl();\n  const { addToast } = useToasts();\n\n  const [updateAccountSetting, { loading: updateLoading }] = useMutation(updateAccountSettingsMutation, {\n    context: API_V2_CONTEXT,\n    onError: e => {\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        message: (\n          <FormattedMessage\n            id=\"Host.VirtualCards.Settings.Error\"\n            defaultMessage=\"Error updating setting: {error}\"\n            values={{\n              error: e.message,\n            }}\n          />\n        ),\n      });\n    },\n  });\n  const [virtualCardPolicy, setVirtualCardPolicy] = React.useState(\n    props.collective.settings?.virtualcards?.policy || '',\n  );\n\n  const handleSettingsUpdate = key => async value => {\n    await updateAccountSetting({\n      variables: {\n        account: { legacyId: props.collective.id },\n        key,\n        value,\n      },\n    });\n    addToast({\n      type: TOAST_TYPE.SUCCESS,\n      message: <FormattedMessage id=\"Host.VirtualCards.Settings.Success\" defaultMessage=\"Setting updated\" />,\n    });\n  };\n\n  return (\n    <Fragment>\n      <Box>\n        <SettingsSectionTitle>\n          <FormattedMessage id=\"Host.VirtualCards.Settings.Title\" defaultMessage=\"Settings and Policy\" />\n        </SettingsSectionTitle>\n        <Flex mt={4} justifyContent=\"space-between\" alignItems=\"center\">\n          <Box lineHeight=\"20px\" fontSize=\"14px\" fontWeight=\"500\">\n            <FormattedMessage id=\"Host.VirtualCards.RequestCard.Title\" defaultMessage=\"Enable card requests\" />\n            <P fontSize=\"11px\" fontWeight=\"400\" color=\"black.600\">\n              <FormattedMessage\n                id=\"Host.VirtualCards.RequestCard.Description\"\n                defaultMessage=\"Collectives can request a card to be linked to their budget.\"\n              />\n            </P>\n          </Box>\n          <StyledInputField name=\"virtualcards.requestcard\" htmlFor=\"virtualcards.requestcard\" disabled={updateLoading}>\n            {inputProps => (\n              <InputField\n                name=\"application\"\n                className=\"horizontal\"\n                type=\"switch\"\n                id={inputProps.id}\n                inputName={inputProps.name}\n                onChange={handleSettingsUpdate(inputProps.name)}\n                defaultValue={get(props.collective, `settings.${inputProps.name}`)}\n              />\n            )}\n          </StyledInputField>\n        </Flex>\n        <Flex mt={4} justifyContent=\"space-between\" alignItems=\"center\">\n          <Box lineHeight=\"20px\" fontSize=\"14px\" fontWeight=\"500\">\n            <FormattedMessage\n              id=\"Host.VirtualCards.Reminder.Title\"\n              defaultMessage=\"Automatically notify collectives about pending receipts\"\n            />\n            <P fontSize=\"11px\" fontWeight=\"400\" color=\"black.600\">\n              <FormattedMessage\n                id=\"Host.VirtualCards.Reminder.Description\"\n                defaultMessage=\"Send missing receipt reminder after 15 and 29 days after syncing the transaction.\"\n              />\n            </P>\n          </Box>\n          <StyledInputField name=\"virtualcards.reminder\" htmlFor=\"virtualcards.reminder\" disabled={updateLoading}>\n            {inputProps => (\n              <InputField\n                name=\"application\"\n                className=\"horizontal\"\n                type=\"switch\"\n                id={inputProps.id}\n                inputName={inputProps.name}\n                onChange={handleSettingsUpdate(inputProps.name)}\n                defaultValue={get(props.collective, `settings.${inputProps.name}`)}\n              />\n            )}\n          </StyledInputField>\n        </Flex>\n        <Flex mt={4} justifyContent=\"space-between\" alignItems=\"center\">\n          <Box lineHeight=\"20px\" fontSize=\"14px\" fontWeight=\"500\">\n            <FormattedMessage id=\"Host.VirtualCards.AutoPause.Title\" defaultMessage=\"Automatically suspend cards\" />\n            <P fontSize=\"11px\" fontWeight=\"400\" color=\"black.600\">\n              <FormattedMessage\n                id=\"Host.VirtualCards.AutoPause.Description\"\n                defaultMessage=\"Automatically suspend cards with pending receipts after 31 days and resume after all receipts are submitted.\"\n              />\n            </P>\n          </Box>\n          <StyledInputField name=\"virtualcards.autopause\" htmlFor=\"virtualcards.autopause\" disabled={updateLoading}>\n            {inputProps => (\n              <InputField\n                name=\"application\"\n                className=\"horizontal\"\n                type=\"switch\"\n                id={inputProps.id}\n                inputName={inputProps.name}\n                onChange={handleSettingsUpdate(inputProps.name)}\n                defaultValue={get(props.collective, `settings.${inputProps.name}`)}\n              />\n            )}\n          </StyledInputField>\n        </Flex>\n\n        <StyledInputField\n          name=\"virtualcards.policy\"\n          htmlFor=\"virtualcards.policy\"\n          disabled={updateLoading}\n          mt={4}\n          label={\n            <Box lineHeight=\"20px\" fontSize=\"14px\" fontWeight=\"500\">\n              <Span mr={1}>\n                <FormattedMessage id=\"Host.VirtualCards.Policy.Title\" defaultMessage=\"Virtual Card Policy\" />\n              </Span>\n              <StyledTooltip\n                content={\n                  <FormattedMessage\n                    id=\"Host.VirtualCards.Policy.ToolTip\"\n                    defaultMessage=\"This policy text will appear in a pop up when someone 'Requests a Virtual Card' from the Action menu on the collective's page.\"\n                  />\n                }\n              >\n                <Info size={16} />\n              </StyledTooltip>\n            </Box>\n          }\n        >\n          {inputProps => (\n            <RichTextEditor\n              withBorders\n              showCount\n              maxLength={VIRTUAL_CARDS_POLICY_MAX_LENGTH}\n              version=\"simplified\"\n              editorMinHeight=\"20rem\"\n              editorMaxHeight={500}\n              id={inputProps.id}\n              inputName={inputProps.name}\n              onChange={e => setVirtualCardPolicy(e.target.value)}\n              value={virtualCardPolicy}\n              placeholder={formatMessage(messages['policy.placeholder'])}\n              fontSize=\"14px\"\n            />\n          )}\n        </StyledInputField>\n\n        <StyledButton\n          mt={10}\n          loading={updateLoading}\n          onClick={() => handleSettingsUpdate('virtualcards.policy')(virtualCardPolicy)}\n        >\n          <FormattedMessage id=\"Host.VirtualCards.Policy.Save\" defaultMessage=\"Save Policy\" />\n        </StyledButton>\n      </Box>\n    </Fragment>\n  );\n};\n\nHostVirtualCards.propTypes = {\n  collective: PropTypes.shape({\n    id: PropTypes.number,\n    slug: PropTypes.string,\n    settings: PropTypes.shape({\n      virtualcards: PropTypes.shape({\n        autopause: PropTypes.bool,\n        requestcard: PropTypes.bool,\n        policy: PropTypes.string,\n      }),\n    }),\n  }),\n  hideTopsection: PropTypes.func,\n};\n\nexport default HostVirtualCards;\n","import React from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { matchPm, PAYMENT_METHOD_SERVICE, PAYMENT_METHOD_TYPE } from '../../lib/constants/payment-methods';\nimport { PaymentMethod } from '../../lib/graphql/types/v2/graphql';\nimport { paymentMethodLabelWithIcon } from '../../lib/payment_method_label';\n\nimport { Box, Flex } from '../Grid';\nimport Link from '../Link';\nimport StyledButton from '../StyledButton';\n\ntype EditPaymentMethodProps = {\n  collectiveSlug: string;\n  isSaving: boolean;\n  needsConfirmation: boolean;\n  nbActiveSubscriptions: number;\n  paymentMethod: PaymentMethod;\n  onConfirm: (paymentMethod: PaymentMethod) => void;\n  onRemove: (paymentMethod: PaymentMethod) => void;\n};\n\nconst EditPaymentMethod = ({\n  collectiveSlug,\n  paymentMethod,\n  isSaving,\n  nbActiveSubscriptions,\n  needsConfirmation,\n  onConfirm,\n  onRemove,\n}: EditPaymentMethodProps) => {\n  const intl = useIntl();\n  const isStripeCreditCard = matchPm(paymentMethod, PAYMENT_METHOD_SERVICE.STRIPE, PAYMENT_METHOD_TYPE.CREDITCARD);\n  const canRemove = !nbActiveSubscriptions && isStripeCreditCard;\n  const hasActions = canRemove || nbActiveSubscriptions || needsConfirmation;\n\n  return (\n    <div>\n      <Flex flexDirection={['column-reverse', null, 'row']}>\n        <Flex alignItems=\"center\" css={{ flexGrow: 1 }}>\n          <Box minWidth=\"150px\" as=\"label\">\n            <FormattedMessage\n              id=\"paymentMethod.typeSelect\"\n              values={{ type: paymentMethod.type.toLowerCase() }}\n              defaultMessage=\"{type, select, giftcard {Gift card} creditcard {Credit card} prepaid {Prepaid} other {}}\"\n            />\n          </Box>\n          <Box>\n            <Box mb={2}>{paymentMethodLabelWithIcon(intl, paymentMethod)}</Box>\n            {Boolean(nbActiveSubscriptions) && (\n              <FormattedMessage\n                id=\"paymentMethod.activeSubscriptions\"\n                defaultMessage=\"{n} active {n, plural, one {recurring financial contribution} other {recurring financial contributions}}\"\n                values={{ n: nbActiveSubscriptions }}\n              />\n            )}\n          </Box>\n        </Flex>\n        {hasActions && (\n          <Flex\n            mb={[3, 2, 0]}\n            justifyContent={['center', null, 'flex-end']}\n            alignItems={['center', null, 'flex-start']}\n            css={{ minWidth: 230 }}\n          >\n            {Boolean(nbActiveSubscriptions) && (\n              <Link href={`/${collectiveSlug}/manage-contributions`}>\n                <StyledButton buttonSize=\"medium\" mx={1} disabled={isSaving}>\n                  <FormattedMessage\n                    id=\"paymentMethod.editSubscriptions\"\n                    defaultMessage=\"Edit recurring financial contributions\"\n                  />\n                </StyledButton>\n              </Link>\n            )}\n            {needsConfirmation && (\n              <StyledButton\n                disabled={isSaving}\n                buttonStyle=\"warningSecondary\"\n                buttonSize=\"medium\"\n                onClick={() => onConfirm(paymentMethod)}\n                mx={1}\n              >\n                <FormattedMessage id=\"paymentMethod.confirm\" defaultMessage=\"Confirm\" />\n              </StyledButton>\n            )}\n            {canRemove && (\n              <StyledButton\n                disabled={isSaving}\n                buttonStyle=\"standard\"\n                buttonSize=\"medium\"\n                onClick={() => onRemove(paymentMethod)}\n                mx={1}\n              >\n                <FormattedMessage id=\"Remove\" defaultMessage=\"Remove\" />\n              </StyledButton>\n            )}\n          </Flex>\n        )}\n      </Flex>\n    </div>\n  );\n};\n\nexport default EditPaymentMethod;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { CardElement } from '@stripe/react-stripe-js';\nimport { Add } from '@styled-icons/material/Add';\nimport { get, isEmpty, merge, pick, sortBy } from 'lodash';\nimport { withRouter } from 'next/router';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport { PAYMENT_METHOD_TYPE } from '../../../lib/constants/payment-methods';\nimport { getErrorFromGraphqlException, i18nGraphqlException, isErrorType } from '../../../lib/errors';\nimport { API_V2_CONTEXT, gqlV1 } from '../../../lib/graphql/helpers';\nimport { paymentMethodLabel } from '../../../lib/payment_method_label';\nimport { getStripe, stripeTokenToPaymentMethod } from '../../../lib/stripe';\nimport { compose } from '../../../lib/utils';\n\nimport { confirmOrderMutation } from '../../../pages/confirmOrder';\nimport Container from '../../Container';\nimport { Box, Flex } from '../../Grid';\nimport Link from '../../Link';\nimport Loading from '../../Loading';\nimport MessageBox from '../../MessageBox';\nimport NewCreditCardForm from '../../NewCreditCardForm';\nimport {\n  addCreditCardMutation,\n  confirmCreditCardMutation,\n} from '../../recurring-contributions/UpdatePaymentMethodPopUp';\nimport { withStripeLoader } from '../../StripeProvider';\nimport StyledButton from '../../StyledButton';\nimport { P, Span } from '../../Text';\nimport { TOAST_TYPE, withToasts } from '../../ToastProvider';\nimport EditPaymentMethod from '../EditPaymentMethod';\n\nclass EditPaymentMethods extends React.Component {\n  static propTypes = {\n    collectiveSlug: PropTypes.string.isRequired,\n    /** From graphql query */\n    data: PropTypes.object.isRequired,\n    /** From intl */\n    intl: PropTypes.object.isRequired,\n    /** From graphql query */\n    createCreditCardEditCollective: PropTypes.func.isRequired,\n    /** From graphql query */\n    confirmCreditCardEditCollective: PropTypes.func.isRequired,\n    /** From graphql query */\n    removePaymentMethod: PropTypes.func.isRequired,\n    /** From graphql query */\n    confirmOrder: PropTypes.func.isRequired,\n    /** From stripeLoader */\n    loadStripe: PropTypes.func.isRequired,\n    /** from withToast */\n    addToast: PropTypes.func.isRequired,\n    /** from withRouter */\n    router: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.messages = defineMessages({\n      removeConfirm: {\n        id: 'paymentMethods.removeConfirm',\n        defaultMessage: 'Do you really want to remove this payment method?',\n      },\n    });\n  }\n\n  state = {\n    showCreditCardForm: false,\n    newCreditCardInfo: null,\n    bankDetails: null,\n    error: null,\n    stripe: null,\n    stripeElements: null,\n    submitting: false,\n    removedId: null,\n    savingId: null,\n  };\n\n  componentDidMount() {\n    this.props.loadStripe();\n  }\n\n  submitNewCreditCard = async () => {\n    const data = get(this.state, 'newCreditCardInfo.value');\n    if (!data || !this.state.stripe) {\n      this.setState({ error: 'There was a problem initializing the payment form' });\n    } else if (data.error) {\n      this.setState({ error: data.error.message });\n    } else {\n      try {\n        this.setState({ submitting: true });\n        const cardElement = this.state.stripeElements.getElement(CardElement);\n        const { token, error } = await this.state.stripe.createToken(cardElement);\n        if (error) {\n          throw error;\n        }\n        const newStripePaymentMethod = stripeTokenToPaymentMethod(token);\n        const newCreditCardInfo = merge(newStripePaymentMethod.data, pick(newStripePaymentMethod, ['token']));\n        const res = await this.props.createCreditCardEditCollective({\n          variables: {\n            creditCardInfo: newCreditCardInfo,\n            name: get(newStripePaymentMethod, 'name'),\n            account: { id: this.props.data.account.id },\n          },\n        });\n\n        const { paymentMethod, stripeError } = res.data.addCreditCard;\n\n        if (stripeError) {\n          this.handleStripeError(paymentMethod, stripeError);\n        } else {\n          this.handleSuccess('setup');\n        }\n      } catch (e) {\n        this.setState({ error: e.message, submitting: false });\n      }\n    }\n  };\n\n  confirmCreditCard = async paymentMethod => {\n    try {\n      this.setState({ savingId: paymentMethod.id });\n      await this.props.confirmCreditCardEditCollective({\n        variables: { paymentMethod: { id: paymentMethod.id } },\n        refetchQueries: [\n          {\n            query: paymentMethodsQuery,\n            variables: { collectiveSlug: this.props.collectiveSlug },\n            context: API_V2_CONTEXT,\n          },\n        ],\n      });\n    } catch (error) {\n      this.props.addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(this.props.intl, error) });\n    } finally {\n      this.setState({ savingId: null });\n    }\n  };\n\n  confirmOrderForPaymentMethod = async paymentMethod => {\n    try {\n      this.setState({ savingId: paymentMethod.id });\n      const orderToConfirm = paymentMethod.orders.nodes.find(order => order.needsConfirmation);\n      const res = await this.props.confirmOrder({\n        variables: {\n          order: { id: orderToConfirm.id },\n          refetchQueries: [\n            {\n              query: paymentMethodsQuery,\n              context: API_V2_CONTEXT,\n            },\n          ],\n        },\n      });\n\n      const { stripeError } = res.data.confirmOrder;\n      if (stripeError) {\n        await this.handleStripeError(paymentMethod, stripeError);\n      } else {\n        this.handleSuccess('payment');\n      }\n    } catch (error) {\n      this.props.addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(this.props.intl, error) });\n    } finally {\n      this.setState({ savingId: null });\n    }\n  };\n\n  handleSuccess = successType => {\n    this.props.data.refetch();\n    if (successType) {\n      const pathname = this.props.router.asPath.split('?')[0];\n      this.props.router.replace({ pathname, query: { successType } }, undefined, { shallow: true });\n    }\n\n    this.setState({\n      showCreditCardForm: false,\n      error: null,\n      newCreditCardInfo: null,\n      submitting: false,\n    });\n  };\n\n  handleStripeError = async (paymentMethod, stripeError) => {\n    const { message, response } = stripeError;\n    let newError;\n\n    if (!response) {\n      newError = message;\n    } else if (response.setupIntent) {\n      const stripe = await getStripe();\n      const result = await stripe.handleCardSetup(response.setupIntent.client_secret);\n      if (result.error) {\n        newError = result.error.message;\n      } else {\n        try {\n          await this.props.confirmCreditCardEditCollective({ variables: { paymentMethod: { id: paymentMethod.id } } });\n        } catch (error) {\n          newError = result.error.message;\n        }\n      }\n    } else if (response.paymentIntent) {\n      const stripe = await getStripe(null, stripeError.account);\n      const result = await stripe.handleCardAction(response.paymentIntent.client_secret);\n      if (result.paymentIntent && result.paymentIntent.status === 'requires_confirmation') {\n        return this.confirmOrderForPaymentMethod(paymentMethod);\n      } else if (result.error) {\n        newError = result.error.message;\n      }\n    }\n\n    if (newError) {\n      this.props.addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(this.props.intl, newError) });\n    } else {\n      this.handleSuccess(response.setupIntent ? 'setup' : response.paymentIntent ? 'payment' : null);\n    }\n  };\n\n  removePaymentMethod = async paymentMethod => {\n    const pmLabel = paymentMethodLabel(this.props.intl, paymentMethod, get(this.props.data, 'Collective.name'));\n    const confirmQuestion = this.props.intl.formatMessage(this.messages['removeConfirm']);\n    if (confirm(`${pmLabel} - ${confirmQuestion}`)) {\n      try {\n        this.setState({ removedId: paymentMethod.id });\n        await this.props.removePaymentMethod({ variables: { id: paymentMethod.legacyId } });\n        this.setState({ error: null });\n        await this.props.data.refetch();\n      } catch (e) {\n        this.showError(getErrorFromGraphqlException(e));\n      }\n    }\n    this.setState({ removedId: null });\n  };\n\n  showError = error => {\n    this.setState({ error });\n    window.scrollTo(0, 0);\n  };\n\n  getPaymentMethodsToDisplay() {\n    const { data } = this.props;\n    const paymentMethodsWithPendingConfirmation = get(data, 'account.paymentMethodsWithPendingConfirmation') || [];\n    const paymentMethods = (get(data, 'account.paymentMethods') || []).filter(\n      pm =>\n        // Remove payment methods with no balance, unless it's a gift card with a monthly limit\n        (pm.balance.valueInCents > 0 || (pm.type === PAYMENT_METHOD_TYPE.GIFTCARD && pm.monthlyLimit)) &&\n        // Remove payment methods with pending confirmation, they'll be displayed at the top\n        !paymentMethodsWithPendingConfirmation.some(p => p.id === pm.id),\n    );\n\n    return [\n      ...sortBy(paymentMethodsWithPendingConfirmation, ['type', 'id']),\n      ...sortBy(paymentMethods, ['type', 'id']),\n    ];\n  }\n\n  hasOrdersThatNeedConfirmation = () => {\n    return !isEmpty(get(this.props.data, 'account.paymentMethodsWithPendingConfirmation', []));\n  };\n\n  paymentMethodRequiresConfirmation = paymentMethod => {\n    return paymentMethod.orders?.nodes?.some(order => order.needsConfirmation);\n  };\n\n  renderError(error) {\n    if (typeof error === 'string') {\n      return error;\n    } else if (isErrorType(error, 'PM.Remove.HasActiveSubscriptions')) {\n      return (\n        <React.Fragment>\n          <FormattedMessage\n            id=\"errors.PM.Remove.HasActiveSubscriptions\"\n            defaultMessage=\"This payment method cannot be removed because it has active recurring financial contributions.\"\n          />{' '}\n          <Link href={`/${this.props.collectiveSlug}/manage-contributions`}>\n            <Span textTransform=\"capitalize\">\n              <FormattedMessage\n                id=\"paymentMethod.editSubscriptions\"\n                defaultMessage=\"Edit recurring financial contributions\"\n              />\n            </Span>\n          </Link>\n        </React.Fragment>\n      );\n    } else {\n      return error.message;\n    }\n  }\n\n  dismissSuccess = () => {\n    const { router } = this.props;\n    if (this.props.router.query.successType) {\n      const pathname = router.asPath.split('?')[0];\n      this.props.router.replace({ pathname, query: null }, undefined, { shallow: true });\n    }\n  };\n\n  render() {\n    const { account, loading } = this.props.data;\n    const { showCreditCardForm, error, submitting, removedId, savingId } = this.state;\n    const successType = this.props.router.query.successType;\n    const paymentMethods = this.getPaymentMethodsToDisplay();\n\n    return loading ? (\n      <Loading />\n    ) : (\n      <Flex className=\"EditPaymentMethods\" flexDirection=\"column\" pt={2}>\n        {this.hasOrdersThatNeedConfirmation() && (\n          <MessageBox type=\"warning\" withIcon mb={3}>\n            <FormattedMessage defaultMessage=\"You need to confirm at least one of your payment methods.\" />\n          </MessageBox>\n        )}\n        {successType && (\n          <MessageBox\n            type=\"success\"\n            display=\"flex\"\n            alignItems=\"center\"\n            withIcon\n            mb={3}\n            onClick={() => this.setState({ successType: null })}\n          >\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" flex=\"1 1\">\n              <span>\n                {successType === 'payment' ? (\n                  <FormattedMessage\n                    id=\"Order.Confirm.Success\"\n                    defaultMessage=\"Your payment method has now been confirmed and the payment successfully went through.\"\n                  />\n                ) : (\n                  <FormattedMessage defaultMessage=\"Your payment method has been successfully added.\" />\n                )}\n              </span>\n              <StyledButton buttonSize=\"tiny\" onClick={this.dismissSuccess}>\n                <FormattedMessage defaultMessage=\"Dismiss\" />\n              </StyledButton>\n            </Flex>\n          </MessageBox>\n        )}\n        {error && (\n          <MessageBox type=\"error\" withIcon mb={4}>\n            {this.renderError(error)}\n          </MessageBox>\n        )}\n        {\n          <Flex className=\"paymentMethods\" flexDirection=\"column\" my={2}>\n            {paymentMethods.map(pm => (\n              <Container\n                className=\"paymentMethod\"\n                key={pm.id}\n                my={3}\n                p={3}\n                border=\"1px solid #dedede\"\n                borderRadius={4}\n                style={{ filter: pm.id === removedId ? 'blur(1px)' : 'none' }}\n              >\n                <EditPaymentMethod\n                  collectiveSlug={account.slug}\n                  isSaving={pm.id === savingId}\n                  nbActiveSubscriptions={pm.orders?.totalCount || 0}\n                  paymentMethod={pm}\n                  onRemove={pm => this.removePaymentMethod(pm)}\n                  needsConfirmation={this.paymentMethodRequiresConfirmation(pm)}\n                  onConfirm={pm => this.confirmOrderForPaymentMethod(pm)}\n                />\n              </Container>\n            ))}\n          </Flex>\n        }\n        {!showCreditCardForm && (\n          <Flex alignItems=\"center\" mx={3} my={4} flexDirection=\"column\">\n            <StyledButton\n              buttonStyle=\"standard\"\n              buttonSize=\"large\"\n              onClick={() => this.setState({ showCreditCardForm: true })}\n            >\n              <Add size=\"1em\" />\n              {'  '}\n              <FormattedMessage id=\"paymentMethods.creditcard.add\" defaultMessage=\"Add a credit card\" />\n            </StyledButton>\n            <Span fontSize=\"12px\" mt={2} color=\"black.600\">\n              <FormattedMessage\n                id=\"paymentMethods.creditcard.add.info\"\n                defaultMessage=\"For making contributions as {contributeAs}\"\n                values={{ contributeAs: account.name }}\n              />\n            </Span>\n          </Flex>\n        )}\n        {showCreditCardForm && (\n          <Container\n            display=\"flex\"\n            alignItems=\"center\"\n            flexWrap=\"wrap\"\n            my={4}\n            px={3}\n            py={1}\n            borderRadius={4}\n            border=\"1px solid #dedede\"\n          >\n            <P fontSize=\"14px\" fontWeight=\"bold\" mr={4}>\n              <FormattedMessage id=\"paymentMethod.add\" defaultMessage=\"New Credit Card\" />\n            </P>\n            <Box mr={2} css={{ flexGrow: 1 }}>\n              <NewCreditCardForm\n                hasSaveCheckBox={false}\n                onChange={newCreditCardInfo => this.setState({ newCreditCardInfo, error: null })}\n                onReady={({ stripe, stripeElements }) => this.setState({ stripe, stripeElements })}\n              />\n            </Box>\n            <Box my={2}>\n              <StyledButton\n                mr={2}\n                buttonStyle=\"standard\"\n                buttonSize=\"medium\"\n                onClick={() => this.setState({ showCreditCardForm: false, error: null })}\n                disabled={submitting}\n              >\n                <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n              </StyledButton>\n              <StyledButton\n                buttonStyle=\"primary\"\n                buttonSize=\"medium\"\n                type=\"submit\"\n                onClick={this.submitNewCreditCard}\n                disabled={submitting}\n                loading={submitting}\n              >\n                <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n              </StyledButton>\n            </Box>\n          </Container>\n        )}\n      </Flex>\n    );\n  }\n}\n\nconst editPaymentMethodFragment = gql`\n  fragment EditPaymentMethodFragment on PaymentMethod {\n    id\n    legacyId\n    name\n    data\n    service\n    type\n    balance {\n      valueInCents\n      currency\n    }\n    expiryDate\n    monthlyLimit {\n      valueInCents\n    }\n  }\n`;\n\nconst paymentMethodsQuery = gql`\n  query EditCollectivePaymentMethods($collectiveSlug: String) {\n    account(slug: $collectiveSlug) {\n      id\n      legacyId\n      type\n      slug\n      name\n      currency\n      isHost\n      settings\n      paymentMethods(type: [CREDITCARD, GIFTCARD, PREPAID]) {\n        id\n        ...EditPaymentMethodFragment\n      }\n      paymentMethodsWithPendingConfirmation {\n        id\n        ...EditPaymentMethodFragment\n        orders(onlyActiveSubscriptions: true, status: [ACTIVE, ERROR, PENDING, REQUIRE_CLIENT_CONFIRMATION]) {\n          totalCount\n          nodes {\n            id\n            legacyId\n            needsConfirmation\n          }\n        }\n      }\n    }\n  }\n  ${editPaymentMethodFragment}\n`;\n\nconst addPaymentMethodsData = graphql(paymentMethodsQuery, {\n  options: { context: API_V2_CONTEXT },\n});\n\nconst addCreateCreditCardMutation = graphql(addCreditCardMutation, {\n  name: 'createCreditCardEditCollective',\n  options: { context: API_V2_CONTEXT },\n});\n\nconst addConfirmCreditCardMutation = graphql(confirmCreditCardMutation, {\n  name: 'confirmCreditCardEditCollective',\n  options: { context: API_V2_CONTEXT },\n});\n\nconst removePaymentMethodMutation = gqlV1/* GraphQL */ `\n  mutation EditCollectiveRemovePaymentMethod($id: Int!) {\n    removePaymentMethod(id: $id) {\n      id\n    }\n  }\n`;\n\nconst addRemovePaymentMethodMutation = graphql(removePaymentMethodMutation, {\n  name: 'removePaymentMethod',\n});\n\nconst addConfirmOrderMutation = graphql(confirmOrderMutation, {\n  name: 'confirmOrder',\n  options: { context: API_V2_CONTEXT },\n});\n\nconst addGraphql = compose(\n  addPaymentMethodsData,\n  addRemovePaymentMethodMutation,\n  addCreateCreditCardMutation,\n  addConfirmCreditCardMutation,\n  addConfirmOrderMutation,\n);\n\nexport default injectIntl(withStripeLoader(addGraphql(withToasts(withRouter(EditPaymentMethods)))));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { groupBy, uniq } from 'lodash';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { gqlV1 } from '../../../lib/graphql/helpers';\nimport { useAsyncCall } from '../../../lib/hooks/useAsyncCall';\nimport { saveInvoice } from '../../../lib/transactions';\n\nimport Avatar from '../../Avatar';\nimport { Box, Flex } from '../../Grid';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport MessageBoxGraphqlError from '../../MessageBoxGraphqlError';\nimport StyledButton from '../../StyledButton';\nimport StyledCard from '../../StyledCard';\nimport StyledHr from '../../StyledHr';\nimport StyledSelect from '../../StyledSelect';\nimport { H3, P, Span } from '../../Text';\nimport SettingsSubtitle from '../SettingsSubtitle';\n\nconst HostName = styled(P)`\n  margin: 0 !important;\n`;\n\ndayjs.extend(utc);\n\nexport const invoicesQuery = gqlV1/* GraphQL */ `\n  query TransactionsDownloadInvoices($fromCollectiveSlug: String!) {\n    allInvoices(fromCollectiveSlug: $fromCollectiveSlug) {\n      slug\n      year\n      month\n      totalAmount\n      totalTransactions\n      currency\n      fromCollective {\n        id\n        slug\n      }\n      host {\n        id\n        slug\n        name\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst filterInvoices = (allInvoices, filterBy) => {\n  if (filterBy === 'PAST_12_MONTHS') {\n    const twelveMonthsAgo = dayjs().subtract(11, 'month');\n    return allInvoices.filter(i => {\n      const dateMonth = dayjs.utc(`${i.year}-${i.month}`, 'YYYY-M');\n      return dateMonth.isAfter(twelveMonthsAgo);\n    });\n  }\n\n  return allInvoices.filter(i => i.year === filterBy);\n};\n\nconst ReceiptsLoadingPlaceholder = () => (\n  <Flex flexDirection=\"column\">\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <LoadingPlaceholder mr={3} width=\"104px\" height=\"24px\" />\n      <StyledHr width=\"80%\" borderStyle=\"solid\" borderColor=\"#C4C7CC\" />\n    </Flex>\n    {Array.from({ length: 3 }, (_, index) => (\n      <StyledCard my={3} key={index} display=\"flex\" alignItems=\"center\" py={3} px=\"24px\">\n        <LoadingPlaceholder borderRadius=\"16px\" width=\"48px\" height=\"48px\" mr={3} />\n        <Box>\n          <LoadingPlaceholder mb={2} width={['164px', '361px']} height=\"24px\" />\n          <LoadingPlaceholder width=\"115px\" height=\"14px\" />\n        </Box>\n      </StyledCard>\n    ))}\n  </Flex>\n);\n\nconst NoReceipts = () => (\n  <Flex alignItems=\"center\" justifyContent=\"center\" my={5}>\n    <StyledCard height=\"100px\" padding=\"16px 24px\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n      <H3 fontSize=\"15px\" lineHeight=\"24px\" color=\"black.500\" textAlign=\"center\">\n        <FormattedMessage id=\"paymentReceipt.noReceipts\" defaultMessage=\"No receipts available in this period.\" />\n      </H3>\n    </StyledCard>\n  </Flex>\n);\n\nconst ReceiptCard = ({ ...props }) => (\n  <StyledCard\n    my={3}\n    alignItems=\"center\"\n    display=\"flex\"\n    flexDirection={['column', 'row']}\n    justifyContent=\"space-between\"\n    py={3}\n    px=\"24px\"\n  >\n    <Flex alignItems=\"center\">\n      <Avatar collective={props.host} borderRadius=\"16px\" mr={3} size=\"48px\" />\n      <Box>\n        <HostName\n          fontSize={['13px', '16px']}\n          lineHeight={['20px', '28px']}\n          letterSpacing={[null, '-0.16px']}\n          color=\"black.900\"\n          fontWeight=\"500\"\n          my={0}\n        >\n          <FormattedMessage id=\"Fiscalhost\" defaultMessage=\"Fiscal Host\" />: {props.host.name}\n        </HostName>\n        <Span\n          fontSize={['10px', '15px']}\n          lineHeight={['14px', '21px']}\n          letterSpacing={[null, '-0.1px']}\n          color=\"black.600\"\n          fontWeight=\"400\"\n          mt={0}\n        >\n          {`${props.month}/${props.year}`} - {props.totalTransactions}{' '}\n          <FormattedMessage\n            id=\"paymentReceipt.transaction\"\n            values={{\n              n: props.totalTransactions,\n            }}\n            defaultMessage=\"{n, plural, one {Transaction} other {Transactions}}\"\n          />\n        </Span>\n      </Box>\n    </Flex>\n    <StyledButton\n      lineHeight=\"16px\"\n      fontSize=\"13px\"\n      width=\"142px\"\n      padding=\"4px 16px\"\n      disabled={props.loadingInvoice}\n      mt={3}\n      borderColor=\"#C4C7CC\"\n      onClick={() => {\n        props.downloadInvoice({\n          fromCollectiveSlug: props.fromCollective.slug,\n          toCollectiveSlug: props.host.slug,\n          dateFrom: props.dateFrom,\n          dateTo: props.dateTo,\n        });\n      }}\n    >\n      <FormattedMessage id=\"DownloadReceipt\" defaultMessage=\"Download receipt\" />\n    </StyledButton>\n  </StyledCard>\n);\n\nReceiptCard.propTypes = {\n  host: PropTypes.shape({\n    name: PropTypes.string,\n    imageUrl: PropTypes.string,\n    slug: PropTypes.string,\n  }),\n  loadingInvoice: PropTypes.bool,\n  fromCollective: PropTypes.shape({\n    slug: PropTypes.string,\n  }),\n  downloadInvoice: PropTypes.func,\n  dateFrom: PropTypes.string,\n  dateTo: PropTypes.string,\n  totalTransactions: PropTypes.number,\n  month: PropTypes.number,\n  year: PropTypes.number,\n};\n\nconst Receipts = ({ invoices }) => {\n  const { loading: loadingInvoice, call: downloadInvoice } = useAsyncCall(saveInvoice, { useErrorToast: true });\n  const byMonthYear = groupBy(invoices, invoice => `${invoice.month}-${invoice.year}`);\n\n  return Object.keys(byMonthYear).map(monthYear => {\n    const dateMonth = dayjs.utc(`${byMonthYear[monthYear][0].year}-${byMonthYear[monthYear][0].month}`, 'YYYY-M');\n    const dateFrom = dateMonth.toISOString();\n    const dateTo = dateMonth.endOf('month').toISOString();\n    const [month, year] = monthYear.split('-');\n\n    return (\n      <Flex key={monthYear} flexDirection=\"column\">\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" mt={3}>\n          <H3 fontSize=\"16px\" lineHeight=\"24px\" color=\"black.900\">\n            <FormattedDate value={new Date(year, month - 1)} month=\"long\" year=\"numeric\" />\n          </H3>\n          <StyledHr width={['60%', '80%']} borderStyle=\"solid\" borderColor=\"#C4C7CC\" />\n        </Flex>\n        {byMonthYear[monthYear].map(invoice => (\n          <ReceiptCard\n            key={`${invoice.year}-${invoice.month}-${invoice.slug}`}\n            {...{ ...invoice, loadingInvoice, downloadInvoice, dateFrom, dateTo }}\n          />\n        ))}\n      </Flex>\n    );\n  });\n};\n\nconst PaymentReceipts = ({ collective }) => {\n  const defaultFilter = {\n    label: 'Past 12 months',\n    value: 'PAST_12_MONTHS',\n  };\n  const [activeFilter, setActiveFilter] = React.useState(defaultFilter);\n  const { data, loading, error } = useQuery(invoicesQuery, {\n    variables: {\n      fromCollectiveSlug: collective.slug,\n    },\n  });\n\n  const yearsFilter = uniq(data?.allInvoices.map(i => i.year)).map(year => ({ value: year, label: year }));\n  const invoices = data ? filterInvoices(data.allInvoices, activeFilter.value) : [];\n  let content = null;\n\n  if (loading) {\n    content = <ReceiptsLoadingPlaceholder />;\n  } else if (invoices.length === 0) {\n    content = <NoReceipts />;\n  } else if (error) {\n    content = <MessageBoxGraphqlError error={error} />;\n  } else {\n    content = <Receipts invoices={invoices} />;\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <SettingsSubtitle>\n        <FormattedMessage\n          id=\"paymentReceipts.section.description\"\n          defaultMessage=\"Consolidated receipts for your financial contributions.\"\n        />\n      </SettingsSubtitle>\n      <Box mt={4}>\n        <P\n          fontSize=\"9px\"\n          lineHeight=\"12px\"\n          fontWeight=\"500\"\n          letterSpacing=\"0.06em\"\n          textTransform=\"uppercase\"\n          color=\"black.800\"\n        >\n          <FormattedMessage id=\"paymentReceipts.selectDate.label\" defaultMessage=\"Time period\" />\n        </P>\n        <StyledSelect\n          inputId=\"active-filter-set\"\n          options={[defaultFilter, ...yearsFilter]}\n          value={activeFilter}\n          width=\"184px\"\n          isLoading={loading}\n          fontSize=\"12px\"\n          lineHeight=\"18px\"\n          fontWeight=\"400\"\n          color=\"black.800\"\n          mb=\"24px\"\n          onChange={setActiveFilter}\n          isSearchable={false}\n        />\n        {content}\n      </Box>\n    </Flex>\n  );\n};\n\nPaymentReceipts.propTypes = {\n  collective: PropTypes.shape({\n    slug: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default PaymentReceipts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { useFormik } from 'formik';\nimport { filter, get, isEmpty, size } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { MODERATION_CATEGORIES } from '../../../lib/constants/moderation-categories';\nimport { DEFAULT_SUPPORTED_EXPENSE_TYPES } from '../../../lib/expenses';\nimport { API_V2_CONTEXT, gqlV1 } from '../../../lib/graphql/helpers';\nimport { omitDeep, stripHTML } from '../../../lib/utils';\n\nimport Container from '../../Container';\nimport { Flex } from '../../Grid';\nimport { getI18nLink } from '../../I18nFormatters';\nimport Link from '../../Link';\nimport MessageBox from '../../MessageBox';\nimport MessageBoxGraphqlError from '../../MessageBoxGraphqlError';\nimport RichTextEditor from '../../RichTextEditor';\nimport StyledButton from '../../StyledButton';\nimport StyledCheckbox from '../../StyledCheckbox';\nimport StyledInputAmount from '../../StyledInputAmount';\nimport StyledInputField from '../../StyledInputField';\nimport StyledSelect from '../../StyledSelect';\nimport { P } from '../../Text';\nimport { TOAST_TYPE, useToasts } from '../../ToastProvider';\n\nimport { getSettingsQuery } from './EditCollectivePage';\nimport SettingsSectionTitle from './SettingsSectionTitle';\n\nconst EXPENSE_POLICY_MAX_LENGTH = 16000; // max in database is ~15,500\nconst CONTRIBUTION_POLICY_MAX_LENGTH = 3000; // 600 words * 5 characters average length word\n\nconst updateFilterCategoriesMutation = gql`\n  mutation UpdateFilterCategories($account: AccountReferenceInput!, $key: AccountSettingsKey!, $value: JSON!) {\n    editAccountSetting(account: $account, key: $key, value: $value) {\n      id\n      type\n      isActive\n      settings\n    }\n  }\n`;\n\nconst editCollectiveMutation = gqlV1/* GraphQL */ `\n  mutation EditCollectiveMutation($collective: CollectiveInputType!) {\n    editCollective(collective: $collective) {\n      id\n      type\n      isActive\n      settings\n    }\n  }\n`;\n\nconst setPoliciesMutation = gql`\n  mutation SetPolicies($account: AccountReferenceInput!, $policies: PoliciesInput!) {\n    setPolicies(account: $account, policies: $policies) {\n      id\n      policies {\n        EXPENSE_AUTHOR_CANNOT_APPROVE {\n          enabled\n          amountInCents\n          appliesToHostedCollectives\n          appliesToSingleAdminCollectives\n        }\n        REQUIRE_2FA_FOR_ADMINS\n        COLLECTIVE_MINIMUM_ADMINS {\n          numberOfAdmins\n          applies\n          freeze\n        }\n      }\n    }\n  }\n`;\n\nconst messages = defineMessages({\n  'rejectCategories.placeholder': {\n    id: 'editCollective.rejectCategories.placeholder',\n    defaultMessage: 'Choose categories',\n  },\n  'contributionPolicy.label': {\n    id: 'collective.contributionPolicy.label',\n    defaultMessage: 'Contribution Policy',\n  },\n  'contributionPolicy.placeholder': {\n    id: 'collective.contributionPolicy.placeholder',\n    defaultMessage: 'E.g. what types of contributions you will and will not accept.',\n  },\n  'contributionPolicy.error': {\n    id: 'collective.contributionPolicy.error',\n    defaultMessage: 'Contribution policy must contain less than {maxLength} characters',\n  },\n  'expensePolicy.label': {\n    id: 'editCollective.menu.expenses',\n    defaultMessage: 'Expenses Policy',\n  },\n  'expensePolicy.placeholder': {\n    id: 'collective.expensePolicy.placeholder',\n    defaultMessage: 'E.g. approval criteria, limitations, or required documentation.',\n  },\n  'expensePolicy.error': {\n    id: 'collective.expensePolicy.error',\n    defaultMessage: 'Expense policy must contain less than {maxLength} characters',\n  },\n  'expensePolicy.allowExpense': {\n    id: 'collective.expensePolicy.allowExpense',\n    defaultMessage:\n      'Only allow expenses to be created by Team Members and Financial Contributors (they may invite expenses from other payees)',\n  },\n  'expensePolicy.RECEIPT': {\n    id: 'collective.expensePolicy.hasReceipt',\n    defaultMessage: 'Allow receipts',\n  },\n  'expensePolicy.GRANT': {\n    id: 'collective.expensePolicy.hasGrant',\n    defaultMessage: 'Allow grants',\n  },\n  'expensePolicy.INVOICE': {\n    id: 'collective.expensePolicy.hasInvoice',\n    defaultMessage: 'Allow invoices',\n  },\n  'requiredAdmins.numberOfAdmins': {\n    defaultMessage: '{admins, plural, =0 {Do not enforce minimum number of admins} one {# Admin} other {# Admins} }',\n  },\n});\n\nconst Policies = ({ collective, showOnlyExpensePolicy }) => {\n  const { formatMessage } = useIntl();\n  const [selected, setSelected] = React.useState([]);\n  const { addToast } = useToasts();\n\n  // GraphQL\n  const { loading, data } = useQuery(getSettingsQuery, {\n    variables: { slug: collective.slug },\n    context: API_V2_CONTEXT,\n  });\n  const [updateCategories, { loading: isSubmittingCategories, error: categoriesError }] = useMutation(\n    updateFilterCategoriesMutation,\n    {\n      context: API_V2_CONTEXT,\n    },\n  );\n  const [updateCollective, { loading: isSubmittingSettings, error: settingsError }] =\n    useMutation(editCollectiveMutation);\n  const [setPolicies, { loading: isSettingPolicies, error: policiesError }] = useMutation(setPoliciesMutation, {\n    context: API_V2_CONTEXT,\n  });\n  const error = categoriesError || settingsError || policiesError;\n\n  // Data and data handling\n  const collectiveContributionFilteringCategories = get(data, 'account.settings.moderation.rejectedCategories', null);\n  const collectiveContributionPolicy = get(collective, 'contributionPolicy', null);\n  const collectiveExpensePolicy = get(collective, 'expensePolicy', null);\n  const collectiveDisableExpenseSubmission = get(collective, 'settings.disablePublicExpenseSubmission', false);\n  const expenseTypes = get(collective, 'settings.expenseTypes') || DEFAULT_SUPPORTED_EXPENSE_TYPES;\n  const numberOfAdmins = size(filter(collective.members, m => m.role === 'ADMIN'));\n\n  const selectOptions = React.useMemo(() => {\n    const optionsArray = Object.entries(MODERATION_CATEGORIES).map(([key, value], index) => ({\n      id: index,\n      value: key,\n      label: value,\n    }));\n    return optionsArray;\n  }, [MODERATION_CATEGORIES]);\n\n  // Form\n  const formik = useFormik({\n    initialValues: {\n      contributionPolicy: collectiveContributionPolicy || '',\n      expensePolicy: collectiveExpensePolicy || '',\n      disablePublicExpenseSubmission: collectiveDisableExpenseSubmission || false,\n      expenseTypes,\n      policies: omitDeep(data?.account?.policies || {}, ['__typename']),\n    },\n    async onSubmit(values) {\n      const { contributionPolicy, expensePolicy, disablePublicExpenseSubmission, expenseTypes, policies } = values;\n      const newSettings = { ...collective.settings, disablePublicExpenseSubmission };\n      if (collective.isHost) {\n        newSettings.expenseTypes = expenseTypes;\n      }\n\n      await updateCollective({\n        variables: {\n          collective: {\n            id: collective.id,\n            contributionPolicy,\n            expensePolicy,\n            settings: newSettings,\n          },\n        },\n      });\n      const selectedRejectCategories = selected.map(option => option.value);\n      await Promise.all([\n        updateCategories({\n          variables: {\n            account: {\n              legacyId: collective.id,\n            },\n            key: 'moderation',\n            value: { rejectedCategories: selectedRejectCategories },\n          },\n        }),\n        setPolicies({\n          variables: {\n            account: {\n              legacyId: collective.id,\n            },\n            policies,\n          },\n        }),\n      ]);\n\n      addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: formatMessage({ defaultMessage: 'Policies updated successfully' }),\n      });\n    },\n    validate(values) {\n      const errors = {};\n      const contributionPolicyText = stripHTML(values.contributionPolicy);\n      const expensePolicyText = stripHTML(values.expensePolicy);\n\n      if (contributionPolicyText.length > CONTRIBUTION_POLICY_MAX_LENGTH) {\n        errors.contributionPolicy = formatMessage(messages['contributionPolicy.error'], {\n          maxLength: CONTRIBUTION_POLICY_MAX_LENGTH,\n        });\n      }\n      if (expensePolicyText.length > EXPENSE_POLICY_MAX_LENGTH) {\n        errors.expensePolicy = formatMessage(messages['expensePolicy.error'], { maxLength: EXPENSE_POLICY_MAX_LENGTH });\n      }\n      return errors;\n    },\n  });\n\n  React.useEffect(() => {\n    if (collectiveContributionFilteringCategories && isEmpty(selected)) {\n      const alreadyPickedCategories = collectiveContributionFilteringCategories.map(category => {\n        return selectOptions.find(option => option.value === category);\n      });\n      setSelected(alreadyPickedCategories);\n    }\n  }, [loading, collectiveContributionFilteringCategories]);\n\n  React.useEffect(() => {\n    if (data) {\n      formik.setFieldValue('policies', omitDeep(data?.account?.policies || {}, ['__typename']));\n    }\n  }, [data]);\n\n  const numberOfAdminsOptions = [0, 2, 3, 4, 5].map(n => ({\n    value: n,\n    label: formatMessage(messages['requiredAdmins.numberOfAdmins'], { admins: n }),\n  }));\n  const minAdminsApplies = [\n    { value: 'NEW_COLLECTIVES', label: <FormattedMessage defaultMessage=\"New Collectives Only\" /> },\n    { value: 'ALL_COLLECTIVES', label: <FormattedMessage defaultMessage=\"All Collectives\" /> },\n  ];\n\n  const hostAuthorCannotApproveExpensePolicy = data?.account?.host?.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE'];\n  const authorCannotApproveExpenseEnforcedByHost =\n    hostAuthorCannotApproveExpensePolicy?.enabled && hostAuthorCannotApproveExpensePolicy?.appliesToHostedCollectives;\n\n  return (\n    <Flex flexDirection=\"column\">\n      {error && <MessageBoxGraphqlError error={error} />}\n      <form onSubmit={formik.handleSubmit}>\n        <Container>\n          {!showOnlyExpensePolicy && (\n            <Container mb={4}>\n              <StyledInputField\n                name=\"contributionPolicy\"\n                htmlFor=\"contributionPolicy\"\n                error={formik.errors.contributionPolicy}\n                disabled={isSubmittingSettings}\n                labelProps={{ mb: 2, pt: 2, lineHeight: '18px', fontWeight: 'bold' }}\n                label={\n                  <SettingsSectionTitle>{formatMessage(messages['contributionPolicy.label'])}</SettingsSectionTitle>\n                }\n              >\n                {inputProps => (\n                  <RichTextEditor\n                    withBorders\n                    showCount\n                    maxLength={CONTRIBUTION_POLICY_MAX_LENGTH}\n                    error={formik.errors.contributionPolicy}\n                    version=\"simplified\"\n                    editorMinHeight=\"20rem\"\n                    editorMaxHeight={500}\n                    id={inputProps.id}\n                    inputName={inputProps.name}\n                    onChange={formik.handleChange}\n                    placeholder={formatMessage(messages['contributionPolicy.placeholder'])}\n                    defaultValue={formik.values.contributionPolicy}\n                    fontSize=\"14px\"\n                  />\n                )}\n              </StyledInputField>\n              <P fontSize=\"14px\" lineHeight=\"18px\" color=\"black.600\" mt={2}>\n                <FormattedMessage\n                  id=\"collective.contributionPolicy.description\"\n                  defaultMessage=\"Financial Contributors are manually reviewed by the Open Collective team to check for abuse or spam. Financial Contributors with a good reputation should not be affected by this setting.\"\n                />\n              </P>\n            </Container>\n          )}\n\n          <StyledInputField\n            name=\"expensePolicy\"\n            htmlFor=\"expensePolicy\"\n            error={formik.errors.expensePolicy}\n            disabled={isSubmittingSettings}\n            labelProps={{ mb: 2, pt: 2, lineHeight: '18px', fontWeight: 'bold' }}\n            label={<SettingsSectionTitle>{formatMessage(messages['expensePolicy.label'])}</SettingsSectionTitle>}\n          >\n            {inputProps => (\n              <RichTextEditor\n                data-cy=\"expense-policy-input\"\n                withBorders\n                showCount\n                maxLength={EXPENSE_POLICY_MAX_LENGTH}\n                error={formik.errors.expensePolicy}\n                version=\"simplified\"\n                editorMinHeight=\"20rem\"\n                editorMaxHeight={500}\n                id={inputProps.id}\n                inputName={inputProps.name}\n                onChange={formik.handleChange}\n                placeholder={formatMessage(messages['expensePolicy.placeholder'])}\n                defaultValue={formik.values.expensePolicy}\n                fontSize=\"14px\"\n                maxHeight={600}\n              />\n            )}\n          </StyledInputField>\n          <P fontSize=\"14px\" lineHeight=\"18px\" color=\"black.600\" my={2}>\n            <FormattedMessage\n              id=\"collective.expensePolicy.description\"\n              defaultMessage=\"It can be daunting to file an expense if you're not sure what's allowed. Provide a clear policy to guide expense submitters.\"\n            />\n          </P>\n        </Container>\n\n        {collective?.isHost && (\n          <Container>\n            <SettingsSectionTitle mt={4}>\n              <FormattedMessage id=\"editCollective.admins.header\" defaultMessage=\"Required Admins\" />\n            </SettingsSectionTitle>\n            <P mb={2}>\n              <FormattedMessage\n                id=\"editCollective.admins.description\"\n                defaultMessage=\"Please specify the minimum number of admins a collective needs to have for being accepted by your fiscal host and to accept contributions.\"\n              />\n            </P>\n            <Flex gap=\"12px 24px\" mb={3} mt={2} flexDirection={['column', 'row']}>\n              <StyledInputField\n                disabled={isSubmittingSettings}\n                labelFontSize=\"13px\"\n                labelFontWeight=\"700\"\n                label={<FormattedMessage defaultMessage=\"Minimum number of admins\" />}\n                flexGrow={1}\n              >\n                <StyledSelect\n                  inputId=\"numberOfAdmins\"\n                  isSearchable={false}\n                  options={numberOfAdminsOptions}\n                  onChange={option => {\n                    if (option.value === 0) {\n                      formik.setFieldValue('policies', { ...formik.values.policies, COLLECTIVE_MINIMUM_ADMINS: null });\n                    } else {\n                      formik.setFieldValue('policies.COLLECTIVE_MINIMUM_ADMINS', {\n                        ...formik.values.policies.COLLECTIVE_MINIMUM_ADMINS,\n                        numberOfAdmins: option.value,\n                      });\n                    }\n                  }}\n                  value={numberOfAdminsOptions.find(\n                    option => option.value === (formik.values.policies?.COLLECTIVE_MINIMUM_ADMINS?.numberOfAdmins || 0),\n                  )}\n                />\n              </StyledInputField>\n              <StyledInputField\n                disabled={isSubmittingSettings}\n                labelFontSize=\"13px\"\n                labelFontWeight=\"700\"\n                label={<FormattedMessage defaultMessage=\"Whom does this apply to\" />}\n                flexGrow={1}\n              >\n                <StyledSelect\n                  inputId=\"applies\"\n                  isSearchable={false}\n                  options={minAdminsApplies}\n                  onChange={option =>\n                    formik.setFieldValue('policies.COLLECTIVE_MINIMUM_ADMINS', {\n                      ...formik.values.policies.COLLECTIVE_MINIMUM_ADMINS,\n                      applies: option.value,\n                    })\n                  }\n                  disabled\n                  value={minAdminsApplies[0]}\n                />\n              </StyledInputField>\n            </Flex>\n            <StyledCheckbox\n              name=\"minAdminsFreeze\"\n              label={<FormattedMessage defaultMessage=\"Freeze collectives that don’t meet the minimum requirement\" />}\n              onChange={({ checked }) => {\n                formik.setFieldValue('policies.COLLECTIVE_MINIMUM_ADMINS', {\n                  ...formik.values.policies.COLLECTIVE_MINIMUM_ADMINS,\n                  freeze: checked,\n                });\n              }}\n              checked={Boolean(formik.values.policies?.COLLECTIVE_MINIMUM_ADMINS?.freeze)}\n            />\n            <P fontSize=\"14px\" lineHeight=\"18px\" color=\"black.600\" ml=\"2.2rem\">\n              <FormattedMessage defaultMessage=\"Freezing the collective will prevent them from accepting and distributing contributions till they meet the requirements. This is a security measure to make sure the admins are within their rights. Read More.\" />\n            </P>\n            {formik.values.policies?.COLLECTIVE_MINIMUM_ADMINS?.applies === 'ALL_COLLECTIVES' &&\n              formik.values.policies?.COLLECTIVE_MINIMUM_ADMINS?.freeze && (\n                <MessageBox type=\"warning\" mt={2} fontSize=\"13px\">\n                  <FormattedMessage defaultMessage=\"Some collectives hosted by you may not fulfill the minimum admin requirements. If you choose to apply the setting to all Collectives, the ones that don't comply will be frozen until they meet the minimum requirements for admins.\" />\n                </MessageBox>\n              )}\n          </Container>\n        )}\n        <Container>\n          <SettingsSectionTitle mt={4}>\n            <FormattedMessage id=\"editCollective.expenseApprovalsPolicy.header\" defaultMessage=\"Expense approvals\" />\n          </SettingsSectionTitle>\n          <StyledCheckbox\n            name=\"authorCannotApproveExpense\"\n            label={\n              <FormattedMessage\n                id=\"editCollective.expenseApprovalsPolicy.authorCannotApprove\"\n                defaultMessage=\"Admins cannot approve their own expenses. With this feature turned on, admins will need another admin to approve their expenses\"\n              />\n            }\n            onChange={() =>\n              formik.setFieldValue('policies', {\n                ...formik.values.policies,\n                ['EXPENSE_AUTHOR_CANNOT_APPROVE']: {\n                  ...formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE'],\n                  enabled: !formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.enabled,\n                  appliesToHostedCollectives: false,\n                  appliesToSingleAdminCollectives: false,\n                  amountInCents: 0,\n                },\n              })\n            }\n            checked={\n              authorCannotApproveExpenseEnforcedByHost ||\n              Boolean(formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.enabled)\n            }\n            disabled={\n              isSettingPolicies ||\n              (numberOfAdmins < 2 && Boolean(!formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.enabled)) ||\n              authorCannotApproveExpenseEnforcedByHost\n            }\n          />\n          <Flex\n            ml=\"2.2rem\"\n            mt=\"1rem\"\n            alignItems=\"center\"\n            color={!formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.enabled ? 'black.600' : undefined}\n          >\n            <P mr=\"2rem\">\n              <FormattedMessage defaultMessage=\"Enforce for expenses above:\" />\n            </P>\n            <StyledInputAmount\n              maxWidth=\"11em\"\n              disabled={\n                isSettingPolicies ||\n                authorCannotApproveExpenseEnforcedByHost ||\n                !formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.enabled\n              }\n              currency={data?.account?.currency}\n              currencyDisplay=\"CODE\"\n              placeholder=\"0\"\n              value={\n                authorCannotApproveExpenseEnforcedByHost\n                  ? hostAuthorCannotApproveExpensePolicy.amountInCents\n                  : formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.amountInCents\n              }\n              onChange={value =>\n                formik.setFieldValue('policies', {\n                  ...formik.values.policies,\n                  ['EXPENSE_AUTHOR_CANNOT_APPROVE']: {\n                    ...formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE'],\n                    amountInCents: value,\n                  },\n                })\n              }\n            />\n          </Flex>\n          {collective?.isHost && (\n            <React.Fragment>\n              <P\n                ml=\"2.2rem\"\n                mt=\"1rem\"\n                color={!formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.enabled ? 'black.600' : undefined}\n              >\n                <StyledCheckbox\n                  name=\"authorCannotApproveExpense.appliesToHostedCollectives\"\n                  label={\n                    <FormattedMessage\n                      id=\"editCollective.expenseApprovalsPolicy.authorCannotApprove.appliesToHostedCollectives\"\n                      defaultMessage=\"Enforce this policy on collectives hosted by you.\"\n                    />\n                  }\n                  checked={formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.appliesToHostedCollectives}\n                  disabled={isSettingPolicies || !formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.enabled}\n                  onChange={() =>\n                    formik.setFieldValue('policies', {\n                      ...formik.values.policies,\n                      ['EXPENSE_AUTHOR_CANNOT_APPROVE']: {\n                        ...formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE'],\n                        appliesToHostedCollectives:\n                          !formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.appliesToHostedCollectives,\n                        appliesToSingleAdminCollectives: false,\n                      },\n                    })\n                  }\n                />\n              </P>\n              <P\n                ml=\"2.2rem\"\n                mt=\"1rem\"\n                color={\n                  !formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.appliesToHostedCollectives\n                    ? 'black.600'\n                    : undefined\n                }\n              >\n                <StyledCheckbox\n                  name=\"authorCannotApproveExpense.appliesToSingleAdminCollectives\"\n                  label={\n                    <FormattedMessage\n                      id=\"editCollective.expenseApprovalsPolicy.authorCannotApprove.appliesToSingleAdminCollectives\"\n                      defaultMessage=\"Enforce this policy on collectives with a single admin.\"\n                    />\n                  }\n                  checked={formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.appliesToSingleAdminCollectives}\n                  disabled={\n                    isSettingPolicies ||\n                    !formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.appliesToHostedCollectives\n                  }\n                  onChange={() =>\n                    formik.setFieldValue('policies', {\n                      ...formik.values.policies,\n                      ['EXPENSE_AUTHOR_CANNOT_APPROVE']: {\n                        ...formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE'],\n                        appliesToSingleAdminCollectives:\n                          !formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.appliesToSingleAdminCollectives,\n                      },\n                    })\n                  }\n                />\n              </P>\n            </React.Fragment>\n          )}\n          {numberOfAdmins < 2 && Boolean(!formik.values.policies?.['EXPENSE_AUTHOR_CANNOT_APPROVE']?.enabled) && (\n            <P fontSize=\"14px\" lineHeight=\"18px\" color=\"black.600\" ml=\"2.2rem\">\n              <FormattedMessage\n                id=\"editCollective.expenseApprovalsPolicy.authorCannotApprove.minAdminRequired\"\n                defaultMessage=\"You need to have at least two admins to enable this policy.\"\n              />\n            </P>\n          )}\n        </Container>\n        <Container mt={3}>\n          <StyledCheckbox\n            name=\"allow-expense-submission\"\n            label={formatMessage(messages['expensePolicy.allowExpense'])}\n            onChange={() =>\n              formik.setFieldValue('disablePublicExpenseSubmission', !formik.values.disablePublicExpenseSubmission)\n            }\n            defaultChecked={Boolean(formik.values.disablePublicExpenseSubmission)}\n          />\n        </Container>\n        {collective.isHost && (\n          <Container>\n            <SettingsSectionTitle mt={4}>\n              <FormattedMessage defaultMessage=\"Expense types\" />\n            </SettingsSectionTitle>\n            <P mb={2}>\n              <FormattedMessage\n                id=\"editCollective.expenseTypes.description\"\n                defaultMessage=\"Specify the types of expenses allowed for all the collectives you're hosting. If you wish to customize these options for specific collectives, head to the <HostedCollectivesLink>Hosted Collectives</HostedCollectivesLink> section.\"\n                values={{\n                  HostedCollectivesLink: getI18nLink({\n                    as: Link,\n                    href: `/${collective.slug}/admin/hosted-collectives`,\n                  }),\n                }}\n              />\n            </P>\n\n            {['RECEIPT', 'INVOICE', 'GRANT'].map(type => (\n              <StyledCheckbox\n                key={type}\n                name={`allow-${type}-submission`}\n                label={formatMessage(messages[`expensePolicy.${type}`])}\n                checked={Boolean(formik.values.expenseTypes[type])}\n                onChange={() =>\n                  formik.setFieldValue('expenseTypes', {\n                    ...formik.values.expenseTypes,\n                    [type]: !formik.values.expenseTypes[type],\n                  })\n                }\n              />\n            ))}\n          </Container>\n        )}\n        <Container>\n          <SettingsSectionTitle mt={4}>\n            <FormattedMessage id=\"editCollective.rejectCategories.header\" defaultMessage=\"Rejected categories\" />\n          </SettingsSectionTitle>\n          <P mb={2}>\n            <FormattedMessage\n              id=\"editCollective.rejectCategories.description\"\n              defaultMessage=\"Specify any categories of contributor that you do not wish to accept money from, to automatically prevent these types of contributions. (You can also reject contributions individually using the button on a specific unwanted transaction)\"\n            />\n          </P>\n          <StyledSelect\n            inputId=\"policy-select\"\n            isSearchable={false}\n            isLoading={loading}\n            placeholder={formatMessage(messages['rejectCategories.placeholder'])}\n            minWidth={300}\n            maxWidth={600}\n            options={selectOptions}\n            value={selected}\n            onChange={selectedOptions => setSelected(selectedOptions)}\n            isMulti\n          />\n        </Container>\n        <Flex mt={5} mb={3} alignItems=\"center\" justifyContent=\"center\">\n          <StyledButton\n            data-cy=\"submit-policy-btn\"\n            buttonStyle=\"primary\"\n            mx={2}\n            minWidth={200}\n            buttonSize=\"medium\"\n            loading={isSubmittingSettings || isSubmittingCategories}\n            type=\"submit\"\n            onSubmit={formik.handleSubmit}\n          >\n            <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n          </StyledButton>\n        </Flex>\n      </form>\n    </Flex>\n  );\n};\n\nPolicies.propTypes = {\n  collective: PropTypes.shape({\n    settings: PropTypes.object,\n    id: PropTypes.number,\n    slug: PropTypes.string,\n    isHost: PropTypes.bool,\n    members: PropTypes.arrayOf(\n      PropTypes.shape({\n        role: PropTypes.string,\n      }),\n    ),\n  }),\n  showOnlyExpensePolicy: PropTypes.bool,\n};\n\nexport default Policies;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { formatManualInstructions } from '../../lib/payment-method-utils';\n\nimport Container from '../Container';\nimport { Box, Flex } from '../Grid';\nimport StyledTextarea from '../StyledTextarea';\nimport { P, Span } from '../Text';\n\nimport { formatAccountDetails } from './utils';\n\nconst List = styled.ul`\n  margin: 0;\n  padding: 0;\n  position: relative;\n  list-style: none;\n`;\n\nclass UpdateBankDetailsForm extends React.Component {\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    profileType: PropTypes.string, // USER or ORGANIZATION\n    error: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    useStructuredForm: PropTypes.bool,\n    bankAccount: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { form: { instructions: props.value } };\n    this.onChange = this.onChange.bind(this);\n    this.messages = defineMessages({\n      'bankaccount.instructions.label': {\n        id: 'paymentMethods.manual.instructions',\n        defaultMessage: 'Bank transfer instructions',\n      },\n    });\n  }\n\n  onChange(field, value) {\n    this.setState(\n      state => {\n        return { form: { ...state.form, [field]: value } };\n      },\n      () => {\n        return this.props.onChange(this.state.form);\n      },\n    );\n  }\n\n  renderInstructions() {\n    const formatValues = {\n      account: this.props.bankAccount ? formatAccountDetails(this.props.bankAccount) : '',\n      reference: '76400',\n      OrderId: '76400',\n      amount: '$30',\n      collective: 'acme',\n    };\n\n    return formatManualInstructions(this.state.form.instructions, formatValues);\n  }\n\n  render() {\n    const { intl, value, error, useStructuredForm, bankAccount } = this.props;\n    return (\n      <Flex flexDirection=\"column\">\n        <Container as=\"fieldset\" border=\"none\" width={1}>\n          <Flex flexDirection={['column-reverse', 'row']}>\n            <Box mb={3} flexGrow={1}>\n              <StyledTextarea\n                label={intl.formatMessage(this.messages['bankaccount.instructions.label'])}\n                htmlFor=\"instructions\"\n                width=\"100%\"\n                height={400}\n                onChange={e => this.onChange('instructions', e.target.value)}\n                defaultValue={value}\n              />\n            </Box>\n            <Container fontSize=\"1.4rem\" pl={[0, 3]} width={[1, 0.5]}>\n              <P>\n                <FormattedMessage\n                  id=\"bankaccount.instructions.variables\"\n                  defaultMessage=\"Financial contributors will receive these instructions when they select bank transfer as the payment method. You can use the following variables (like blanks that gets filled in):\"\n                />\n              </P>\n\n              <List>\n                {useStructuredForm && bankAccount?.currency && (\n                  <li>\n                    <code>&#123;account&#125;</code>:{' '}\n                    <FormattedMessage\n                      id=\"bankaccount.instructions.account\"\n                      defaultMessage=\"The bank account details you added above.\"\n                    />\n                  </li>\n                )}\n                <li>\n                  <code>&#123;amount&#125;</code>:{' '}\n                  <FormattedMessage\n                    id=\"bankaccount.instructions.amount\"\n                    defaultMessage=\"Total amount the payer should transfer.\"\n                  />\n                </li>\n                <li>\n                  <code>&#123;collective&#125;</code>:{' '}\n                  <FormattedMessage\n                    id=\"bankaccount.instructions.collective\"\n                    defaultMessage=\"Collective to receive the funds. If you only have one Collective, you might not need to include this.\"\n                  />\n                </li>\n                <li>\n                  <code>&#123;reference&#125;</code>:{' '}\n                  <FormattedMessage\n                    id=\"bankaccount.instructions.reference\"\n                    defaultMessage=\"Unique ID code, to confirm receipt of funds.\"\n                  />\n                </li>\n\n                <P>\n                  <FormattedMessage id=\"bankaccount.instructions.preview\" defaultMessage=\"Preview:\" />\n                </P>\n\n                <pre style={{ whiteSpace: 'pre-wrap' }}>{this.renderInstructions()}</pre>\n              </List>\n            </Container>\n          </Flex>\n        </Container>\n\n        {error && (\n          <Span display=\"block\" color=\"red.500\" pt={2} fontSize=\"10px\">\n            {error}\n          </Span>\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default injectIntl(UpdateBankDetailsForm);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { Add } from '@styled-icons/material/Add';\nimport { Formik } from 'formik';\nimport { findLast, get, omit } from 'lodash';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { BANK_TRANSFER_DEFAULT_INSTRUCTIONS, PayoutMethodType } from '../../../lib/constants/payout-method';\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\nimport { formatManualInstructions } from '../../../lib/payment-method-utils';\n\nimport ConfirmationModal from '../../ConfirmationModal';\nimport Container from '../../Container';\nimport PayoutBankInformationForm from '../../expenses/PayoutBankInformationForm';\nimport { Box, Flex } from '../../Grid';\nimport Image from '../../Image';\nimport Loading from '../../Loading';\nimport StyledButton from '../../StyledButton';\nimport { P } from '../../Text';\nimport UpdateBankDetailsForm from '../UpdateBankDetailsForm';\nimport { formatAccountDetails } from '../utils';\n\nimport SettingsSectionTitle from './SettingsSectionTitle';\n\nconst hostQuery = gql`\n  query EditCollectiveBankTransferHost($slug: String) {\n    host(slug: $slug) {\n      id\n      slug\n      legacyId\n      currency\n      settings\n      connectedAccounts {\n        id\n        service\n      }\n      plan {\n        id\n        hostedCollectives\n        manualPayments\n        name\n      }\n      payoutMethods {\n        id\n        name\n        data\n        type\n      }\n    }\n  }\n`;\n\nconst createPayoutMethodMutation = gql`\n  mutation EditCollectiveBankTransferCreatePayoutMethod(\n    $payoutMethod: PayoutMethodInput!\n    $account: AccountReferenceInput!\n  ) {\n    createPayoutMethod(payoutMethod: $payoutMethod, account: $account) {\n      data\n      id\n      name\n      type\n    }\n  }\n`;\n\nconst removePayoutMethodMutation = gql`\n  mutation EditCollectiveBankTransferRemovePayoutMethod($payoutMethodId: String!) {\n    removePayoutMethod(payoutMethodId: $payoutMethodId) {\n      id\n    }\n  }\n`;\n\nconst editBankTransferMutation = gql`\n  mutation EditCollectiveBankTransfer($account: AccountReferenceInput!, $key: AccountSettingsKey!, $value: JSON!) {\n    editAccountSetting(account: $account, key: $key, value: $value) {\n      id\n      settings\n    }\n  }\n`;\n\nconst renderBankInstructions = (instructions, bankAccountInfo) => {\n  const formatValues = {\n    account: bankAccountInfo ? formatAccountDetails(bankAccountInfo) : '',\n    reference: '76400',\n    OrderId: '76400',\n    amount: '$30',\n    collective: 'acme',\n  };\n\n  return formatManualInstructions(instructions, formatValues);\n};\n\nconst BankTransfer = props => {\n  const { loading, data } = useQuery(hostQuery, {\n    context: API_V2_CONTEXT,\n    variables: { slug: props.collectiveSlug },\n  });\n  const [createPayoutMethod] = useMutation(createPayoutMethodMutation, { context: API_V2_CONTEXT });\n  const [removePayoutMethod] = useMutation(removePayoutMethodMutation, { context: API_V2_CONTEXT });\n  const [editBankTransfer] = useMutation(editBankTransferMutation, { context: API_V2_CONTEXT });\n  const [showForm, setShowForm] = React.useState(false);\n  const [showRemoveBankConfirmationModal, setShowRemoveBankConfirmationModal] = React.useState(false);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const existingManualPaymentMethod = !!get(data.host, 'settings.paymentMethods.manual');\n  const showEditManualPaymentMethod = !showForm && data.host;\n  const existingPayoutMethod = data.host.payoutMethods.find(pm => pm.data.isManualBankTransfer);\n  const useStructuredForm =\n    !existingManualPaymentMethod || (existingManualPaymentMethod && existingPayoutMethod) ? true : false;\n  const instructions = data.host.settings?.paymentMethods?.manual?.instructions || BANK_TRANSFER_DEFAULT_INSTRUCTIONS;\n\n  // Fix currency if the existing payout method already matches the collective currency\n  // or if it was already defined by Stripe\n  const existingPayoutMethodMatchesCurrency = existingPayoutMethod?.data?.currency === data.host.currency;\n  const isConnectedToStripe = data.host.connectedAccounts?.find?.(ca => ca.service === 'stripe');\n  const fixedCurrency =\n    useStructuredForm && (existingPayoutMethodMatchesCurrency || isConnectedToStripe) && data.host.currency;\n\n  const initialValues = {\n    ...(existingPayoutMethod || { data: { currency: fixedCurrency || data.host.currency } }),\n    instructions,\n  };\n\n  const latestBankAccount = findLast(\n    data?.host?.payoutMethods,\n    payoutMethod => payoutMethod.type === PayoutMethodType.BANK_ACCOUNT,\n  );\n\n  return (\n    <Flex className=\"EditPaymentMethods\" flexDirection=\"column\">\n      {showEditManualPaymentMethod && (\n        <Fragment>\n          <SettingsSectionTitle>\n            <FormattedMessage id=\"editCollective.receivingMoney.bankTransfers\" defaultMessage=\"Bank Transfers\" />\n          </SettingsSectionTitle>\n\n          <Box>\n            <Container fontSize=\"12px\" mt={2} color=\"black.600\" textAlign=\"left\">\n              {data.host.plan.manualPayments ? (\n                <FormattedMessage\n                  id=\"paymentMethods.manual.add.info\"\n                  defaultMessage=\"Define instructions for contributions via bank transfer. When funds arrive, you can mark them as confirmed to credit the budget balance.\"\n                />\n              ) : (\n                <FormattedMessage\n                  id=\"paymentMethods.manual.upgradePlan\"\n                  defaultMessage=\"Subscribe to our special plans for hosts\"\n                />\n              )}\n            </Container>\n          </Box>\n          {existingManualPaymentMethod && (\n            <Box pt={2}>\n              <Container fontSize=\"12px\" mt={2} mb={2} color=\"black.600\" textAlign=\"left\">\n                <FormattedMessage defaultMessage=\"Preview of bank transfer instructions\" />\n              </Container>\n              <pre style={{ whiteSpace: 'pre-wrap' }}>\n                {renderBankInstructions(instructions, latestBankAccount?.data)}\n              </pre>\n            </Box>\n          )}\n          <Box alignItems=\"center\" my={2}>\n            <StyledButton\n              buttonStyle=\"standard\"\n              buttonSize=\"small\"\n              disabled={!data.host.plan.manualPayments}\n              onClick={() => {\n                setShowForm(true);\n                props.hideTopsection(true);\n              }}\n            >\n              {existingManualPaymentMethod ? (\n                <FormattedMessage id=\"paymentMethods.manual.edit\" defaultMessage=\"Edit bank details\" />\n              ) : (\n                <Fragment>\n                  <Add size=\"1em\" />\n                  {'  '}\n                  <FormattedMessage id=\"paymentMethods.manual.add\" defaultMessage=\"Set bank details\" />\n                </Fragment>\n              )}\n            </StyledButton>{' '}\n            {existingManualPaymentMethod && (\n              <StyledButton\n                mt={[2, 0]}\n                buttonStyle=\"standard\"\n                buttonSize=\"small\"\n                disabled={!data.host.plan.manualPayments}\n                onClick={() => {\n                  setShowRemoveBankConfirmationModal(true);\n                }}\n              >\n                <FormattedMessage defaultMessage=\"Remove bank details\" />\n              </StyledButton>\n            )}\n          </Box>\n        </Fragment>\n      )}\n      {showForm && (\n        <Formik\n          initialValues={initialValues}\n          onSubmit={async (values, { setSubmitting }) => {\n            const { data, instructions } = values;\n            if (data?.currency && data?.type) {\n              await createPayoutMethod({\n                variables: {\n                  payoutMethod: { data: { ...data, isManualBankTransfer: true }, type: 'BANK_ACCOUNT' },\n                  account: { slug: props.collectiveSlug },\n                },\n              });\n            }\n            await editBankTransfer({\n              variables: {\n                key: 'paymentMethods.manual.instructions',\n                value: instructions,\n                account: { slug: props.collectiveSlug },\n              },\n              refetchQueries: [\n                { query: hostQuery, context: API_V2_CONTEXT, variables: { slug: props.collectiveSlug } },\n              ],\n              awaitRefetchQueries: true,\n            });\n            setSubmitting(false);\n            setShowForm(false);\n            props.hideTopsection(false);\n          }}\n        >\n          {({ handleSubmit, isSubmitting, setFieldValue, values }) => (\n            <form onSubmit={handleSubmit}>\n              <SettingsSectionTitle>\n                <FormattedMessage id=\"paymentMethods.manual.HowDoesItWork\" defaultMessage=\"How does it work?\" />\n              </SettingsSectionTitle>\n              <Flex flexDirection={['column', 'row']} alignItems={['center', 'start']}>\n                <P mr={2}>\n                  <FormattedMessage\n                    id=\"paymentMethod.manual.edit.description\"\n                    defaultMessage='Contributors can choose \"Bank Transfer\" as a payment method at checkout and instructions will be automatically emailed to them. Once received, you can mark the transaction as confirmed to credit the budget on Open Collective.'\n                  />\n                </P>\n                <Image alt=\"\" src=\"/static/images/ManualPaymentMethod-BankTransfer.png\" width={350} height={168} />\n              </Flex>\n              {useStructuredForm && (\n                <React.Fragment>\n                  <SettingsSectionTitle mt={4}>\n                    <FormattedMessage\n                      id=\"paymentMethods.manual.bankInfo.title\"\n                      defaultMessage=\"Add your bank account information\"\n                    />\n                  </SettingsSectionTitle>\n                  <Flex mr={2} flexDirection=\"column\" width={[1, 0.5]}>\n                    <PayoutBankInformationForm\n                      getFieldName={string => string}\n                      fixedCurrency={fixedCurrency}\n                      ignoreBlockedCurrencies={false}\n                      isNew\n                      optional\n                    />\n                  </Flex>\n                </React.Fragment>\n              )}\n\n              <SettingsSectionTitle mt={4}>\n                <FormattedMessage id=\"paymentMethods.manual.instructions.title\" defaultMessage=\"Define instructions\" />\n              </SettingsSectionTitle>\n              <Box mr={2} flexGrow={1}>\n                <UpdateBankDetailsForm\n                  value={instructions}\n                  onChange={({ instructions }) => setFieldValue('instructions', instructions)}\n                  useStructuredForm={useStructuredForm}\n                  bankAccount={values.data}\n                />\n              </Box>\n              <Box my={3} textAlign={['center', 'left']}>\n                <StyledButton\n                  mr={2}\n                  buttonStyle=\"standard\"\n                  buttonSize=\"medium\"\n                  onClick={() => {\n                    setShowForm(false);\n                    props.hideTopsection(false);\n                  }}\n                  disabled={isSubmitting}\n                >\n                  <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n                </StyledButton>\n                <StyledButton\n                  buttonStyle=\"primary\"\n                  buttonSize=\"medium\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  loading={isSubmitting}\n                >\n                  <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n                </StyledButton>\n              </Box>\n            </form>\n          )}\n        </Formik>\n      )}\n      {showRemoveBankConfirmationModal && (\n        <ConfirmationModal\n          width=\"100%\"\n          maxWidth=\"570px\"\n          onClose={() => {\n            setShowRemoveBankConfirmationModal(false);\n          }}\n          header={<FormattedMessage defaultMessage=\"Remove Bank Account\" />}\n          continueHandler={async () => {\n            const paymentMethods = get(data.host, 'settings.paymentMethods');\n            const modifiedPaymentMethods = omit(paymentMethods, 'manual');\n            if (latestBankAccount) {\n              await removePayoutMethod({\n                variables: {\n                  payoutMethodId: latestBankAccount.id,\n                },\n              });\n            }\n            await editBankTransfer({\n              variables: {\n                key: 'paymentMethods',\n                value: modifiedPaymentMethods,\n                account: { slug: props.collectiveSlug },\n              },\n              refetchQueries: [\n                { query: hostQuery, context: API_V2_CONTEXT, variables: { slug: props.collectiveSlug } },\n              ],\n              awaitRefetchQueries: true,\n            });\n            setShowRemoveBankConfirmationModal(false);\n          }}\n        >\n          <P fontSize=\"14px\" lineHeight=\"18px\" mt={2}>\n            <FormattedMessage defaultMessage=\"Are you sure you want to remove bank account details?\" />\n          </P>\n        </ConfirmationModal>\n      )}\n    </Flex>\n  );\n};\n\nBankTransfer.propTypes = {\n  collectiveSlug: PropTypes.string.isRequired,\n  hideTopsection: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(BankTransfer);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { has } from 'lodash';\nimport { injectIntl } from 'react-intl';\n\nimport hasFeature, { FEATURES } from '../../../lib/allowed-features';\nimport { CollectiveType } from '../../../lib/constants/collectives';\n\nimport BankTransfer from './BankTransfer';\nimport ConnectedAccounts from './ConnectedAccounts';\n\nconst { USER } = CollectiveType;\n\nclass ReceivingMoney extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object.isRequired,\n  };\n\n  state = {\n    hideTopsection: false,\n  };\n\n  hideTopsection = value => {\n    this.setState({ hideTopsection: value });\n  };\n\n  render() {\n    const services = ['stripe'];\n\n    if (hasFeature(this.props.collective, FEATURES.PAYPAL_DONATIONS)) {\n      services.push('paypal');\n    }\n\n    return (\n      <Fragment>\n        {!this.state.hideTopsection && (\n          <ConnectedAccounts\n            collective={this.props.collective}\n            connectedAccounts={this.props.collective.connectedAccounts}\n            services={services}\n            variation=\"RECEIVING\"\n          />\n        )}\n        {(this.props.collective.type !== USER || has(this.props.collective, 'data.settings.paymentMethods.manual')) && (\n          <BankTransfer collectiveSlug={this.props.collective.slug} hideTopsection={this.hideTopsection} />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default injectIntl(ReceivingMoney);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { ExternalLink } from '@styled-icons/feather/ExternalLink';\nimport { Formik } from 'formik';\nimport { get, pick } from 'lodash';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system';\n\nimport { i18nGraphqlException } from '../../../lib/errors';\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\n\nimport Container from '../../Container';\nimport { Box } from '../../Grid';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport StyledButton from '../../StyledButton';\nimport StyledCheckbox from '../../StyledCheckbox';\nimport StyledHr from '../../StyledHr';\nimport StyledInputAmount from '../../StyledInputAmount';\nimport StyledInputField from '../../StyledInputField';\nimport StyledLink from '../../StyledLink';\nimport { H4, P, Span } from '../../Text';\nimport { TOAST_TYPE, useToasts } from '../../ToastProvider';\n\nimport SettingsSectionTitle from './SettingsSectionTitle';\n\nconst accountQuery = gql`\n  query Account($slug: String) {\n    account(slug: $slug) {\n      id\n      slug\n      name\n      isHost\n      settings\n      currency\n      policies {\n        REQUIRE_2FA_FOR_ADMINS\n      }\n    }\n  }\n`;\n\nconst updateSecuritySettingsMutation = gql`\n  mutation UpdateSecuritySettings(\n    $account: AccountReferenceInput!\n    $payoutsTwoFactorAuth: JSON!\n    $require2FAForAdmins: Boolean!\n  ) {\n    editAccountSetting(account: $account, key: \"payoutsTwoFactorAuth\", value: $payoutsTwoFactorAuth) {\n      id\n      settings\n    }\n    setPolicies(account: $account, policies: { REQUIRE_2FA_FOR_ADMINS: $require2FAForAdmins }) {\n      id\n      policies {\n        REQUIRE_2FA_FOR_ADMINS\n      }\n    }\n  }\n`;\n\nconst CheckboxContainer = styled.label`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: 16px;\n  border: 1px solid #dcdee0;\n  font-weight: normal;\n  transition: box-shadow 0.3s;\n  border-radius: 8px;\n  ${margin}\n  &:hover {\n    box-shadow: 0px 4px 12px rgba(20, 20, 20, 0.1);\n  }\n`;\n\nconst getInitialValues = account => {\n  return {\n    require2FAForAdmins: get(account, 'policies.REQUIRE_2FA_FOR_ADMINS', false),\n    payoutsTwoFactorAuth: {\n      enabled: get(account, 'settings.payoutsTwoFactorAuth.enabled', false),\n      rollingLimit: get(account, 'settings.payoutsTwoFactorAuth.rollingLimit', 1000000),\n    },\n  };\n};\n\nconst Security = ({ collective }) => {\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  const { data, loading } = useQuery(accountQuery, { variables: { slug: collective.slug }, context: API_V2_CONTEXT });\n  const [updateSecuritySettings, { loading: submitting }] = useMutation(updateSecuritySettingsMutation, {\n    context: API_V2_CONTEXT,\n  });\n\n  if (loading) {\n    return <LoadingPlaceholder height={300} />;\n  }\n\n  return (\n    <Formik\n      enableReinitialize\n      initialValues={getInitialValues(data.account)}\n      onSubmit={async values => {\n        try {\n          await updateSecuritySettings({ variables: { account: pick(data.account, ['id']), ...values } });\n          addToast({\n            type: TOAST_TYPE.SUCCESS,\n            message: <FormattedMessage id=\"Settings.Updated\" defaultMessage=\"Settings updated.\" />,\n          });\n        } catch (error) {\n          addToast({\n            type: TOAST_TYPE.ERROR,\n            title: <FormattedMessage id=\"Settings.Updated.Fail\" defaultMessage=\"Update failed.\" />,\n            message: i18nGraphqlException(intl, error),\n          });\n        }\n      }}\n    >\n      {({ handleSubmit, setFieldValue, values, dirty }) => (\n        <form onSubmit={handleSubmit}>\n          <SettingsSectionTitle>\n            <FormattedMessage id=\"TwoFactorAuth\" defaultMessage=\"Two-factor authentication\" />\n          </SettingsSectionTitle>\n          <Container mb=\"26px\">\n            <P color=\"black.700\" fontSize=\"14px\" lineHeight=\"20px\" mb={24}>\n              <FormattedMessage\n                id=\"TwoFactorAuth.Setup.FiscalHost.Info\"\n                defaultMessage=\"Two-factor authentication (2FA) adds an extra layer of security when logging in. For Fiscal Hosts or Collectives that manage their own funds, 2FA helps ensure payouts are secure.\"\n              />\n            </P>\n            <CheckboxContainer htmlFor=\"enable-enforce-2fa-checkbox\">\n              <Box width=\"32px\">\n                <StyledCheckbox\n                  inputId=\"enable-enforce-2fa-checkbox\"\n                  name=\"enable-enforce-2fa\"\n                  fontSize=\"14px\"\n                  checked={values.require2FAForAdmins}\n                  width=\"auto\"\n                  onChange={() => setFieldValue('require2FAForAdmins', !values.require2FAForAdmins)}\n                />\n              </Box>\n              <Box flex=\"1 1\">\n                <P fontSize=\"16px\" lineHeight=\"24px\" fontWeight=\"700\">\n                  <FormattedMessage\n                    defaultMessage=\"All {account} admins must have 2FA\"\n                    values={{ account: data.account.name }}\n                  />\n                </P>\n                <P mt=\"5px\" color=\"black.700\" fontSize=\"14px\" lineHeight=\"20px\">\n                  <FormattedMessage defaultMessage=\"Checking this will require all admins of your team to activate a two-factor authentication to perform admin tasks like payouts.\" />\n                </P>\n              </Box>\n            </CheckboxContainer>\n          </Container>\n          {data.account.isHost && (\n            <Container>\n              <H4 htmlFor=\"rollingLimit\" mb=\"16px\" fontSize=\"16px\" lineHeight=\"24px\">\n                <FormattedMessage id=\"editCollective.rollingLimit.label\" defaultMessage=\"Rolling payout limit\" />\n              </H4>\n              <CheckboxContainer htmlFor=\"enable-rolling-limit-checkbox\" mb={24}>\n                <Box width=\"32px\">\n                  <StyledCheckbox\n                    inputId=\"enable-rolling-limit-checkbox\"\n                    name=\"enable-rolling-limit\"\n                    checked={values.payoutsTwoFactorAuth.enabled}\n                    width=\"auto\"\n                    onChange={() => setFieldValue('payoutsTwoFactorAuth.enabled', !values.payoutsTwoFactorAuth.enabled)}\n                  />\n                </Box>\n                <Box flex=\"1 1\">\n                  <P fontSize=\"16px\" lineHeight=\"24px\" fontWeight=\"700\">\n                    <FormattedMessage defaultMessage=\"Enable rolling limit 2FA for payouts\" />\n                  </P>\n                  <P mt=\"5px\" color=\"black.700\" fontSize=\"14px\" lineHeight=\"20px\">\n                    <FormattedMessage defaultMessage=\"Admins will be asked to authenticate with 2FA code when they make the first payment after turning it on, and again once they've hit the rolling limit.\" />\n                  </P>\n                </Box>\n              </CheckboxContainer>\n              {values.payoutsTwoFactorAuth.enabled && (\n                <StyledInputField name=\"rollingLimit\" htmlFor=\"rollingLimit\" disabled={loading} mr=\"24px\">\n                  {inputProps => (\n                    <StyledInputAmount\n                      {...inputProps}\n                      currency={data.account.currency}\n                      type=\"number\"\n                      fontSize=\"14px\"\n                      value={values.payoutsTwoFactorAuth.rollingLimit}\n                      onChange={value => setFieldValue('payoutsTwoFactorAuth.rollingLimit', value)}\n                      min={100}\n                      precision={2}\n                      disabled={!values.payoutsTwoFactorAuth.enabled}\n                      px=\"2px\"\n                      placeholder={intl.formatMessage({\n                        id: 'collective.contributionPolicy.placeholder',\n                        defaultMessage: 'E.g. what types of contributions you will and will not accept.',\n                      })}\n                    />\n                  )}\n                </StyledInputField>\n              )}\n            </Container>\n          )}\n          <P mt={26} fontWeight=\"500\">\n            <StyledLink\n              openInNewTab\n              href={\n                data.account.isHost\n                  ? 'https://docs.opencollective.com/help/fiscal-hosts/payouts/two-factor-authentication-for-payouts'\n                  : 'https://docs.opencollective.com/help/product/two-factor-authentication'\n              }\n            >\n              <span>\n                <FormattedMessage defaultMessage=\"Read the documentation about 2FA\" />\n              </span>\n              <Span ml=\"6px\">\n                <ExternalLink size=\"1.1em\" strokeWidth={2} style={{ marginBottom: 3 }} />\n              </Span>\n            </StyledLink>\n          </P>\n          <StyledHr borderColor=\"black.400\" my={4} />\n          <div>\n            <StyledButton buttonStyle=\"primary\" minWidth={100} type=\"submit\" loading={submitting} disabled={!dirty}>\n              <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n            </StyledButton>\n          </div>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nSecurity.propTypes = {\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Security;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport hasFeature, { FEATURES } from '../../../lib/allowed-features';\nimport { gqlV1 } from '../../../lib/graphql/helpers';\n\nimport MessageBox from '../../MessageBox';\nimport StyledButton from '../../StyledButton';\nimport { P } from '../../Text';\n\nimport ConnectedAccounts from './ConnectedAccounts';\nimport SettingsSectionTitle from './SettingsSectionTitle';\n\nclass SendingMoney extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object.isRequired,\n    editCollectiveSettings: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isSubmitting: false,\n    };\n  }\n\n  togglePaypal = async () => {\n    try {\n      this.setState({ isSubmitting: true });\n      await this.props.editCollectiveSettings({\n        variables: {\n          id: this.props.collective.id,\n          settings: {\n            ...this.props.collective.settings,\n            disablePaypalPayouts: !this.props.collective.settings.disablePaypalPayouts,\n          },\n        },\n      });\n      this.setState({ isSubmitting: false });\n    } catch (e) {\n      this.setState({ error: e.toString() });\n    }\n  };\n\n  render() {\n    const services = ['transferwise'];\n    if (hasFeature(this.props.collective, FEATURES.PAYPAL_PAYOUTS)) {\n      services.push('paypal');\n    }\n    if (\n      hasFeature(this.props.collective, FEATURES.VIRTUAL_CARDS) &&\n      ['opensource', 'foundation', 'opencollective'].includes(this.props.collective.slug)\n    ) {\n      services.push('privacy');\n    }\n\n    let paypalConnectButton;\n    if (this.props.collective.settings?.disablePaypalPayouts) {\n      paypalConnectButton = <FormattedMessage id=\"collective.paypalEnable.button\" defaultMessage=\"Enable PayPal\" />;\n    } else {\n      paypalConnectButton = <FormattedMessage id=\"collective.paypalDisable.button\" defaultMessage=\"Disable PayPal\" />;\n    }\n\n    return (\n      <Fragment>\n        <ConnectedAccounts\n          collective={this.props.collective}\n          connectedAccounts={this.props.collective.connectedAccounts}\n          services={services}\n        />\n        {!services.includes('paypal') && (\n          <Fragment>\n            <SettingsSectionTitle>\n              <FormattedMessage id=\"PayoutMethod.Type.Paypal\" defaultMessage={'PayPal'} />\n            </SettingsSectionTitle>\n            {!this.props.collective.settings?.disablePaypalPayouts && (\n              <P mb={3}>\n                <FormattedMessage\n                  id=\"collective.sendMoney.paypalEnabled.description\"\n                  defaultMessage={\n                    'PayPal Payouts are active. Contributors can request Expenses to be paid with PayPal.'\n                  }\n                />\n              </P>\n            )}\n            {this.props.collective.settings?.disablePaypalPayouts && (\n              <P mb={3}>\n                <FormattedMessage\n                  id=\"collective.sendMoney.paypalDisabled.description\"\n                  defaultMessage={\n                    'PayPal Payouts are disabled. Contributors are not able to request Expenses to be paid with PayPal.'\n                  }\n                />\n              </P>\n            )}\n            <StyledButton\n              loading={this.state.isSubmitting}\n              onClick={this.togglePaypal}\n              mt={2}\n              type=\"submit\"\n              maxWidth={200}\n            >\n              {paypalConnectButton}\n            </StyledButton>\n            {this.state.error && (\n              <MessageBox type=\"error\" withIcon my={3}>\n                {this.state.error}\n              </MessageBox>\n            )}\n          </Fragment>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst editCollectiveSettingsMutation = gqlV1/* GraphQL */ `\n  mutation EditCollectiveSettings($id: Int!, $settings: JSON) {\n    editCollective(collective: { id: $id, settings: $settings }) {\n      id\n      settings\n    }\n  }\n`;\n\nconst addEditCollectiveSettingsMutation = graphql(editCollectiveSettingsMutation, {\n  name: 'editCollectiveSettings',\n});\n\nexport default injectIntl(addEditCollectiveSettingsMutation(SendingMoney));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport { get, sortBy } from 'lodash';\nimport styled from 'styled-components';\n\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\n\nimport AdminContributeCardsContainer from '../../contribute-cards/AdminContributeCardsContainer';\nimport ContributeTier from '../../contribute-cards/ContributeTier';\nimport { Box, Grid } from '../../Grid';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport MessageBoxGraphqlError from '../../MessageBoxGraphqlError';\nimport { listTierQuery } from '../tiers/EditTierModal';\n\nconst prepareCards = (collective, sortedTiers) => {\n  return sortedTiers.map(tier => {\n    return {\n      key: tier.id,\n      Component: ContributeTier,\n      componentProps: {\n        collective,\n        tier,\n        hideContributors: true,\n        hideCTA: true,\n      },\n    };\n  });\n};\n\nconst CardsContainer = styled(Grid).attrs({\n  justifyItems: 'center',\n  gridGap: '30px',\n  gridTemplateColumns: ['repeat(auto-fit, minmax(280px, 1fr))'],\n  gridAutoRows: ['1fr'],\n})`\n  & > * {\n    padding: 0;\n  }\n`;\n\n/**\n * A revamp of `components/edit-collective/sections/Tiers.js`. Meant to be renamed once we'll be ready\n * to replace the old tiers form.\n */\nconst Tickets = ({ collective }) => {\n  const variables = { accountSlug: collective.slug };\n  const { data, loading, error, refetch } = useQuery(listTierQuery, { variables, context: API_V2_CONTEXT });\n  const tiers = sortBy(get(data, 'account.tiers.nodes', []), 'legacyId');\n  const tickets = tiers.filter(tier => tier.type === 'TICKET');\n  return (\n    <Box my={4}>\n      {loading ? (\n        <LoadingPlaceholder height={500} width=\"100%\" />\n      ) : error ? (\n        <MessageBoxGraphqlError error={error} />\n      ) : (\n        <AdminContributeCardsContainer\n          collective={collective}\n          cards={prepareCards(collective, tickets)}\n          CardsContainer={CardsContainer}\n          useTierModals\n          enableReordering={false}\n          createNewType=\"TICKET\"\n          onTierUpdate={() => refetch()}\n        />\n      )}\n    </Box>\n  );\n};\n\nTickets.propTypes = {\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Tickets;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport { Mutation } from '@apollo/client/react/components';\nimport { get, sortBy } from 'lodash';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\n\nimport AdminContributeCardsContainer from '../../contribute-cards/AdminContributeCardsContainer';\nimport ContributeCrypto from '../../contribute-cards/ContributeCrypto';\nimport ContributeCustom from '../../contribute-cards/ContributeCustom';\nimport ContributeTier from '../../contribute-cards/ContributeTier';\nimport { Box, Grid } from '../../Grid';\nimport Image from '../../Image';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport MessageBoxGraphqlError from '../../MessageBoxGraphqlError';\nimport StyledCheckbox from '../../StyledCheckbox';\nimport StyledHr from '../../StyledHr';\nimport StyledLink from '../../StyledLink';\nimport { P, Span, Strong } from '../../Text';\nimport { editAccountSettingsMutation } from '../mutations';\nimport { listTierQuery } from '../tiers/EditTierModal';\n\nimport { collectiveSettingsV1Query } from './EditCollectivePage';\n\n// TODO Make this a common function with the contribute section\nconst getFinancialContributions = (collective, sortedTiers) => {\n  const hasCustomContribution = !get(collective, 'settings.disableCustomContributions', false);\n  const hasCryptoContribution =\n    !get(collective, 'settings.disableCryptoContributions', true) &&\n    get(collective, 'host.settings.cryptoEnabled', false);\n  const waysToContribute = [];\n\n  sortedTiers.forEach(tier => {\n    if (tier === 'custom') {\n      if (hasCustomContribution) {\n        waysToContribute.push({\n          key: 'custom',\n          Component: ContributeCustom,\n          componentProps: {\n            collective,\n            hideContributors: true,\n            hideCTA: true,\n          },\n        });\n      }\n      if (hasCryptoContribution) {\n        waysToContribute.push({\n          key: 'crypto',\n          Component: ContributeCrypto,\n          componentProps: {\n            collective,\n            hideContributors: true, // for the MVP we shall not display the financial contributors for crypto\n            hideCTA: true,\n          },\n        });\n      }\n    } else {\n      waysToContribute.push({\n        key: tier.id,\n        Component: ContributeTier,\n        componentProps: {\n          collective,\n          tier,\n          hideContributors: true,\n          hideCTA: true,\n        },\n      });\n    }\n  });\n\n  return waysToContribute;\n};\n\nconst CardsContainer = styled(Grid).attrs({\n  justifyItems: 'center',\n  gridGap: '30px',\n  gridTemplateColumns: ['repeat(auto-fit, minmax(280px, 1fr))'],\n  gridAutoRows: ['1fr'],\n})`\n  & > * {\n    padding: 0;\n  }\n`;\n\n/**\n * A revamp of `components/edit-collective/sections/Tiers.js`. Meant to be renamed once we'll be ready\n * to replace the old tiers form.\n */\nconst Tiers = ({ collective }) => {\n  const variables = { accountSlug: collective.slug };\n  const { data, loading, error, refetch } = useQuery(listTierQuery, { variables, context: API_V2_CONTEXT });\n  const tiers = sortBy(get(data, 'account.tiers.nodes', []), 'legacyId');\n  const filteredTiers = collective.type === 'EVENT' ? tiers.filter(tier => tier.type !== 'TICKET') : tiers; // Events have their tickets displayed in the \"Tickets\" section\n  const intl = useIntl();\n  const cryptoContributionsEnabledByHost = get(collective, 'host.settings.cryptoEnabled', false);\n  const hasCryptoContributionsDisabled = get(collective, 'settings.disableCryptoContributions', true);\n\n  return (\n    <div>\n      <Grid gridTemplateColumns={['1fr', '172px 1fr']} gridGap={62} mt={34}>\n        <Box>\n          <Image src=\"/static/images/tiers-graphic.png\" alt=\"\" width={172} height={145} layout=\"fixed\" />\n        </Box>\n        <Box ml={2}>\n          <P>\n            <Strong>\n              <FormattedMessage defaultMessage=\"About contribution tiers\" />\n            </Strong>\n            <br />\n            <br />\n            <Span>\n              <FormattedMessage defaultMessage=\"You can provide perks or rewards for your tiers, have a set membership fee, or create categories for your contributors. Tiers can be limited to an amount or frequency (one time, monthly, yearly), or allowed to be flexibly set by contributors.\" />\n            </Span>\n          </P>\n          <P mt={3}>\n            <StyledLink\n              href=\"https://docs.opencollective.com/help/collectives/collective-settings/tiers-goals\"\n              openInNewTab\n            >\n              <FormattedMessage defaultMessage=\"Learn more about tiers\" />.\n            </StyledLink>\n          </P>\n        </Box>\n      </Grid>\n      <StyledHr my={4} borderColor=\"black.300\" />\n\n      <Box my={4}>\n        {loading ? (\n          <LoadingPlaceholder height={500} width=\"100%\" />\n        ) : error ? (\n          <MessageBoxGraphqlError error={error} />\n        ) : (\n          <div>\n            <Box mb={4}>\n              <P fontSize=\"14px\" lineHeight=\"20x\" mb={3}>\n                <FormattedMessage defaultMessage=\"The custom contribution adds a default tier on your collective that doesn't enforce any minimum amount or interval. This is the easiest way for people to contribute to your Collective, but it cannot be customized.\" />\n              </P>\n              <Mutation\n                mutation={editAccountSettingsMutation}\n                refetchQueries={[{ query: collectiveSettingsV1Query, variables: { slug: collective.slug } }]}\n                awaitRefetchQueries\n              >\n                {(editSettings, { loading }) => (\n                  <StyledCheckbox\n                    name=\"custom-contributions\"\n                    label={intl.formatMessage({\n                      id: 'tier.customContributions.label',\n                      defaultMessage: 'Enable flexible contributions',\n                    })}\n                    defaultChecked={!get(collective, 'settings.disableCustomContributions', false)}\n                    width=\"auto\"\n                    isLoading={loading}\n                    onChange={({ target }) => {\n                      editSettings({\n                        variables: {\n                          account: { legacyId: collective.id },\n                          key: 'disableCustomContributions',\n                          value: !target.value,\n                        },\n                        context: API_V2_CONTEXT,\n                      });\n                    }}\n                  />\n                )}\n              </Mutation>\n            </Box>\n            {cryptoContributionsEnabledByHost && (\n              <Box mb={4}>\n                <StyledHr my={4} borderColor=\"black.300\" />\n                <P fontSize=\"14px\" lineHeight=\"20x\" mb={3}>\n                  <FormattedMessage\n                    id=\"Tiers.CryptoTierDescription\"\n                    defaultMessage=\"Enabling this will enable support for donations with Cryptocurrencies such as Bitcoin or Ethereum.\"\n                  />\n                </P>\n                <Mutation\n                  mutation={editAccountSettingsMutation}\n                  refetchQueries={[{ query: collectiveSettingsV1Query, variables: { slug: collective.slug } }]}\n                  awaitRefetchQueries\n                >\n                  {(editSettings, { loading }) => (\n                    <StyledCheckbox\n                      name=\"crypto-contributions\"\n                      label={intl.formatMessage({\n                        id: 'tier.cryptoContributions.label',\n                        defaultMessage: 'Enable Crypto contributions',\n                      })}\n                      defaultChecked={!hasCryptoContributionsDisabled}\n                      width=\"auto\"\n                      isLoading={loading}\n                      onChange={({ target }) => {\n                        editSettings({\n                          variables: {\n                            account: { legacyId: collective.id },\n                            key: 'disableCryptoContributions',\n                            value: !target.value,\n                          },\n                          context: API_V2_CONTEXT,\n                        });\n                      }}\n                    />\n                  )}\n                </Mutation>\n              </Box>\n            )}\n            <AdminContributeCardsContainer\n              collective={collective}\n              cards={getFinancialContributions(collective, filteredTiers)}\n              CardsContainer={CardsContainer}\n              useTierModals\n              enableReordering={false}\n              onTierUpdate={() => refetch()}\n            />\n          </div>\n        )}\n      </Box>\n    </div>\n  );\n};\n\nTiers.propTypes = {\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Tiers;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { Download as DownloadIcon } from '@styled-icons/feather/Download';\nimport { Info } from '@styled-icons/feather/Info';\nimport { saveAs } from 'file-saver';\nimport { Field, Form, Formik } from 'formik';\nimport { get } from 'lodash';\nimport QRCode from 'qrcode.react';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport speakeasy from 'speakeasy';\nimport styled from 'styled-components';\n\nimport { getErrorFromGraphqlException } from '../../../lib/errors';\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\nimport { compose } from '../../../lib/utils';\n\nimport ConfirmationModal from '../../ConfirmationModal';\nimport Container from '../../Container';\nimport { Box, Flex, Grid } from '../../Grid';\nimport { getI18nLink } from '../../I18nFormatters';\nimport Image from '../../Image';\nimport Loading from '../../Loading';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport MessageBox from '../../MessageBox';\nimport { PasswordStrengthBar } from '../../PasswordStrengthBar';\nimport StyledButton from '../../StyledButton';\nimport StyledCard from '../../StyledCard';\nimport StyledInput from '../../StyledInput';\nimport StyledInputField from '../../StyledInputField';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../../StyledModal';\nimport StyledTooltip from '../../StyledTooltip';\nimport { H3, P } from '../../Text';\nimport { TOAST_TYPE, withToasts } from '../../ToastProvider';\nimport { withUser } from '../../UserProvider';\n\nconst messages = defineMessages({\n  errorWrongLength: {\n    id: 'TwoFactorAuth.Setup.Form.ErrorLength',\n    defaultMessage: 'Incorrect code length. Please re-enter your 6-digit code.',\n  },\n  errorWrongFormat: {\n    id: 'TwoFactorAuth.Setup.Form.ErrorFormat',\n    defaultMessage: 'Incorrect code format. Please enter only numbers.',\n  },\n  inputLabel: {\n    id: 'TwoFactorAuth.Setup.Form.InputLabel',\n    defaultMessage: 'Please enter your 6-digit code without any dashes.',\n  },\n});\n\nconst content = () => (\n  <div>\n    <P fontSize=\"12px\" lineHeight=\"18px\">\n      <FormattedMessage\n        id=\"TwoFactorAuth.Setup.AppInfo\"\n        defaultMessage=\"You can use 2FA apps such as Google Authenticator, Authy, 1Password, LastPass, or Microsoft Authenticator to scan the QR code.\"\n      />\n    </P>\n  </div>\n);\n\nconst TokenBox = styled(Box)`\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n`;\n\nconst Code = styled.code`\n  background: ${props => props.theme.colors.black[100]};\n  color: ${props => props.theme.colors.black[700]};\n  word-break: break-all;\n  display: block;\n  margin-top: 8px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 20px;\n  color: #4d4f51;\n  max-width: 350px;\n`;\n\nclass UserSecurity extends React.Component {\n  static propTypes = {\n    /** From intl */\n    intl: PropTypes.object.isRequired,\n    /** From graphql query */\n    setPassword: PropTypes.func.isRequired,\n    addTwoFactorAuthTokenToIndividual: PropTypes.func.isRequired,\n    removeTwoFactorAuthTokenFromIndividual: PropTypes.func.isRequired,\n    /** From withUser */\n    LoggedInUser: PropTypes.shape({\n      isRoot: PropTypes.bool.isRequired,\n      hasPassword: PropTypes.bool.isRequired,\n      hasRole: PropTypes.func.isRequired,\n      email: PropTypes.string.isRequired,\n    }),\n    login: PropTypes.func.isRequired,\n    refetchLoggedInUser: PropTypes.func.isRequired,\n    data: PropTypes.shape({\n      individual: PropTypes.object,\n      loading: PropTypes.bool,\n    }),\n    /** From withToasts */\n    addToast: PropTypes.func.isRequired,\n    /** From parent component */\n    slug: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      disablingTwoFactorAuth: false,\n      disableError: null,\n      recoveryCodes: null,\n      enablingTwoFactorAuth: false,\n      showRecoveryCodesModal: false,\n      /* Password management state */\n      passwordLoading: false,\n      passwordError: null,\n      currentPassword: '',\n      password: '',\n      passwordKey: 1,\n      passwordScore: null,\n    };\n\n    this.enableTwoFactorAuth = this.enableTwoFactorAuth.bind(this);\n    this.disableTwoFactorAuth = this.disableTwoFactorAuth.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n  }\n\n  componentDidMount() {\n    // speakeasy options object does not add issuer as expected so we add it ourselves to the otp url\n    // do not use URLParams from universal-url or the web API to encode the issuer\n    // see https://github.com/opencollective/opencollective-frontend/pull/4520#discussion_r447690237 for discussion\n    let issuer;\n    if (window.location.hostname === 'localhost') {\n      issuer = '&issuer=Open%20Collective%20Local';\n    } else if (window.location.hostname === 'staging.opencollective.com') {\n      issuer = '&issuer=Open%20Collective%20Staging';\n    } else {\n      issuer = '&issuer=Open%20Collective';\n    }\n    const options = {\n      name: this.props.LoggedInUser.email,\n      length: 64,\n    };\n    const secret = speakeasy.generateSecret(options);\n    const otpAuthUrl = secret.otpauth_url + issuer;\n    this.setState({ secret, base32: secret.base32, otpAuthUrl });\n  }\n\n  async enableTwoFactorAuth(values) {\n    try {\n      // verify QR code\n      const { twoFactorAuthenticatorCode } = values;\n      const verified = speakeasy.totp.verify({\n        secret: this.state.base32,\n        encoding: 'base32',\n        token: twoFactorAuthenticatorCode,\n        window: 2,\n      });\n\n      // if not verified, ask the user to try again\n      if (!verified) {\n        this.setState({ error: '2FA token not verified. Please try again.' });\n      }\n\n      // if ok, send secret to backend\n      if (verified) {\n        const account = {\n          id: this.props.data.individual.id,\n        };\n\n        await this.props\n          .addTwoFactorAuthTokenToIndividual({\n            variables: {\n              account,\n              token: this.state.base32,\n            },\n          })\n          .then(data => {\n            this.setState({ recoveryCodes: get(data, 'data.addTwoFactorAuthTokenToIndividual.recoveryCodes') });\n          })\n          .then(() => {\n            this.props.refetchLoggedInUser(); // No need to await\n          });\n        this.setState({ error: null, enablingTwoFactorAuth: true });\n      }\n    } catch (err) {\n      const errorMsg = getErrorFromGraphqlException(err).message;\n      this.setState({ error: errorMsg });\n    }\n  }\n\n  async disableTwoFactorAuth(values) {\n    try {\n      const { twoFactorAuthenticatorCode } = values;\n      const account = {\n        id: this.props.data.individual.id,\n      };\n\n      await this.props.removeTwoFactorAuthTokenFromIndividual({\n        variables: {\n          account,\n          code: twoFactorAuthenticatorCode,\n        },\n      });\n      this.props.refetchLoggedInUser(); // No need to await\n      this.setState({ disablingTwoFactorAuth: false, error: null });\n    } catch (err) {\n      const errorMsg = getErrorFromGraphqlException(err).message;\n      this.setState({ disableError: errorMsg });\n    }\n  }\n\n  async setPassword() {\n    const { password, passwordKey, currentPassword, passwordScore } = this.state;\n\n    if (password === currentPassword) {\n      this.setState({\n        passwordError: <FormattedMessage defaultMessage=\"Password can't be the same as current password\" />,\n      });\n      return;\n    }\n\n    if (passwordScore <= 1) {\n      this.setState({\n        passwordError: (\n          <FormattedMessage defaultMessage=\"Password is too weak. Try to use more characters or use a password manager to generate a strong one.\" />\n        ),\n      });\n      return;\n    }\n\n    try {\n      this.setState({ passwordLoading: true });\n      const result = await this.props.setPassword({ variables: { password, currentPassword } });\n      if (result.data.setPassword.token) {\n        await this.props.login(result.data.setPassword.token);\n      }\n      await this.props.refetchLoggedInUser();\n      this.setState({\n        currentPassword: '',\n        password: '',\n        passwordError: null,\n        passwordScore: null,\n        passwordLoading: false,\n        passwordKey: Number(passwordKey) + 1,\n      });\n      this.props.addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: this.props.LoggedInUser.hasPassword ? (\n          <FormattedMessage defaultMessage=\"Password successfully updated\" />\n        ) : (\n          <FormattedMessage defaultMessage=\"Password successfully set\" />\n        ),\n      });\n    } catch (e) {\n      this.setState({ passwordError: e.message, passwordLoading: false });\n    }\n  }\n\n  renderPasswordManagement() {\n    const { LoggedInUser } = this.props;\n    const { password, passwordError, passwordLoading, passwordKey, currentPassword } = this.state;\n\n    return (\n      <Fragment>\n        <H3 fontSize=\"18px\" fontWeight=\"700\" mb={2}>\n          <FormattedMessage id=\"Password\" defaultMessage=\"Password\" />\n        </H3>\n        {passwordError && (\n          <MessageBox type=\"error\" withIcon my={2} data-cy=\"password-error\">\n            {passwordError}\n          </MessageBox>\n        )}\n        <Container mb=\"4\">\n          <P py={2} mb={2}>\n            {LoggedInUser.hasPassword ? (\n              <FormattedMessage\n                id=\"Password.Change.Info\"\n                defaultMessage=\"You already have a password set, you can change it using the following form.\"\n              />\n            ) : (\n              <FormattedMessage\n                id=\"Password.Set.Info\"\n                defaultMessage=\"Setting a password is optional but can be useful if you're using a password manager.\"\n              />\n            )}\n          </P>\n\n          {/* We're adding a hidden email field to helper password managers remember the credentials */}\n          <StyledInput\n            style={{ display: 'none' }}\n            id=\"email\"\n            autoComplete=\"email\"\n            name=\"email\"\n            value={LoggedInUser.email}\n            type=\"email\"\n          />\n\n          {LoggedInUser.hasPassword && (\n            <StyledInputField\n              label={<FormattedMessage defaultMessage=\"Current Password\" />}\n              labelFontWeight=\"bold\"\n              htmlFor=\"current-password\"\n              mb={2}\n              width=\"100%\"\n            >\n              <StyledInput\n                key={`current-password-${passwordKey}`}\n                fontSize=\"14px\"\n                id=\"current-password\"\n                autoComplete=\"current-password\"\n                name=\"current-password\"\n                type=\"password\"\n                required\n                onChange={e => {\n                  this.setState({ passwordError: null, currentPassword: e.target.value });\n                }}\n              />\n            </StyledInputField>\n          )}\n\n          <StyledInputField\n            label={<FormattedMessage defaultMessage=\"New Password\" />}\n            labelFontWeight=\"bold\"\n            htmlFor=\"new-password\"\n            mt={2}\n            mb={2}\n            width=\"100%\"\n            hint={\n              <FormattedMessage\n                defaultMessage=\"Strong password recommended. Short or weak one restricted. <link>The strength of a password is a function of length, complexity, and unpredictability.</link>\"\n                values={{\n                  link: getI18nLink({\n                    href: 'https://en.wikipedia.org/wiki/Password_strength',\n                    openInNewTab: true,\n                  }),\n                }}\n              />\n            }\n          >\n            <StyledInput\n              key={`current-password-${passwordKey}`}\n              fontSize=\"14px\"\n              id=\"new-password\"\n              autoComplete=\"new-password\"\n              type=\"password\"\n              required\n              onChange={e => {\n                this.setState({ passwordError: null, password: e.target.value });\n              }}\n            />\n          </StyledInputField>\n\n          <div data-cy=\"password-strength-bar\">\n            <PasswordStrengthBar\n              password={password}\n              onChangeScore={passwordScore => {\n                this.setState({ passwordScore });\n              }}\n            />\n          </div>\n\n          <StyledButton\n            my={2}\n            minWidth={140}\n            loading={passwordLoading}\n            disabled={!password || (LoggedInUser.hasPassword && !currentPassword)}\n            onClick={this.setPassword}\n          >\n            {LoggedInUser.hasPassword ? (\n              <FormattedMessage id=\"Security.UpdatePassword.Button\" defaultMessage=\"Update Password\" />\n            ) : (\n              <FormattedMessage id=\"Security.SetPassword.Button\" defaultMessage=\"Set Password\" />\n            )}\n          </StyledButton>\n        </Container>\n      </Fragment>\n    );\n  }\n\n  render() {\n    const { intl, data } = this.props;\n    const {\n      error,\n      disableError,\n      secret,\n      base32,\n      otpAuthUrl,\n      disablingTwoFactorAuth,\n      enablingTwoFactorAuth,\n      recoveryCodes,\n      showRecoveryCodesModal,\n    } = this.state;\n\n    const { loading } = data;\n\n    if (loading) {\n      return <Loading />;\n    }\n\n    const account = get(data, 'individual', null);\n    const doesAccountAlreadyHave2FA = get(account, 'hasTwoFactorAuth', false);\n\n    const initialSetupFormValues = {\n      twoFactorAuthenticatorCode: '',\n    };\n\n    const initialDisableFormValues = {\n      twoFactorAuthenticatorCode: '',\n    };\n\n    const validate = values => {\n      const errors = {};\n\n      if (values.twoFactorAuthenticatorCode.toString().length !== 6) {\n        errors.twoFactorAuthenticatorCode = intl.formatMessage(messages.errorWrongLength);\n      }\n\n      return errors;\n    };\n\n    return (\n      <Flex flexDirection=\"column\">\n        {this.renderPasswordManagement()}\n\n        <H3 fontSize=\"18px\" fontWeight=\"700\" mb={2}>\n          <FormattedMessage id=\"TwoFactorAuth\" defaultMessage=\"Two-factor authentication\" />\n        </H3>\n        {error && (\n          <MessageBox type=\"error\" withIcon my={2} data-cy=\"add-two-factor-auth-error\">\n            {error}\n          </MessageBox>\n        )}\n        <Flex flexDirection=\"column\">\n          {doesAccountAlreadyHave2FA && !enablingTwoFactorAuth ? (\n            <Fragment>\n              <P>\n                <FormattedMessage\n                  id=\"TwoFactorAuth.Setup.Info\"\n                  defaultMessage=\"Two-factor authentication adds an extra layer of security for your account when logging in or performing admin actions.\"\n                />\n              </P>\n              <StyledCard\n                display=\"flex\"\n                flexWrap=\"wrap\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                my=\"32px\"\n                p=\"36px\"\n                maxWidth=\"496px\"\n                data-cy=\"add-two-factor-auth-success\"\n                padding=\"36px\"\n                borderWidth=\"2px\"\n                borderColor=\"green.500\"\n              >\n                <Box flex=\"0 0 183px\">\n                  <Image src=\"/static/images/lock-green.png\" width=\"183px\" height=\"183px\" alt=\"\" />\n                </Box>\n                <Box flex=\"1 1 223px\" pr=\"9px\">\n                  <P fontSize=\"20px\" fontWeight=\"500\">\n                    <FormattedMessage\n                      id=\"TwoFactorAuth.Setup.AlreadyAdded\"\n                      defaultMessage=\"Two-factor authentication (2FA) is enabled on this account. Well done! 🎉\"\n                    />\n                  </P>\n                </Box>\n              </StyledCard>\n              <Container>\n                <StyledButton\n                  my={1}\n                  minWidth={140}\n                  buttonStyle={'danger'}\n                  onClick={() => this.setState({ disablingTwoFactorAuth: true })}\n                >\n                  <FormattedMessage id=\"TwoFactorAuth.Disable.Button\" defaultMessage=\"Disable 2FA\" />\n                </StyledButton>\n                {disablingTwoFactorAuth && (\n                  <Formik\n                    validate={validate}\n                    initialValues={initialDisableFormValues}\n                    onSubmit={this.disableTwoFactorAuth}\n                  >\n                    {formik => {\n                      const { values, errors, touched, handleSubmit, isSubmitting } = formik;\n\n                      return (\n                        <StyledModal width=\"570px\" onClose={() => this.setState({ disablingTwoFactorAuth: false })}>\n                          <ModalHeader>\n                            <FormattedMessage\n                              id=\"TwoFactorAuth.Disable.Header\"\n                              defaultMessage=\"Are you sure you want to remove two-factor authentication from your account?\"\n                            />\n                          </ModalHeader>\n                          <ModalBody>\n                            <MessageBox type=\"warning\" withIcon my={3}>\n                              <FormattedMessage\n                                id=\"TwoFactorAuth.Disable.Warning\"\n                                defaultMessage=\"Removing 2FA from your account can make it less secure.\"\n                              />\n                            </MessageBox>\n                            {disableError && (\n                              <MessageBox type=\"error\" withIcon mb={3}>\n                                {disableError}\n                              </MessageBox>\n                            )}\n                            <P>\n                              <FormattedMessage\n                                id=\"TwoFactorAuth.Disable.Info\"\n                                defaultMessage=\"If you would like to remove 2FA from your account, you will need to enter the code from your authenticator app one more time.\"\n                              />\n                            </P>\n                            <Form>\n                              <StyledInputField\n                                name=\"twoFactorAuthenticatorCode\"\n                                htmlFor=\"twoFactorAuthenticatorCode\"\n                                error={touched.twoFactorAuthenticatorCode && errors.twoFactorAuthenticatorCode}\n                                label={intl.formatMessage(messages.inputLabel)}\n                                value={values.twoFactorAuthenticatorCode}\n                                required\n                                mt={2}\n                                mb={3}\n                              >\n                                {inputProps => (\n                                  <Field\n                                    as={StyledInput}\n                                    {...inputProps}\n                                    width={240}\n                                    minHeight={75}\n                                    fontSize=\"20px\"\n                                    autoComplete=\"off\"\n                                    placeholder=\"123456\"\n                                    pattern=\"[0-9]{6}\"\n                                    inputMode=\"numeric\"\n                                    autoFocus\n                                  />\n                                )}\n                              </StyledInputField>\n                            </Form>\n                          </ModalBody>\n                          <ModalFooter>\n                            <Container display=\"flex\" justifyContent=\"flex-end\">\n                              <StyledButton mx={20} onClick={() => this.setState({ disablingTwoFactorAuth: false })}>\n                                <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n                              </StyledButton>\n                              <StyledButton buttonStyle=\"danger\" loading={isSubmitting} onClick={handleSubmit}>\n                                <FormattedMessage id=\"actions.continue\" defaultMessage=\"Continue\" />\n                              </StyledButton>\n                            </Container>\n                          </ModalFooter>\n                        </StyledModal>\n                      );\n                    }}\n                  </Formik>\n                )}\n              </Container>\n            </Fragment>\n          ) : (\n            <Fragment>\n              {recoveryCodes ? (\n                <Fragment>\n                  <P>\n                    <FormattedMessage\n                      id=\"TwoFactorAuth.Setup.RecoveryCodes.Info\"\n                      defaultMessage=\"Recovery codes are used to access your account in case you can't access it with your authenticator app (for example, if you have lost your phone). Each code can only be used once. Save your 2FA recovery codes in a safe place, like a password manager app.\"\n                    />\n                  </P>\n                  <Container>\n                    <Box>\n                      <Flex alignItems=\"center\" mt={3}>\n                        <H3 fontSize=\"18px\" mr={1}>\n                          <FormattedMessage\n                            id=\"TwoFactorAuth.Setup.StepThree\"\n                            defaultMessage=\"Step three: save your recovery codes\"\n                          />\n                        </H3>\n                      </Flex>\n                      <Container maxWidth={480} border=\"2px solid black\" borderRadius={8} my={3}>\n                        <Grid\n                          gridTemplateColumns={['1fr', '1fr 1fr']}\n                          p=\"32px\"\n                          gridGap=\"16px\"\n                          data-cy=\"recovery-codes-container\"\n                        >\n                          {recoveryCodes.map(code => {\n                            return (\n                              <P key={code} fontSize=\"16px\" fontWeight=\"700\" m=\"0 16px 16px 0\">\n                                {code}\n                              </P>\n                            );\n                          })}\n                        </Grid>\n                      </Container>\n                      <Container>\n                        <Flex justifyContent={['center', 'left']} mb={4} gap=\"16px\">\n                          <StyledButton\n                            minWidth=\"148px\"\n                            buttonStyle=\"primary\"\n                            onClick={() => this.setState({ showRecoveryCodesModal: true })}\n                            loading={showRecoveryCodesModal}\n                            data-cy=\"add-two-factor-auth-confirm-recovery-codes-button\"\n                          >\n                            <FormattedMessage id=\"TwoFactorAuth.Setup.Form.FinishSetup\" defaultMessage=\"Finish setup\" />\n                          </StyledButton>\n                          <StyledButton\n                            onClick={() =>\n                              saveAs(\n                                new Blob([recoveryCodes.join('\\n')], { type: 'text/plain;charset=utf-8' }),\n                                'opencollective-recovery-codes.txt',\n                              )\n                            }\n                          >\n                            <FormattedMessage defaultMessage=\"Download codes\" />\n                            &nbsp;\n                            <DownloadIcon size=\"1em\" />\n                          </StyledButton>\n                        </Flex>\n                      </Container>\n                    </Box>\n                  </Container>\n                  {showRecoveryCodesModal && (\n                    <ConfirmationModal\n                      isDanger\n                      type=\"confirm\"\n                      onClose={() => this.setState({ showRecoveryCodesModal: false })}\n                      continueHandler={() =>\n                        this.setState({\n                          recoveryCodes: null,\n                          enablingTwoFactorAuth: false,\n                          showRecoveryCodesModal: false,\n                        })\n                      }\n                      header={\n                        <FormattedMessage\n                          id=\"TwoFactorAuth.Setup.RecoveryCodes.ConfirmationModal.Header\"\n                          defaultMessage=\"Are you sure?\"\n                        />\n                      }\n                    >\n                      <FormattedMessage\n                        id=\"TwoFactorAuth.Setup.RecoveryCodes.ConfirmationModal.Body\"\n                        defaultMessage=\"Once you click 'Confirm', you will no longer have access to your recovery codes.\"\n                      />\n                    </ConfirmationModal>\n                  )}\n                </Fragment>\n              ) : (\n                <Fragment>\n                  <P>\n                    <FormattedMessage\n                      id=\"TwoFactorAuth.Setup.Info\"\n                      defaultMessage=\"Two-factor authentication adds an extra layer of security for your account when logging in or performing admin actions.\"\n                    />\n                  </P>\n                  <Container>\n                    <Box>\n                      <Flex alignItems=\"center\" mt={3}>\n                        <H3 fontSize=\"18px\" fontWeight=\"700\" mr={1}>\n                          <FormattedMessage\n                            id=\"TwoFactorAuth.Setup.StepOne\"\n                            defaultMessage=\"Step one: scan this QR code with an authenticator app\"\n                          />\n                        </H3>\n                        <StyledTooltip content={content}>\n                          <Info size={16} />\n                        </StyledTooltip>\n                      </Flex>\n                      {secret ? (\n                        <Flex flexDirection=\"column\">\n                          <QRCode\n                            value={otpAuthUrl}\n                            renderAs=\"svg\"\n                            size={256}\n                            level=\"L\"\n                            includeMargin\n                            data-cy=\"qr-code\"\n                          />\n                          <TokenBox data-cy=\"manual-entry-2fa-token\">\n                            <P>\n                              <FormattedMessage\n                                id=\"TwoFactorAuth.Setup.ManualEntry\"\n                                defaultMessage=\"Manual entry: {token}\"\n                                values={{\n                                  token: <Code>{base32}</Code>,\n                                }}\n                              />\n                            </P>\n                          </TokenBox>\n                        </Flex>\n                      ) : (\n                        <LoadingPlaceholder height={256} width={256} />\n                      )}\n                    </Box>\n                    <Box mt={3}>\n                      <H3 fontSize=\"18px\">\n                        <FormattedMessage\n                          id=\"TwoFactorAuth.Setup.StepTwo\"\n                          defaultMessage=\"Step two: enter the code from your authentication app\"\n                        />\n                      </H3>\n                      <Container>\n                        <Formik\n                          validate={validate}\n                          initialValues={initialSetupFormValues}\n                          onSubmit={this.enableTwoFactorAuth}\n                        >\n                          {formik => {\n                            const { values, handleSubmit, errors, touched, isSubmitting } = formik;\n\n                            return (\n                              <Form>\n                                <StyledInputField\n                                  name=\"twoFactorAuthenticatorCode\"\n                                  htmlFor=\"twoFactorAuthenticatorCode\"\n                                  error={touched.twoFactorAuthenticatorCode && errors.twoFactorAuthenticatorCode}\n                                  label={intl.formatMessage(messages.inputLabel)}\n                                  value={values.twoFactorAuthenticatorCode}\n                                  required\n                                  mt={2}\n                                  mb={3}\n                                >\n                                  {inputProps => (\n                                    <Field\n                                      as={StyledInput}\n                                      {...inputProps}\n                                      width={240}\n                                      minHeight={60}\n                                      fontSize=\"20px\"\n                                      lineHeight=\"28px\"\n                                      placeholder=\"123456\"\n                                      pattern=\"[0-9]{6}\"\n                                      inputMode=\"numeric\"\n                                      minLength={6}\n                                      maxLength={6}\n                                      data-cy=\"add-two-factor-auth-totp-code-field\"\n                                    />\n                                  )}\n                                </StyledInputField>\n\n                                <Flex justifyContent={['center', 'left']} mb={4}>\n                                  <StyledButton\n                                    fontSize=\"13px\"\n                                    minWidth=\"148px\"\n                                    minHeight=\"36px\"\n                                    buttonStyle=\"primary\"\n                                    type=\"submit\"\n                                    onSubmit={handleSubmit}\n                                    loading={isSubmitting}\n                                    disabled={values.twoFactorAuthenticatorCode.length < 6}\n                                    data-cy=\"add-two-factor-auth-totp-code-button\"\n                                  >\n                                    <FormattedMessage\n                                      id=\"TwoFactorAuth.Setup.Form.VerifyButton\"\n                                      defaultMessage=\"Verify & see recovery codes\"\n                                    />\n                                  </StyledButton>\n                                </Flex>\n                              </Form>\n                            );\n                          }}\n                        </Formik>\n                      </Container>\n                    </Box>\n                  </Container>\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nconst addTwoFactorAuthToIndividualMutation = gql`\n  mutation AddTwoFactorAuthToIndividual($account: AccountReferenceInput!, $token: String!) {\n    addTwoFactorAuthTokenToIndividual(account: $account, token: $token) {\n      account {\n        id\n        hasTwoFactorAuth\n      }\n      recoveryCodes\n    }\n  }\n`;\n\nconst removeTwoFactorAuthFromIndividualMutation = gql`\n  mutation RemoveTwoFactorAuthFromIndividual($account: AccountReferenceInput!, $code: String!) {\n    removeTwoFactorAuthTokenFromIndividual(account: $account, code: $code) {\n      id\n      hasTwoFactorAuth\n    }\n  }\n`;\n\nconst accountHasTwoFactorAuthQuery = gql`\n  query AccountHasTwoFactorAuth($slug: String) {\n    individual(slug: $slug) {\n      id\n      slug\n      name\n      type\n      id\n      slug\n      name\n      type\n      hasTwoFactorAuth\n    }\n  }\n`;\n\nconst setPasswordMutation = gql`\n  mutation SetPassword($password: String!, $currentPassword: String) {\n    setPassword(password: $password, currentPassword: $currentPassword) {\n      individual {\n        id\n        hasPassword\n      }\n      token\n    }\n  }\n`;\n\nconst addGraphql = compose(\n  graphql(setPasswordMutation, {\n    name: 'setPassword',\n    options: { context: API_V2_CONTEXT },\n  }),\n  graphql(addTwoFactorAuthToIndividualMutation, {\n    name: 'addTwoFactorAuthTokenToIndividual',\n    options: { context: API_V2_CONTEXT },\n  }),\n  graphql(removeTwoFactorAuthFromIndividualMutation, {\n    name: 'removeTwoFactorAuthTokenFromIndividual',\n    options: { context: API_V2_CONTEXT },\n  }),\n  graphql(accountHasTwoFactorAuthQuery, {\n    options: props => ({\n      context: API_V2_CONTEXT,\n      variables: {\n        slug: props.slug,\n      },\n    }),\n  }),\n);\n\nexport default injectIntl(withToasts(withUser(addGraphql(UserSecurity))));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CustomStyledIcon from './CustomStyledIcon';\n\nconst DismissIcon = props => (\n  <CustomStyledIcon width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" {...props}>\n    <path\n      d=\"M0.586873 0.814096L0.678557 0.706658C1.01473 0.366575 1.54079 0.335658 1.91149 0.613908L2.01769 0.706658L6.99998 5.64487L12.0502 0.613882C12.42 0.23979 13.0195 0.23979 13.3893 0.613882C13.7591 0.987973 13.7591 1.5945 13.3893 1.96859L8.33954 7.00001L13.2831 11.9386C13.6193 12.2787 13.6499 12.8109 13.3748 13.1859L13.2831 13.2933C12.9469 13.6334 12.4209 13.6643 12.0502 13.3861L11.944 13.2933L6.99998 8.35515L1.94977 13.3861C1.57998 13.7602 0.98043 13.7602 0.610638 13.3861C0.240847 13.012 0.240847 12.4055 0.610638 12.0314L5.66042 7.00001L0.678557 2.06136C0.342382 1.72128 0.311821 1.18911 0.586873 0.814096Z\"\n      fill=\"#141414\"\n    />\n  </CustomStyledIcon>\n);\n\nDismissIcon.propTypes = {\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport default DismissIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { useFormik } from 'formik';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport Container from '../Container';\nimport StyledButton from '../StyledButton';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst deleteVirtualCardMutation = gql`\n  mutation deleteVirtualCard($virtualCard: VirtualCardReferenceInput!) {\n    deleteVirtualCard(virtualCard: $virtualCard)\n  }\n`;\n\nconst DeleteVirtualCardModal = ({ virtualCard, onSuccess, onClose, onDeleteRefetchQuery, ...modalProps }) => {\n  const { addToast } = useToasts();\n\n  const refetchOptions = onDeleteRefetchQuery\n    ? {\n        refetchQueries: [onDeleteRefetchQuery],\n        awaitRefetchQueries: true,\n      }\n    : {};\n\n  const [deleteVirtualCard, { loading: isBusy }] = useMutation(deleteVirtualCardMutation, {\n    context: API_V2_CONTEXT,\n    ...refetchOptions,\n  });\n\n  const formik = useFormik({\n    initialValues: {},\n    async onSubmit() {\n      try {\n        await deleteVirtualCard({\n          variables: {\n            virtualCard: { id: virtualCard.id },\n          },\n        });\n      } catch (e) {\n        addToast({\n          type: TOAST_TYPE.ERROR,\n          message: (\n            <FormattedMessage\n              defaultMessage=\"Error deleting virtual card: {error}\"\n              values={{\n                error: e.message,\n              }}\n            />\n          ),\n        });\n        return;\n      }\n      onSuccess?.(<FormattedMessage defaultMessage=\"Card successfully deleted\" />);\n      handleClose();\n    },\n  });\n\n  const handleClose = () => {\n    onClose?.();\n  };\n\n  return (\n    <StyledModal width=\"382px\" onClose={handleClose} trapFocus {...modalProps}>\n      <form onSubmit={formik.handleSubmit}>\n        <ModalHeader onClose={handleClose}>\n          <FormattedMessage defaultMessage=\"Delete virtual card\" />\n        </ModalHeader>\n        <ModalBody pt={2}>\n          <P>\n            <FormattedMessage defaultMessage=\"You are about to delete the virtual card, are you sure you want to continue ?\" />\n          </P>\n        </ModalBody>\n        <ModalFooter isFullWidth>\n          <Container display=\"flex\" justifyContent={['center', 'flex-end']} flexWrap=\"Wrap\">\n            <StyledButton\n              my={1}\n              minWidth={140}\n              buttonStyle=\"primary\"\n              data-cy=\"confirmation-modal-continue\"\n              loading={isBusy}\n              type=\"submit\"\n              textTransform=\"capitalize\"\n            >\n              <FormattedMessage id=\"actions.delete\" defaultMessage=\"Delete\" />\n            </StyledButton>\n          </Container>\n        </ModalFooter>\n      </form>\n    </StyledModal>\n  );\n};\n\nDeleteVirtualCardModal.propTypes = {\n  onClose: PropTypes.func,\n  onSuccess: PropTypes.func,\n  onDeleteRefetchQuery: PropTypes.string,\n  virtualCard: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n  }),\n};\n\n/** @component */\nexport default DeleteVirtualCardModal;\n","/* eslint-disable camelcase */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { Copy } from '@styled-icons/feather/Copy';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Manager, Popper, Reference } from 'react-popper';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system';\n\nimport { formatCurrency } from '../../lib/currency-utils';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { VirtualCardLimitInterval } from '../../lib/graphql/types/v2/graphql';\nimport useGlobalBlur from '../../lib/hooks/useGlobalBlur';\n\nimport Avatar from '../Avatar';\nimport ConfirmationModal from '../ConfirmationModal';\nimport { Box, Flex } from '../Grid';\nimport DismissIcon from '../icons/DismissIcon';\nimport StyledCard from '../StyledCard';\nimport StyledHr from '../StyledHr';\nimport StyledLink from '../StyledLink';\nimport StyledSpinner from '../StyledSpinner';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nimport DeleteVirtualCardModal from './DeleteVirtualCardModal';\nimport EditVirtualCardModal from './EditVirtualCardModal';\n\nconst CardContainer = styled(Flex)`\n  border: 1px solid #dcdee0;\n  border-radius: 12px;\n  background: #050505;\n  position: relative;\n\n  color: #fff;\n  overflow: hidden;\n\n  transition: box-shadow 400ms ease-in-out, transform 500ms ease;\n  box-shadow: 0px 0px 4px rgba(20, 20, 20, 0);\n\n  :hover {\n    box-shadow: 0px 8px 12px rgba(20, 20, 20, 0.16);\n    transform: translate(0, -4px);\n  }\n\n  > div {\n    z-index: 1;\n  }\n  > div:first-child {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    height: 100%;\n    width: 100%;\n    background: linear-gradient(to right, #f7f8fa23, #f7f8fa16);\n    clip-path: ellipse(102% 102% at 0px 100%);\n  }\n`;\n\nconst Action = styled.button`\n  ${margin}\n  cursor: pointer;\n  line-height: 16px;\n  font-size: 14px;\n  font-weight: 500;\n  border: none;\n  background: transparent;\n  outline: none;\n  text-align: inherit;\n\n  color: ${props => props.theme.colors[props.color]?.[500] || props.color || props.theme.colors.black[900]};\n\n  :hover {\n    color: ${props => props.theme.colors[props.color]?.[300] || props.color || props.theme.colors.black[700]};\n  }\n\n  &[disabled] {\n    color: ${props => props.theme.colors[props.color]?.[200] || props.color || props.theme.colors.black[600]};\n  }\n`;\n\nconst Arrow = styled.div`\n  position: absolute;\n  width: 8px;\n  height: 8px;\n  background: inherit;\n  visibility: hidden;\n  bottom: 4px;\n\n  ::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    background: inherit;\n  }\n\n  ::before {\n    visibility: visible;\n    content: '';\n    transform: rotate(45deg);\n  }\n`;\n\nconst StateLabel = styled(Box)`\n  align-self: center;\n  padding: 2px 6px;\n  border-radius: 4px;\n  background: ${props => (props.isActive ? props.theme.colors.green[100] : props.theme.colors.black[100])};\n  color: ${props => (props.isActive ? props.theme.colors.green[600] : props.theme.colors.black[500])};\n  font-size: 12px;\n  font-weight: 700;\n  line-height: 16px;\n  letter-spacing: 0.06em;\n  text-transform: uppercase;\n`;\n\nconst pauseCardMutation = gql`\n  mutation PauseVirtualCard($virtualCard: VirtualCardReferenceInput!) {\n    pauseVirtualCard(virtualCard: $virtualCard) {\n      id\n      data\n    }\n  }\n`;\n\nconst resumeCardMutation = gql`\n  mutation ResumeVirtualCard($virtualCard: VirtualCardReferenceInput!) {\n    resumeVirtualCard(virtualCard: $virtualCard) {\n      id\n      data\n    }\n  }\n`;\n\nconst ActionsButton = props => {\n  const wrapperRef = React.useRef();\n  const arrowRef = React.useRef();\n  const [displayActions, setDisplayActions] = React.useState(false);\n  const [showConfirmationModal, setShowConfirmationModal] = React.useState(false);\n  const [isEditingVirtualCard, setIsEditingVirtualCard] = React.useState(false);\n  const [isDeletingVirtualCard, setIsDeletingVirtualCard] = React.useState(false);\n  const { addToast } = useToasts();\n  const { virtualCard, host, canEditVirtualCard, canDeleteVirtualCard, confirmOnPauseCard } = props;\n\n  const handleActionSuccess = React.useCallback(\n    message => {\n      setIsEditingVirtualCard(false);\n      setIsDeletingVirtualCard(false);\n      addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: message,\n      });\n    },\n    [addToast],\n  );\n\n  useGlobalBlur(wrapperRef, outside => {\n    if (outside) {\n      setDisplayActions(false);\n    }\n  });\n\n  const [pauseCard, { loading: pauseLoading }] = useMutation(pauseCardMutation, {\n    context: API_V2_CONTEXT,\n  });\n  const [resumeCard, { loading: resumeLoading }] = useMutation(resumeCardMutation, {\n    context: API_V2_CONTEXT,\n  });\n\n  const isActive = virtualCard.data.status === 'active' || virtualCard.data.state === 'OPEN';\n\n  const handlePauseUnpause = async () => {\n    try {\n      if (isActive) {\n        await pauseCard({ variables: { virtualCard: { id: virtualCard.id } } });\n      } else {\n        await resumeCard({ variables: { virtualCard: { id: virtualCard.id } } });\n      }\n      handleActionSuccess();\n    } catch (e) {\n      props.onError(e);\n    }\n  };\n\n  const isLoading = pauseLoading || resumeLoading;\n\n  return (\n    <div ref={wrapperRef}>\n      <Manager>\n        <Reference>\n          {({ ref }) => (\n            <Action ref={ref} onClick={() => setDisplayActions(true)}>\n              <FormattedMessage id=\"CollectivePage.NavBar.ActionMenu.Actions\" defaultMessage=\"Actions\" />\n            </Action>\n          )}\n        </Reference>\n        {displayActions && (\n          <Popper\n            placement=\"bottom\"\n            modifiers={[\n              {\n                name: 'arrow',\n                options: {\n                  element: arrowRef,\n                },\n              },\n            ]}\n          >\n            {({ placement, ref, style, arrowProps }) => (\n              <div\n                data-placement={placement}\n                ref={ref}\n                style={{\n                  ...style,\n                }}\n              >\n                <StyledCard\n                  m={1}\n                  mb={2}\n                  overflow=\"auto\"\n                  overflowY=\"auto\"\n                  padding=\"12px 15px\"\n                  width=\"180px\"\n                  borderWidth=\"0px\"\n                  boxShadow=\"0px 8px 12px rgba(20, 20, 20, 0.16)\"\n                >\n                  <Flex flexDirection=\"column\" fontSize=\"13px\" lineHeight=\"16px\" fontWeight=\"500\">\n                    {virtualCard.provider === 'STRIPE' && (\n                      <Action\n                        onClick={() =>\n                          confirmOnPauseCard && isActive ? setShowConfirmationModal(true) : handlePauseUnpause()\n                        }\n                        disabled={isLoading}\n                      >\n                        {isActive ? (\n                          <FormattedMessage id=\"VirtualCards.PauseCard\" defaultMessage=\"Pause Card\" />\n                        ) : (\n                          <FormattedMessage id=\"VirtualCards.ResumeCard\" defaultMessage=\"Resume Card\" />\n                        )}{' '}\n                        {isLoading && <StyledSpinner size=\"0.9em\" mb=\"2px\" />}\n                      </Action>\n                    )}\n                    {canDeleteVirtualCard && (\n                      <React.Fragment>\n                        <StyledHr borderColor=\"black.300\" mt={2} mb={2} />\n                        <Action onClick={() => setIsDeletingVirtualCard(true)}>\n                          <FormattedMessage defaultMessage=\"Delete Card\" />\n                        </Action>\n                      </React.Fragment>\n                    )}\n                    {canEditVirtualCard && (\n                      <React.Fragment>\n                        <StyledHr borderColor=\"black.300\" mt={2} mb={2} />\n                        <Action onClick={() => setIsEditingVirtualCard(true)}>\n                          <FormattedMessage defaultMessage=\"Edit Card Details\" />\n                        </Action>\n                      </React.Fragment>\n                    )}\n                  </Flex>\n                  <Arrow ref={arrowRef} {...arrowProps} />\n                </StyledCard>\n              </div>\n            )}\n          </Popper>\n        )}\n      </Manager>\n      {showConfirmationModal && (\n        <ConfirmationModal\n          isDanger\n          type=\"confirm\"\n          header={<FormattedMessage defaultMessage=\"Pause Virtual Card\" />}\n          continueLabel={<FormattedMessage id=\"VirtualCards.PauseCard\" defaultMessage=\"Pause Card\" />}\n          onClose={() => setShowConfirmationModal(false)}\n          continueHandler={async () => {\n            await handlePauseUnpause();\n            setShowConfirmationModal(false);\n          }}\n        >\n          <P>\n            <FormattedMessage defaultMessage=\"This will pause the virtual card. To unpause, you will need to contact the host.\" />\n          </P>\n        </ConfirmationModal>\n      )}\n      {isEditingVirtualCard && (\n        <EditVirtualCardModal\n          host={host}\n          onSuccess={handleActionSuccess}\n          onClose={() => setIsEditingVirtualCard(false)}\n          virtualCard={virtualCard}\n        />\n      )}\n      {isDeletingVirtualCard && (\n        <DeleteVirtualCardModal\n          host={host}\n          onSuccess={handleActionSuccess}\n          onDeleteRefetchQuery={props.onDeleteRefetchQuery}\n          onClose={() => setIsDeletingVirtualCard(false)}\n          virtualCard={virtualCard}\n        />\n      )}\n    </div>\n  );\n};\n\nActionsButton.propTypes = {\n  virtualCard: PropTypes.shape({\n    id: PropTypes.string,\n    data: PropTypes.object,\n    provider: PropTypes.string,\n  }),\n  host: PropTypes.object,\n  onSuccess: PropTypes.func,\n  onError: PropTypes.func,\n  confirmOnPauseCard: PropTypes.bool,\n  canEditVirtualCard: PropTypes.bool,\n  canDeleteVirtualCard: PropTypes.bool,\n  onDeleteRefetchQuery: PropTypes.string,\n};\n\nconst getLimitIntervalString = spendingLimitInterval => {\n  switch (spendingLimitInterval) {\n    case VirtualCardLimitInterval.DAILY:\n      return (\n        <Fragment>\n          /<FormattedMessage defaultMessage=\"day\" />\n        </Fragment>\n      );\n    case VirtualCardLimitInterval.WEEKLY:\n      return (\n        <Fragment>\n          /<FormattedMessage defaultMessage=\"wk\" />\n        </Fragment>\n      );\n    case VirtualCardLimitInterval.MONTHLY:\n      return (\n        <Fragment>\n          /<FormattedMessage id=\"Frequency.Monthly.Short\" defaultMessage=\"mo\" />\n        </Fragment>\n      );\n    case VirtualCardLimitInterval.YEARLY:\n      return (\n        <Fragment>\n          /<FormattedMessage id=\"Frequency.Yearly.Short\" defaultMessage=\"yr\" />\n        </Fragment>\n      );\n    default:\n      return null;\n  }\n};\n\nconst getLimitString = ({\n  spendingLimitAmount,\n  spendingLimitInterval,\n  spendingLimitRenewsOn,\n  remainingLimit,\n  currency,\n  locale,\n}) => {\n  if (!spendingLimitAmount) {\n    return <FormattedMessage id=\"VirtualCards.NoLimit\" defaultMessage=\"No Limit\" />;\n  }\n  return (\n    <Fragment>\n      {spendingLimitInterval === VirtualCardLimitInterval.PER_AUTHORIZATION ? (\n        <FormattedMessage\n          id=\"VirtualCards.LimitedToPerAuthorization\"\n          defaultMessage={'Limited to {limit} per authorization'}\n          values={{\n            limit: formatCurrency(spendingLimitAmount, currency, {\n              locale,\n            }),\n          }}\n        />\n      ) : (\n        <Fragment>\n          <FormattedMessage\n            id=\"VirtualCards.AvailableOfLimit\"\n            defaultMessage=\"Avl. {available} of {limit}{interval}\"\n            values={{\n              available: formatCurrency(remainingLimit, currency, {\n                locale,\n              }),\n              limit: formatCurrency(spendingLimitAmount, currency, {\n                locale,\n              }),\n              interval: getLimitIntervalString(spendingLimitInterval),\n            }}\n          />\n          {spendingLimitInterval === VirtualCardLimitInterval.ALL_TIME ? (\n            <Fragment>\n              &nbsp;&bull;&nbsp;\n              <FormattedMessage id=\"VirtualCards.LimitDoesNotRenew\" defaultMessage=\"Limit does not renew\" />\n            </Fragment>\n          ) : (\n            <Fragment>\n              &nbsp;&bull;&nbsp;\n              <FormattedMessage\n                defaultMessage={'Renews on {renewsOnDate, date, medium}'}\n                values={{\n                  renewsOnDate: new Date(spendingLimitRenewsOn),\n                }}\n              />\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst VirtualCard = props => {\n  const [displayDetails, setDisplayDetails] = React.useState(false);\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  const { virtualCard } = props;\n\n  const isActive = virtualCard.data.state === 'OPEN' || virtualCard.data.status === 'active';\n\n  const name = virtualCard.name || '';\n  const cardNumber = `****  ****  ****  ${virtualCard.last4}`;\n  const handleCopy = value => () => {\n    navigator.clipboard.writeText(value);\n    addToast({\n      type: TOAST_TYPE.SUCCESS,\n      message: <FormattedMessage id=\"Clipboard.Copied\" defaultMessage=\"Copied!\" />,\n    });\n  };\n\n  return (\n    <CardContainer width=\"366px\" height=\"248px\" flexDirection=\"column\">\n      <div />\n      <Box flexGrow={1} m=\"24px 24px 0 24px\">\n        <Flex fontSize=\"16px\" lineHeight=\"24px\" fontWeight=\"500\" justifyContent=\"space-between\">\n          <Box>{name}</Box>\n          <StateLabel isActive={isActive}>\n            {(virtualCard.data.state || virtualCard.data.status).toUpperCase()}\n          </StateLabel>\n        </Flex>\n        {displayDetails ? (\n          <React.Fragment>\n            <P mt=\"27px\" fontSize=\"18px\" fontWeight=\"700\" lineHeight=\"26px\">\n              {virtualCard.privateData.cardNumber.replace(/\\d{4}(?=.)/g, '$& ')}{' '}\n              <Action color=\"black\" ml={2} onClick={handleCopy(virtualCard.privateData.cardNumber)}>\n                <Copy size=\"18px\" />\n              </Action>\n            </P>\n            <P fontSize=\"12px\" fontWeight=\"500\" lineHeight=\"16px\" textTransform=\"uppercase\">\n              <FormattedMessage id=\"VirtualCards.CardNumber\" defaultMessage=\"Card Number\" />{' '}\n            </P>\n            <Flex>\n              <Box mt=\"19px\" mr={4}>\n                <P fontSize=\"18px\" fontWeight=\"700\" lineHeight=\"26px\">\n                  {\n                    // expireDate should be removed once https://github.com/opencollective/opencollective-api/pull/7307 is deployed to production\n                    virtualCard.privateData.expireDate || virtualCard.privateData.expiryDate\n                  }\n\n                  <Action\n                    color=\"black\"\n                    ml={2}\n                    onClick={\n                      // expireDate should be removed once https://github.com/opencollective/opencollective-api/pull/7307 is deployed to production\n                      handleCopy(virtualCard.privateData.expireDate || virtualCard.privateData.expiryDate)\n                    }\n                  >\n                    <Copy size=\"18px\" />\n                  </Action>\n                </P>\n                <P fontSize=\"12px\" fontWeight=\"500\" lineHeight=\"16px\">\n                  <FormattedMessage id=\"VirtualCards.ExpireDate\" defaultMessage=\"MM/YYYY\" />{' '}\n                </P>\n              </Box>\n              <Box mt=\"19px\">\n                <P fontSize=\"18px\" fontWeight=\"700\" lineHeight=\"26px\">\n                  {virtualCard.privateData.cvv}\n\n                  <Action color=\"black\" ml={2} onClick={handleCopy(virtualCard.privateData.cvv)}>\n                    <Box position=\"relative\" display=\"inline-block\">\n                      <Copy size=\"18px\" />\n                    </Box>\n                  </Action>\n                </P>\n                <P fontSize=\"12px\" fontWeight=\"500\" lineHeight=\"16px\">\n                  <FormattedMessage id=\"VirtualCards.CVV\" defaultMessage=\"CVV\" />{' '}\n                </P>\n              </Box>\n            </Flex>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <P mt=\"18px\" fontSize=\"18px\" fontWeight=\"700\" lineHeight=\"26px\" letterSpacing=\"0\">\n              {cardNumber}\n            </P>\n            <Box mt=\"8px\" fontSize=\"13px\" fontWeight=\"500\" lineHeight=\"20px\" letterSpacing=\"0\">\n              <StyledLink href={`/${virtualCard.account.slug}`} color=\"white.full\" hoverColor=\"white.transparent.72\">\n                <Avatar\n                  collective={virtualCard.account}\n                  radius=\"20px\"\n                  display=\"inline-block\"\n                  mr={2}\n                  verticalAlign=\"middle\"\n                />{' '}\n                {virtualCard.account.name}\n              </StyledLink>\n            </Box>\n            <P mt=\"16px\" fontSize=\"11px\" fontWeight=\"400\" lineHeight=\"16px\" letterSpacing=\"0\">\n              {getLimitString({\n                ...virtualCard,\n                locale: intl.locale,\n              })}\n            </P>\n            <P mt=\"8px\" fontSize=\"11px\" fontWeight=\"400\" lineHeight=\"16px\" letterSpacing=\"0\">\n              <FormattedMessage\n                id=\"VirtualCards.AssignedOnDateTo\"\n                defaultMessage=\"Assigned on {createdAt, date, medium} to {assignedTo}\"\n                values={{\n                  createdAt: new Date(virtualCard.createdAt),\n                  assignedTo: (\n                    <StyledLink\n                      href={`/${virtualCard.assignee.slug}`}\n                      color=\"white.full\"\n                      hoverColor=\"white.transparent.72\"\n                      fontWeight=\"700\"\n                    >\n                      {virtualCard.assignee.name}\n                    </StyledLink>\n                  ),\n                }}\n              />\n            </P>\n          </React.Fragment>\n        )}\n      </Box>\n      <Flex\n        backgroundColor=\"#fff\"\n        color=\"black.900\"\n        minHeight=\"48px\"\n        px=\"24px\"\n        justifyContent={'space-between'}\n        alignItems=\"center\"\n        shrink={0}\n      >\n        {(props.canEditVirtualCard || props.canPauseOrResumeVirtualCard || props.canDeleteVirtualCard) && (\n          <ActionsButton\n            virtualCard={virtualCard}\n            host={props.host}\n            onError={error => addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(intl, error) })}\n            onDeleteRefetchQuery={props.onDeleteRefetchQuery}\n            confirmOnPauseCard={props.confirmOnPauseCard}\n            canEditVirtualCard={props.canEditVirtualCard}\n            canDeleteVirtualCard={props.canDeleteVirtualCard}\n          />\n        )}\n        <Action onClick={() => setDisplayDetails(!displayDetails)}>\n          {displayDetails ? (\n            <React.Fragment>\n              <FormattedMessage id=\"closeDetails\" defaultMessage=\"Close Details\" />\n              <DismissIcon height=\"12px\" width=\"12px\" ml={2} mb=\"2px\" />\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <FormattedMessage id=\"VirtualCards.DisplayDetails\" defaultMessage=\"View Card Details\" />\n              &nbsp;&rarr;\n            </React.Fragment>\n          )}\n        </Action>\n      </Flex>\n    </CardContainer>\n  );\n};\n\nVirtualCard.propTypes = {\n  canEditVirtualCard: PropTypes.bool,\n  canPauseOrResumeVirtualCard: PropTypes.bool,\n  canDeleteVirtualCard: PropTypes.bool,\n  host: PropTypes.object,\n  virtualCard: PropTypes.shape({\n    id: PropTypes.string,\n    last4: PropTypes.string,\n    name: PropTypes.string,\n    data: PropTypes.object,\n    privateData: PropTypes.object,\n    provider: PropTypes.string,\n    spendingLimitAmount: PropTypes.number,\n    spendingLimitInterval: PropTypes.string,\n    spendingLimitRenewsOn: PropTypes.string,\n    remainingLimit: PropTypes.number,\n    currency: PropTypes.string,\n    createdAt: PropTypes.string,\n    assignee: PropTypes.shape({\n      name: PropTypes.string,\n      slug: PropTypes.string,\n    }),\n    account: PropTypes.shape({\n      id: PropTypes.string,\n      imageUrl: PropTypes.string,\n      name: PropTypes.string,\n      slug: PropTypes.string,\n    }),\n  }),\n  confirmOnPauseCard: PropTypes.bool,\n  onDeleteRefetchQuery: PropTypes.string,\n};\n\nexport default VirtualCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { find, sortBy, uniqBy } from 'lodash';\nimport { useRouter } from 'next/router';\n\nimport Container from '../../../../Container';\nimport StyledSelect from '../../../../StyledSelect';\n\nconst CollectiveFilter = ({ onChange, virtualCardCollectives }) => {\n  const router = useRouter();\n  const { collectiveAccountIds } = router.query;\n\n  const getAllCollectives = () => {\n    return sortBy(uniqBy(virtualCardCollectives, 'legacyId'), 'name').map(collective => {\n      const label = collective.parentAccount\n        ? `${collective.parentAccount.name} - ${collective.name}`\n        : collective.name;\n      return {\n        label,\n        value: String(collective.legacyId),\n      };\n    });\n  };\n\n  const findCollectiveFilters = () => {\n    return collectiveAccountIds\n      ?.split(',')\n      .map(collectiveAccountId => find(getAllCollectives(), { value: collectiveAccountId }));\n  };\n\n  return (\n    <Container>\n      <StyledSelect\n        inputId=\"virtual-card-collective-picker\"\n        isMulti={true}\n        useCompactMode\n        options={getAllCollectives()}\n        value={findCollectiveFilters()}\n        onChange={selectedValues => {\n          let selectedValuesString = '';\n          selectedValues?.forEach(\n            selectedValue => (selectedValuesString = `${selectedValue.value},${selectedValuesString}`),\n          );\n          onChange(selectedValuesString.slice(0, -1));\n        }}\n      />\n    </Container>\n  );\n};\n\nCollectiveFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  virtualCardCollectives: PropTypes.array,\n};\n\nexport default CollectiveFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { encodeDateInterval } from '../../../../lib/date-utils';\n\nimport Container from '../../../Container';\nimport PeriodFilter from '../../../filters/PeriodFilter';\nimport { Box, Flex } from '../../../Grid';\nimport RequestVirtualCardBtn from '../../../RequestVirtualCardBtn';\nimport StyledButton from '../../../StyledButton';\n\nimport CollectiveFilter from './filters/CollectiveFilter';\n\nconst FilterContainer = styled(Box)`\n  margin-bottom: 8px;\n`;\n\nconst FilterLabel = styled.label`\n  font-weight: 600;\n  font-size: 9px;\n  line-height: 14px;\n  letter-spacing: 0.6px;\n  text-transform: uppercase;\n  color: #9d9fa3;\n`;\n\nconst VirtualCardFilters = ({\n  filters,\n  onChange,\n  isCollectiveFilter,\n  virtualCardCollectives,\n  collective,\n  host,\n  displayPeriodFilter,\n}) => {\n  const allowRequestVirtualCard = get(host, 'settings.virtualcards.requestcard');\n\n  const getFilterProps = (name, valueModifier) => {\n    return {\n      inputId: `virtual-cards-filter-${name}`,\n      value: filters?.[name],\n      onChange: value => {\n        const preparedValue = valueModifier ? valueModifier(value) : value;\n        onChange({ ...filters, [name]: value === 'ALL' ? null : preparedValue });\n      },\n    };\n  };\n\n  let filterWidth;\n  if (allowRequestVirtualCard && displayPeriodFilter) {\n    filterWidth = 0.22;\n  } else if (allowRequestVirtualCard || displayPeriodFilter) {\n    filterWidth = 0.32;\n  } else {\n    filterWidth = 0.48;\n  }\n\n  return (\n    <Container>\n      {isCollectiveFilter && (\n        <FilterContainer mr={[0, '8px']} mb={['8px', 0]}>\n          <FilterLabel htmlFor=\"virtual-card-filter-collective\">\n            <FormattedMessage id=\"Collective\" defaultMessage=\"Collective\" />\n          </FilterLabel>\n          <CollectiveFilter\n            {...getFilterProps('collectiveAccountIds')}\n            virtualCardCollectives={virtualCardCollectives}\n          />\n        </FilterContainer>\n      )}\n      <Flex flexWrap=\"wrap\">\n        {displayPeriodFilter && (\n          <FilterContainer mr={[0, '8px']} mb={['8px', 0]} width={[1, filterWidth]}>\n            <FilterLabel htmlFor=\"virtual-card-filter-period\">\n              <FormattedMessage id=\"Period\" defaultMessage=\"Period\" />\n            </FilterLabel>\n            <PeriodFilter {...getFilterProps('period', encodeDateInterval)} />\n          </FilterContainer>\n        )}\n        {allowRequestVirtualCard && collective.isApproved && (\n          <RequestVirtualCardBtn collective={collective} host={host}>\n            {btnProps => (\n              <StyledButton m={3} {...btnProps} width={[1, 1 / 4]}>\n                <FormattedMessage id=\"VirtualCards.RequestCardButton\" defaultMessage=\"Request card\" />\n              </StyledButton>\n            )}\n          </RequestVirtualCardBtn>\n        )}\n      </Flex>\n    </Container>\n  );\n};\n\nVirtualCardFilters.propTypes = {\n  onChange: PropTypes.func,\n  filters: PropTypes.object,\n  virtualCardCollectives: PropTypes.array,\n  isCollectiveFilter: PropTypes.bool,\n  host: PropTypes.object,\n  collective: PropTypes.object,\n  displayPeriodFilter: PropTypes.bool,\n};\n\nexport default React.memo(VirtualCardFilters);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { omit, omitBy } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport { CollectiveType } from '../../../../lib/constants/collectives';\nimport { parseDateInterval } from '../../../../lib/date-utils';\nimport { API_V2_CONTEXT } from '../../../../lib/graphql/helpers';\n\nimport Collapse from '../../../Collapse';\nimport { Box, Flex, Grid } from '../../../Grid';\nimport HTMLContent from '../../../HTMLContent';\nimport { getI18nLink } from '../../../I18nFormatters';\nimport Loading from '../../../Loading';\nimport Pagination from '../../../Pagination';\nimport { P } from '../../../Text';\nimport VirtualCard from '../../VirtualCard';\n\nimport VirtualCardFilters from './VirtualCardFilters';\n\nconst virtualCardsQuery = gql`\n  query AccountVirtualCards(\n    $slug: String\n    $limit: Int!\n    $offset: Int!\n    $state: String\n    $merchantAccount: AccountReferenceInput\n    $dateFrom: DateTime\n    $dateTo: DateTime\n  ) {\n    account(slug: $slug) {\n      id\n      legacyId\n      slug\n      type\n      name\n      imageUrl\n      ... on AccountWithHost {\n        host {\n          legacyId\n          slug\n          id\n          type\n          name\n          imageUrl\n          settings\n        }\n      }\n      virtualCards(\n        limit: $limit\n        offset: $offset\n        state: $state\n        merchantAccount: $merchantAccount\n        dateFrom: $dateFrom\n        dateTo: $dateTo\n      ) {\n        totalCount\n        limit\n        offset\n        nodes {\n          id\n          name\n          last4\n          data\n          currency\n          provider\n          privateData\n          createdAt\n          spendingLimitAmount\n          spendingLimitInterval\n          spendingLimitRenewsOn\n          remainingLimit\n          account {\n            id\n            slug\n            name\n            imageUrl\n          }\n          assignee {\n            id\n            name\n            slug\n            imageUrl\n          }\n        }\n      }\n      virtualCardMerchants {\n        nodes {\n          id\n          type\n          slug\n          name\n          currency\n          location {\n            id\n            address\n            country\n          }\n          imageUrl(height: 64)\n        }\n      }\n    }\n  }\n`;\n\nconst VIRTUAL_CARDS_PER_PAGE = 6;\n\nconst VirtualCards = props => {\n  const router = useRouter();\n  const routerQuery = omit(router.query, ['slug', 'section']);\n  const offset = parseInt(routerQuery.offset) || 0;\n  const { state, merchant, period } = routerQuery;\n  const { from: dateFrom, to: dateTo } = parseDateInterval(period);\n  const { loading, data } = useQuery(virtualCardsQuery, {\n    context: API_V2_CONTEXT,\n    variables: {\n      slug: props.collective.slug,\n      limit: VIRTUAL_CARDS_PER_PAGE,\n      offset,\n      state,\n      merchantAccount: { slug: merchant },\n      dateFrom: dateFrom,\n      dateTo: dateTo,\n    },\n  });\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  const handleUpdateFilters = queryParams => {\n    return router.push({\n      pathname: `/${props.collective.slug}/admin/virtual-cards`,\n      query: omitBy({ ...routerQuery, ...queryParams }, value => !value),\n    });\n  };\n\n  return (\n    <Box width={['366px', '764px']}>\n      <Box>\n        <P>\n          <FormattedMessage\n            id=\"VirtualCards.Description\"\n            defaultMessage=\"Use a virtual card to spend from your collective's budget. You can request multiple cards (review the host's policy to see how many). Your fiscal host will create the card for you and assign it a limit and a merchant. You will be notified by email once the card is assigned. <learnMoreLink>Learn more</learnMoreLink>\"\n            values={{\n              learnMoreLink: getI18nLink({\n                href: 'https://docs.opencollective.com/help/expenses-and-getting-paid/virtual-cards',\n                openInNewTabNoFollow: true,\n              }),\n            }}\n          />\n        </P>\n        {props.collective.host?.settings?.virtualcards?.policy && (\n          <P mt={3}>\n            <Collapse\n              title={\n                <FormattedMessage\n                  id=\"VirtualCards.Policy.Reminder\"\n                  defaultMessage=\"{hostName} Virtual Card use Policy\"\n                  values={{\n                    hostName: props.collective.host.name,\n                  }}\n                />\n              }\n            >\n              <HTMLContent content={props.collective.host?.settings?.virtualcards?.policy} />\n            </Collapse>\n          </P>\n        )}\n        <Flex mt={3} flexDirection={['row', 'column']}>\n          <VirtualCardFilters\n            filters={routerQuery}\n            collective={props.collective}\n            host={props.collective.host}\n            virtualCardMerchants={data.account.virtualCardMerchants.nodes}\n            onChange={queryParams => handleUpdateFilters({ ...queryParams, offset: null })}\n            displayPeriodFilter\n          />\n        </Flex>\n      </Box>\n      <Grid mt={4} gridTemplateColumns={['100%', '366px 366px']} gridGap=\"32px 24px\">\n        {data.account.virtualCards.nodes.map(virtualCard => (\n          <VirtualCard\n            host={data.account.host}\n            canEditVirtualCard={virtualCard.data.status === 'active'}\n            canPauseOrResumeVirtualCard\n            canDeleteVirtualCard\n            confirmOnPauseCard={props.collective.type === CollectiveType.COLLECTIVE}\n            key={virtualCard.id}\n            virtualCard={virtualCard}\n            onDeleteRefetchQuery=\"AccountVirtualCards\"\n          />\n        ))}\n      </Grid>\n      <Flex mt={5} justifyContent=\"center\">\n        <Pagination\n          route={`/${props.collective.slug}/admin/virtual-cards`}\n          total={data.account.virtualCards.totalCount}\n          limit={VIRTUAL_CARDS_PER_PAGE}\n          offset={offset}\n          ignoredQueryParams={['slug', 'section']}\n        />\n      </Flex>\n    </Box>\n  );\n};\n\nVirtualCards.propTypes = {\n  collective: PropTypes.shape({\n    slug: PropTypes.string,\n    type: PropTypes.string,\n    virtualCards: PropTypes.object,\n    virtualCardMerchants: PropTypes.array,\n    host: PropTypes.object,\n  }),\n  hideTopsection: PropTypes.func,\n};\n\nexport default VirtualCards;\n","// Webhook notification events\n\nexport const WebhookEvents = {\n  ALL: 'all',\n  CONNECTED_ACCOUNT_CREATED: 'connected_account.created',\n  COLLECTIVE_APPLY: 'collective.apply',\n  COLLECTIVE_APPROVED: 'collective.approved',\n  COLLECTIVE_CREATED: 'collective.created',\n  COLLECTIVE_COMMENT_CREATED: 'collective.comment.created',\n  COLLECTIVE_EXPENSE_CREATED: 'collective.expense.created',\n  COLLECTIVE_EXPENSE_DELETED: 'collective.expense.deleted',\n  COLLECTIVE_EXPENSE_UPDATED: 'collective.expense.updated',\n  COLLECTIVE_EXPENSE_REJECTED: 'collective.expense.rejected',\n  COLLECTIVE_EXPENSE_APPROVED: 'collective.expense.approved',\n  COLLECTIVE_EXPENSE_PAID: 'collective.expense.paid',\n  COLLECTIVE_MEMBER_CREATED: 'collective.member.created',\n  COLLECTIVE_TRANSACTION_CREATED: 'collective.transaction.created',\n  COLLECTIVE_UPDATE_CREATED: 'collective.update.created',\n  COLLECTIVE_UPDATE_PUBLISHED: 'collective.update.published',\n  SUBSCRIPTION_CANCELED: 'subscription.canceled',\n  TICKET_CONFIRMED: 'ticket.confirmed',\n};\n\nexport const WebhookEventsList = Object.values(WebhookEvents).sort();\n","import { defineMessages } from 'react-intl';\n\nimport { WebhookEvents } from '../constants/notificationEvents';\n\nconst TypesI18n = defineMessages({\n  [WebhookEvents.ALL]: {\n    id: 'WebhookEvents.All',\n    defaultMessage: 'All',\n  },\n  [WebhookEvents.CONNECTED_ACCOUNT_CREATED]: {\n    id: 'WebhookEvents.CONNECTED_ACCOUNT_CREATED',\n    defaultMessage: 'Connected account added',\n  },\n  [WebhookEvents.COLLECTIVE_APPLY]: {\n    id: 'WebhookEvents.COLLECTIVE_APPLY',\n    defaultMessage: 'New collective application',\n  },\n  [WebhookEvents.COLLECTIVE_APPROVED]: {\n    id: 'WebhookEvents.COLLECTIVE_APPROVED',\n    defaultMessage: 'Collective application approved',\n  },\n  [WebhookEvents.COLLECTIVE_CREATED]: {\n    id: 'WebhookEvents.COLLECTIVE_CREATED',\n    defaultMessage: 'Collective created',\n  },\n  [WebhookEvents.COLLECTIVE_COMMENT_CREATED]: {\n    id: 'WebhookEvents.COLLECTIVE_COMMENT_CREATED',\n    defaultMessage: 'New comment',\n  },\n  [WebhookEvents.COLLECTIVE_EXPENSE_CREATED]: {\n    id: 'WebhookEvents.COLLECTIVE_EXPENSE_CREATED',\n    defaultMessage: 'New expenses',\n  },\n  [WebhookEvents.COLLECTIVE_EXPENSE_DELETED]: {\n    defaultMessage: 'Expense deleted',\n  },\n  [WebhookEvents.COLLECTIVE_EXPENSE_UPDATED]: {\n    id: 'Expense.Activity.Updated',\n    defaultMessage: 'Expense updated',\n  },\n  [WebhookEvents.COLLECTIVE_EXPENSE_REJECTED]: {\n    id: 'Expense.Activity.Rejected',\n    defaultMessage: 'Expense rejected',\n  },\n  [WebhookEvents.COLLECTIVE_EXPENSE_APPROVED]: {\n    id: 'Expense.Activity.Approved',\n    defaultMessage: 'Expense approved',\n  },\n  [WebhookEvents.COLLECTIVE_EXPENSE_PAID]: {\n    id: 'Expense.Activity.Paid',\n    defaultMessage: 'Expense paid',\n  },\n  [WebhookEvents.COLLECTIVE_MEMBER_CREATED]: {\n    id: 'WebhookEvents.COLLECTIVE_MEMBER_CREATED',\n    defaultMessage: 'New member',\n  },\n  [WebhookEvents.COLLECTIVE_TRANSACTION_CREATED]: {\n    id: 'WebhookEvents.COLLECTIVE_TRANSACTION_CREATED',\n    defaultMessage: 'New transaction',\n  },\n  [WebhookEvents.COLLECTIVE_UPDATE_CREATED]: {\n    id: 'WebhookEvents.COLLECTIVE_UPDATE_CREATED',\n    defaultMessage: 'New update drafted',\n  },\n  [WebhookEvents.COLLECTIVE_UPDATE_PUBLISHED]: {\n    id: 'connectedAccounts.twitter.updatePublished.toggle.label',\n    defaultMessage: 'Update published',\n  },\n  [WebhookEvents.SUBSCRIPTION_CANCELED]: {\n    defaultMessage: 'Recurring contribution cancelled',\n  },\n  [WebhookEvents.TICKET_CONFIRMED]: {\n    id: 'WebhookEvents.TICKET_CONFIRMED',\n    defaultMessage: 'Ticket confirmed',\n  },\n});\n\n/**\n * Translate the webhook event\n *\n * @param {object} `intl` - see `injectIntl`\n * @param {string} `type`\n */\nexport const i18nWebhookEventType = (intl, type) => {\n  const i18nMsg = TypesI18n[type];\n  return i18nMsg ? intl.formatMessage(i18nMsg) : type;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { WebhookEvents } from '../../../lib/constants/notificationEvents';\nimport { i18nWebhookEventType } from '../../../lib/i18n/webhook-event-type';\n\nimport StyledModal, { ModalBody, ModalHeader } from '../../StyledModal';\nimport { P } from '../../Text';\n\nconst getFakeActivity = (type, data) => {\n  return {\n    createdAt: '2022-07-18T10:30:44.479Z',\n    id: 309906,\n    CollectiveId: 16658,\n    type,\n    data,\n  };\n};\n\nconst getFakeIndividual = () => ({\n  id: 4469,\n  type: 'USER',\n  slug: 'betree',\n  name: 'Benjamin',\n  twitterHandle: 'Betree83',\n  githubHandle: 'Betree',\n  repositoryUrl: 'https://github.com/Betree',\n  image: 'https://opencollective-staging.s3.us-west-1.amazonaws.com/550ac070-e0f8-11e9-9d4c-e9c71c24ba70.jpg',\n});\n\nconst getFakeCollective = () => ({\n  id: 16658,\n  type: 'COLLECTIVE',\n  slug: 'captainfact_io',\n  name: 'CaptainFact',\n  twitterHandle: null,\n  githubHandle: 'test',\n  repositoryUrl: 'https://github.com/CaptainFact',\n  image: 'https://opencollective-staging.s3.us-west-1.amazonaws.com/10dd8f00-54c8-11eb-bfdc-17c9ddbead53.png',\n});\n\nconst getFakeTransaction = () => ({\n  id: 233159,\n  kind: 'CONTRIBUTION',\n  type: 'CREDIT',\n  uuid: 'a6a00550-95c4-48b2-bb32-ceb185232725',\n  group: '9268b46d-74e7-4360-ac99-9413f78bb73e',\n  amount: 4198,\n  isDebt: false,\n  OrderId: 50684,\n  currency: 'EUR',\n  isRefund: false,\n  ExpenseId: null,\n  createdAt: '2022-07-18T10:30:14.942Z',\n  taxAmount: null,\n  description: 'Monthly financial contribution to CaptainFact (Fixed recurring)',\n  CollectiveId: 16658,\n  hostCurrency: 'EUR',\n  CreatedByUserId: 4829,\n  FromCollectiveId: 4469,\n  amountInHostCurrency: 4198,\n  hostFeeInHostCurrency: 0,\n  netAmountInHostCurrency: 4033,\n  platformFeeInHostCurrency: 0,\n  UsingGiftCardFromCollectiveId: null,\n  netAmountInCollectiveCurrency: 4033,\n  amountSentToHostInHostCurrency: 4033,\n  paymentProcessorFeeInHostCurrency: -165,\n  formattedAmount: '€41.98',\n  formattedAmountWithInterval: '€41.98',\n});\n\n// All expenses have the same payload format\nconst getFakeExpenseEventActivity = type => {\n  return getFakeActivity(type, {\n    expense: {\n      id: 9214,\n      description: 'Food for the team retreat',\n      amount: 5500,\n      currency: 'USD',\n      formattedAmount: '$55.00',\n      formattedAmountWithInterval: '$55.00',\n    },\n    fromCollective: getFakeIndividual(),\n    collective: getFakeCollective(),\n  });\n};\n\nexport const getFakeMember = () => ({\n  role: 'BACKER',\n  description: null,\n  since: '2022-07-18T10:30:14.985Z',\n  memberCollective: {\n    id: 4469,\n    type: 'USER',\n    slug: 'betree',\n    name: 'Ben',\n    company: '@CaptainFact_io @opencollective',\n    website: 'https://benjamin.piouffle.com',\n    twitterHandle: 'Betree83',\n    githubHandle: 'Betree',\n    repositoryUrl: 'https://github.com/Betree',\n    description: 'Developer and civic tech enthusiast !',\n    previewImage:\n      'https://res.cloudinary.com/opencollective/image/fetch/c_thumb,g_face,h_48,r_max,w_48,bo_3px_solid_white/c_thumb,h_48,r_max,w_48,bo_2px_solid_rgb:66C71A/e_trim/f_jpg/https%3A%2F%2Fopencollective-staging.s3.us-west-1.amazonaws.com%2F550ac070-e0f8-11e9-9d4c-e9c71c24ba70.jpg',\n  },\n});\n\nconst getFakeOrder = () => ({\n  id: 50684,\n  totalAmount: 4198,\n  currency: 'EUR',\n  description: 'Monthly financial contribution to CaptainFact (Fixed recurring)',\n  interval: 'month',\n  createdAt: '2022-07-18T10:30:09.855Z',\n  quantity: 1,\n  formattedAmount: '€41.98',\n  formattedAmountWithInterval: '€41.98 / month',\n});\n\nconst ExpenseEvents = [\n  WebhookEvents.COLLECTIVE_EXPENSE_PAID,\n  WebhookEvents.COLLECTIVE_EXPENSE_CREATED,\n  WebhookEvents.COLLECTIVE_EXPENSE_APPROVED,\n  WebhookEvents.COLLECTIVE_EXPENSE_DELETED,\n  WebhookEvents.COLLECTIVE_EXPENSE_REJECTED,\n  WebhookEvents.COLLECTIVE_EXPENSE_UPDATED,\n];\n\nconst WebhookEventInfo = {\n  ...ExpenseEvents.reduce((acc, type) => {\n    acc[type] = () => getFakeExpenseEventActivity(type);\n    return acc;\n  }, {}),\n  [WebhookEvents.COLLECTIVE_TRANSACTION_CREATED]: () =>\n    getFakeActivity(WebhookEvents.COLLECTIVE_TRANSACTION_CREATED, {\n      fromCollective: getFakeIndividual(),\n      collective: getFakeCollective(),\n      transaction: getFakeTransaction(),\n    }),\n  [WebhookEvents.COLLECTIVE_MEMBER_CREATED]: () =>\n    getFakeActivity(WebhookEvents.COLLECTIVE_MEMBER_CREATED, {\n      member: getFakeMember(),\n      order: getFakeOrder(),\n    }),\n  [WebhookEvents.COLLECTIVE_UPDATE_PUBLISHED]: () =>\n    getFakeActivity(WebhookEvents.COLLECTIVE_UPDATE_PUBLISHED, {\n      update: {\n        html: '<div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Paria sunt igitur. Atque ab his initiis profecti omnium virtutum et originem et progressionem persecuti sunt. Non igitur de improbo, sed de callido improbo quaerimus, qualis Q. Si quidem, inquit, tollerem, sed relinquo. Non quam nostram quidem, inquit Pomponius iocans; <strong>Quantum Aristoxeni ingenium consumptum videmus in musicis?</strong><br /><br /></div><div><strong><br />Praeteritis, inquit, gaudeo.</strong> Aliter enim explicari, quod quaeritur, non potest. Hic nihil fuit, quod quaereremus. Hinc ceteri particulas arripere conati suam quisque videro voluit afferre sententiam. <strong>Nam, ut sint illa vendibiliora, haec uberiora certe sunt.</strong> Respondent extrema primis, media utrisque, omnia omnibus. Quamvis enim depravatae non sint, pravae tamen esse possunt. <em>Iam id ipsum absurdum, maximum malum neglegi.</em> <em>Expectoque quid ad id, quod quaerebam, respondeas.</em> Nec vero alia sunt quaerenda contra Carneadeam illam sententiam. Quid ei reliquisti, nisi te, quoquo modo loqueretur, intellegere, quid diceret? Si enim ad populum me vocas, eum. <br /><br /></div><div><br />Duo Reges: constructio interrete. <em>Sed ad rem redeamus;</em> Hinc ceteri particulas arripere conati suam quisque videro voluit afferre sententiam. Aperiendum est igitur, quid sit voluptas; Oratio me istius philosophi non offendit; <em>Itaque ab his ordiamur.</em></div>',\n        title: 'Duo Reges: constructio interrete',\n        slug: 'duo-reges-constructio-interrete',\n        isPrivate: false,\n      },\n    }),\n};\n\nexport const hasWebhookEventInfo = event => Boolean(WebhookEventInfo[event]);\n\nconst CodeContainer = styled.pre`\n  max-width: 500px;\n  max-height: 800px;\n  overflow: auto;\n`;\n\nconst WebhookActivityInfoModal = ({ activity, ...props }) => {\n  const intl = useIntl();\n  return (\n    <StyledModal {...props}>\n      <ModalHeader>\n        <FormattedMessage\n          defaultMessage='Details for the \"{event}\" webhook event'\n          values={{\n            event: i18nWebhookEventType(intl, activity),\n          }}\n        />\n      </ModalHeader>\n      <ModalBody mt={4}>\n        <P mb={2}>\n          <FormattedMessage defaultMessage=\"Sample payload:\" />\n        </P>\n        <CodeContainer>{JSON.stringify(WebhookEventInfo[activity](), null, 2)}</CodeContainer>\n      </ModalBody>\n    </StyledModal>\n  );\n};\n\nWebhookActivityInfoModal.propTypes = {\n  activity: PropTypes.oneOf(Object.values(WebhookEvents)).isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default WebhookActivityInfoModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { InfoCircle } from '@styled-icons/boxicons-regular/InfoCircle';\nimport { Add } from '@styled-icons/material/Add';\nimport { Close } from '@styled-icons/material/Close';\nimport { cloneDeep, difference, get, pick } from 'lodash';\nimport memoizeOne from 'memoize-one';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isURL } from 'validator';\n\nimport { CollectiveType } from '../../../lib/constants/collectives';\nimport { WebhookEventsList } from '../../../lib/constants/notificationEvents';\nimport { getErrorFromGraphqlException } from '../../../lib/errors';\nimport { gqlV1 } from '../../../lib/graphql/helpers';\nimport { i18nWebhookEventType } from '../../../lib/i18n/webhook-event-type';\nimport { compose } from '../../../lib/utils';\n\nimport { Box, Flex } from '../../Grid';\nimport { getI18nLink } from '../../I18nFormatters';\nimport Loading from '../../Loading';\nimport MessageBox from '../../MessageBox';\nimport StyledButton from '../../StyledButton';\nimport StyledHr from '../../StyledHr';\nimport StyledInputGroup from '../../StyledInputGroup';\nimport StyledSelect from '../../StyledSelect';\nimport { Label, P, Span } from '../../Text';\n\nimport WebhookActivityInfoModal, { hasWebhookEventInfo } from './WebhookActivityInfoModal';\n\nconst EMPTY_WEBHOOKS = [];\n\nclass Webhooks extends React.Component {\n  static propTypes = {\n    collectiveSlug: PropTypes.string.isRequired,\n    editWebhooks: PropTypes.func,\n    /** From graphql query */\n    data: PropTypes.object.isRequired,\n    /** From intl */\n    intl: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      moreInfoModal: null,\n      modified: false,\n      webhooks: cloneDeep(this.getWebhooksFromProps(props)),\n      isLoaded: false,\n      status: null,\n      error: '',\n    };\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.getWebhooksFromProps(oldProps) !== this.getWebhooksFromProps(this.props)) {\n      this.setState({ webhooks: cloneDeep(this.getWebhooksFromProps(this.props)) });\n    }\n  }\n\n  getWebhooksFromProps = props => {\n    return get(props, 'data.Collective.notifications', EMPTY_WEBHOOKS);\n  };\n\n  validateWebhookUrl = value => {\n    return isURL(value);\n  };\n\n  cleanWebhookUrl = value => {\n    return value ? value.trim().replace(/https?:\\/\\//, '') : '';\n  };\n\n  getEventTypes = memoizeOne((collectiveType, isHost) => {\n    const removeList = [];\n\n    if (collectiveType !== CollectiveType.COLLECTIVE) {\n      removeList.push(\n        'collective.comment.created',\n        'collective.expense.created',\n        'collective.expense.deleted',\n        'collective.expense.updated',\n        'collective.expense.rejected',\n        'collective.expense.approved',\n        'collective.expense.paid',\n        'collective.monthly',\n        'collective.transaction.created',\n        'collective.transaction.paid',\n        'collective.update.created',\n        'collective.update.published',\n      );\n    }\n    if (collectiveType !== CollectiveType.ORGANIZATION) {\n      removeList.push('organization.collective.created', 'user.created');\n    }\n    if (collectiveType !== CollectiveType.EVENT) {\n      removeList.push('ticket.confirmed');\n    }\n    if (!isHost) {\n      removeList.push('collective.apply', 'collective.approved', 'collective.created');\n    }\n\n    return difference(WebhookEventsList, removeList);\n  });\n\n  editWebhook = (index, fieldname, value) => {\n    const { webhooks, status } = this.state;\n    let newStatus = status;\n\n    if (fieldname === 'webhookUrl') {\n      const cleanValue = this.cleanWebhookUrl(value);\n      webhooks[index][fieldname] = cleanValue;\n      const isValid = webhooks.every(webhook => this.validateWebhookUrl(webhook.webhookUrl));\n      newStatus = isValid ? null : 'invalid';\n    } else {\n      webhooks[index][fieldname] = value;\n    }\n    this.setState({ webhooks, modified: true, status: newStatus });\n  };\n\n  addWebhook = () => {\n    const { webhooks } = this.state;\n    webhooks.push({ webhookUrl: '', type: 'all' });\n    this.setState({ webhooks, modified: true, status: 'invalid' });\n  };\n\n  removeWebhook = index => {\n    const { webhooks } = this.state;\n    if (index < 0 || index > webhooks.length) {\n      return;\n    }\n    webhooks.splice(index, 1);\n    this.setState({ webhooks, modified: true });\n  };\n\n  handleSubmit = async () => {\n    this.setState({ status: 'loading' });\n    const { webhooks } = this.state;\n    const notifications = webhooks.map(webhook => pick(webhook, ['type', 'webhookUrl', 'id']));\n\n    try {\n      const result = await this.props.editWebhooks({ collectiveId: this.props.data.Collective.id, notifications });\n      this.setState({ modified: false, status: 'saved', webhooks: cloneDeep(result.data.editWebhooks) });\n      setTimeout(() => {\n        this.setState({ status: null });\n      }, 3000);\n    } catch (e) {\n      const message = getErrorFromGraphqlException(e).message;\n      this.setState({ status: 'error', error: message });\n    }\n  };\n\n  renderWebhook = (webhook, index) => {\n    const { intl, data } = this.props;\n\n    return (\n      <Flex\n        py={4}\n        key={index}\n        width={[0.9, 1]}\n        mx={['auto', 0]}\n        px={[0, 3, 0]}\n        flexWrap=\"wrap\"\n        flexDirection=\"row-reverse\"\n        justifyContent=\"space-between\"\n      >\n        <Box my={[0, 3]}>\n          <StyledButton\n            width={1}\n            py={1}\n            px={3}\n            buttonSize=\"small\"\n            buttonStyle=\"standard\"\n            onClick={() => this.removeWebhook(index)}\n          >\n            <Close size=\"1.2em\" />\n            {'  '}\n            <FormattedMessage id=\"webhooks.remove\" defaultMessage=\"Remove webhook\" />\n          </StyledButton>\n        </Box>\n\n        <Box width={[1, 0.75]}>\n          <Box mb={4}>\n            <Label fontSize=\"14px\" mb={1}>\n              <FormattedMessage id=\"webhooks.url.label\" defaultMessage=\"URL\" />\n            </Label>\n            <StyledInputGroup\n              type=\"type\"\n              name=\"webhookUrl\"\n              prepend=\"https://\"\n              error={!this.validateWebhookUrl(webhook.webhookUrl)}\n              value={this.cleanWebhookUrl(webhook.webhookUrl)}\n              onChange={({ target }) => this.editWebhook(index, 'webhookUrl', target.value)}\n            />\n          </Box>\n          <Box>\n            <Label fontSize=\"14px\" mb={1}>\n              <FormattedMessage defaultMessage=\"Activity\" />\n            </Label>\n            <Flex alignItems=\"center\">\n              <StyledSelect\n                minWidth={300}\n                isSearchable={false}\n                inputId=\"event-type-select\"\n                options={this.getEventTypes(data.Collective.type, data.Collective.isHost).map(eventType => ({\n                  label: i18nWebhookEventType(intl, eventType),\n                  value: eventType,\n                }))}\n                value={{ label: i18nWebhookEventType(intl, webhook.type), value: webhook.type }}\n                onChange={({ value }) => this.editWebhook(index, 'type', value)}\n              />\n              {hasWebhookEventInfo(webhook.type) && (\n                <StyledButton\n                  buttonSize=\"tiny\"\n                  isBorderless\n                  title={intl.formatMessage({ id: 'moreInfo', defaultMessage: 'More info' })}\n                  onClick={() => this.setState({ moreInfoModal: webhook.type })}\n                  ml={2}\n                >\n                  <InfoCircle size={24} color=\"#a3a3a3\" />\n                </StyledButton>\n              )}\n            </Flex>\n          </Box>\n          {this.state.moreInfoModal && (\n            <WebhookActivityInfoModal\n              activity={this.state.moreInfoModal}\n              onClose={() => this.setState({ moreInfoModal: null })}\n            />\n          )}\n        </Box>\n      </Flex>\n    );\n  };\n\n  render() {\n    const { webhooks, status, error } = this.state;\n    const { data } = this.props;\n    const webhooksCount = webhooks.length;\n\n    if (data.loading) {\n      return <Loading />;\n    }\n\n    return (\n      <div>\n        <P fontSize=\"14px\" lineHeight=\"18px\">\n          <FormattedMessage\n            defaultMessage=\"You can use Webhooks to build custom integrations with Open Collective. Slack and Discord webhooks are natively supported. You can also integrate them with tools like Zapier, IFTTT, or Huginn. Learn more about this from <DocLink>the documentation</DocLink> or see how you can go further using our <GraphqlAPILink>public GraphQL API</GraphqlAPILink>.\"\n            values={{\n              GraphqlAPILink: getI18nLink({\n                href: 'https://docs.opencollective.com/help/contributing/development/api#graphql-api',\n                openInNewTab: true,\n              }),\n              DocLink: getI18nLink({\n                href: 'https://docs.opencollective.com/help/collectives/collective-settings/integrations#webhooks-generic-slack-discord',\n                openInNewTab: true,\n              }),\n            }}\n          />\n        </P>\n\n        <div>{webhooks.map(this.renderWebhook)}</div>\n\n        {webhooksCount > 0 && <StyledHr borderColor=\"black.300\" />}\n\n        <Box width={[0.9, 0.75]} mx={['auto', 0]} my={3}>\n          <StyledButton\n            width={1}\n            px={[0, 3, 0]}\n            borderRadius={6}\n            buttonSize=\"medium\"\n            buttonStyle=\"standard\"\n            css={'border-style: dashed'}\n            onClick={() => this.addWebhook()}\n          >\n            <Add size=\"1.2em\" />\n            {'  '}\n            <FormattedMessage\n              defaultMessage=\"Add {existingWebhooksCount, select, 0 {your first} other {another}} webhook\"\n              values={{ existingWebhooksCount: webhooksCount }}\n            />\n          </StyledButton>\n        </Box>\n\n        {status === 'error' && (\n          <Box my={3}>\n            <MessageBox type=\"error\">{error}</MessageBox>\n          </Box>\n        )}\n\n        <Box mr={3}>\n          <StyledButton\n            px={4}\n            buttonSize=\"medium\"\n            buttonStyle=\"primary\"\n            onClick={this.handleSubmit}\n            loading={status === 'loading'}\n            disabled={data.loading || !this.state.modified || status === 'invalid'}\n          >\n            {status === 'saved' ? (\n              <Span textTransform=\"capitalize\">\n                <FormattedMessage id=\"saved\" defaultMessage=\"Saved\" />\n              </Span>\n            ) : (\n              <FormattedMessage\n                id=\"webhooks.save\"\n                defaultMessage=\"Save {count} webhooks\"\n                values={{ count: webhooksCount }}\n              />\n            )}\n          </StyledButton>\n        </Box>\n      </div>\n    );\n  }\n}\n\nconst editCollectiveWebhooksQuery = gqlV1/* GraphQL */ `\n  query EditCollectiveWebhooks($collectiveSlug: String) {\n    Collective(slug: $collectiveSlug) {\n      id\n      type\n      slug\n      isHost\n      notifications(channel: \"webhook\") {\n        id\n        type\n        active\n        webhookUrl\n      }\n    }\n  }\n`;\n\nconst editCollectiveWebhooksMutation = gqlV1/* GraphQL */ `\n  mutation EditCollectiveWebhooks($collectiveId: Int!, $notifications: [NotificationInputType]) {\n    editWebhooks(collectiveId: $collectiveId, notifications: $notifications) {\n      id\n      type\n      active\n      webhookUrl\n    }\n  }\n`;\n\nconst addEditCollectiveWebhooksData = graphql(editCollectiveWebhooksQuery);\n\nconst editEditCollectiveWebhooksMutation = graphql(editCollectiveWebhooksMutation, {\n  props: ({ mutate, ownProps }) => ({\n    editWebhooks: variables =>\n      mutate({\n        variables,\n        update: (cache, { data: { editWebhooks } }) => {\n          const { Collective } = cache.readQuery({\n            query: editCollectiveWebhooksQuery,\n            variables: { collectiveSlug: ownProps.collectiveSlug },\n          });\n          cache.writeQuery({\n            query: editCollectiveWebhooksQuery,\n            data: { Collective: { ...Collective, notifications: editWebhooks } },\n          });\n        },\n      }),\n  }),\n});\n\nconst addGraphql = compose(addEditCollectiveWebhooksData, editEditCollectiveWebhooksMutation);\n\nexport default injectIntl(addGraphql(Webhooks));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { isNil } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport { isEmail } from 'validator';\n\nimport { gqlV1 } from '../../lib/graphql/helpers';\n\nimport { Box, Flex } from '../Grid';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\nimport StyledInput from '../StyledInput';\nimport { Span } from '../Text';\n\nimport SettingsSectionTitle from './sections/SettingsSectionTitle';\n\nclass EditUserEmailForm extends React.Component {\n  static propTypes = {\n    // From withData: A function to call to update user\n    updateUserEmail: PropTypes.func.isRequired,\n\n    // from withUser\n    data: PropTypes.shape({\n      loading: PropTypes.bool,\n      LoggedInUser: PropTypes.shape({\n        email: PropTypes.string.isRequired,\n        emailWaitingForValidation: PropTypes.string,\n      }),\n      updateUserEmail: PropTypes.shape({\n        emailWaitingForValidation: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    step: 'initial',\n    newEmail: null,\n    error: null,\n    isSubmitting: false,\n    isResendingConfirmation: false,\n    isTouched: false,\n  };\n\n  componentDidMount() {\n    this.loadInitialState();\n  }\n\n  componentDidUpdate(oldProps) {\n    if (oldProps.data.LoggedInUser !== this.props.data.LoggedInUser) {\n      this.loadInitialState();\n    }\n  }\n\n  loadInitialState() {\n    const { LoggedInUser } = this.props.data;\n    if (!LoggedInUser) {\n      return;\n    }\n\n    this.setState({\n      step: LoggedInUser.emailWaitingForValidation ? 'success' : 'initial',\n      newEmail: LoggedInUser.emailWaitingForValidation,\n    });\n  }\n\n  render() {\n    const { data, updateUserEmail } = this.props;\n    const { loading, LoggedInUser = { email: '' } } = data;\n    const { step, newEmail, error, isSubmitting, isResendingConfirmation, isTouched } = this.state;\n    const isValid = newEmail && isEmail(newEmail);\n    const isDone = step === 'already-sent' || step === 'success';\n\n    return (\n      <Box mb={50} data-cy=\"EditUserEmailForm\">\n        <SettingsSectionTitle>\n          <FormattedMessage id=\"User.EmailAddress\" defaultMessage=\"Email address\" />\n        </SettingsSectionTitle>\n        {LoggedInUser ? (\n          <Flex flexWrap=\"wrap\">\n            <StyledInput\n              name=\"email\"\n              type=\"email\"\n              value={isNil(newEmail) ? LoggedInUser.email : newEmail}\n              mr={3}\n              my={2}\n              disabled={!data.LoggedInUser || loading}\n              onChange={e => {\n                this.setState({ step: 'form', error: null, newEmail: e.target.value, isTouched: true });\n              }}\n              onBlur={() => {\n                if (newEmail && !isValid) {\n                  this.setState({\n                    error: <FormattedMessage id=\"error.email.invalid\" defaultMessage=\"Invalid email address\" />,\n                  });\n                }\n              }}\n            />\n            <Flex my={2}>\n              <StyledButton\n                minWidth={180}\n                disabled={!isTouched || !newEmail || !isValid || isDone}\n                loading={isSubmitting}\n                mr={2}\n                onClick={async () => {\n                  this.setState({ isSubmitting: true });\n                  try {\n                    const { data } = await updateUserEmail({ variables: { email: newEmail } });\n                    this.setState({\n                      step: LoggedInUser.email === newEmail ? 'initial' : 'success',\n                      error: null,\n                      newEmail: data.updateUserEmail.emailWaitingForValidation || LoggedInUser.email,\n                      isSubmitting: false,\n                      isTouched: false,\n                    });\n                  } catch (e) {\n                    this.setState({ error: e.message, isSubmitting: false });\n                  }\n                }}\n              >\n                <FormattedMessage id=\"EditUserEmailForm.submit\" defaultMessage=\"Confirm new email\" />\n              </StyledButton>\n\n              {isDone && (\n                <StyledButton\n                  minWidth={180}\n                  disabled={step === 'already-sent'}\n                  loading={isResendingConfirmation}\n                  onClick={async () => {\n                    this.setState({ isResendingConfirmation: true });\n                    try {\n                      await updateUserEmail({ variables: { email: newEmail } });\n                      this.setState({ isResendingConfirmation: false, step: 'already-sent', error: null });\n                    } catch (e) {\n                      this.setState({ error: e.message, isResendingConfirmation: false });\n                    }\n                  }}\n                >\n                  <FormattedMessage id=\"EditUserEmailForm.reSend\" defaultMessage=\"Re-send confirmation\" />\n                </StyledButton>\n              )}\n            </Flex>\n          </Flex>\n        ) : (\n          <LoadingPlaceholder height={63} />\n        )}\n        {error && (\n          <Span p={2} color=\"red.500\" fontSize=\"12px\">\n            {error}\n          </Span>\n        )}\n        {isDone && (\n          <Box>\n            <MessageBox display=\"inline-block\" type=\"success\" fontSize=\"12px\" withIcon mt={2}>\n              <FormattedMessage\n                id=\"EditUserEmailForm.success\"\n                defaultMessage=\"An email with a confirmation link has been sent to {email}. Please click the link to validate your email address.\"\n                values={{ email: <strong>{newEmail}</strong> }}\n              />\n            </MessageBox>\n          </Box>\n        )}\n      </Box>\n    );\n  }\n}\n\nconst loggedInUserEmailQuery = gqlV1/* GraphQL */ `\n  query LoggedInUserEmail {\n    LoggedInUser {\n      id\n      email\n      emailWaitingForValidation\n    }\n  }\n`;\n\nconst addLoggedInUserEmailData = graphql(loggedInUserEmailQuery, {\n  options: {\n    fetchPolicy: 'network-only',\n  },\n});\n\nconst updateUserEmailMutation = gqlV1/* GraphQL */ `\n  mutation UpdateUserEmail($email: String!) {\n    updateUserEmail(email: $email) {\n      id\n      email\n      emailWaitingForValidation\n    }\n  }\n`;\n\nconst addUpdateUserEmailMutation = graphql(updateUserEmailMutation, {\n  name: 'updateUserEmail',\n});\n\nexport default addUpdateUserEmailMutation(addLoggedInUserEmailData(EditUserEmailForm));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getApplicableTaxesForCountry, TaxType } from '@opencollective/taxes';\nimport { InfoCircle } from '@styled-icons/boxicons-regular/InfoCircle';\nimport { ArrowBack } from '@styled-icons/material/ArrowBack';\nimport dayjs from 'dayjs';\nimport { cloneDeep, find, get, set } from 'lodash';\nimport { withRouter } from 'next/router';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport { AccountTypesWithHost, CollectiveType, defaultBackgroundImage } from '../../lib/constants/collectives';\nimport { Currency } from '../../lib/constants/currency';\nimport { ORDER_STATUS } from '../../lib/constants/order-status';\nimport { TierTypes } from '../../lib/constants/tiers-types';\nimport { VAT_OPTIONS } from '../../lib/constants/vat';\nimport { convertDateFromApiUtc, convertDateToApiUtc } from '../../lib/date-utils';\nimport { isValidUrl } from '../../lib/utils';\n\nimport { ALL_SECTIONS } from '../admin-panel/constants';\nimport ActivityLog from '../admin-panel/sections/ActivityLog';\nimport AuthorizedApps from '../admin-panel/sections/AuthorizedApps';\nimport ForDevelopers from '../admin-panel/sections/ForDevelopers';\nimport Container from '../Container';\nimport CreateGiftCardsForm from '../CreateGiftCardsForm';\nimport { Box, Flex } from '../Grid';\nimport { I18nSupportLink } from '../I18nFormatters';\nimport InputField from '../InputField';\nimport Link from '../Link';\nimport OrdersWithData from '../orders/OrdersWithData';\nimport StyledButton from '../StyledButton';\nimport StyledLink from '../StyledLink';\n\n// Actions\nimport Archive from './actions/Archive';\nimport Delete from './actions/Delete';\nimport EmptyBalance from './actions/EmptyBalance';\n// Sections\nimport CollectiveGoals from './sections/CollectiveGoals';\nimport ConnectedAccounts from './sections/ConnectedAccounts';\nimport CustomMessage from './sections/CustomMessage';\nimport EditCollectivePage from './sections/EditCollectivePage';\nimport Export from './sections/Export';\nimport FiscalHosting from './sections/FiscalHosting';\nimport GiftCards from './sections/GiftCards';\nimport Host from './sections/Host';\nimport HostVirtualCardsSettings from './sections/HostVirtualCardsSettings';\nimport PaymentMethods from './sections/PaymentMethods';\nimport PaymentReceipts from './sections/PaymentReceipts';\nimport Policies from './sections/Policies';\nimport ReceivingMoney from './sections/ReceivingMoney';\nimport Security from './sections/Security';\nimport SendingMoney from './sections/SendingMoney';\nimport Tickets from './sections/Tickets';\nimport Tiers from './sections/Tiers';\nimport UserSecurity from './sections/UserSecurity';\nimport VirtualCards from './sections/virtual-cards/VirtualCards';\nimport Webhooks from './sections/Webhooks';\n// Other Components\nimport EditUserEmailForm from './EditUserEmailForm';\nimport SocialLinksFormField from './SocialLinksFormField';\n\nconst { COLLECTIVE, FUND, PROJECT, EVENT, ORGANIZATION, USER } = CollectiveType;\n\nclass EditCollectiveForm extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object,\n    host: PropTypes.object,\n    status: PropTypes.string, // loading, saved\n    section: PropTypes.string,\n    onSubmit: PropTypes.func,\n    LoggedInUser: PropTypes.object.isRequired,\n    router: PropTypes.object, // from withRouter\n    intl: PropTypes.object.isRequired, // from injectIntl\n    query: PropTypes.object, // passed from Page/Router through index/EditCollective\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { ...this.getStateFromProps(props) };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    const { collective } = this.state;\n\n    this.messages = defineMessages({\n      loading: { id: 'loading', defaultMessage: 'loading' },\n      save: { id: 'save', defaultMessage: 'Save' },\n      saved: { id: 'saved', defaultMessage: 'Saved' },\n      'event.create.btn': {\n        id: 'event.create.btn',\n        defaultMessage: 'Create Event',\n      },\n      'slug.label': {\n        id: 'collective.changeUrl.label',\n        defaultMessage: 'URL slug',\n      },\n      'type.label': { id: 'collective.type.label', defaultMessage: 'Type' },\n      'name.label': { id: 'Fields.displayName', defaultMessage: 'Display name' },\n      'name.description': {\n        id: 'Fields.name.description',\n        defaultMessage:\n          'Display names are public and used wherever this profile appears publicly, like contributions, comments on updates, public info on expenses, etc.',\n      },\n      legalName: { id: 'LegalName', defaultMessage: 'Legal Name' },\n      'legalName.description': {\n        id: 'editCollective.legalName.description',\n        defaultMessage:\n          'Legal names are private and used in receipts, tax forms, payment details on expenses, and other non-public contexts. Legal names are only visible to admins.',\n      },\n      optional: {\n        id: 'OptionalFieldLabel',\n        defaultMessage: '{field} (optional)',\n      },\n      examples: {\n        id: 'examples',\n        defaultMessage: 'e.g., {examples}',\n      },\n      'tags.label': { id: 'Tags', defaultMessage: 'Tags' },\n      'tos.label': {\n        id: 'host.tos',\n        defaultMessage: 'Terms of fiscal hosting',\n      },\n      'tos.description': {\n        id: 'collective.tos.description',\n        defaultMessage: 'Link to the terms under which this Host collects and holds funds.',\n      },\n      'tags.description': {\n        id: 'collective.tags.edit.description',\n        defaultMessage: 'Help people find you',\n      },\n      'tags.input.placeholder': {\n        id: 'collective.tags.input.placeholder',\n        defaultMessage: '+ Add tags',\n      },\n      'company.label': {\n        id: 'collective.company.label',\n        defaultMessage: 'company',\n      },\n      'company.description': {\n        id: 'collective.company.description',\n        defaultMessage: 'Start with @ to reference an organization (e.g., @airbnb)',\n      },\n      'amount.label': {\n        id: 'Fields.amount',\n        defaultMessage: 'Amount',\n      },\n      'description.label': {\n        id: 'collective.description.label',\n        defaultMessage: 'Short description',\n      },\n      'expensePolicy.label': {\n        id: 'editCollective.menu.expenses',\n        defaultMessage: 'Expenses Policy',\n      },\n      'expensePolicy.description': {\n        id: 'collective.expensePolicy.description',\n        defaultMessage:\n          \"It can be daunting to file an expense if you're not sure what's allowed. Provide a clear policy to guide expense submitters.\",\n      },\n      'expensePolicy.placeholder': {\n        id: 'collective.expensePolicy.placeholder',\n        defaultMessage: 'E.g. approval criteria, limitations, or required documentation.',\n      },\n      'startsAt.label': {\n        id: 'startDateAndTime',\n        defaultMessage: 'start date and time',\n      },\n      'endsAt.label': {\n        id: 'event.endsAt.label',\n        defaultMessage: 'end date and time',\n      },\n      'image.label': { id: 'collective.image.label', defaultMessage: 'Avatar' },\n      'backgroundImage.label': {\n        id: 'collective.backgroundImage.label',\n        defaultMessage: 'Cover image',\n      },\n      'website.label': {\n        id: 'Fields.website',\n        defaultMessage: 'Website',\n      },\n      'application.label': {\n        id: 'collective.application.label',\n        defaultMessage: 'Open to Applications',\n      },\n      'application.description': {\n        id: 'collective.application.description',\n        defaultMessage: 'Enable new Collectives to apply to join your Fiscal Host',\n      },\n      'application.message.label': {\n        id: 'application.message.label',\n        defaultMessage: 'Application instructions',\n      },\n      'application.message.description': {\n        id: 'application.message.description',\n        defaultMessage: 'These instructions appear above the text box that applicants see (1000 characters max)',\n      },\n      'application.message.defaultValue': {\n        id: 'ApplyToHost.DefaultMessage',\n        defaultMessage:\n          'Explain what information applicants should submit for your review (plain text, 3000 characters max), or direct them to an external application form.',\n      },\n      'hostFeePercent.label': {\n        id: 'HostFee',\n        defaultMessage: 'Host fee',\n      },\n      'hostFeePercent.description': {\n        id: 'collective.hostFeePercent.description',\n        defaultMessage: 'Fee on financial contributions to Collectives you fiscally host.',\n      },\n      'hostFeePercent.warning': {\n        id: 'collective.hostFeePercent.warning',\n        defaultMessage: `Open Collective will charge 15% of your Host Fee revenue as its Platform Fee.`,\n      },\n      'hostFeePercent.warning2': {\n        id: 'newPricing.tab.hostFeeChargeExample',\n        defaultMessage: `If your Host fee is 10% and your Collectives bring in $1,000, your Platform fee will be $15. If you host fee is 0%, your Platform fee will be 0.`,\n      },\n      'location.label': {\n        id: 'SectionLocation.Title',\n        defaultMessage: 'Location',\n      },\n      'country.label': {\n        id: 'collective.country.label',\n        defaultMessage: 'Country',\n      },\n      'currency.label': {\n        id: 'Currency',\n        defaultMessage: 'Currency',\n      },\n      'currency.placeholder': {\n        id: 'collective.currency.placeholder',\n        defaultMessage: 'Select currency',\n      },\n      'address.label': {\n        id: 'collective.address.label',\n        defaultMessage: 'Address',\n      },\n      'VAT.label': {\n        id: 'EditCollective.VAT',\n        defaultMessage: 'VAT settings',\n      },\n      'VAT.description': {\n        id: 'EditCollective.VAT.Description',\n        defaultMessage: 'European Value Added Tax',\n      },\n      'VAT.None': {\n        id: 'EditCollective.VAT.None',\n        defaultMessage: 'Not subject to VAT',\n      },\n      'VAT.Host': {\n        id: 'EditCollective.VAT.Host',\n        defaultMessage: 'Use the host VAT settings',\n      },\n      'VAT.Own': {\n        id: 'EditCollective.VAT.Own',\n        defaultMessage: 'Use my own VAT number',\n      },\n      'VAT-number.label': {\n        id: 'EditCollective.VATNumber',\n        defaultMessage: 'VAT number',\n      },\n      'VAT-number.description': {\n        id: 'EditCollective.VATNumber.Description',\n        defaultMessage: 'Your European Value Added Tax (VAT) number',\n      },\n      'GST-number.label': {\n        id: 'EditCollective.GSTNumber',\n        defaultMessage: 'GST number',\n      },\n      'privateInstructions.label': {\n        id: 'event.privateInstructions.label',\n        defaultMessage: 'Private instructions',\n      },\n      privateInstructionsDescription: {\n        id: 'event.privateInstructions.description',\n        defaultMessage: 'These instructions will be provided by email to the participants.',\n      },\n      inValidDateError: { defaultMessage: 'Please enter a valid date' },\n    });\n\n    collective.backgroundImage = collective.backgroundImage || defaultBackgroundImage[collective.type];\n  }\n\n  getStateFromProps(props) {\n    const collective = { ...(props.collective || {}) };\n\n    collective.slug = collective.slug ? collective.slug.replace(/.*\\//, '') : '';\n    collective.tos = get(collective, 'settings.tos');\n\n    // TODO Remove this once tier legacy is removed\n    const tiers = collective.tiers && collective.tiers.filter(tier => tier.type !== TierTypes.TICKET);\n    const tickets = collective.tiers && collective.tiers.filter(tier => tier.type === TierTypes.TICKET);\n\n    return {\n      modified: false,\n      collective,\n      tiers: tiers.length === 0 ? [] : tiers,\n      tickets: tickets.length === 0 ? [] : tickets,\n      validStartDate: true,\n      validEndDate: true,\n      isValidSocialLinks: true,\n    };\n  }\n\n  handleChange(fieldname, value) {\n    this.setState(state => {\n      const collective = cloneDeep(state.collective);\n\n      // GraphQL schema has address embedded within location\n      // mutation expects { location: { address: '' } }\n      if (['address', 'country'].includes(fieldname)) {\n        collective.location[fieldname] = value;\n      } else if (fieldname === 'VAT') {\n        set(collective, 'settings.VAT.type', value);\n      } else if (fieldname === 'VAT-number') {\n        set(collective, 'settings.VAT.number', value);\n      } else if (fieldname === 'GST-number') {\n        if (!value) {\n          set(collective, 'settings.GST', null);\n        } else {\n          set(collective, 'settings.GST.number', value);\n        }\n      } else if (fieldname === 'application') {\n        set(collective, 'settings.apply', value);\n      } else if (fieldname === 'application.message') {\n        set(collective, 'settings.applyMessage', value);\n      } else if (fieldname === 'startsAt' && collective.type === EVENT) {\n        const isValid = dayjs(value).isValid();\n        this.setState({ validStartDate: isValid });\n        if (isValid) {\n          collective[fieldname] = convertDateToApiUtc(value, collective.timezone);\n        }\n      } else if (fieldname === 'endsAt' && collective.type === EVENT) {\n        const isValid = dayjs(value).isValid();\n        this.setState({ validEndDate: isValid });\n        if (isValid) {\n          collective[fieldname] = convertDateToApiUtc(value, collective.timezone);\n        }\n      } else if (fieldname === 'timezone' && collective.type === EVENT) {\n        if (value) {\n          const timezone = collective.timezone;\n          const startsAt = collective.startsAt;\n          const endsAt = collective.endsAt;\n          collective.startsAt = convertDateToApiUtc(convertDateFromApiUtc(startsAt, timezone), value);\n          collective.endsAt = convertDateToApiUtc(convertDateFromApiUtc(endsAt, timezone), value);\n          collective.timezone = value;\n        }\n      } else if (fieldname === 'socialLinks') {\n        const isValid = value?.filter(l => !isValidUrl(l.url))?.length === 0;\n\n        this.setState({ isValidSocialLinks: isValid });\n        set(collective, 'socialLinks', value);\n      } else {\n        set(collective, fieldname, value);\n      }\n\n      return { collective, modified: true };\n    });\n  }\n\n  async handleSubmit() {\n    const collective = { ...this.state.collective };\n\n    // Add Tiers and Tickets\n    collective.tiers = [];\n    if (find(this.state.tiers, 'name')) {\n      collective.tiers = [...this.state.tiers];\n    }\n    if (find(this.state.tickets, 'name')) {\n      collective.tiers = [...collective.tiers, ...this.state.tickets];\n    }\n\n    this.props.onSubmit(collective);\n\n    this.setState({ modified: false });\n  }\n\n  getFieldDefaultValue(field) {\n    if (field.defaultValue !== undefined) {\n      return field.defaultValue;\n    } else if (['address', 'country'].includes(field.name)) {\n      return get(this.state.collective.location, field.name);\n    }\n\n    return this.state.collective[field.name];\n  }\n\n  getMenuSelectedSection(section) {\n    if (['gift-cards-create', 'gift-cards-send', 'gift-cards'].includes(section)) {\n      return ALL_SECTIONS.GIFT_CARDS;\n    } else {\n      return section;\n    }\n  }\n\n  renderSection(section) {\n    const { collective, LoggedInUser } = this.props;\n\n    switch (section) {\n      case ALL_SECTIONS.INFO:\n        return null;\n\n      case ALL_SECTIONS.COLLECTIVE_GOALS:\n        return <CollectiveGoals collective={collective} currency={collective.currency} />;\n\n      case ALL_SECTIONS.COLLECTIVE_PAGE:\n        return <EditCollectivePage collective={collective} />;\n\n      case ALL_SECTIONS.CONNECTED_ACCOUNTS:\n        return <ConnectedAccounts collective={collective} connectedAccounts={collective.connectedAccounts} />;\n\n      case ALL_SECTIONS.EXPENSES:\n        return null;\n\n      case ALL_SECTIONS.EXPORT:\n        return <Export collective={collective} />;\n\n      case ALL_SECTIONS.HOST:\n        return (\n          <Host collective={collective} LoggedInUser={LoggedInUser} editCollectiveMutation={this.props.onSubmit} />\n        );\n\n      case ALL_SECTIONS.PAYMENT_METHODS:\n        return <PaymentMethods collectiveSlug={collective.slug} />;\n\n      case ALL_SECTIONS.TIERS:\n        return <Tiers collective={collective} types={['TIER', 'MEMBERSHIP', 'SERVICE', 'PRODUCT', 'DONATION']} />;\n\n      case ALL_SECTIONS.TICKETS:\n        return <Tickets collective={collective} />;\n\n      case ALL_SECTIONS.GIFT_CARDS:\n        return <GiftCards collectiveId={collective.id} collectiveSlug={collective.slug} />;\n\n      case 'gift-cards-create':\n      case 'gift-cards-send':\n        return (\n          <Flex mt={3} flexDirection=\"column\">\n            <Container\n              mb={4}\n              pb={4}\n              borderBottom=\"1px solid #E8E9EB\"\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              alignItems=\"center\"\n              flexWrap=\"wrap\"\n            >\n              <Link href={`/${collective.slug}/admin/gift-cards`}>\n                <StyledButton data-cy=\"back-to-giftcards-list\">\n                  <ArrowBack size=\"1em\" />{' '}\n                  <FormattedMessage id=\"giftCards.returnToEdit\" defaultMessage=\"Back to Gift Cards list\" />\n                </StyledButton>\n              </Link>\n\n              <StyledLink\n                href=\"https://docs.opencollective.com/help/financial-contributors/organizations/gift-cards#faq\"\n                openInNewTab\n              >\n                <InfoCircle size=\"1em\" />\n                &nbsp;\n                <FormattedMessage id=\"Giftcard.learnMore\" defaultMessage=\"Learn more about Gift Cards\" />\n              </StyledLink>\n            </Container>\n            <CreateGiftCardsForm\n              collectiveId={collective.id}\n              collectiveSlug={collective.slug}\n              collectiveSettings={collective.settings}\n              currency={collective.currency}\n            />\n          </Flex>\n        );\n\n      case ALL_SECTIONS.WEBHOOKS:\n        return <Webhooks collectiveSlug={collective.slug} />;\n\n      case ALL_SECTIONS.AUTHORIZED_APPS:\n        return <AuthorizedApps />;\n\n      case ALL_SECTIONS.FOR_DEVELOPERS:\n        return <ForDevelopers account={collective} />;\n\n      case ALL_SECTIONS.ACTIVITY_LOG:\n        return <ActivityLog accountSlug={collective.slug} />;\n\n      case ALL_SECTIONS.ADVANCED:\n        return (\n          <Box>\n            {collective.type === USER && <EditUserEmailForm />}\n            {[COLLECTIVE, FUND, PROJECT, EVENT].includes(collective.type) && (\n              <EmptyBalance collective={collective} LoggedInUser={LoggedInUser} />\n            )}\n            <Archive collective={collective} />\n            <Delete collective={collective} />\n          </Box>\n        );\n\n      // Fiscal Hosts\n\n      case ALL_SECTIONS.FISCAL_HOSTING:\n        return <FiscalHosting collective={collective} LoggedInUser={LoggedInUser} />;\n\n      case ALL_SECTIONS.RECEIVING_MONEY:\n        return <ReceivingMoney collective={collective} />;\n\n      case ALL_SECTIONS.PENDING_ORDERS:\n        return (\n          <OrdersWithData\n            accountSlug={collective.slug}\n            status={ORDER_STATUS.PENDING}\n            title={<FormattedMessage id=\"PendingBankTransfers\" defaultMessage=\"Pending bank transfers\" />}\n            showPlatformTip\n          />\n        );\n\n      case ALL_SECTIONS.SENDING_MONEY:\n        return <SendingMoney collective={collective} />;\n\n      case ALL_SECTIONS.SECURITY:\n        return <Security collective={collective} />;\n\n      // 2FA\n      case ALL_SECTIONS.USER_SECURITY:\n        return <UserSecurity slug={collective.slug} />;\n\n      // Payment Receipts\n      case ALL_SECTIONS.PAYMENT_RECEIPTS:\n        return <PaymentReceipts collective={collective} />;\n\n      // Policies and moderation\n      case ALL_SECTIONS.POLICIES:\n        return <Policies collective={collective} />;\n\n      // Policies and moderation\n      case ALL_SECTIONS.CUSTOM_EMAIL:\n        return <CustomMessage collective={collective} />;\n\n      case ALL_SECTIONS.HOST_VIRTUAL_CARDS_SETTINGS:\n        return <HostVirtualCardsSettings collective={collective} />;\n\n      case ALL_SECTIONS.VIRTUAL_CARDS:\n        return <VirtualCards collective={collective} />;\n\n      default:\n        return null;\n    }\n  }\n\n  getApplicableTaxesFields = () => {\n    const { intl } = this.props;\n    const { collective } = this.state;\n    const fields = [];\n    const country = get(collective, 'location.country') || get(collective.host, 'location.country');\n    const taxes = getApplicableTaxesForCountry(country);\n\n    if (taxes.includes(TaxType.VAT)) {\n      const getVATOptions = () => {\n        const options = [\n          {\n            value: '',\n            label: intl.formatMessage(this.messages['VAT.None']),\n          },\n          {\n            value: VAT_OPTIONS.HOST,\n            label: intl.formatMessage(this.messages['VAT.Host']),\n          },\n        ];\n\n        return collective.isHost\n          ? options\n          : [\n              ...options,\n              {\n                value: VAT_OPTIONS.OWN,\n                label: intl.formatMessage(this.messages['VAT.Own']),\n              },\n            ];\n      };\n\n      fields.push(\n        {\n          name: 'VAT',\n          type: 'select',\n          defaultValue: get(collective, 'settings.VAT.type') || VAT_OPTIONS.HOST,\n          when: () => {\n            return collective.isHost || AccountTypesWithHost.includes(collective.type);\n          },\n          options: getVATOptions(),\n        },\n        {\n          name: 'VAT-number',\n          type: 'string',\n          placeholder: 'FRXX999999999',\n          defaultValue: get(collective, 'settings.VAT.number'),\n          when: () => {\n            const { collective } = this.state;\n            if (collective.type === COLLECTIVE || collective.type === EVENT) {\n              // Collectives can set a VAT number if configured\n              return get(collective, 'settings.VAT.type') === VAT_OPTIONS.OWN;\n            } else {\n              return true;\n            }\n          },\n        },\n      );\n    } else if (taxes.includes(TaxType.GST) && collective.isHost) {\n      fields.push({\n        name: 'GST-number',\n        type: 'string',\n        placeholder: '9429037631147',\n        defaultValue: get(collective, 'settings.GST.number'),\n      });\n    }\n\n    return fields;\n  };\n\n  render() {\n    const { collective, status, intl, router } = this.props;\n\n    const section = this.props.section || get(router, 'query.section', 'info');\n\n    const isNew = !(collective && collective.id);\n    let submitBtnMessageId = isNew ? 'event.create.btn' : 'save';\n    if (['loading', 'saved'].includes(status)) {\n      submitBtnMessageId = status;\n    }\n\n    const isEvent = collective.type === EVENT;\n    const isUser = collective.type === USER;\n    const currencyOptions = Currency.map(c => ({ value: c, label: c }));\n    const submitBtnLabel = this.messages[submitBtnMessageId] && intl.formatMessage(this.messages[submitBtnMessageId]);\n\n    this.fields = {\n      info: [\n        {\n          name: 'name',\n          placeholder: '',\n          maxLength: 255,\n        },\n        {\n          name: 'legalName',\n          label: intl.formatMessage(this.messages.optional, {\n            field: intl.formatMessage(this.messages.legalName),\n          }),\n          placeholder: intl.formatMessage(this.messages.examples, {\n            examples: isUser ? 'Maria Garcia' : 'Salesforce, Inc., Airbnb, Inc.',\n          }),\n          maxLength: 255,\n          when: () => isUser || collective.type === ORGANIZATION || collective.isHost,\n          isPrivate: true,\n        },\n        {\n          name: 'company',\n          placeholder: '',\n          maxLength: 255,\n          when: () => isUser,\n        },\n        {\n          name: 'description',\n          type: 'text',\n          maxLength: 255,\n          placeholder: '',\n        },\n        {\n          name: 'slug',\n          pre: 'https://opencollective.com/',\n          placeholder: '',\n          when: () => collective.type !== EVENT,\n        },\n        {\n          name: 'address',\n          placeholder: '',\n          maxLength: 255,\n          type: 'textarea',\n          when: () => collective.type !== EVENT,\n          // TODO: Use structured here to be consistent with other places\n        },\n        {\n          name: 'country',\n          type: 'country',\n          placeholder: 'Select country',\n          when: () => collective.type !== EVENT,\n        },\n        {\n          name: 'startsAt',\n          type: 'datetime-local',\n          defaultValue: dayjs(collective.startsAt).tz(collective.timezone).format('YYYY-MM-DDTHH:mm'),\n          when: () => collective.type === EVENT,\n          error: !this.state.validStartDate ? intl.formatMessage(this.messages.inValidDateError) : null,\n          required: true,\n        },\n        {\n          name: 'endsAt',\n          type: 'datetime-local',\n          defaultValue: dayjs(collective.endsAt).tz(collective.timezone).format('YYYY-MM-DDTHH:mm'),\n          when: () => collective.type === EVENT,\n          error: !this.state.validEndDate ? intl.formatMessage(this.messages.inValidDateError) : null,\n          required: true,\n        },\n        {\n          name: 'timezone',\n          type: 'TimezonePicker',\n          when: () => collective.type === EVENT,\n        },\n        {\n          name: 'location',\n          placeholder: '',\n          type: 'location',\n          when: () => collective.type === EVENT,\n        },\n        {\n          name: 'privateInstructions',\n          description: intl.formatMessage(this.messages.privateInstructionsDescription),\n          type: 'textarea',\n          maxLength: 10000,\n          when: () => collective.type === EVENT,\n        },\n        {\n          name: 'currency',\n          type: 'select',\n          defaultValue: get(this.state.collective, 'currency'),\n          options: currencyOptions,\n          description:\n            ([COLLECTIVE, FUND].includes(collective.type) && collective.isActive) || collective.isHost\n              ? intl.formatMessage(\n                  {\n                    id: 'collective.currency.warning',\n                    defaultMessage: `Active Collectives, Funds and Fiscal Hosts can't edit their currency. Contact <SupportLink>support</SupportLink> if this is an issue.`,\n                  },\n                  { SupportLink: I18nSupportLink },\n                )\n              : null,\n          when: () => ![EVENT, PROJECT].includes(collective.type),\n          // Active Collectives, Funds and Fiscal Hosts can't edit their currency.\n          disabled:\n            ([COLLECTIVE, FUND].includes(collective.type) && collective.isActive) || collective.isHost ? true : false,\n        },\n        ...this.getApplicableTaxesFields(),\n        {\n          name: 'tags',\n          maxLength: 128,\n          type: 'collective-tags',\n          placeholder: intl.formatMessage(this.messages['tags.input.placeholder']),\n          when: () => ![EVENT, PROJECT, FUND].includes(collective.type),\n        },\n      ],\n      'fiscal-hosting': [\n        {\n          name: 'application',\n          className: 'horizontal',\n          type: 'switch',\n          defaultValue: get(this.state.collective, 'settings.apply'),\n          when: () => collective.isHost && (collective.type === ORGANIZATION || collective.settings.apply),\n        },\n        {\n          name: 'application.message',\n          className: 'horizontal',\n          type: 'textarea',\n          defaultValue: get(this.state.collective, 'settings.applyMessage'),\n          placeholder: intl.formatMessage(this.messages['application.message.defaultValue']),\n          disabled: !this.state.collective.settings?.apply,\n          maxLength: 1000,\n          when: () => collective.isHost && (collective.type === ORGANIZATION || collective.settings.apply),\n        },\n        {\n          name: 'hostFeePercent',\n          type: 'number',\n          className: 'horizontal',\n          step: '0.01',\n          post: '%',\n          defaultValue: get(this.state.collective, 'hostFeePercent'),\n          when: () => collective.isHost && (collective.type === ORGANIZATION || collective.hostFeePercent !== 0),\n        },\n        {\n          name: 'tos',\n          type: 'text',\n          placeholder: '',\n          className: 'horizontal',\n          defaultValue: get(this.state.collective, 'settings.tos'),\n          when: () => collective.isHost && (collective.type === ORGANIZATION || collective.settings.tos),\n        },\n      ],\n    };\n\n    Object.keys(this.fields).map(fieldname => {\n      this.fields[fieldname] = this.fields[fieldname].map(field => {\n        if (this.messages[`${field.name}.label`]) {\n          field.label = intl.formatMessage(this.messages[`${field.name}.label`]);\n        }\n        if (this.messages[`${field.name}.description`]) {\n          field.description = intl.formatMessage(this.messages[`${field.name}.description`], collective);\n        }\n        if (this.messages[`${field.name}.placeholder`]) {\n          field.placeholder = intl.formatMessage(this.messages[`${field.name}.placeholder`]);\n        }\n        if (field.name === 'hostFeePercent' && collective.plan.name.includes('2021')) {\n          field.description += ` `;\n          field.description += intl.formatMessage(this.messages[`${field.name}.warning`], collective);\n          field.description += ` `;\n          field.description += intl.formatMessage(this.messages[`${field.name}.warning2`], collective);\n        }\n\n        return field;\n      });\n    });\n\n    const fields = (this.fields[section] || []).filter(field => !field.when || field.when());\n    return (\n      <div>\n        <Flex flexWrap=\"wrap\">\n          <Flex flexDirection=\"column\" css={{ flexGrow: 10, flexBasis: 600 }}>\n            {fields && fields.length > 0 && (\n              <div className=\"FormInputs\">\n                <div className=\"inputs\">\n                  {fields.map(field => (\n                    <InputField\n                      key={field.name}\n                      className={field.className}\n                      defaultValue={this.getFieldDefaultValue(field)}\n                      validate={field.validate}\n                      ref={field.name}\n                      name={field.name}\n                      label={field.label}\n                      description={field.description}\n                      options={field.options}\n                      placeholder={field.placeholder}\n                      type={field.type}\n                      pre={field.pre}\n                      post={field.post}\n                      context={this.state.collective}\n                      error={field.error}\n                      onChange={value => this.handleChange(field.name, value)}\n                      onKeyDown={event => {\n                        if ((field.name === 'startsAt' || field.name === 'endsAt') && event.key === 'Backspace') {\n                          event.preventDefault();\n                        }\n                      }}\n                      disabled={field.disabled}\n                      maxLength={field.maxLength}\n                      isPrivate={field.isPrivate}\n                      step={field.step}\n                      min={field.min}\n                      overflow=\"hidden\"\n                      required={field.required}\n                    />\n                  ))}\n                  {section === 'info' && (\n                    <Box p={1}>\n                      <Box my=\"5px\" fontWeight={700}>\n                        <FormattedMessage defaultMessage=\"Social Links\" />\n                      </Box>\n                      <SocialLinksFormField\n                        value={this.state.collective?.socialLinks}\n                        touched={this.state.modified}\n                        onChange={value => this.handleChange('socialLinks', value)}\n                      />\n                    </Box>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {fields && fields.length > 0 && (\n              <Container className=\"actions\" margin=\"5rem auto 1rem\" textAlign=\"center\">\n                <StyledButton\n                  buttonStyle=\"primary\"\n                  type=\"submit\"\n                  onClick={this.handleSubmit}\n                  data-cy=\"collective-save\"\n                  disabled={\n                    status === 'loading' ||\n                    !this.state.modified ||\n                    !this.state.validStartDate ||\n                    !this.state.validEndDate ||\n                    !this.state.isValidSocialLinks\n                  }\n                >\n                  {submitBtnLabel}\n                </StyledButton>\n\n                <Container className=\"backToProfile\" fontSize=\"1.3rem\" margin=\"1rem\">\n                  <Link\n                    data-cy=\"edit-collective-back-to-profile\"\n                    href={\n                      isEvent ? `/${collective.parentCollective.slug}/events/${collective.slug}` : `/${collective.slug}`\n                    }\n                  >\n                    <FormattedMessage defaultMessage=\"View profile page\" />\n                  </Link>\n                </Container>\n              </Container>\n            )}\n\n            {this.renderSection(section)}\n          </Flex>\n        </Flex>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(injectIntl(EditCollectiveForm));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { isArray, omit, pick } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport { defaultBackgroundImage } from '../../../lib/constants/collectives';\nimport { getErrorFromGraphqlException } from '../../../lib/errors';\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\nimport { editCollectiveMutation } from '../../../lib/graphql/mutations';\nimport { editCollectivePageQuery } from '../../../lib/graphql/queries';\nimport useLoggedInUser from '../../../lib/hooks/useLoggedInUser';\n\nimport SettingsForm from '../../edit-collective/Form';\nimport Loading from '../../Loading';\nimport { TOAST_TYPE, useToasts } from '../../ToastProvider';\nimport { ALL_SECTIONS } from '../constants';\nimport { adminPanelQuery } from '../queries';\n\nconst AccountSettings = ({ account, section }) => {\n  const { LoggedInUser, refetchLoggedInUser } = useLoggedInUser();\n  const router = useRouter();\n  const [state, setState] = React.useState({ status: undefined, result: undefined });\n  const { addToast } = useToasts();\n\n  const { data, loading } = useQuery(editCollectivePageQuery, {\n    variables: { slug: account.slug },\n    fetchPolicy: 'network-only',\n    skip: !LoggedInUser,\n  });\n  const collective = data?.Collective;\n  const [editCollective] = useMutation(editCollectiveMutation);\n\n  const handleEditCollective = async updatedCollective => {\n    const collective = { ...updatedCollective };\n\n    if (typeof collective.tags === 'string') {\n      collective.tags = collective.tags.split(',').map(t => t.trim());\n    }\n    if (collective.backgroundImage === defaultBackgroundImage[collective.type]) {\n      delete collective.backgroundImage;\n    }\n\n    collective.settings = {\n      ...collective.settings,\n      tos: collective.tos,\n    };\n\n    delete collective.tos;\n\n    const collectiveFields = [\n      'id',\n      'type',\n      'slug',\n      'name',\n      'legalName',\n      'company',\n      'description',\n      'longDescription',\n      'tags',\n      'expensePolicy',\n      'website',\n      'twitterHandle',\n      'repositoryUrl',\n      'socialLinks',\n      'location',\n      'privateInstructions',\n      'startsAt',\n      'endsAt',\n      'timezone',\n      'currency',\n      'quantity',\n      'ParentCollectiveId',\n      'HostCollectiveId',\n      'image',\n      'backgroundImage',\n      'hostFeePercent',\n      'isActive',\n    ];\n\n    if (![ALL_SECTIONS.TIERS, ALL_SECTIONS.TICKETS].includes(section)) {\n      collectiveFields.push('settings');\n    }\n\n    const CollectiveInputType = pick(collective, collectiveFields);\n    if (isArray(collective.tiers)) {\n      CollectiveInputType.tiers = collective.tiers.map(tier =>\n        pick(tier, [\n          'id',\n          'type',\n          'name',\n          'description',\n          'longDescription',\n          'useStandalonePage',\n          'amount',\n          'amountType',\n          'interval',\n          'maxQuantity',\n          'presets',\n          'minimumAmount',\n          'goal',\n          'button',\n          'invoiceTemplate',\n          'singleTicket',\n        ]),\n      );\n    }\n\n    if (isArray(collective.socialLinks)) {\n      CollectiveInputType.socialLinks = collective.socialLinks.map(sl => omit(sl, '__typename'));\n    }\n\n    if (collective.location === null) {\n      CollectiveInputType.location = null;\n    } else {\n      CollectiveInputType.location = pick(collective.location, ['name', 'address', 'lat', 'long', 'country']);\n    }\n    setState({ ...state, status: 'loading' });\n    try {\n      const response = await editCollective({\n        variables: { collective: CollectiveInputType },\n        // It's heavy, but we need to refetch the information of the account after a mutation as fundamental\n        // properties like its name or whether it's a fiscal host can change.\n        refetchQueries: [{ query: adminPanelQuery, variables: { slug: account.slug }, context: API_V2_CONTEXT }],\n      });\n      const updatedCollective = response.data.editCollective;\n      setState({ ...state, status: 'saved', result: { error: null } });\n      const currentSlug = router.query.slug;\n      if (currentSlug !== updatedCollective.slug) {\n        router.replace({\n          pathname: `/${updatedCollective.slug}/admin`,\n          query: {\n            ...router.query,\n          },\n        });\n        await refetchLoggedInUser();\n      } else {\n        setTimeout(() => {\n          setState({ ...state, status: null });\n        }, 3000);\n      }\n      addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: <FormattedMessage id=\"Settings.Updated\" defaultMessage=\"Settings updated.\" />,\n      });\n    } catch (err) {\n      const errorMsg = getErrorFromGraphqlException(err)?.message || (\n        <FormattedMessage id=\"Settings.Updated.Fail\" defaultMessage=\"Update failed.\" />\n      );\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        message: errorMsg,\n      });\n      setState({ ...state, status: null, result: { error: errorMsg } });\n    }\n  };\n\n  if (loading) {\n    return <Loading />;\n  } else if (!collective) {\n    return null;\n  }\n\n  return (\n    <SettingsForm\n      collective={collective}\n      host={account?.host}\n      LoggedInUser={LoggedInUser}\n      onSubmit={handleEditCollective}\n      status={state.status}\n      section={section}\n    />\n  );\n};\n\nAccountSettings.propTypes = {\n  account: PropTypes.object,\n  section: PropTypes.string,\n};\n\nexport default AccountSettings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport OrdersWithData from '../../orders/OrdersWithData';\n\nconst FinancialContributions = ({ hostSlug }) => {\n  return <OrdersWithData accountSlug={hostSlug} showPlatformTip />;\n};\n\nFinancialContributions.propTypes = {\n  hostSlug: PropTypes.string.isRequired,\n};\n\nexport default FinancialContributions;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { omit, omitBy } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\n\nimport AssignVirtualCardModal from '../../edit-collective/AssignVirtualCardModal';\nimport EditVirtualCardModal from '../../edit-collective/EditVirtualCardModal';\nimport VirtualCardFilters from '../../edit-collective/sections/virtual-cards/VirtualCardFilters';\nimport VirtualCard from '../../edit-collective/VirtualCard';\nimport { Box, Flex, Grid } from '../../Grid';\nimport { getI18nLink } from '../../I18nFormatters';\nimport Loading from '../../Loading';\nimport Pagination from '../../Pagination';\nimport StyledButton from '../../StyledButton';\nimport { P } from '../../Text';\nimport { TOAST_TYPE, useToasts } from '../../ToastProvider';\n\nconst hostVirtualCardsQuery = gql`\n  query HostedVirtualCards(\n    $slug: String\n    $limit: Int!\n    $offset: Int!\n    $state: String\n    $merchantAccount: AccountReferenceInput\n    $collectiveAccountIds: [AccountReferenceInput]\n  ) {\n    host(slug: $slug) {\n      id\n      legacyId\n      slug\n      name\n      imageUrl\n      currency\n      settings\n      hostedVirtualCards(\n        limit: $limit\n        offset: $offset\n        state: $state\n        merchantAccount: $merchantAccount\n        collectiveAccountIds: $collectiveAccountIds\n      ) {\n        totalCount\n        limit\n        offset\n        nodes {\n          id\n          name\n          last4\n          data\n          privateData\n          provider\n          spendingLimitAmount\n          spendingLimitInterval\n          spendingLimitRenewsOn\n          remainingLimit\n          currency\n          createdAt\n          account {\n            id\n            name\n            slug\n            imageUrl\n          }\n          assignee {\n            id\n            name\n            slug\n            imageUrl\n          }\n        }\n      }\n      hostedVirtualCardMerchants {\n        nodes {\n          id\n          type\n          slug\n          name\n          currency\n          location {\n            id\n            address\n            country\n          }\n          imageUrl(height: 64)\n        }\n      }\n      hostedVirtualCardCollectives {\n        totalCount\n        limit\n        offset\n        nodes {\n          id\n          slug\n          name\n          legacyId\n          imageUrl(height: 64)\n          ... on AccountWithParent {\n            parentAccount: parent {\n              id\n              slug\n              name\n              legacyId\n              imageUrl(height: 64)\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst AddCardPlaceholder = styled(Flex)`\n  border-radius: 20px;\n  ${props => `border: 1px dashed ${props.theme.colors.primary[500]};`}\n`;\n\nconst VIRTUAL_CARDS_PER_PAGE = 6;\n\nconst HostVirtualCards = props => {\n  const router = useRouter();\n  const routerQuery = omit(router.query, ['slug', 'section']);\n  const offset = parseInt(routerQuery.offset) || 0;\n  const { state, merchant, collectiveAccountIds } = routerQuery;\n  const { addToast } = useToasts();\n  const { loading, data, refetch } = useQuery(hostVirtualCardsQuery, {\n    context: API_V2_CONTEXT,\n    variables: {\n      slug: props.hostSlug,\n      limit: VIRTUAL_CARDS_PER_PAGE,\n      offset,\n      state,\n      merchantAccount: { slug: merchant },\n      collectiveAccountIds: collectiveAccountIds\n        ? collectiveAccountIds.split(',').map(collectiveAccountId => ({ legacyId: parseInt(collectiveAccountId) }))\n        : undefined,\n    },\n  });\n\n  const [displayAssignCardModal, setAssignCardModalDisplay] = React.useState(false);\n  const [displayCreateVirtualCardModal, setCreateVirtualCardModalDisplay] = React.useState(false);\n\n  const handleUpdateFilters = queryParams => {\n    return router.push(\n      {\n        pathname: `/${props.hostSlug}/admin/host-virtual-cards`,\n        query: omitBy({ ...routerQuery, ...queryParams }, value => !value),\n      },\n      null,\n      { scroll: false },\n    );\n  };\n\n  const handleAssignCardSuccess = message => {\n    addToast({\n      type: TOAST_TYPE.SUCCESS,\n      message: message || (\n        <FormattedMessage id=\"Host.VirtualCards.AssignCard.Success\" defaultMessage=\"Card successfully assigned\" />\n      ),\n    });\n    setAssignCardModalDisplay(false);\n    refetch();\n  };\n\n  const handleCreateVirtualCardSuccess = message => {\n    addToast({\n      type: TOAST_TYPE.SUCCESS,\n      message: message || <FormattedMessage defaultMessage=\"Virtual card successfully created\" />,\n    });\n    setCreateVirtualCardModalDisplay(false);\n    refetch();\n  };\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <Fragment>\n      <Box>\n        <P fontSize=\"24px\" fontWeight=\"700\" lineHeight=\"32px\" mb={3}>\n          <FormattedMessage id=\"VirtualCards.Title\" defaultMessage=\"Virtual Cards\" />\n        </P>\n        <P>\n          <FormattedMessage\n            id=\"Host.VirtualCards.List.Description\"\n            defaultMessage=\"Make payments easier by creating virtual cards. One Collective can have multiple virtual cards. <learnMoreLink>Learn more</learnMoreLink>\"\n            values={{\n              learnMoreLink: getI18nLink({\n                href: 'https://docs.opencollective.com/help/fiscal-hosts/virtual-cards',\n                openInNewTabNoFollow: true,\n              }),\n            }}\n          />\n        </P>\n        <Flex mt={3} flexDirection={['row', 'column']}>\n          <VirtualCardFilters\n            isCollectiveFilter={true}\n            filters={routerQuery}\n            collective={data.host}\n            virtualCardMerchants={data.host.hostedVirtualCardMerchants.nodes}\n            virtualCardCollectives={data.host.hostedVirtualCardCollectives.nodes}\n            onChange={queryParams => handleUpdateFilters({ ...queryParams, offset: null })}\n          />\n        </Flex>\n      </Box>\n      <Grid mt={4} gridTemplateColumns={['100%', '366px 366px']} gridGap=\"32px 24px\">\n        <AddCardPlaceholder\n          width=\"366px\"\n          height=\"248px\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n        >\n          <StyledButton\n            my={1}\n            px={14}\n            py={10}\n            buttonStyle=\"primary\"\n            buttonSize=\"medium\"\n            data-cy=\"confirmation-modal-continue\"\n            onClick={() => setCreateVirtualCardModalDisplay(true)}\n          >\n            +\n          </StyledButton>\n          <Box mt=\"10px\">\n            <FormattedMessage defaultMessage=\"Create virtual card\" />\n          </Box>\n        </AddCardPlaceholder>\n        <AddCardPlaceholder\n          width=\"366px\"\n          height=\"248px\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          flexDirection=\"column\"\n        >\n          <StyledButton\n            my={1}\n            px={14}\n            py={10}\n            buttonStyle=\"primary\"\n            buttonSize=\"medium\"\n            data-cy=\"confirmation-modal-continue\"\n            onClick={() => setAssignCardModalDisplay(true)}\n          >\n            +\n          </StyledButton>\n          <Box mt=\"10px\">\n            <FormattedMessage id=\"Host.VirtualCards.AssignCard\" defaultMessage=\"Assign Card\" />\n          </Box>\n        </AddCardPlaceholder>\n        {data.host.hostedVirtualCards.nodes.map(vc => (\n          <VirtualCard\n            key={vc.id}\n            host={data.host}\n            virtualCard={vc}\n            canEditVirtualCard\n            canPauseOrResumeVirtualCard\n            canDeleteVirtualCard\n            onDeleteRefetchQuery=\"HostedVirtualCards\"\n          />\n        ))}\n      </Grid>\n      <Flex mt={5} alignItems=\"center\" flexDirection=\"column\" justifyContent=\"center\">\n        <Pagination\n          route={`/${data.host.slug}/admin/host-virtual-cards`}\n          total={data.host.hostedVirtualCards.totalCount}\n          limit={VIRTUAL_CARDS_PER_PAGE}\n          offset={offset}\n          ignoredQueryParams={['slug', 'section']}\n        />\n        <P mt={1} fontSize=\"12px\">\n          <FormattedMessage id=\"TotalItems\" defaultMessage=\"Total Items\" />: {data.host.hostedVirtualCards.totalCount}\n        </P>\n      </Flex>\n      {displayAssignCardModal && (\n        <AssignVirtualCardModal\n          host={data.host}\n          onSuccess={handleAssignCardSuccess}\n          onClose={() => {\n            setAssignCardModalDisplay(false);\n          }}\n        />\n      )}\n      {displayCreateVirtualCardModal && (\n        <EditVirtualCardModal\n          host={data.host}\n          onSuccess={handleCreateVirtualCardSuccess}\n          onClose={() => {\n            setCreateVirtualCardModalDisplay(false);\n          }}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nHostVirtualCards.propTypes = {\n  hostSlug: PropTypes.string,\n  hideTopsection: PropTypes.func,\n};\n\nexport default HostVirtualCards;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Flex } from '../../Grid';\nimport PreviewModal from '../../PreviewModal';\nimport StyledButton from '../../StyledButton';\nimport StyledInput from '../../StyledInput';\nimport StyledTextarea from '../../StyledTextarea';\nimport { Label, P, Span } from '../../Text';\n\nconst ReceiptTemplateForm = ({ showTipForDefaultTitle, value, onChange, placeholders, template }) => {\n  const [showPreview, setShowPreview] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Label htmlFor={`receipt-title-${template}`} color=\"black.800\" fontSize=\"16px\" fontWeight={700} lineHeight=\"24px\">\n        <FormattedMessage defaultMessage=\"Receipt title\" />\n      </Label>\n      <StyledInput\n        id={`receipt-title-${template}`}\n        placeholder={placeholders.title}\n        defaultValue={value.title}\n        onChange={e => onChange(e.target.value, null)}\n        width=\"100%\"\n        maxWidth={414}\n        mt=\"6px\"\n      />\n      {showTipForDefaultTitle && (\n        <P mt=\"6px\">\n          <FormattedMessage\n            defaultMessage=\"Keep this field empty to use the default title: {receiptTitlePlaceholder}.\"\n            values={{ receiptTitlePlaceholder: placeholders.title }}\n          />\n        </P>\n      )}\n      <Flex justifyContent=\"space-between\" flexDirection={['column', 'row']} pt=\"26px\">\n        <Label\n          htmlFor={`custom-message-${template}`}\n          color=\"black.800\"\n          fontSize=\"16px\"\n          fontWeight={700}\n          lineHeight=\"24px\"\n        >\n          <FormattedMessage defaultMessage=\"Custom Message\" />\n        </Label>\n        <StyledButton\n          buttonStyle=\"secondary\"\n          buttonSize=\"tiny\"\n          maxWidth=\"78px\"\n          pt=\"4px\"\n          pb=\"4px\"\n          pl=\"14px\"\n          pr=\"14px\"\n          height=\"24px\"\n          onClick={() => setShowPreview(true)}\n        >\n          <Span fontSize=\"13px\" fontWeight={500} lineHeight=\"16px\">\n            <FormattedMessage defaultMessage=\"Preview\" />\n          </Span>\n        </StyledButton>\n      </Flex>\n      <StyledTextarea\n        id={`custom-message-${template}`}\n        placeholder={placeholders.info}\n        defaultValue={value.info}\n        onChange={e => onChange(null, e.target.value)}\n        width=\"100%\"\n        height=\"150px\"\n        fontSize=\"13px\"\n        mt=\"14px\"\n        mb=\"23px\"\n      />\n      {showPreview && (\n        <PreviewModal\n          heading={<FormattedMessage defaultMessage=\"Receipt Preview\" />}\n          onClose={() => setShowPreview(false)}\n          previewImage=\"/static/images/invoice-title-preview.jpg\"\n          imgHeight=\"548.6px\"\n          imgWidth=\"667px\"\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nReceiptTemplateForm.propTypes = {\n  showTipForDefaultTitle: PropTypes.bool,\n  value: PropTypes.shape({ title: PropTypes.string, info: PropTypes.string }).isRequired,\n  onChange: PropTypes.func.isRequired, // Gets an object like { title, info }\n  placeholders: PropTypes.object.isRequired,\n  template: PropTypes.string,\n};\n\nexport default ReceiptTemplateForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/client';\nimport { Plus } from '@styled-icons/boxicons-regular/Plus';\nimport { Trash } from '@styled-icons/boxicons-regular/Trash';\nimport { get } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { i18nGraphqlException } from '../../../lib/errors';\n\nimport { editCollectiveSettingsMutation } from '../../collective-page/graphql/mutations';\nimport Container from '../../Container';\nimport SettingsSectionTitle from '../../edit-collective/sections/SettingsSectionTitle';\nimport { Box, Flex } from '../../Grid';\nimport MessageBox from '../../MessageBox';\nimport StyledButton from '../../StyledButton';\nimport StyledHr from '../../StyledHr';\nimport StyledInputField from '../../StyledInputField';\nimport StyledSelect from '../../StyledSelect';\nimport { H2, P, Span } from '../../Text';\nimport { TOAST_TYPE, useToasts } from '../../ToastProvider';\n\nimport ReceiptTemplateForm from './ReceiptTemplateForm';\n\nconst messages = defineMessages({\n  extraInfoPlaceholder: {\n    id: 'EditHostInvoice.extraInfoPlaceholder',\n    defaultMessage:\n      \"Add any other text to appear on payment receipts, such as your organization's tax ID number, info about tax deductibility of contributions, or a custom thank you message.\",\n  },\n});\n\nconst BILL_TO_OPTIONS = [\n  {\n    value: 'host',\n    label: (\n      <FormattedMessage\n        defaultMessage=\"{value} (default)\"\n        values={{ value: <FormattedMessage id=\"Member.Role.HOST\" defaultMessage=\"Host\" /> }}\n      />\n    ),\n  },\n  { value: 'collective', label: <FormattedMessage id=\"Collective\" defaultMessage=\"Collective\" /> },\n];\n\nconst InvoicesReceipts = ({ collective }) => {\n  const intl = useIntl();\n  const { addToast } = useToasts();\n\n  // For invoice Title\n  const defaultReceiptTitlePlaceholder = 'Payment Receipt';\n  const defaultReceiptTitle = get(collective.settings, 'invoice.templates.default.title');\n  const defaultAlternativeReceiptTitle = get(collective.settings, 'invoice.templates.alternative.title', null);\n  const [setSettings, { loading, error, data }] = useMutation(editCollectiveSettingsMutation);\n  const [receiptTitle, setReceiptTitle] = React.useState(defaultReceiptTitle);\n  const [alternativeReceiptTitle, setAlternativeReceiptTitle] = React.useState(defaultAlternativeReceiptTitle);\n  const [showAlternativeReceiptsSection, setShowAlternativeReceiptsSection] = React.useState(\n    defaultAlternativeReceiptTitle !== null,\n  );\n  const [isFieldChanged, setIsFieldChanged] = React.useState(false);\n  const isSaved =\n    get(data, 'editCollective.settings.invoice.templates.default.title') === receiptTitle &&\n    get(data, 'editCollective.settings.invoice.templates.alternative.title', null) === alternativeReceiptTitle;\n\n  // For invoice extra info\n  const defaultInfo = get(collective.settings, 'invoice.templates.default.info');\n  const defaultAlternativeInfo = get(collective.settings, 'invoice.templates.alternative.info');\n  const [info, setInfo] = React.useState(defaultInfo);\n  const [alternativeInfo, setAlternativeInfo] = React.useState(defaultAlternativeInfo);\n  const infoIsSaved =\n    get(data, 'editCollective.settings.invoice.templates.default.info') === info &&\n    get(data, 'editCollective.settings.invoice.templates.alternative.info') === alternativeInfo;\n\n  // For Bill To\n  const getBillToOption = value => BILL_TO_OPTIONS.find(option => option.value === value) || BILL_TO_OPTIONS[0];\n  const getInExpenseTemplate = (account, field) => get(account, `settings.invoice.expenseTemplates.default.${field}`);\n  const [billTo, setBillTo] = React.useState(getInExpenseTemplate(collective, 'billTo'));\n  const billToIsSaved = getInExpenseTemplate(collective, 'billTo') === billTo;\n\n  const deleteAlternativeReceipt = () => {\n    setAlternativeReceiptTitle(null);\n    setAlternativeInfo(null);\n    setShowAlternativeReceiptsSection(false);\n    setIsFieldChanged(true);\n  };\n\n  const getInvoiceTemplatesObj = () => {\n    const templates = { default: { title: receiptTitle, info: info } };\n    const expenseTemplates = { default: { billTo } };\n\n    if (alternativeReceiptTitle || alternativeInfo) {\n      templates.alternative = { title: alternativeReceiptTitle, info: alternativeInfo };\n    }\n\n    return { templates, expenseTemplates };\n  };\n\n  const onChangeDefault = (title, info) => {\n    if (title) {\n      setReceiptTitle(title === '' ? defaultReceiptTitlePlaceholder : title);\n    }\n    if (info) {\n      setInfo(info);\n    }\n    setIsFieldChanged(true);\n  };\n\n  const onChangeAlternate = (title, info) => {\n    if (title) {\n      setAlternativeReceiptTitle(title);\n    }\n    if (info) {\n      setAlternativeInfo(info);\n    }\n    setIsFieldChanged(true);\n  };\n\n  const onChange = (value, stateFunction) => {\n    stateFunction(value);\n    setIsFieldChanged(true);\n  };\n\n  return (\n    <Container>\n      <H2 mb={3} fontSize=\"24px\" lineHeight=\"32px\" fontWeight=\"700\">\n        <FormattedMessage id=\"becomeASponsor.invoiceReceipts\" defaultMessage=\"Invoices & Receipts\" />\n      </H2>\n      <Box mb={4}>\n        <SettingsSectionTitle>\n          <FormattedMessage id=\"Expenses\" defaultMessage=\"Expenses\" />\n        </SettingsSectionTitle>\n\n        <StyledInputField\n          name=\"expense-bill-to-select\"\n          labelProps={{ fontSize: '16px', fontWeight: '700', lineHeight: '24px', color: 'black.800' }}\n          label={intl.formatMessage({ defaultMessage: 'Bill To' })}\n          hint={intl.formatMessage({\n            defaultMessage:\n              'Set this to \"Collective\" to use the collective info for generated invoices\\' \"Bill To\" section. You need to make sure that this pattern is legal under your jurisdiction.',\n          })}\n        >\n          {({ id }) => (\n            <StyledSelect\n              inputId={id}\n              options={BILL_TO_OPTIONS}\n              value={getBillToOption(billTo)}\n              onChange={({ value }) => onChange(value, setBillTo)}\n            />\n          )}\n        </StyledInputField>\n      </Box>\n      <SettingsSectionTitle>\n        <FormattedMessage id=\"financialContributions\" defaultMessage=\"Financial contributions\" />\n      </SettingsSectionTitle>\n      <P pb=\"26px\">\n        <FormattedMessage\n          id=\"EditHostInvoice.Receipt.Instructions\"\n          defaultMessage=\"You can customize the title (and add custom text) on automatically generated receipts for financial contributions to your Collective(s), e.g., 'donation receipt' or 'tax receipt' or a phrase appropriate for your legal entity type, language, and location. Keep this field empty to use the default title:\"\n        />\n        {/** Un-localized on purpose, because it's not localized in the actual invoice */}\n        &nbsp;<i>{defaultReceiptTitlePlaceholder}</i>.\n      </P>\n      {error && (\n        <MessageBox type=\"error\" fontSize=\"14px\" withIcon mb={3}>\n          {i18nGraphqlException(intl, error)}\n        </MessageBox>\n      )}\n      <Flex flexWrap=\"wrap\" flexDirection=\"column\" width=\"100%\">\n        <ReceiptTemplateForm\n          defaultTemplate\n          value={{\n            title: defaultReceiptTitlePlaceholder === receiptTitle || receiptTitle === null ? null : receiptTitle,\n            info,\n          }}\n          placeholders={{\n            title: defaultReceiptTitlePlaceholder,\n            info: intl.formatMessage(messages.extraInfoPlaceholder),\n          }}\n          onChange={onChangeDefault}\n        />\n        <SettingsSectionTitle>\n          <FormattedMessage defaultMessage=\"Alternative receipt template\" />\n        </SettingsSectionTitle>\n        <P>\n          <FormattedMessage defaultMessage=\"You can create an additional receipt for you to use as a non-tax-deductible payments for cases like event tickets, merch, or services.\" />\n        </P>\n        {!showAlternativeReceiptsSection && (\n          <StyledButton\n            buttonStyle=\"secondary\"\n            mt=\"24px\"\n            mb=\"24px\"\n            maxWidth={209}\n            pt=\"7px\"\n            pb=\"7px\"\n            pl=\"18px\"\n            pr=\"16px\"\n            onClick={() => setShowAlternativeReceiptsSection(true)}\n          >\n            <Flex fontSize=\"14px\" fontWeight={500} lineHeight=\"18px\" color=\"#1869F5\">\n              <Box pr=\"10px\">\n                <Plus size={17} />\n              </Box>\n              <FormattedMessage defaultMessage=\"Add alternative receipt\" />\n            </Flex>\n          </StyledButton>\n        )}\n        {showAlternativeReceiptsSection && (\n          <Container mt=\"26px\" mb=\"24px\">\n            <Flex flexWrap=\"wrap\" flexDirection=\"column\" width=\"100%\">\n              <ReceiptTemplateForm\n                value={{ title: alternativeReceiptTitle, info: alternativeInfo }}\n                placeholders={{ title: 'Custom Receipt', info: intl.formatMessage(messages.extraInfoPlaceholder) }}\n                onChange={onChangeAlternate}\n              />\n            </Flex>\n            <StyledButton\n              buttonStyle=\"danger\"\n              borderColor=\"#CC2955\"\n              backgroundColor=\"white\"\n              background=\"none\"\n              mt=\"24px\"\n              maxWidth={225}\n              pt=\"7px\"\n              pb=\"7px\"\n              pl=\"18px\"\n              pr=\"16px\"\n              onClick={() => deleteAlternativeReceipt()}\n            >\n              <Span display=\"flex\" fontSize=\"14px\" fontWeight={500} lineHeight=\"18px\" color=\"#CC2955\">\n                <Box pr=\"10px\">\n                  <Trash size={17} />\n                </Box>\n                <FormattedMessage defaultMessage=\"Delete alternative receipt\" />\n              </Span>\n            </StyledButton>\n          </Container>\n        )}\n        <StyledHr borderColor=\"#C3C6CB\" />\n        {showAlternativeReceiptsSection && (\n          <MessageBox type=\"info\" mt=\"24px\">\n            <Span fontSize=\"13px\" fontWeight={400} lineHeight=\"20px\">\n              <FormattedMessage defaultMessage=\"Please advise your Collectives to select the correct receipt setting for any tiers where the alternative receipt should be used, or manage related contributions through the Add Funds process, where you as the Host Admin can select the correct receipt.\" />\n            </Span>\n          </MessageBox>\n        )}\n        <StyledButton\n          buttonStyle=\"primary\"\n          mt=\"24px\"\n          maxWidth={200}\n          loading={loading}\n          disabled={!isFieldChanged}\n          onClick={() => {\n            setSettings({\n              variables: {\n                id: collective.legacyId,\n                settings: {\n                  ...collective.settings,\n                  invoice: getInvoiceTemplatesObj(),\n                },\n              },\n            });\n            setIsFieldChanged(false);\n            addToast({\n              type: TOAST_TYPE.SUCCESS,\n              message: <FormattedMessage defaultMessage=\"Invoices updated successfully\" />,\n            });\n          }}\n        >\n          {isSaved && infoIsSaved && billToIsSaved ? (\n            <FormattedMessage id=\"saved\" defaultMessage=\"Saved\" />\n          ) : (\n            <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n          )}\n        </StyledButton>\n      </Flex>\n    </Container>\n  );\n};\n\nInvoicesReceipts.propTypes = {\n  collective: PropTypes.shape({\n    legacyId: PropTypes.number.isRequired,\n    settings: PropTypes.object,\n  }).isRequired,\n};\n\nexport default InvoicesReceipts;\n","import { defineMessages } from 'react-intl';\n\nexport const ActivityClassesI18N = defineMessages({\n  'collectives.title': {\n    id: 'collectives.title',\n    defaultMessage: 'Main collective activity',\n  },\n  'collectives.description': {\n    id: 'collectives.description',\n    defaultMessage:\n      'Receive emails when a new collective applies for fiscal hosting or is approved. Also get updates when new members are added to the collectives or when a new social media account is connected.',\n  },\n  'expenses.title': {\n    id: 'Expenses',\n    defaultMessage: 'Expenses',\n  },\n  'expenses.description': {\n    id: 'expenses.description',\n    defaultMessage: 'Receive emails of new submissions, and all expense activity.',\n  },\n  'contributions.title': {\n    id: 'Contributions',\n    defaultMessage: 'Contributions',\n  },\n  'contributions.description': {\n    id: 'contributions.description',\n    defaultMessage: 'Receive emails when new contributions come through and other contribution-related notifications.',\n  },\n  'activitiesUpdates.title': {\n    id: 'activitiesUpdates.title',\n    defaultMessage: 'Activities and Updates',\n  },\n  'activitiesUpdates.description': {\n    id: 'activitiesUpdates.description',\n    defaultMessage: 'Receive emails when a new update is published or comments are added to a conversation.',\n  },\n  'virtualCards.title': {\n    id: 'VirtualCards.Title',\n    defaultMessage: 'Virtual Cards',\n  },\n  'virtualCards.description': {\n    id: 'virtualCards.description',\n    defaultMessage:\n      'Receive emails when virtual cards are requested, assigned and when a charge is declined or it is missing its receipt.',\n  },\n  'fundsEvents.title': {\n    id: 'fundsEvents.title',\n    defaultMessage: 'Funds and Events',\n  },\n  'fundsEvents.description': {\n    id: 'fundsEvents.description',\n    defaultMessage: 'Receive emails when a fund or event is created, for tickets confirmations and events reminders.',\n  },\n  'reports.title': {\n    id: 'reports.title',\n    defaultMessage: 'Monthly reports',\n  },\n  'reports.description': {\n    id: 'reports.description',\n    defaultMessage: 'Receive monthly reports sent by collectives',\n  },\n});\n","import { gql } from '@apollo/client';\n\nexport const accountActivitySubscriptionsFragment = gql`\n  fragment AccountActivitySubscriptionsFields on Account {\n    id\n    name\n    slug\n    type\n    imageUrl\n    activitySubscriptions(channel: email) {\n      id\n      channel\n      type\n      active\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { Info } from '@styled-icons/feather/Info';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { ActivityClasses, ActivityTypes } from '../../../../lib/constants/activities';\nimport { API_V2_CONTEXT } from '../../../../lib/graphql/helpers';\nimport { ActivityClassesI18N } from '../../../../lib/i18n/activities-classes';\n\nimport { Box, Flex } from '../../../Grid';\nimport InputSwitch from '../../../InputSwitch';\nimport StyledTooltip from '../../../StyledTooltip';\nimport { TOAST_TYPE, useToasts } from '../../../ToastProvider';\n\nimport { accountActivitySubscriptionsFragment } from './fragments';\n\nconst refetchEmailNotificationQuery = gql`\n  query NotificationsSettingsRefetchQuery($id: String!) {\n    account(id: $id) {\n      id\n      ...AccountActivitySubscriptionsFields\n    }\n  }\n  ${accountActivitySubscriptionsFragment}\n`;\n\nconst setEmailNotificationMutation = gql`\n  mutation SetEmailNotification($type: ActivityAndClassesType!, $account: AccountReferenceInput, $active: Boolean!) {\n    setEmailNotification(type: $type, account: $account, active: $active) {\n      id\n    }\n  }\n`;\n\nconst ActivitySwitch = ({ account, activityType }) => {\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  const existingSetting = account.activitySubscriptions?.find(\n    notification =>\n      ActivityClasses[activityType] === notification.type || notification.type === ActivityTypes.ACTIVITY_ALL,\n  );\n  const isResetingSettings =\n    activityType === 'ACTIVITY_ALL' &&\n    account.activitySubscriptions\n      ?.filter(notification => notification.type !== ActivityTypes.ACTIVITY_ALL)\n      .map(notification =>\n        ActivityClassesI18N[`${notification.type}.title`]\n          ? intl.formatMessage(ActivityClassesI18N[`${notification.type}.title`])\n          : notification.type,\n      );\n  const [isSubscribed, setSubscribed] = React.useState(existingSetting ? existingSetting.active : true);\n  const isOverridedByAll = activityType !== 'ACTIVITY_ALL' && existingSetting?.type === ActivityTypes.ACTIVITY_ALL;\n\n  const [setEmailNotification] = useMutation(setEmailNotificationMutation, {\n    context: API_V2_CONTEXT,\n    refetchQueries: [{ query: refetchEmailNotificationQuery, variables: { id: account.id }, context: API_V2_CONTEXT }],\n  });\n\n  const handleToggle = async variables => {\n    try {\n      setSubscribed(variables.active);\n      await setEmailNotification({ variables });\n    } catch (e) {\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        message: (\n          <FormattedMessage\n            id=\"NotificationsSettings.ToggleError\"\n            defaultMessage=\"Error updating activity {activity}: {error}\"\n            values={{\n              activity: activityType,\n              error: e.message,\n            }}\n          />\n        ),\n      });\n    }\n  };\n\n  return (\n    <Flex alignItems=\"center\">\n      {isResetingSettings?.length > 0 ? (\n        <StyledTooltip\n          content={() => (\n            <FormattedMessage\n              id=\"NotificationsSettings.ToggleResetSettings\"\n              defaultMessage=\"By toggling this setting, you're also reseting previously set options for: {activities}\"\n              values={{ activities: isResetingSettings.join(', ') }}\n            />\n          )}\n        >\n          <Info size={16} />\n        </StyledTooltip>\n      ) : (\n        <Box width=\"16px\" />\n      )}\n      <InputSwitch\n        name={`${activityType}-switch`}\n        checked={isSubscribed}\n        disabled={isOverridedByAll}\n        onChange={event =>\n          handleToggle({ type: activityType, account: { id: account.id }, active: event.target.checked })\n        }\n      />\n    </Flex>\n  );\n};\n\nActivitySwitch.propTypes = {\n  account: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    slug: PropTypes.string,\n    type: PropTypes.string,\n    imageUrl: PropTypes.string,\n    activitySubscriptions: PropTypes.arrayOf(\n      PropTypes.shape({\n        type: PropTypes.string,\n        active: PropTypes.bool,\n      }),\n    ),\n  }),\n  activityType: PropTypes.string,\n};\n\nexport default ActivitySwitch;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@styled-icons/feather/ChevronDown';\nimport { ChevronUp } from '@styled-icons/feather/ChevronUp';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { ActivityClasses } from '../../../../lib/constants/activities';\nimport { ActivityClassesI18N } from '../../../../lib/i18n/activities-classes';\n\nimport Avatar from '../../../Avatar';\nimport { Box, Flex } from '../../../Grid';\nimport StyledButton from '../../../StyledButton';\nimport StyledHr from '../../../StyledHr';\nimport StyledTag from '../../../StyledTag';\nimport { P, Span } from '../../../Text';\n\nimport ActivitySwitch from './ActivitySwitch';\n\nconst CollectiveSettings = ({ account, advancedSettings, big, roleLabel, ...boxProps }) => {\n  const intl = useIntl();\n  const [displayAdvancedSettings, setDisplayAdvancedSettings] = React.useState(false);\n\n  return (\n    <Box {...boxProps}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          {big ? (\n            <React.Fragment>\n              <Avatar collective={account} radius={48} mr={3} />\n              <P fontSize=\"16px\" lineHeight=\"24px\" fontWeight=\"500\">\n                {account.name}\n                <br />\n                <Span fontSize=\"14px\" lineHeight=\"20px\" color=\"black.600\">\n                  {roleLabel}\n                </Span>\n              </P>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <StyledTag\n                variant=\"rounded\"\n                fontSize=\"11px\"\n                lineHeight=\"16px\"\n                backgroundColor=\"black.50\"\n                border=\"1px solid #C3C6CB\"\n                mr={2}\n                p=\"4px 8px\"\n              >\n                <Avatar collective={account} radius={16} mr=\"6px\" />\n                {account.name}\n              </StyledTag>\n              {account.host && (\n                <Box>\n                  ({account.host.totalHostedCollectives}{' '}\n                  <FormattedMessage\n                    defaultMessage=\"{count, plural, one {collective} other {collectives}}\"\n                    values={{ count: account.host.totalHostedCollectives }}\n                  />\n                  )\n                </Box>\n              )}\n            </React.Fragment>\n          )}\n        </Flex>\n        <Flex>\n          {advancedSettings && (\n            <StyledButton\n              buttonStyle=\"secondary\"\n              buttonSize=\"tiny\"\n              isBorderless\n              mr={2}\n              display={['none', 'block']}\n              onClick={() => setDisplayAdvancedSettings(!displayAdvancedSettings)}\n            >\n              {displayAdvancedSettings ? (\n                <FormattedMessage id=\"AdvancedSettings.Hide\" defaultMessage=\"Hide advanced settings\" />\n              ) : (\n                <FormattedMessage id=\"AdvancedSettings.Show\" defaultMessage=\"Show advanced settings\" />\n              )}\n              {displayAdvancedSettings ? <ChevronUp size=\"1em\" /> : <ChevronDown size=\"1em\" />}\n            </StyledButton>\n          )}\n          <ActivitySwitch account={account} activityType=\"ACTIVITY_ALL\" />\n        </Flex>\n      </Flex>\n      {advancedSettings && (\n        <StyledButton\n          buttonStyle=\"secondary\"\n          buttonSize=\"tiny\"\n          isBorderless\n          mt={2}\n          display={['block', 'none']}\n          onClick={() => setDisplayAdvancedSettings(!displayAdvancedSettings)}\n        >\n          {displayAdvancedSettings ? (\n            <FormattedMessage id=\"AdvancedSettings.Hide\" defaultMessage=\"Hide advanced settings\" />\n          ) : (\n            <FormattedMessage id=\"AdvancedSettings.Show\" defaultMessage=\"Show advanced settings\" />\n          )}\n          {displayAdvancedSettings ? <ChevronUp size=\"1em\" /> : <ChevronDown size=\"1em\" />}\n        </StyledButton>\n      )}\n      {big && displayAdvancedSettings && <StyledHr width=\"100%\" my={3} />}\n      {advancedSettings &&\n        displayAdvancedSettings &&\n        Object.keys(ActivityClasses).map(activity => (\n          <Box key={activity}>\n            <Flex mt={3} alignItems=\"center\" justifyContent=\"space-between\">\n              <P fontSize=\"14px\" fontWeight=\"500\" lineHeight=\"20px\">\n                {intl.formatMessage(ActivityClassesI18N[`${ActivityClasses[activity]}.title`])}\n              </P>\n              <ActivitySwitch account={account} activityType={activity} />\n            </Flex>\n            <P mt=\"2\" fontSize=\"12px\" color=\"black.700\" lineHeight=\"18px\" letterSpacing=\"0px\">\n              {intl.formatMessage(ActivityClassesI18N[`${ActivityClasses[activity]}.description`])}\n            </P>\n          </Box>\n        ))}\n      {advancedSettings && !big && <StyledHr width=\"100%\" mt={displayAdvancedSettings ? 4 : 3} borderStyle=\"dashed\" />}\n    </Box>\n  );\n};\n\nCollectiveSettings.propTypes = {\n  account: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    slug: PropTypes.string,\n    type: PropTypes.string,\n    imageUrl: PropTypes.string,\n    activitySubscriptions: PropTypes.arrayOf(\n      PropTypes.shape({\n        type: PropTypes.string,\n        active: PropTypes.bool,\n      }),\n    ),\n    host: PropTypes.shape({\n      totalHostedCollectives: PropTypes.number,\n    }),\n  }),\n  advancedSettings: PropTypes.bool,\n  big: PropTypes.bool,\n  roleLabel: PropTypes.node,\n};\n\nexport default CollectiveSettings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { Box, Flex } from '../../../Grid';\nimport StyledButton from '../../../StyledButton';\nimport StyledLink from '../../../StyledLink';\nimport { P } from '../../../Text';\n\nimport CollectiveSettings from './CollectiveSettings';\n\nconst CollectiveContainer = styled(Flex)`\n  border: 1px solid rgba(50, 51, 52, 0.1);\n`;\n\nconst GroupView = ({ accounts, title, advancedSettings, roleLabel }) => {\n  const router = useRouter();\n  // Return user to parent /user/admin/notifications page by removing the group name from the end of the URL\n  const handleBack = () => router.push(`/${router.asPath.split('/').slice(1, 4).join('/')}`);\n\n  return (\n    <Box>\n      <P color=\"blue.800\" fontSize=\"13px\" fontWeight=\"500\" lineHeight=\"16px\" mb={4}>\n        <StyledLink textDecoration=\"underline\" color=\"inherit\" onClick={handleBack}>\n          <FormattedMessage id=\"NotificationsSettings.Title\" defaultMessage=\"Notification Settings\" />\n        </StyledLink>{' '}\n        &gt; {title}\n      </P>\n      <P fontSize=\"24px\" fontWeight=\"700\" lineHeight=\"32px\" mb={3}>\n        {title}\n      </P>\n      <P lineHeight=\"20px\" letterSpacing=\"0px\">\n        <FormattedMessage\n          id=\"NotificationsSettings.Descripion\"\n          defaultMessage=\"We will always let you know about important changes, but you can customize other settings here. Manage email notifications for your individual profile as well as the collectives and organizations you are part of.\"\n        />\n      </P>\n      <Flex mt={4} flexDirection=\"column\">\n        {accounts.map(account => (\n          <CollectiveContainer key={account.id} mb={24} p={24} flexDirection=\"column\">\n            <CollectiveSettings account={account} advancedSettings={advancedSettings} roleLabel={roleLabel} big />\n          </CollectiveContainer>\n        ))}\n      </Flex>\n      <StyledButton onClick={handleBack}>Back</StyledButton>\n    </Box>\n  );\n};\n\nGroupView.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      slug: PropTypes.string,\n      type: PropTypes.string,\n      imageUrl: PropTypes.string,\n      activitySubscriptions: PropTypes.arrayOf(\n        PropTypes.shape({\n          type: PropTypes.string,\n          active: PropTypes.bool,\n        }),\n      ),\n      host: PropTypes.shape({\n        totalHostedCollectives: PropTypes.number,\n      }),\n    }),\n  ),\n  title: PropTypes.node,\n  roleLabel: PropTypes.node,\n  advancedSettings: PropTypes.bool,\n};\n\nexport default GroupView;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { compact, flatten } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { API_V2_CONTEXT } from '../../../../lib/graphql/helpers';\n\nimport Avatar from '../../../Avatar';\nimport { Box, Flex } from '../../../Grid';\nimport InputSwitch from '../../../InputSwitch';\nimport LoadingPlaceholder from '../../../LoadingPlaceholder';\nimport StyledButton from '../../../StyledButton';\nimport StyledCard from '../../../StyledCard';\nimport StyledHr from '../../../StyledHr';\nimport StyledTag from '../../../StyledTag';\nimport { P, Span } from '../../../Text';\n\nimport CollectiveSettings from './CollectiveSettings';\nimport { accountActivitySubscriptionsFragment } from './fragments';\nimport GroupView from './GroupView';\n\nconst GROUP_VIEWS = {\n  COLLECTIVES: 'collectives',\n  ORGANIZATIONS: 'organizations',\n  BACKED: 'backed',\n};\n\nconst NecessaryNotificationsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  grid-gap: 12px 24px;\n  font-size: 13px;\n  font-weight: 500;\n  line-height: 20px;\n`;\n\nconst userActivitySubscriptionsQuery = gql`\n  query ActivitySubscriptionsSettingsQuery($id: String!) {\n    account(id: $id) {\n      id\n      ... on Individual {\n        newsletterOptIn\n      }\n      memberOf(role: [ADMIN], accountType: [COLLECTIVE, FUND, ORGANIZATION], isArchived: false) {\n        nodes {\n          id\n          account {\n            id\n            ...AccountActivitySubscriptionsFields\n            ... on Organization {\n              host {\n                id\n                totalHostedCollectives\n              }\n            }\n          }\n        }\n      }\n      backerOf: memberOf(\n        role: [BACKER]\n        accountType: [COLLECTIVE, ORGANIZATION, EVENT, FUND, PROJECT]\n        isArchived: false\n      ) {\n        nodes {\n          id\n          account {\n            id\n            ...AccountActivitySubscriptionsFields\n          }\n        }\n      }\n    }\n  }\n  ${accountActivitySubscriptionsFragment}\n`;\n\nconst setNewsletterOptInMutation = gql`\n  mutation SetNewsletterOptIn($newsletterOptIn: Boolean!) {\n    setNewsletterOptIn(newsletterOptIn: $newsletterOptIn) {\n      id\n      ... on Individual {\n        newsletterOptIn\n      }\n    }\n  }\n`;\n\nconst GroupSettings = ({ accounts, group, title, ...boxProps }) => {\n  const router = useRouter();\n  const handleGroupSettings = () => router.push(`${router.asPath}/${group}`);\n  const activitySubscriptions = compact(flatten(accounts.map(account => account.activitySubscriptions)));\n\n  return (\n    <Box {...boxProps}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        {title}\n        <P fontSize=\"12px\" lineHeight=\"18px\" color=\"black.700\" display={['none', 'block']}>\n          {activitySubscriptions.length === 0 ? (\n            <FormattedMessage\n              id=\"GroupSettings.NoActivitySubscriptions\"\n              defaultMessage=\"You are receiving all notifications\"\n            />\n          ) : (\n            <FormattedMessage\n              id=\"GroupSettings.SomeActivitySubscriptions\"\n              defaultMessage=\"Some notifications are turned off\"\n            />\n          )}\n        </P>\n      </Flex>\n      <Box mt={3}>\n        <Flex alignItems={['flex-start', 'center']} justifyContent=\"space-between\" flexWrap=\"wrap\" gap=\"8px\">\n          <Flex alignItems=\"center\">\n            <StyledTag\n              variant=\"rounded\"\n              fontSize=\"11px\"\n              lineHeight=\"16px\"\n              backgroundColor=\"black.50\"\n              border=\"1px solid #C3C6CB\"\n              mr={2}\n              p=\"4px 8px\"\n            >\n              {accounts.slice(0, 5).map(account => (\n                <Avatar key={account.id} collective={account} radius={16} mr=\"6px\" />\n              ))}\n            </StyledTag>\n            {accounts.length - 5 > 0 && (\n              <P fontSize=\"14px\" lineHeight=\"20px\" color=\"black.700\">\n                (<FormattedMessage id=\"nMore\" defaultMessage=\"{n} more\" values={{ n: accounts.length - 5 }} />)\n              </P>\n            )}\n          </Flex>\n          <StyledButton buttonStyle=\"primary\" buttonSize=\"tiny\" onClick={handleGroupSettings}>\n            <FormattedMessage id=\"GroupSettings.Show\" defaultMessage=\"Show group settings\" />\n          </StyledButton>\n        </Flex>\n        <Box display={['block', 'none']} mt={2}>\n          <P fontSize=\"12px\" lineHeight=\"18px\" color=\"black.700\">\n            {activitySubscriptions.length === 0 ? (\n              <FormattedMessage\n                id=\"GroupSettings.NoActivitySubscriptions\"\n                defaultMessage=\"You are receiving all notifications\"\n              />\n            ) : (\n              <FormattedMessage\n                id=\"GroupSettings.SomeActivitySubscriptions\"\n                defaultMessage=\"Some notifications are turned off\"\n              />\n            )}\n          </P>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nGroupSettings.propTypes = {\n  accounts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      slug: PropTypes.string,\n      type: PropTypes.string,\n      imageUrl: PropTypes.string,\n      activitySubscriptions: PropTypes.arrayOf(\n        PropTypes.shape({\n          type: PropTypes.string,\n          active: PropTypes.bool,\n        }),\n      ),\n    }),\n  ),\n  group: PropTypes.string,\n  title: PropTypes.node,\n};\n\nconst NotificationsSettings = ({ account, subpath }) => {\n  const { data, loading } = useQuery(userActivitySubscriptionsQuery, {\n    variables: { id: account.id },\n    context: API_V2_CONTEXT,\n  });\n  const [setNewsletterOptIn, { loading: setNewsletterOptInLoading }] = useMutation(setNewsletterOptInMutation, {\n    context: API_V2_CONTEXT,\n  });\n\n  const accounts = data?.account.memberOf.nodes.map(member => member.account) || [];\n  const hosts = accounts?.filter(a => !!a.host);\n  const orgs = accounts?.filter(a => a.type === 'ORGANIZATION' && !a.host);\n  const collectives = accounts?.filter(a => a.type === 'COLLECTIVE');\n\n  const backedAccounts =\n    data?.account.backerOf.nodes\n      .map(member => member.account)\n      // Remove accounts already listed in the advanced settings section\n      .filter(backedAccount => !accounts.some(account => account.id === backedAccount.id)) || [];\n\n  const view = subpath?.[0];\n  if (Object.values(GROUP_VIEWS).includes(view)) {\n    const titles = {\n      [GROUP_VIEWS.COLLECTIVES]: (\n        <FormattedMessage\n          id=\"NotificationsSettings.Activity.List.CollectivesSubtitle\"\n          defaultMessage=\"Collectives you manage\"\n        />\n      ),\n      [GROUP_VIEWS.ORGANIZATIONS]: (\n        <FormattedMessage\n          id=\"NotificationsSettings.Activity.List.OrganizationsSubtitle\"\n          defaultMessage=\"Organizations you manage\"\n        />\n      ),\n      [GROUP_VIEWS.BACKED]: (\n        <FormattedMessage\n          id=\"NotificationsSettings.Updates.CollectivesSupported\"\n          defaultMessage=\"Collectives you support\"\n        />\n      ),\n    };\n    const accountGroups = {\n      [GROUP_VIEWS.COLLECTIVES]: collectives,\n      [GROUP_VIEWS.ORGANIZATIONS]: orgs,\n      [GROUP_VIEWS.BACKED]: backedAccounts,\n    };\n    const roleLabel =\n      view === GROUP_VIEWS.BACKED ? (\n        <FormattedMessage id=\"NotificationSettings.Label.Backer\" defaultMessage=\"Backer\" />\n      ) : (\n        <FormattedMessage id=\"AdminPanel.button\" defaultMessage=\"Admin\" />\n      );\n\n    return (\n      <GroupView\n        accounts={accountGroups[view]}\n        title={titles[view]}\n        advancedSettings={view !== GROUP_VIEWS.BACKED}\n        roleLabel={roleLabel}\n      />\n    );\n  }\n\n  return (\n    <Box>\n      <P fontSize=\"24px\" fontWeight=\"700\" lineHeight=\"32px\" mb={3}>\n        <FormattedMessage id=\"NotificationsSettings.Title\" defaultMessage=\"Notification Settings\" />\n      </P>\n      <P lineHeight=\"20px\" letterSpacing=\"0px\">\n        <FormattedMessage\n          id=\"NotificationsSettings.Descripion\"\n          defaultMessage=\"We will always let you know about important changes, but you can customize other settings here. Manage email notifications for your individual profile as well as the collectives and organizations you are part of.\"\n        />\n      </P>\n      <StyledCard mt={4} p=\"24px\">\n        <P fontSize=\"18px\" fontWeight=\"700\" lineHeight=\"26px\">\n          <FormattedMessage\n            id=\"NotificationsSettings.NecessaryNotifications.Title\"\n            defaultMessage=\"Necessary notifications\"\n          />\n        </P>\n        <P lineHeight=\"20px\" letterSpacing=\"0px\" mt={2}>\n          <FormattedMessage\n            id=\"NotificationsSettings.NecessaryNotifications.Description\"\n            defaultMessage=\"There are some notifications we are required to send you, and they can't be opted out of.\"\n          />\n        </P>\n        <StyledHr my=\"24px\" />\n        <NecessaryNotificationsList>\n          <li>\n            <FormattedMessage\n              id=\"NotificationsSettings.NecessaryNotifications.ToSUpdates\"\n              defaultMessage=\"Updates on our terms of service\"\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"NotificationsSettings.NecessaryNotifications.MagicLink\"\n              defaultMessage=\"Magic link login\"\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"NotificationsSettings.NecessaryNotifications.EmailUpdate\"\n              defaultMessage=\"Email address update\"\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"NotificationsSettings.NecessaryNotifications.HostMessages\"\n              defaultMessage=\"Communications from your hosts\"\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"NotificationsSettings.NecessaryNotifications.Receipts\"\n              defaultMessage=\"Receipts of your contributions\"\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"NotificationsSettings.NecessaryNotifications.PaymentIssues\"\n              defaultMessage=\"Payment and payment method issues\"\n            />\n          </li>\n          <li>\n            <FormattedMessage\n              id=\"NotificationsSettings.NecessaryNotifications.Expenses\"\n              defaultMessage=\"Recurring and requested expenses\"\n            />\n          </li>\n        </NecessaryNotificationsList>\n      </StyledCard>\n\n      {loading ? (\n        <Fragment>\n          <LoadingPlaceholder mt={4} width=\"100%\" height={300} borderRadius=\"8px\" />\n          <LoadingPlaceholder mt={4} width=\"100%\" height={200} borderRadius=\"8px\" />\n        </Fragment>\n      ) : (\n        <Fragment>\n          {accounts.length > 0 && (\n            <StyledCard mt={4} p=\"24px\">\n              <P fontSize=\"18px\" fontWeight=\"700\" lineHeight=\"26px\">\n                <FormattedMessage\n                  id=\"NotificationsSettings.Activity.Title\"\n                  defaultMessage=\"Notifications regarding your activity\"\n                />\n              </P>\n              <P lineHeight=\"20px\" letterSpacing=\"0px\" mt={2}>\n                <FormattedMessage\n                  id=\"NotificationsSettings.Activity.Description\"\n                  defaultMessage=\"Notification settings about the profiles you administer.\"\n                />\n              </P>\n              <StyledHr my=\"24px\" />\n              <P fontSize=\"18px\" fontWeight=\"700\" lineHeight=\"26px\">\n                <FormattedMessage\n                  id=\"NotificationsSettings.Activity.List.Title\"\n                  defaultMessage=\"What you are following:\"\n                />\n              </P>\n\n              {hosts.length > 0 && (\n                <Box mt={3}>\n                  <P fontSize=\"15px\" fontWeight=\"500\" lineHeight=\"22px\">\n                    <FormattedMessage\n                      id=\"NotificationsSettings.Activity.List.HostSubtitle\"\n                      defaultMessage=\"Collective you host\"\n                    />{' '}\n                    <Span fontSize=\"14px\" fontWeight=\"400\" lineHeight=\"20px\" color=\"black.700\">\n                      ({hosts.length || 0})\n                    </Span>\n                  </P>\n                  {hosts.map(a => (\n                    <CollectiveSettings key={a.id} account={a} advancedSettings mt={3} />\n                  ))}\n                </Box>\n              )}\n\n              {collectives.length > 0 && (\n                <GroupSettings\n                  title={\n                    <P fontSize=\"15px\" fontWeight=\"500\" lineHeight=\"22px\">\n                      <FormattedMessage\n                        id=\"NotificationsSettings.Activity.List.CollectivesSubtitle\"\n                        defaultMessage=\"Collectives you manage\"\n                      />\n                    </P>\n                  }\n                  accounts={collectives}\n                  group={GROUP_VIEWS.COLLECTIVES}\n                  mt={4}\n                />\n              )}\n\n              {orgs.length > 0 && (\n                <GroupSettings\n                  title={\n                    <P fontSize=\"15px\" fontWeight=\"500\" lineHeight=\"22px\">\n                      <FormattedMessage\n                        id=\"NotificationsSettings.Activity.List.OrganizationsSubtitle\"\n                        defaultMessage=\"Organizations you manage\"\n                      />\n                    </P>\n                  }\n                  accounts={orgs}\n                  group={GROUP_VIEWS.ORGANIZATIONS}\n                  mt={4}\n                />\n              )}\n            </StyledCard>\n          )}\n\n          <StyledCard mt={4} p=\"24px\">\n            <P fontSize=\"18px\" fontWeight=\"700\" lineHeight=\"26px\">\n              <FormattedMessage\n                id=\"NotificationsSettings.Updates.Title\"\n                defaultMessage=\"Updates about the platform and Collectives you support\"\n              />\n            </P>\n            <P lineHeight=\"20px\" letterSpacing=\"0px\" mt={2}>\n              <FormattedMessage\n                id=\"NotificationsSettings.Updates.Description\"\n                defaultMessage=\"Notifications about us, news we want to share with you related to our activities and the development of the platform.\"\n              />\n            </P>\n            <StyledHr my=\"24px\" />\n            <Box mt={3}>\n              <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                <P fontSize=\"15px\" fontWeight=\"500\" lineHeight=\"22px\">\n                  <FormattedMessage\n                    id=\"NotificationsSettings.Updates.Newsletter\"\n                    defaultMessage=\"Receive the Open Collective newsletter (monthly)\"\n                  />\n                </P>\n                <InputSwitch\n                  name={`newsletter-switch`}\n                  checked={data?.account?.newsletterOptIn}\n                  isLoading={setNewsletterOptInLoading}\n                  onChange={event => setNewsletterOptIn({ variables: { newsletterOptIn: event.target.checked } })}\n                />\n              </Flex>\n              <StyledHr width=\"100%\" mt={3} borderStyle=\"dashed\" />\n            </Box>\n            {backedAccounts.length > 0 && (\n              <GroupSettings\n                title={\n                  <P fontSize=\"15px\" fontWeight=\"500\" lineHeight=\"22px\">\n                    <FormattedMessage\n                      id=\"NotificationsSettings.Updates.CollectivesSupported\"\n                      defaultMessage=\"Collectives you support\"\n                    />\n                  </P>\n                }\n                accounts={backedAccounts}\n                group={GROUP_VIEWS.BACKED}\n                mt={3}\n              />\n            )}\n          </StyledCard>\n        </Fragment>\n      )}\n    </Box>\n  );\n};\n\nNotificationsSettings.propTypes = {\n  account: PropTypes.shape({\n    id: PropTypes.string,\n  }),\n  subpath: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default NotificationsSettings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { ORDER_STATUS } from '../../../lib/constants/order-status';\n\nimport OrdersWithData from '../../orders/OrdersWithData';\n\nconst FinancialContributions = ({ hostSlug }) => {\n  return (\n    <OrdersWithData\n      status={ORDER_STATUS.PENDING}\n      accountSlug={hostSlug}\n      title={<FormattedMessage id=\"PendingContributions\" defaultMessage=\"Pending Contributions\" />}\n      showPlatformTip\n      canCreatePendingOrder\n    />\n  );\n};\n\nFinancialContributions.propTypes = {\n  hostSlug: PropTypes.string.isRequired,\n};\n\nexport default FinancialContributions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport { Form, Formik } from 'formik';\nimport { get } from 'lodash';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { CollectiveType } from '../../../../lib/constants/collectives';\nimport roles from '../../../../lib/constants/roles';\nimport formatMemberRole from '../../../../lib/i18n/member-role';\n\nimport Avatar from '../../../Avatar';\nimport Container from '../../../Container';\nimport { Box, Flex } from '../../../Grid';\nimport MemberRoleDescription, { hasRoleDescription } from '../../../MemberRoleDescription';\nimport StyledInput from '../../../StyledInput';\nimport StyledInputFormikField from '../../../StyledInputFormikField';\nimport StyledSelect from '../../../StyledSelect';\nimport { P } from '../../../Text';\n\nconst MemberContainer = styled(Container)`\n  border: 1px solid #dcdee0;\n  border-radius: 10px;\n  max-width: 250px;\n  padding: 16px;\n`;\n\nconst memberFormMessages = defineMessages({\n  roleLabel: { id: 'members.role.label', defaultMessage: 'Role' },\n  sinceLabel: { id: 'user.since.label', defaultMessage: 'Since' },\n  descriptionLabel: { id: 'Fields.description', defaultMessage: 'Description' },\n  inValidDateError: { defaultMessage: 'Please enter a valid date' },\n});\n\nconst MemberForm = props => {\n  const { intl, member, collectiveImg, bindSubmitForm, triggerSubmit } = props;\n\n  const [memberRole, setMemberRole] = React.useState(member?.role || roles.ADMIN);\n\n  const memberCollective = member && (member.account || member.memberAccount);\n\n  const initialValues = {\n    description: get(member, 'description') || '',\n    role: get(member, 'role') || roles.ADMIN,\n    since: get(member, 'since')\n      ? dayjs(get(member, 'since')).format('YYYY-MM-DD')\n      : dayjs(new Date()).format('YYYY-MM-DD'),\n  };\n\n  const submit = values => {\n    triggerSubmit({\n      ...values,\n      since: dayjs(values.since).toISOString(),\n    });\n  };\n\n  const getOptions = arr => {\n    return arr.map(key => {\n      return { value: key, label: formatMemberRole(intl, key) };\n    });\n  };\n\n  const validate = values => {\n    const errors = {};\n    if (!dayjs(values.since).isValid()) {\n      errors.since = intl.formatMessage(memberFormMessages.inValidDateError);\n    }\n    return errors;\n  };\n\n  return (\n    <Flex flexDirection=\"column\" justifyContent=\"center\">\n      {member && (\n        <MemberContainer mb={2} mt={2}>\n          <Flex>\n            <Container position=\"relative\">\n              <Avatar src={get(memberCollective, 'imageUrl')} radius={48} />\n              <Container mt={13} position=\"absolute\" bottom=\"-10%\" right=\"-10%\">\n                <Avatar type={CollectiveType.COLLECTIVE} backgroundColor=\"#ffffff\" src={collectiveImg} radius={20} />\n              </Container>\n            </Container>\n            <Box mx={10}>\n              <P fontSize=\"16px\" lineHeight=\"24px\" fontWeight={500}>\n                {get(memberCollective, 'name')}\n              </P>\n              <P fontSize=\"13px\" lineHeight=\"20px\" color=\"#4E5052\" fontWeight={400}>\n                {formatMemberRole(intl, get(member, 'role'))}\n              </P>\n            </Box>\n          </Flex>\n        </MemberContainer>\n      )}\n      <Formik validate={validate} initialValues={initialValues} onSubmit={submit} validateOnChange>\n        {formik => {\n          const { submitForm } = formik;\n\n          bindSubmitForm(submitForm);\n\n          return (\n            <Form>\n              <StyledInputFormikField\n                name=\"role\"\n                htmlFor=\"memberForm-role\"\n                label={<P fontWeight=\"bold\"> {intl.formatMessage(memberFormMessages.roleLabel)} </P>}\n                mt={3}\n              >\n                {({ form, field }) => (\n                  <React.Fragment>\n                    <StyledSelect\n                      inputId={field.id}\n                      error={field.error}\n                      defaultValue={getOptions([memberRole])[0]}\n                      onBlur={() => form.setFieldTouched(field.name, true)}\n                      onChange={({ value }) => {\n                        form.setFieldValue(field.name, value);\n                        setMemberRole(value);\n                      }}\n                      options={getOptions([roles.ADMIN, roles.MEMBER, roles.ACCOUNTANT])}\n                    />\n                    {hasRoleDescription(memberRole) && (\n                      <Flex mb={3}>\n                        <Box mx={1} mt={1} fontSize=\"12px\" color=\"black.600\" fontStyle=\"italic\">\n                          <MemberRoleDescription role={memberRole} />\n                        </Box>\n                      </Flex>\n                    )}\n                  </React.Fragment>\n                )}\n              </StyledInputFormikField>\n              <StyledInputFormikField\n                name=\"description\"\n                htmlFor=\"memberForm-description\"\n                label={<P fontWeight=\"bold\">{intl.formatMessage(memberFormMessages.descriptionLabel)}</P>}\n                mt={3}\n              >\n                {({ field }) => <StyledInput {...field} />}\n              </StyledInputFormikField>\n              <StyledInputFormikField\n                name=\"since\"\n                htmlFor=\"memberForm-since\"\n                inputType=\"date\"\n                label={<P fontWeight=\"bold\">{intl.formatMessage(memberFormMessages.sinceLabel)}</P>}\n                mt={3}\n              >\n                {({ form, field }) => (\n                  <StyledInput\n                    {...field}\n                    required\n                    onChange={event => {\n                      if (event.target.value) {\n                        form.setFieldValue(field.name, event.target.value);\n                      }\n                    }}\n                    value={field.value}\n                  />\n                )}\n              </StyledInputFormikField>\n            </Form>\n          );\n        }}\n      </Formik>\n    </Flex>\n  );\n};\n\nMemberForm.propTypes = {\n  bindSubmitForm: PropTypes.func,\n  collectiveImg: PropTypes.string,\n  intl: PropTypes.object.isRequired,\n  member: PropTypes.object,\n  triggerSubmit: PropTypes.func,\n};\n\nexport default injectIntl(MemberForm);\n","import { gql } from '@apollo/client';\n\nconst memberFieldsFragment = gql`\n  fragment MemberFields on Member {\n    id\n    role\n    since\n    createdAt\n    description\n    inherited\n    account {\n      id\n      name\n      slug\n      type\n      imageUrl(height: 64)\n      ... on Individual {\n        email\n      }\n    }\n  }\n`;\n\nexport const teamSectionQuery = gql`\n  query TeamSection($collectiveSlug: String!, $account: AccountReferenceInput!) {\n    account(slug: $collectiveSlug) {\n      id\n      isFrozen\n      ... on AccountWithParent {\n        parent {\n          id\n          slug\n          type\n          name\n        }\n      }\n      ... on AccountWithHost {\n        host {\n          id\n          slug\n          name\n          features {\n            id\n            CONTACT_FORM\n          }\n        }\n      }\n      members(role: [ADMIN, MEMBER, ACCOUNTANT], limit: 100) {\n        nodes {\n          id\n          ...MemberFields\n        }\n      }\n      childrenAccounts {\n        nodes {\n          id\n          slug\n          type\n          name\n          members(includeInherited: false, role: [ADMIN, MEMBER, ACCOUNTANT], limit: 100) {\n            nodes {\n              id\n              ...MemberFields\n            }\n          }\n        }\n      }\n    }\n    memberInvitations(account: $account) {\n      id\n      role\n      since\n      createdAt\n      description\n      account: memberAccount {\n        id\n        name\n        slug\n        type\n        imageUrl(height: 64)\n        ... on Individual {\n          email\n        }\n      }\n    }\n  }\n  ${memberFieldsFragment}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { Delete } from '@styled-icons/material/Delete';\nimport { get } from 'lodash';\nimport { withRouter } from 'next/router';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport roles from '../../../../lib/constants/roles';\nimport { i18nGraphqlException } from '../../../../lib/errors';\nimport { API_V2_CONTEXT } from '../../../../lib/graphql/helpers';\nimport useLoggedInUser from '../../../../lib/hooks/useLoggedInUser';\n\nimport Container from '../../../Container';\nimport { Flex } from '../../../Grid';\nimport StyledButton from '../../../StyledButton';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../../../StyledModal';\nimport StyledTooltip from '../../../StyledTooltip';\nimport { TOAST_TYPE, useToasts } from '../../../ToastProvider';\n\nimport MemberForm from './MemberForm';\nimport { teamSectionQuery } from './queries';\n\nconst editMemberMutation = gql`\n  mutation EditMember(\n    $memberAccount: AccountReferenceInput!\n    $account: AccountReferenceInput!\n    $role: MemberRole\n    $description: String\n    $since: DateTime\n  ) {\n    editMember(\n      memberAccount: $memberAccount\n      account: $account\n      role: $role\n      description: $description\n      since: $since\n    ) {\n      id\n      role\n      description\n      since\n    }\n  }\n`;\n\nconst editMemberInvitationMutation = gql`\n  mutation EditMemberInvitation(\n    $memberAccount: AccountReferenceInput!\n    $account: AccountReferenceInput!\n    $role: MemberRole\n    $description: String\n    $since: DateTime\n  ) {\n    editMemberInvitation(\n      memberAccount: $memberAccount\n      account: $account\n      role: $role\n      description: $description\n      since: $since\n    ) {\n      id\n      role\n      description\n      since\n    }\n  }\n`;\n\nconst removeMemberMutation = gql`\n  mutation RemoveMember(\n    $memberAccount: AccountReferenceInput!\n    $account: AccountReferenceInput!\n    $role: MemberRole!\n    $isInvitation: Boolean\n  ) {\n    removeMember(memberAccount: $memberAccount, account: $account, role: $role, isInvitation: $isInvitation)\n  }\n`;\n\nconst EditMemberModal = props => {\n  const { intl, member, collective, canRemove, isLastAdmin, cancelHandler, onEdit } = props;\n\n  const { LoggedInUser, refetchLoggedInUser } = useLoggedInUser();\n\n  const { addToast } = useToasts();\n\n  const isInvitation = get(member, '__typename') === 'MemberInvitation';\n\n  const messages = defineMessages({\n    cantRemoveLast: {\n      id: 'members.remove.cantRemoveLast',\n      defaultMessage: 'The last admin cannot be removed. Please add another admin first.',\n    },\n    removeConfirm: {\n      id: 'members.remove.confirm',\n      defaultMessage: `Do you really want to remove {name} @{slug} {hasEmail, select, 1 {({email})} other {}}?`,\n    },\n  });\n\n  const [editMemberAccount, { loading: isEditingMember }] = useMutation(editMemberMutation, {\n    context: API_V2_CONTEXT,\n  });\n\n  const [editMemberInvitationAccount, { loading: isEditingMemberInvitation }] = useMutation(\n    editMemberInvitationMutation,\n    { context: API_V2_CONTEXT },\n  );\n\n  const [removeMemberAccount, { loading: isRemovingMember }] = useMutation(removeMemberMutation, {\n    context: API_V2_CONTEXT,\n    refetchQueries: [\n      {\n        query: teamSectionQuery,\n        context: API_V2_CONTEXT,\n        variables: {\n          collectiveSlug: get(collective, 'slug'),\n          account: { slug: get(collective, 'slug') },\n        },\n      },\n    ],\n    awaitRefetchQueries: true,\n  });\n\n  let submitMemberForm = null;\n\n  const bindSubmitForm = submitForm => {\n    submitMemberForm = submitForm;\n  };\n\n  const handleEditMemberMutation = async values => {\n    const { description, role, since } = values;\n\n    try {\n      await editMemberAccount({\n        variables: {\n          memberAccount: {\n            slug: get(member.account, 'slug'),\n          },\n          account: { slug: get(collective, 'slug') },\n          description,\n          role,\n          since,\n        },\n      });\n\n      addToast({\n        type: TOAST_TYPE.SUCCESS,\n        title: <FormattedMessage id=\"editTeam.member.edit.success\" defaultMessage=\"Member updated successfully.\" />,\n      });\n\n      if (get(member, 'account.slug') === get(LoggedInUser, 'collective.slug')) {\n        await refetchLoggedInUser();\n      }\n\n      onEdit?.();\n      cancelHandler();\n    } catch (error) {\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        title: <FormattedMessage id=\"editTeam.member.edit.error\" defaultMessage=\"Failed to update member.\" />,\n        message: i18nGraphqlException(intl, error),\n        variant: 'light',\n      });\n    }\n  };\n\n  const handleEditMemberInvitationMutation = async values => {\n    const { description, role, since } = values;\n\n    try {\n      await editMemberInvitationAccount({\n        variables: {\n          memberAccount: {\n            slug: get(member, 'memberAccount.slug'),\n          },\n          account: { slug: get(collective, 'slug') },\n          description,\n          role,\n          since,\n        },\n      });\n\n      addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: (\n          <FormattedMessage\n            id=\"editTeam.memberInvitation.edit.success\"\n            defaultMessage=\"Member invitation updated successfully.\"\n          />\n        ),\n      });\n\n      onEdit?.();\n      cancelHandler();\n    } catch (error) {\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        title: (\n          <FormattedMessage\n            id=\"editTeam.memberInvitation.edit.error\"\n            defaultMessage=\"Failed to update member invitation.\"\n          />\n        ),\n        message: i18nGraphqlException(intl, error),\n      });\n    }\n  };\n\n  const confirmRemoveMember = memberEntry => {\n    const account = memberEntry.account || memberEntry.memberAccount;\n    return window.confirm(\n      intl.formatMessage(messages.removeConfirm, {\n        ...account,\n        hasEmail: Number(account.email),\n      }),\n    );\n  };\n\n  const handleRemoveMemberMutation = async () => {\n    if (confirmRemoveMember(member)) {\n      try {\n        await removeMemberAccount({\n          variables: {\n            memberAccount: {\n              slug: get(member, 'account.slug') || get(member, 'memberAccount.slug'),\n            },\n            account: { slug: get(collective, 'slug') },\n            role: get(member, 'role'),\n            isInvitation,\n          },\n        });\n\n        addToast({\n          type: TOAST_TYPE.SUCCESS,\n          message: isInvitation ? (\n            <FormattedMessage\n              id=\"editTeam.memberInvitation.remove.success\"\n              defaultMessage=\"Member invitation removed successfully.\"\n            />\n          ) : (\n            <FormattedMessage id=\"editTeam.member.remove.success\" defaultMessage=\"Member removed successfully.\" />\n          ),\n        });\n\n        if (get(member, 'account.slug') === get(LoggedInUser, 'collective.slug')) {\n          await props.router.push({ pathname: `/${get(collective, 'slug')}` });\n          await refetchLoggedInUser();\n        }\n\n        onEdit?.();\n        cancelHandler();\n      } catch (error) {\n        addToast({\n          type: TOAST_TYPE.ERROR,\n          title: isInvitation ? (\n            <FormattedMessage id=\"editTeam.member.remove.error\" defaultMessage=\"Failed to remove member.\" />\n          ) : (\n            <FormattedMessage\n              id=\"editTeam.memberInvitation.remove.error\"\n              defaultMessage=\"Failed to remove member invitation.\"\n            />\n          ),\n          message: i18nGraphqlException(intl, error),\n        });\n      }\n    } else {\n      cancelHandler();\n    }\n  };\n\n  const handleSubmitForm = () => {\n    if (submitMemberForm) {\n      submitMemberForm();\n    }\n  };\n\n  return (\n    <Container>\n      <StyledModal width={688} onClose={cancelHandler}>\n        <ModalHeader>\n          <FormattedMessage id=\"editTeam.member.edit\" defaultMessage=\"Edit Team Member\" />\n        </ModalHeader>\n        <ModalBody>\n          <MemberForm\n            intl={intl}\n            collectiveImg={get(collective, 'imageUrl')}\n            member={member}\n            bindSubmitForm={bindSubmitForm}\n            triggerSubmit={isInvitation ? handleEditMemberInvitationMutation : handleEditMemberMutation}\n          />\n          <Flex justifyContent=\"flex-end\">\n            {isLastAdmin && member.role === roles.ADMIN ? (\n              <StyledTooltip place=\"bottom\" content={() => intl.formatMessage(messages.cantRemoveLast)}>\n                <StyledButton\n                  mt={4}\n                  disabled={true}\n                  buttonSize=\"tiny\"\n                  buttonStyle=\"dangerSecondary\"\n                  data-cy=\"remove-member\"\n                  onClick={handleRemoveMemberMutation}\n                >\n                  <Flex alignItems=\"center\">\n                    <Delete height={25} />\n                    <FormattedMessage id=\"Remove\" defaultMessage=\"Remove\" />\n                  </Flex>\n                </StyledButton>\n              </StyledTooltip>\n            ) : (\n              <StyledButton\n                mt={4}\n                disabled={!canRemove}\n                buttonSize=\"tiny\"\n                buttonStyle=\"dangerSecondary\"\n                data-cy=\"remove-member\"\n                onClick={handleRemoveMemberMutation}\n                loading={isRemovingMember}\n              >\n                <Flex alignItems=\"center\">\n                  <Delete height={25} />\n                  <FormattedMessage id=\"Remove\" defaultMessage=\"Remove\" />\n                </Flex>\n              </StyledButton>\n            )}\n          </Flex>\n        </ModalBody>\n        <ModalFooter mt={5}>\n          <Container display=\"flex\" justifyContent={['center', 'flex-end']} flexWrap=\"Wrap\">\n            <StyledButton\n              mx={20}\n              my={1}\n              autoFocus\n              onClick={cancelHandler}\n              disabled={isEditingMember || isEditingMemberInvitation || isRemovingMember}\n              data-cy=\"confirmation-modal-cancel\"\n            >\n              <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n            </StyledButton>\n            <StyledButton\n              my={1}\n              buttonStyle=\"primary\"\n              data-cy=\"confirmation-modal-continue\"\n              loading={isEditingMember || isEditingMemberInvitation}\n              disabled={isRemovingMember}\n              onClick={handleSubmitForm}\n            >\n              <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n            </StyledButton>\n          </Container>\n        </ModalFooter>\n      </StyledModal>\n    </Container>\n  );\n};\n\nEditMemberModal.propTypes = {\n  collective: PropTypes.object,\n  cancelHandler: PropTypes.func,\n  onEdit: PropTypes.func,\n  intl: PropTypes.object.isRequired,\n  isLastAdmin: PropTypes.bool,\n  member: PropTypes.object,\n  router: PropTypes.object,\n  canRemove: PropTypes.bool,\n};\n\nEditMemberModal.defaultProps = {\n  canRemove: true,\n};\n\nexport default withRouter(EditMemberModal);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { get } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport { CollectiveType } from '../../../../lib/constants/collectives';\nimport { API_V2_CONTEXT } from '../../../../lib/graphql/helpers';\n\nimport CollectivePickerAsync from '../../../CollectivePickerAsync';\nimport Container from '../../../Container';\nimport { Flex } from '../../../Grid';\nimport MessageBox from '../../../MessageBox';\nimport StyledButton from '../../../StyledButton';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../../../StyledModal';\nimport { P } from '../../../Text';\nimport { TOAST_TYPE, useToasts } from '../../../ToastProvider';\n\nimport MemberForm from './MemberForm';\nimport { teamSectionQuery } from './queries';\n\nexport const inviteMemberMutation = gql`\n  mutation InviteMember(\n    $memberAccount: AccountReferenceInput!\n    $account: AccountReferenceInput!\n    $role: MemberRole!\n    $description: String\n    $since: DateTime\n  ) {\n    inviteMember(\n      memberAccount: $memberAccount\n      account: $account\n      role: $role\n      description: $description\n      since: $since\n    ) {\n      id\n      role\n      description\n      since\n    }\n  }\n`;\n\nconst InviteMemberModal = props => {\n  const { intl, collective, membersIds, cancelHandler } = props;\n\n  const { addToast } = useToasts();\n\n  const [member, setMember] = React.useState(null);\n  const mutationOptions = {\n    context: API_V2_CONTEXT,\n    refetchQueries: [\n      {\n        query: teamSectionQuery,\n        context: API_V2_CONTEXT,\n        variables: {\n          collectiveSlug: get(collective, 'slug'),\n          account: { slug: get(collective, 'slug') },\n        },\n      },\n    ],\n    awaitRefetchQueries: true,\n  };\n\n  const [inviteMemberAccount, { loading: isInviting, error: inviteError }] = useMutation(\n    inviteMemberMutation,\n    mutationOptions,\n  );\n\n  let submitMemberForm = null;\n\n  const bindSubmitForm = submitForm => {\n    submitMemberForm = submitForm;\n  };\n\n  const handleInviteMemberMutation = async values => {\n    const { description, role, since } = values;\n\n    try {\n      await inviteMemberAccount({\n        variables: {\n          memberAccount: {\n            slug: get(member, 'slug'),\n          },\n          account: { slug: get(collective, 'slug') },\n          description,\n          role,\n          since,\n          isInvitee: true,\n        },\n      });\n\n      addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: <FormattedMessage id=\"editTeam.member.invite.success\" defaultMessage=\"Member invited successfully.\" />,\n      });\n\n      cancelHandler();\n    } catch (error) {\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        message: <FormattedMessage id=\"editTeam.member.invite.error\" defaultMessage=\"Failed to invite member.\" />,\n      });\n    }\n  };\n\n  const handleSubmitForm = () => {\n    if (submitMemberForm) {\n      submitMemberForm();\n    }\n  };\n\n  return (\n    <Container>\n      <StyledModal width={688} onClose={cancelHandler}>\n        <ModalHeader mb={4}>\n          <FormattedMessage id=\"editTeam.member.invite\" defaultMessage=\"Invite Team Member\" />\n        </ModalHeader>\n        <ModalBody>\n          {inviteError && (\n            <Flex alignItems=\"center\" justifyContent=\"center\">\n              <MessageBox type=\"error\" withIcon m={[1, 3]} data-cy=\"cof-error-message\">\n                {inviteError.message}\n              </MessageBox>\n            </Flex>\n          )}\n          <Flex m={1} flexDirection=\"column\" mb={2}>\n            <P fontSize=\"14px\" lineHeight=\"20px\" fontWeight={700} mb={1}>\n              <FormattedMessage id=\"Tags.USER\" defaultMessage=\"User\" />\n            </P>\n            <CollectivePickerAsync\n              inputId=\"member-collective-picker\"\n              creatable\n              width=\"100%\"\n              minWidth={325}\n              onChange={option => setMember(option.value)}\n              isDisabled={Boolean(member)}\n              types={[CollectiveType.USER]}\n              filterResults={collectives => collectives.filter(c => !membersIds.includes(c.id))}\n              data-cy=\"member-collective-picker\"\n            />\n          </Flex>\n          <MemberForm\n            intl={intl}\n            collectiveImg={get(collective, 'imageUrl')}\n            bindSubmitForm={bindSubmitForm}\n            triggerSubmit={handleInviteMemberMutation}\n          />\n        </ModalBody>\n        <ModalFooter mt={6}>\n          <Container display=\"flex\" justifyContent={['center', 'flex-end']} flexWrap=\"Wrap\">\n            <StyledButton\n              mx={20}\n              my={1}\n              autoFocus\n              minWidth={140}\n              onClick={cancelHandler}\n              disabled={isInviting}\n              data-cy=\"confirmation-modal-cancel\"\n            >\n              <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n            </StyledButton>\n            <StyledButton\n              my={1}\n              minWidth={140}\n              buttonStyle=\"primary\"\n              data-cy=\"confirmation-modal-continue\"\n              loading={isInviting}\n              onClick={handleSubmitForm}\n            >\n              <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n            </StyledButton>\n          </Container>\n        </ModalFooter>\n      </StyledModal>\n    </Container>\n  );\n};\n\nInviteMemberModal.propTypes = {\n  collective: PropTypes.object,\n  cancelHandler: PropTypes.func,\n  intl: PropTypes.object.isRequired,\n  membersIds: PropTypes.array,\n};\n\nexport default InviteMemberModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/client';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { getLegacyIdForCollective } from '../../../../lib/collective.lib';\nimport { i18nGraphqlException } from '../../../../lib/errors';\nimport { API_V2_CONTEXT } from '../../../../lib/graphql/helpers';\n\nimport StyledButton from '../../../StyledButton';\nimport { TOAST_TYPE, useToasts } from '../../../ToastProvider';\n\nimport { inviteMemberMutation } from './InviteMemberModal';\n\nconst ResendMemberInviteBtn = ({ member, collective }) => {\n  const [inviteMember, { loading, error, data }] = useMutation(inviteMemberMutation, { context: API_V2_CONTEXT });\n  const success = !error && data?.inviteMember?.id;\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  return (\n    <StyledButton\n      buttonStyle={success ? 'successSecondary' : 'standard'}\n      buttonSize=\"tiny\"\n      mr={1}\n      loading={loading}\n      disabled={success}\n      data-cy=\"resend-invite-btn\"\n      onClick={async () => {\n        try {\n          await inviteMember({\n            variables: {\n              memberAccount: { id: member.account.id },\n              account: { legacyId: getLegacyIdForCollective(collective) },\n              role: member.role,\n            },\n          });\n        } catch (e) {\n          addToast({\n            type: TOAST_TYPE.ERROR,\n            title: intl.formatMessage({ defaultMessage: 'Cannot send member invitation' }),\n            message: i18nGraphqlException(intl, e),\n          });\n        }\n      }}\n    >\n      {success ? (\n        <FormattedMessage id=\"ResendInviteSuccessful\" defaultMessage=\"Invite sent\" />\n      ) : (\n        <FormattedMessage id=\"ResendInvite\" defaultMessage=\"Resend invite\" />\n      )}\n    </StyledButton>\n  );\n};\n\nResendMemberInviteBtn.propTypes = {\n  collective: PropTypes.object.isRequired,\n  member: PropTypes.shape({\n    role: PropTypes.string,\n    account: PropTypes.shape({ id: PropTypes.string.isRequired }).isRequired,\n  }),\n};\n\nexport default ResendMemberInviteBtn;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Edit } from '@styled-icons/material/Edit';\nimport { get, truncate } from 'lodash';\nimport { FormattedDate, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { FEATURES, isFeatureEnabled } from '../../../lib/allowed-features';\nimport { CollectiveType } from '../../../lib/constants/collectives';\nimport roles from '../../../lib/constants/roles';\nimport { i18nGraphqlException } from '../../../lib/errors';\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\nimport type {\n  Account,\n  AccountWithHost,\n  AccountWithParent,\n  Member,\n  MemberInvitation,\n} from '../../../lib/graphql/types/v2/graphql';\nimport formatMemberRole from '../../../lib/i18n/member-role';\nimport { getCollectivePageRoute } from '../../../lib/url-helpers';\n\nimport Avatar from '../../Avatar';\nimport Container from '../../Container';\nimport EditMemberModal from '../../edit-collective/sections/team/EditMemberModal';\nimport InviteMemberModal from '../../edit-collective/sections/team/InviteMemberModal';\nimport { teamSectionQuery } from '../../edit-collective/sections/team/queries';\nimport ResendMemberInviteBtn from '../../edit-collective/sections/team/ResendMemberInviteBtn';\nimport { Box, Flex, Grid } from '../../Grid';\nimport { getI18nLink } from '../../I18nFormatters';\nimport Link from '../../Link';\nimport Loading from '../../Loading';\nimport MemberRoleDescription from '../../MemberRoleDescription';\nimport MessageBox from '../../MessageBox';\nimport StyledButton from '../../StyledButton';\nimport StyledHr from '../../StyledHr';\nimport StyledRoundButton from '../../StyledRoundButton';\nimport StyledTag from '../../StyledTag';\nimport StyledTooltip from '../../StyledTooltip';\nimport { P } from '../../Text';\nimport { AdminSectionProps } from '../types';\n\nconst MemberContainer = styled(Container)`\n  display: block;\n  min-width: 164px;\n  background: white;\n  width: 170px;\n  height: 270px;\n  border-radius: 8px;\n  border: 1px solid #c0c5cc;\n`;\n\nconst InviteNewCard = styled(MemberContainer)`\n  border: 1px dashed #c0c5cc;\n  cursor: pointer;\n`;\n\n/** A container to center the logo above a horizontal bar */\nconst MemberLogoContainer = styled(Box)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  border-top: 1px solid #e6e8eb;\n`;\n\ntype MemberCardProps = {\n  member: Partial<Member & MemberInvitation>;\n  account: Partial<Account & AccountWithHost & AccountWithParent>;\n  index: number;\n  nbAdmins?: number;\n  refetch: () => void;\n};\n\nconst MemberCard = ({ member, account, index, nbAdmins, refetch }: MemberCardProps) => {\n  const intl = useIntl();\n  const [showEditModal, setShowEditModal] = React.useState(false);\n  const isInvitation = member.__typename === 'MemberInvitation';\n  const isInherited = member.inherited;\n  const memberCollective = member.account;\n  const collectiveId = memberCollective.id;\n  const memberKey = member.id ? `member-${member.id}` : `collective-${collectiveId}`;\n  const isAdmin = member.role === roles.ADMIN;\n  const isLastAdmin =\n    isAdmin && member.id && nbAdmins <= (account.host?.policies?.COLLECTIVE_MINIMUM_ADMINS?.numberOfAdmins || 1);\n\n  return (\n    <MemberContainer position=\"relative\" key={`member-${index}-${memberKey}-${account.id}`} data-cy={`member-${index}`}>\n      <Container position=\"absolute\" top=\"1rem\" right=\"1rem\">\n        {showEditModal && (\n          <EditMemberModal\n            key={`member-edit-modal-${index}-${memberKey}`}\n            intl={intl}\n            member={member}\n            collective={account}\n            cancelHandler={() => setShowEditModal(false)}\n            onEdit={refetch}\n            isLastAdmin={isLastAdmin}\n            canRemove={!isLastAdmin}\n          />\n        )}\n        <StyledTooltip\n          noTooltip={!isInherited}\n          content={\n            <FormattedMessage\n              id=\"MemberEdit.Disable.Inherited\"\n              defaultMessage=\"This member is inherited from {parentCollectiveName} and cannot be removed.\"\n              values={{ parentCollectiveName: account.parent?.name }}\n            />\n          }\n        >\n          <StyledRoundButton onClick={() => setShowEditModal(true)} size={26} disabled={isInherited}>\n            <Edit height={16} />\n          </StyledRoundButton>\n        </StyledTooltip>\n        {/* )} */}\n      </Container>\n      <Flex flexDirection=\"column\" alignItems=\"center\" mb={2}>\n        <MemberLogoContainer mt={50}>\n          <Avatar mt={-28} src={get(memberCollective, 'imageUrl')} radius={56} />\n        </MemberLogoContainer>\n        <P fontSize=\"14px\" lineHeight=\"20px\" m={2} textAlign=\"center\">\n          {get(memberCollective, 'name')}\n        </P>\n        <StyledTag textTransform=\"uppercase\" display=\"block\" mb={2} closeButtonProps={false}>\n          {formatMemberRole(intl, get(member, 'role'))}\n        </StyledTag>\n        <P fontSize=\"10px\" lineHeight=\"14px\" fontWeight={400} color=\"#9D9FA3\" mb={2}>\n          <FormattedMessage id=\"user.since.label\" defaultMessage=\"Since\" />:{' '}\n          <FormattedDate value={get(member, 'since')} />\n        </P>\n        {!isInvitation && (\n          <Box mb={4} overflow=\"hidden\" height={32}>\n            <P fontSize=\"11px\" lineHeight=\"16px\" mx={2} fontWeight={400}>\n              {truncate(get(member, 'description'), {\n                length: 30,\n              })}\n            </P>\n          </Box>\n        )}\n        {isInvitation && (\n          <React.Fragment>\n            <Box mb={4}>\n              <StyledTooltip\n                content={\n                  <FormattedMessage\n                    id=\"members.pending.details\"\n                    defaultMessage=\"This person has not accepted their invitation yet\"\n                  />\n                }\n              >\n                <StyledTag\n                  data-cy=\"member-pending-tag\"\n                  textTransform=\"uppercase\"\n                  display=\"block\"\n                  type=\"info\"\n                  closeButtonProps={false}\n                >\n                  <FormattedMessage id=\"Pending\" defaultMessage=\"Pending\" />\n                </StyledTag>\n              </StyledTooltip>\n            </Box>\n            <ResendMemberInviteBtn member={member} collective={account} />\n          </React.Fragment>\n        )}\n      </Flex>\n    </MemberContainer>\n  );\n};\n\ntype ChildrenCollectiveSectionProps = {\n  account: Partial<Account & AccountWithHost & AccountWithParent>;\n  refetch: () => void;\n};\n\nconst ChildrenCollectiveSection = ({ account, refetch }: ChildrenCollectiveSectionProps) => {\n  return (\n    <React.Fragment>\n      <Box>\n        <P fontSize=\"16px\" mt={4}>\n          {account.name}\n        </P>\n      </Box>\n      <Grid\n        mt={3}\n        gridGap={20}\n        gridTemplateColumns=\"repeat(auto-fill, 164px)\"\n        flexGrow=\"1\"\n        gap=\"2px\"\n        justifyContent={['center', null, 'start']}\n      >\n        {account.members.nodes.map((m: Member & MemberInvitation, idx) => (\n          <MemberCard key={`${m.id}-${account.id}`} index={idx} member={m} account={account} refetch={refetch} />\n        ))}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst Team = (props: AdminSectionProps) => {\n  const [showInviteModal, setShowInviteModal] = React.useState(false);\n  const intl = useIntl();\n  const { loading, data, refetch, error } = useQuery(teamSectionQuery, {\n    context: API_V2_CONTEXT,\n    variables: { collectiveSlug: props.account.slug, account: { slug: props.account.slug } },\n  });\n\n  if (loading) {\n    return <Loading />;\n  } else if (error) {\n    return (\n      <MessageBox type=\"error\" withIcon fontSize=\"13px\">\n        {i18nGraphqlException(intl, error)}\n      </MessageBox>\n    );\n  } else if (data?.account?.isFrozen) {\n    return (\n      <MessageBox type=\"warning\" fontSize=\"13px\" withIcon>\n        <FormattedMessage defaultMessage=\"This account is currently frozen, its team members therefore cannot be edited.\" />{' '}\n        {isFeatureEnabled(data.account.host, FEATURES.CONTACT_FORM) && (\n          <FormattedMessage\n            defaultMessage=\"Please <ContactLink>contact</ContactLink> your fiscal host for more details.\"\n            values={{ ContactLink: getI18nLink({ href: `${getCollectivePageRoute(data.account.host)}/contact` }) }}\n          />\n        )}\n      </MessageBox>\n    );\n  }\n\n  const host = data?.account?.host;\n  const members = [...(data?.account?.members?.nodes || []), ...(data?.memberInvitations || [])];\n  const nbAdmins = members.filter(m => m.role === roles.ADMIN && m.id).length;\n  const childrenAccountsWithMembers =\n    data?.account?.childrenAccounts?.nodes?.filter(child => child.members?.nodes?.length > 0) || [];\n\n  return (\n    <React.Fragment>\n      <Box>\n        <P fontSize=\"24px\" fontWeight=\"700\" lineHeight=\"32px\" mb={3}>\n          <FormattedMessage id=\"ContributorsFilter.Core\" defaultMessage=\"Team\" />\n        </P>\n      </Box>\n      <Box>\n        {[CollectiveType.COLLECTIVE, CollectiveType.FUND].includes(props.account.type) &&\n          Boolean(host?.policies?.COLLECTIVE_MINIMUM_ADMINS?.numberOfAdmins) && (\n            <P lineHeight=\"20px\" letterSpacing=\"normal\" mt={3}>\n              <FormattedMessage\n                defaultMessage=\"Your host requires that Collectives have {numberOfAdmins, plural, one {# active administrator} other {# active administrators} }.\"\n                values={host.policies.COLLECTIVE_MINIMUM_ADMINS}\n              />\n              {host?.policies?.COLLECTIVE_MINIMUM_ADMINS.freeze && (\n                <React.Fragment>\n                  &nbsp;\n                  <FormattedMessage\n                    defaultMessage=\"In case of a shortfall, your collective will be frozen until the minimum required administrators are added.\"\n                    values={host.policies.COLLECTIVE_MINIMUM_ADMINS}\n                  />\n                </React.Fragment>\n              )}\n            </P>\n          )}\n\n        {host?.policies?.COLLECTIVE_MINIMUM_ADMINS &&\n          nbAdmins < host.policies.COLLECTIVE_MINIMUM_ADMINS.numberOfAdmins && (\n            <MessageBox type=\"error\" my={3} fontSize=\"13px\">\n              <FormattedMessage\n                defaultMessage=\"Your collective doesn’t meet the requirements of having a minimum of {numberOfAdmins, plural, one {# administrator} other {# administrators} }. Add more administrators to comply with your host’s policy.\"\n                values={host.policies.COLLECTIVE_MINIMUM_ADMINS}\n              />\n            </MessageBox>\n          )}\n\n        <StyledHr mt={3} borderColor=\"black.200\" flex=\"1 1\" />\n        <P as=\"ul\" fontSize=\"14px\" lineHeight=\"18px\" mt={4}>\n          {[roles.ADMIN, roles.MEMBER, roles.ACCOUNTANT].map(role => (\n            <Box as=\"li\" key={role} mb={2}>\n              {MemberRoleDescription({ role })}\n            </Box>\n          ))}\n        </P>\n      </Box>\n\n      <Grid\n        mt={4}\n        gridGap={20}\n        gridTemplateColumns=\"repeat(auto-fill, 164px)\"\n        flexGrow=\"1\"\n        gap=\"2px\"\n        justifyContent={['center', null, 'start']}\n      >\n        <InviteNewCard>\n          <Flex alignItems=\"center\" justifyContent=\"center\" height=\"100%\" onClick={() => setShowInviteModal(true)}>\n            <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n              <StyledRoundButton data-cy=\"invite-member-btn\" buttonStyle=\"dark\" fontSize={25}>\n                +\n              </StyledRoundButton>\n              <P mt={3} color=\"black.700\">\n                <FormattedMessage id=\"editTeam.member.invite\" defaultMessage=\"Invite Team Member\" />\n              </P>\n            </Flex>\n          </Flex>\n        </InviteNewCard>\n        {members.map((m, idx) => (\n          <MemberCard\n            key={`${m.id}-${props.account.id}`}\n            index={idx}\n            member={m}\n            account={props.account}\n            nbAdmins={nbAdmins}\n            refetch={refetch}\n          />\n        ))}\n      </Grid>\n\n      {childrenAccountsWithMembers.length > 0 && (\n        <React.Fragment>\n          <P fontSize=\"18px\" fontWeight=\"700\" lineHeight=\"32px\" mt={5}>\n            <FormattedMessage id=\"OtherAdmins\" defaultMessage=\"Other Admins\" />\n          </P>\n          <P>\n            <FormattedMessage defaultMessage=\"This collective has Events and Projects that hold members with privileged access roles outside your admin team.\" />\n          </P>\n          {childrenAccountsWithMembers.map(child => (\n            <ChildrenCollectiveSection account={child} key={child.id} refetch={refetch} />\n          ))}\n        </React.Fragment>\n      )}\n\n      {error && (\n        <MessageBox type=\"error\" withIcon my={3}>\n          {error.message}\n        </MessageBox>\n      )}\n      <Flex justifyContent=\"center\" flexWrap=\"wrap\" mt={5}>\n        <Link href={`/${props.account.slug}`}>\n          <StyledButton mx={2} minWidth={200}>\n            <FormattedMessage id=\"ViewCollectivePage\" defaultMessage=\"View Profile page\" />\n          </StyledButton>\n        </Link>\n      </Flex>\n      {showInviteModal && (\n        <InviteMemberModal\n          intl={intl}\n          collective={props.account}\n          membersIds={members.map(m => m.id)}\n          cancelHandler={() => setShowInviteModal(false)}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Team;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { values } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport Container from '../Container';\nimport { Box } from '../Grid';\nimport PendingApplications from '../host-dashboard/applications/PendingApplications';\nimport HostDashboardExpenses from '../host-dashboard/HostDashboardExpenses';\nimport HostDashboardHostedCollectives from '../host-dashboard/HostDashboardHostedCollectives';\nimport HostDashboardReports from '../host-dashboard/HostDashboardReports';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport NotFound from '../NotFound';\nimport { H2 } from '../Text';\n\nimport AccountSettings from './sections/AccountSettings';\nimport FinancialContributions from './sections/FinancialContributions';\nimport HostVirtualCards from './sections/HostVirtualCards';\nimport InvoicesReceipts from './sections/InvoicesReceipts';\nimport NotificationsSettings from './sections/NotificationsSettings';\nimport PendingContributions from './sections/PendingContributions';\nimport TeamSettings from './sections/Team';\nimport {\n  COLLECTIVE_SECTIONS,\n  FISCAL_HOST_SECTIONS,\n  HOST_DASHBOARD_SECTIONS,\n  LEGACY_COLLECTIVE_SETTINGS_SECTIONS,\n  SECTION_LABELS,\n} from './constants';\n\nconst ADMIN_PANEL_SECTIONS = {\n  [HOST_DASHBOARD_SECTIONS.HOSTED_COLLECTIVES]: HostDashboardHostedCollectives,\n  [HOST_DASHBOARD_SECTIONS.FINANCIAL_CONTRIBUTIONS]: FinancialContributions,\n  [HOST_DASHBOARD_SECTIONS.PENDING_CONTRIBUTIONS]: PendingContributions,\n  [HOST_DASHBOARD_SECTIONS.EXPENSES]: HostDashboardExpenses,\n  [HOST_DASHBOARD_SECTIONS.PENDING_APPLICATIONS]: PendingApplications,\n  [HOST_DASHBOARD_SECTIONS.REPORTS]: HostDashboardReports,\n  [HOST_DASHBOARD_SECTIONS.HOST_VIRTUAL_CARDS]: HostVirtualCards,\n  [COLLECTIVE_SECTIONS.NOTIFICATIONS]: NotificationsSettings,\n  [COLLECTIVE_SECTIONS.TEAM]: TeamSettings,\n};\n\nconst FISCAL_HOST_SETTINGS_SECTIONS = {\n  [FISCAL_HOST_SECTIONS.INVOICES_RECEIPTS]: InvoicesReceipts,\n};\n\nconst Title = styled(H2)`\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 32px;\n`;\n\nconst AdminPanelSection = ({ collective, isLoading, section, subpath }) => {\n  const { formatMessage } = useIntl();\n\n  if (isLoading) {\n    return (\n      <div>\n        <LoadingPlaceholder height={26} mb={4} maxWidth={500} />\n        <LoadingPlaceholder height={300} />\n      </div>\n    );\n  }\n\n  const AdminSectionComponent = ADMIN_PANEL_SECTIONS[section];\n  if (AdminSectionComponent) {\n    return (\n      <Container width=\"100%\">\n        <AdminSectionComponent account={collective} hostSlug={collective.slug} subpath={subpath} isNewAdmin />\n      </Container>\n    );\n  }\n\n  // Fiscal Host Settings\n  const FiscalHostSettingsComponent = FISCAL_HOST_SETTINGS_SECTIONS[section];\n  if (FiscalHostSettingsComponent) {\n    return (\n      <Container width=\"100%\">\n        <FiscalHostSettingsComponent collective={collective} />\n      </Container>\n    );\n  }\n\n  // Form\n  if (values(LEGACY_COLLECTIVE_SETTINGS_SECTIONS).includes(section)) {\n    return (\n      <Container width=\"100%\">\n        {SECTION_LABELS[section] && (\n          <Box mb={3}>\n            <Title>{formatMessage(SECTION_LABELS[section])}</Title>\n          </Box>\n        )}\n        <AccountSettings account={collective} section={section} />\n      </Container>\n    );\n  }\n\n  return (\n    <Container display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      <NotFound />\n    </Container>\n  );\n};\n\nAdminPanelSection.propTypes = {\n  isLoading: PropTypes.bool,\n  section: PropTypes.string,\n  subpath: PropTypes.arrayOf(PropTypes.string),\n  /** The account. Can be null if isLoading is true */\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    isHost: PropTypes.bool,\n  }),\n};\n\nexport default AdminPanelSection;\n","export const HOST_SECTIONS = {\n  EXPENSES: 'expenses',\n  HOSTED_COLLECTIVES: 'hosted-collectives',\n  PENDING_APPLICATIONS: 'pending-applications',\n  REPORTS: 'reports',\n  FINANCIAL_CONTRIBUTIONS: 'orders',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled, { css } from 'styled-components';\n\nimport { getSettingsRoute } from '../../lib/url-helpers';\n\nimport { Box } from '../Grid';\nimport Link from '../Link';\nimport StyledLink from '../StyledLink';\n\nimport { AdminPanelContext } from './AdminPanelContext';\nimport { SECTION_LABELS } from './constants';\n\nconst MenuLinkContainer = styled.li`\n  margin: 4px -8px 0px;\n  a,\n  ${StyledLink} {\n    display: flex;\n    justify-content: space-between;\n    font-weight: 500;\n    font-size: 13px;\n    line-height: 16px;\n    line-height: 22px;\n    padding: 4px 12px;\n    border-radius: 100px;\n    cursor: pointer;\n    color: ${props => props.theme.colors.black[700]};\n    &:hover {\n      color: ${props => props.theme.colors.primary[700]};\n    }\n    ${props =>\n      props.isSelected &&\n      css`\n        background: ${props => props.theme.colors.primary[50]};\n        color: ${props => props.theme.colors.primary[700]};\n        font-weight: 700;\n        font-size: 14px;\n      `}\n    ${props =>\n      props.isStrong &&\n      css`\n        font-weight: 700;\n        font-size: 15px;\n        line-height: 22px;\n      `}\n  }\n`;\n\nexport const MenuLink = ({ collective, section, children, onClick, isSelected, isStrong, if: conditional, isBeta }) => {\n  const { selectedSection } = React.useContext(AdminPanelContext);\n  const { formatMessage } = useIntl();\n  if (conditional === false) {\n    return null;\n  }\n\n  if (!children && SECTION_LABELS[section]) {\n    children = formatMessage(SECTION_LABELS[section]);\n  }\n\n  return (\n    <MenuLinkContainer isSelected={isSelected || (section && selectedSection === section)} isStrong={isStrong}>\n      {onClick ? (\n        <StyledLink as=\"button\" onClick={onClick} data-cy={`menu-item-${section}`}>\n          {children}\n          {isBeta ? ' (Beta)' : ''}\n        </StyledLink>\n      ) : (\n        <Link href={getSettingsRoute(collective, section)} data-cy={`menu-item-${section}`}>\n          {children}\n          {isBeta ? ' (Beta)' : ''}\n        </Link>\n      )}\n    </MenuLinkContainer>\n  );\n};\n\nMenuLink.propTypes = {\n  if: PropTypes.bool,\n  section: PropTypes.string,\n  selectedSection: PropTypes.string,\n  children: PropTypes.node,\n  isSelected: PropTypes.bool,\n  isBeta: PropTypes.bool,\n  isStrong: PropTypes.bool,\n  onClick: PropTypes.func,\n  afterClick: PropTypes.func,\n  collective: PropTypes.shape({\n    slug: PropTypes.string,\n  }),\n};\n\nexport const MenuSectionHeader = styled.div`\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 16px;\n  text-transform: uppercase;\n  padding: 12px 0;\n  margin-bottom: 12px;\n  border-bottom: 1px solid ${props => props.theme.colors.black[700]};\n  color: ${props => props.theme.colors.black[800]};\n`;\n\nexport const MenuContainer = styled.ul`\n  margin: 0;\n  margin-bottom: 100px;\n  width: 256px;\n  max-width: 100%;\n\n  a {\n    color: ${props => props.theme.colors.black[900]};\n    &:hover {\n      color: ${props => props.theme.colors.black[700]};\n    }\n  }\n\n  &,\n  & ul {\n    list-style-type: none;\n    padding: 0;\n  }\n`;\n\nexport const MenuGroup = ({ if: conditional, children, ...props }) => {\n  return conditional === false ? null : (\n    <Box as=\"ul\" {...props}>\n      {children}\n    </Box>\n  );\n};\n\nMenuGroup.propTypes = {\n  if: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport const useSubmenu = () => {\n  const [submenuContent, setSubmenu] = React.useState();\n  const menuContent = submenuContent && (\n    <React.Fragment>\n      <ul>\n        <MenuLink onClick={() => setSubmenu(undefined)}>\n          <span>\n            &larr;&nbsp;\n            <FormattedMessage id=\"Back\" defaultMessage=\"Back\" />\n          </span>\n        </MenuLink>\n      </ul>\n      {submenuContent}\n    </React.Fragment>\n  );\n  const SubMenu = ({ label, children, if: conditional }) => {\n    return (\n      <MenuLink\n        if={conditional}\n        onClick={() =>\n          setSubmenu(\n            <React.Fragment>\n              <MenuSectionHeader>{label}</MenuSectionHeader>\n\n              {children}\n            </React.Fragment>,\n          )\n        }\n      >\n        <span>{label}</span>&nbsp;\n        <span>&rarr;</span>\n      </MenuLink>\n    );\n  };\n  SubMenu.propTypes = {\n    if: PropTypes.bool,\n    label: PropTypes.node,\n    children: PropTypes.node,\n  };\n  return { menuContent, SubMenu };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport hasFeature, { FEATURES } from '../../lib/allowed-features';\nimport { isHostAccount, isIndividualAccount, isSelfHostedAccount } from '../../lib/collective.lib';\nimport { getCollectiveTypeKey, isOneOfTypes, isType } from '../../lib/collective-sections';\nimport { CollectiveType } from '../../lib/constants/collectives';\n\nimport { HOST_SECTIONS } from '../host-dashboard/constants';\n\nimport {\n  ABOUT_ORG_SECTIONS,\n  ALL_SECTIONS,\n  COLLECTIVE_SECTIONS,\n  FISCAL_HOST_SECTIONS,\n  HOST_DASHBOARD_SECTIONS,\n  ORG_BUDGET_SECTIONS,\n  PAGE_TITLES,\n} from './constants';\nimport { MenuGroup, MenuLink, MenuSectionHeader, useSubmenu } from './MenuComponents';\n\nconst { USER, ORGANIZATION, COLLECTIVE, FUND, EVENT, PROJECT } = CollectiveType;\n\nconst OrganizationSettingsMenuLinks = ({ collective, isAccountantOnly }) => {\n  return (\n    <React.Fragment>\n      {!isAccountantOnly && (\n        <React.Fragment>\n          <MenuLink collective={collective} section={ABOUT_ORG_SECTIONS.INFO} />\n          <MenuLink collective={collective} section={ABOUT_ORG_SECTIONS.COLLECTIVE_PAGE} />\n          <MenuLink collective={collective} section={ABOUT_ORG_SECTIONS.CONNECTED_ACCOUNTS} />\n          <MenuLink collective={collective} section={ABOUT_ORG_SECTIONS.TEAM} />\n          <MenuLink collective={collective} section={ORG_BUDGET_SECTIONS.PAYMENT_METHODS} />\n        </React.Fragment>\n      )}\n      <MenuLink collective={collective} section={ORG_BUDGET_SECTIONS.PAYMENT_RECEIPTS} />\n      {!isAccountantOnly && (\n        <React.Fragment>\n          <MenuLink collective={collective} section={ORG_BUDGET_SECTIONS.GIFT_CARDS} />\n          <MenuLink collective={collective} section={ALL_SECTIONS.WEBHOOKS} />\n          <MenuLink collective={collective} section={COLLECTIVE_SECTIONS.FOR_DEVELOPERS} />\n          <MenuLink collective={collective} section={COLLECTIVE_SECTIONS.ACTIVITY_LOG} />\n          <MenuLink collective={collective} section={FISCAL_HOST_SECTIONS.SECURITY} />\n          <MenuLink collective={collective} section={ALL_SECTIONS.ADVANCED} />\n          {!isHostAccount(collective) && <MenuLink collective={collective} section={ALL_SECTIONS.FISCAL_HOSTING} />}\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nOrganizationSettingsMenuLinks.propTypes = {\n  collective: PropTypes.object,\n  isAccountantOnly: PropTypes.bool,\n};\n\nconst Menu = ({ collective, isAccountantOnly }) => {\n  const { formatMessage } = useIntl();\n  const isHost = isHostAccount(collective);\n  const isIndividual = isIndividualAccount(collective);\n  const isSimpleOrg = collective.type === 'ORGANIZATION' && !isHost;\n  const { menuContent, SubMenu } = useSubmenu();\n\n  if (menuContent) {\n    return menuContent;\n  } else {\n    return (\n      <React.Fragment>\n        {/** Host settings */}\n        <MenuGroup if={isHost} mb={24}>\n          <MenuSectionHeader>\n            <FormattedMessage id=\"HostDashboard\" defaultMessage=\"Host Dashboard\" />\n          </MenuSectionHeader>\n          <MenuLink collective={collective} section={HOST_SECTIONS.EXPENSES} if={!isAccountantOnly} />\n          <MenuLink collective={collective} section={HOST_SECTIONS.FINANCIAL_CONTRIBUTIONS} if={!isAccountantOnly} />\n          <MenuLink\n            collective={collective}\n            section={HOST_DASHBOARD_SECTIONS.PENDING_CONTRIBUTIONS}\n            if={!isAccountantOnly}\n          />\n          <MenuLink collective={collective} section={HOST_SECTIONS.PENDING_APPLICATIONS} if={!isAccountantOnly} />\n          <MenuLink collective={collective} section={HOST_SECTIONS.HOSTED_COLLECTIVES} if={!isAccountantOnly} />\n          <MenuLink\n            collective={collective}\n            section={HOST_DASHBOARD_SECTIONS.HOST_VIRTUAL_CARDS}\n            if={!isAccountantOnly && hasFeature(collective, FEATURES.VIRTUAL_CARDS)}\n          />\n          <MenuLink collective={collective} section={HOST_SECTIONS.REPORTS} isBeta />\n        </MenuGroup>\n\n        {/** Organization settings */}\n        <MenuGroup if={isHost || isType(collective, ORGANIZATION)}>\n          <MenuSectionHeader>\n            <FormattedMessage id=\"Settings\" defaultMessage=\"Settings\" />\n          </MenuSectionHeader>\n          <SubMenu\n            label={formatMessage(PAGE_TITLES[getCollectiveTypeKey(collective.type)])}\n            if={isType(collective, ORGANIZATION) && isHost}\n          >\n            <OrganizationSettingsMenuLinks collective={collective} isAccountantOnly={isAccountantOnly} />\n            <MenuLink collective={collective} section={ORG_BUDGET_SECTIONS.TIERS} />\n          </SubMenu>\n          <SubMenu\n            label={<FormattedMessage id=\"AdminPanel.FiscalHostSettings\" defaultMessage=\"Fiscal Host Settings\" />}\n            if={isHost && !isAccountantOnly}\n          >\n            <MenuLink collective={collective} section={FISCAL_HOST_SECTIONS.FISCAL_HOSTING} />\n            <MenuGroup if={isHost}>\n              <MenuLink collective={collective} section={FISCAL_HOST_SECTIONS.INVOICES_RECEIPTS} />\n              <MenuLink collective={collective} section={FISCAL_HOST_SECTIONS.RECEIVING_MONEY} />\n              <MenuLink collective={collective} section={FISCAL_HOST_SECTIONS.SENDING_MONEY} />\n              <MenuLink\n                collective={collective}\n                section={FISCAL_HOST_SECTIONS.HOST_VIRTUAL_CARDS_SETTINGS}\n                if={hasFeature(collective, FEATURES.VIRTUAL_CARDS)}\n              />\n              <MenuLink\n                collective={collective}\n                section={FISCAL_HOST_SECTIONS.POLICIES}\n                if={isOneOfTypes(collective, [USER, ORGANIZATION])}\n              />\n            </MenuGroup>\n          </SubMenu>\n        </MenuGroup>\n\n        {/** General non-host organization settings (hosts organizations have a dedicated sub-menu) */}\n        <MenuGroup if={isSimpleOrg}>\n          <OrganizationSettingsMenuLinks collective={collective} isAccountantOnly={isAccountantOnly} />\n        </MenuGroup>\n\n        {/** General settings for everyone except organizations */}\n        <MenuGroup if={!isType(collective, ORGANIZATION) && !isAccountantOnly}>\n          <MenuLink collective={collective} section={COLLECTIVE_SECTIONS.INFO} />\n          <MenuLink collective={collective} section={COLLECTIVE_SECTIONS.COLLECTIVE_PAGE} />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.COLLECTIVE_GOALS}\n            if={isOneOfTypes(collective, [COLLECTIVE, PROJECT])}\n          />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.CONNECTED_ACCOUNTS}\n            if={isType(collective, COLLECTIVE)}\n          />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.POLICIES}\n            if={isOneOfTypes(collective, [COLLECTIVE, FUND])}\n          />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.CUSTOM_EMAIL}\n            if={isOneOfTypes(collective, [COLLECTIVE, EVENT, PROJECT])}\n          />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.EXPORT}\n            if={isOneOfTypes(collective, [COLLECTIVE, EVENT, PROJECT])}\n          />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.HOST}\n            if={isOneOfTypes(collective, [COLLECTIVE, FUND])}\n          />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.TEAM}\n            if={isOneOfTypes(collective, [COLLECTIVE, FUND, ORGANIZATION, EVENT, PROJECT])}\n          />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.PAYMENT_METHODS}\n            if={['ACTIVE', 'AVAILABLE'].includes(collective.features.USE_PAYMENT_METHODS)}\n          />\n          <MenuLink collective={collective} section={COLLECTIVE_SECTIONS.PAYMENT_RECEIPTS} if={isIndividual} />\n          <MenuLink collective={collective} section={COLLECTIVE_SECTIONS.NOTIFICATIONS} if={isIndividual} />\n          <MenuLink\n            collective={collective}\n            section={ORG_BUDGET_SECTIONS.GIFT_CARDS}\n            if={['ACTIVE', 'AVAILABLE'].includes(collective.features.EMIT_GIFT_CARDS)}\n          />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.VIRTUAL_CARDS}\n            if={\n              isOneOfTypes(collective, [COLLECTIVE, FUND, EVENT, PROJECT]) &&\n              hasFeature(collective.host, FEATURES.VIRTUAL_CARDS) &&\n              collective.isApproved\n            }\n          />\n          <MenuLink collective={collective} section={COLLECTIVE_SECTIONS.TICKETS} if={isType(collective, EVENT)} />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.TIERS}\n            if={isOneOfTypes(collective, [COLLECTIVE, FUND, EVENT, PROJECT])}\n          />\n          <MenuLink collective={collective} section={COLLECTIVE_SECTIONS.WEBHOOKS} />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.AUTHORIZED_APPS}\n            if={isType(collective, USER)}\n          />\n          <MenuLink collective={collective} section={COLLECTIVE_SECTIONS.USER_SECURITY} if={isIndividual} />\n          <MenuLink\n            collective={collective}\n            section={COLLECTIVE_SECTIONS.FOR_DEVELOPERS}\n            if={isOneOfTypes(collective, [COLLECTIVE, USER])}\n          />\n          <MenuLink collective={collective} section={COLLECTIVE_SECTIONS.ACTIVITY_LOG} />\n          <MenuLink\n            collective={collective}\n            section={FISCAL_HOST_SECTIONS.SECURITY}\n            if={isOneOfTypes(collective, [COLLECTIVE, FUND, ORGANIZATION])}\n          />\n          <MenuLink collective={collective} section={COLLECTIVE_SECTIONS.ADVANCED} />\n        </MenuGroup>\n        <MenuGroup if={isSelfHostedAccount(collective) && !isAccountantOnly} mt={24}>\n          <MenuLink collective={collective} section={FISCAL_HOST_SECTIONS.INVOICES_RECEIPTS} />\n          <MenuLink collective={collective} section={FISCAL_HOST_SECTIONS.RECEIVING_MONEY} />\n          <MenuLink collective={collective} section={FISCAL_HOST_SECTIONS.SENDING_MONEY} />\n          <MenuLink\n            collective={collective}\n            section={ORG_BUDGET_SECTIONS.FINANCIAL_CONTRIBUTIONS}\n            if={isType(collective, COLLECTIVE)}\n          />\n        </MenuGroup>\n      </React.Fragment>\n    );\n  }\n};\n\nMenu.propTypes = {\n  isAccountantOnly: PropTypes.bool,\n  collective: PropTypes.shape({\n    slug: PropTypes.string,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    isHost: PropTypes.bool,\n    host: PropTypes.object,\n    settings: PropTypes.object,\n    features: PropTypes.shape({\n      USE_PAYMENT_METHODS: PropTypes.string,\n      EMIT_GIFT_CARDS: PropTypes.string,\n    }),\n    isApproved: PropTypes.bool,\n  }),\n};\n\nexport default Menu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getCollectivePageRoute } from '../../lib/url-helpers';\n\nimport Avatar from '../Avatar';\nimport { Box } from '../Grid';\nimport Link from '../Link';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport { H1 } from '../Text';\n\nimport Menu from './Menu';\nimport { MenuContainer } from './MenuComponents';\n\nconst AdminPanelSideBar = ({ collective, isAccountantOnly, isLoading, selectedSection, onRoute, ...props }) => {\n  const pageUrl = getCollectivePageRoute(collective);\n  return (\n    <Box {...props}>\n      <MenuContainer>\n        <Box mb={32}>\n          {isLoading ? (\n            <LoadingPlaceholder height={56} width={56} borderRadius=\"50%\" />\n          ) : (\n            <Link href={pageUrl} data-cy=\"menu-account-avatar-link\">\n              <Avatar collective={collective} radius={56} />\n            </Link>\n          )}\n          <H1 fontSize=\"16px\" lineHeight=\"24px\" fontWeight=\"700\" letterSpacing=\"0.04px\" mb={16} mt={12}>\n            {isLoading ? (\n              <LoadingPlaceholder height={24} maxWidth=\"75%\" />\n            ) : (\n              <Link href={pageUrl}>{collective.name}</Link>\n            )}\n          </H1>\n        </Box>\n\n        {isLoading ? (\n          [...Array(5).keys()].map(i => (\n            <li key={i}>\n              <LoadingPlaceholder height={24} mb={2} borderRadius={8} maxWidth=\"80%\" />\n            </li>\n          ))\n        ) : (\n          <Menu {...{ collective, selectedSection, onRoute, isAccountantOnly }} />\n        )}\n      </MenuContainer>\n    </Box>\n  );\n};\n\nAdminPanelSideBar.propTypes = {\n  isLoading: PropTypes.bool,\n  selectedSection: PropTypes.string,\n  collective: PropTypes.shape({\n    slug: PropTypes.string,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    isHost: PropTypes.bool,\n  }),\n  isAccountantOnly: PropTypes.bool,\n  onRoute: PropTypes.func,\n};\n\nexport default AdminPanelSideBar;\n","/* eslint-disable styled-components-a11y/click-events-have-key-events */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu2 as MenuIcon } from '@styled-icons/remix-line/Menu2';\nimport FocusTrap from 'focus-trap-react';\nimport { useRouter } from 'next/router';\nimport { createPortal } from 'react-dom';\nimport { useIntl } from 'react-intl';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nimport { getCollectiveTypeKey } from '../../lib/collective-sections';\nimport { getCollectivePageRoute } from '../../lib/url-helpers';\n\nimport Avatar from '../Avatar';\nimport { Box, Flex } from '../Grid';\nimport Link from '../Link';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport { fadeIn } from '../StyledKeyframes';\n\nimport { PAGE_TITLES, SECTION_LABELS } from './constants';\nimport SideBar from './SideBar';\n\nconst MenuWrapper = styled(Flex)`\n  position: fixed;\n  top: 0px;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: ${props => props.zindex || 3000};\n`;\n\nexport const MenuBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.6);\n  z-index: 2500;\n  display: block;\n  animation: ${fadeIn} 0.25s;\n  will-change: opacity;\n`;\n\nconst SideBarWrapper = styled(Flex)`\n  z-index: 2600;\n  background: #fff;\n`;\n\nconst GlobalModalStyle = createGlobalStyle`\n  body {\n    overflow: hidden;\n  }\n`;\n\nconst Container = styled(Flex)`\n  height: 64px;\n  padding: 12px 16px;\n  position: sticky;\n  top: 0;\n  z-index: 999;\n\n  background-color: #fff;\n  color: ${props => props.theme.colors.black[600]};\n\n  box-shadow: 0px 1px 4px 1px rgba(49, 50, 51, 0.1);\n`;\n\nconst Title = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n  letter-spacing: 0.06em;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.black[700]};\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Separator = styled(Box)`\n  font-size: 14px;\n  font-weight: 700;\n  line-height: 20px;\n  color: ${props => props.theme.colors.black[800]};\n`;\n\nconst Section = styled.div`\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 26px;\n  color: ${props => props.theme.colors.black[900]};\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst MenuLink = styled.div`\n  cursor: pointer;\n  color: ${props => props.theme.colors.black[700]};\n  &:hover {\n    color: ${props => props.theme.colors.primary[700]};\n  }\n`;\n\nconst AdminPanelTopBar = ({ collective, selectedSection, isLoading, ...props }) => {\n  const { formatMessage } = useIntl();\n  const router = useRouter();\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleRouteChange = () => {\n      setMenuOpen(false);\n    };\n\n    router.events.on('routeChangeStart', handleRouteChange);\n    return () => {\n      router.events.off('routeChangeStart', handleRouteChange);\n    };\n  }, []);\n\n  return (\n    <Container alignItems=\"center\" {...props}>\n      <Box mr=\"14px\">\n        <MenuLink tabIndex=\"0\" role=\"button\" onClick={() => setMenuOpen(true)}>\n          <MenuIcon size=\"24px\" />\n        </MenuLink>\n      </Box>\n      <Box mr=\"20px\">\n        {isLoading ? (\n          <LoadingPlaceholder height={40} width={40} />\n        ) : (\n          <Link href={getCollectivePageRoute(collective)}>\n            <Avatar collective={collective} radius={40} />\n          </Link>\n        )}\n      </Box>\n      <Flex alignItems=\"center\" overflow=\"hidden\">\n        {isLoading ? (\n          <LoadingPlaceholder height={16} width={120} />\n        ) : (\n          <Title>{formatMessage(PAGE_TITLES[getCollectiveTypeKey(collective.type)])}</Title>\n        )}\n        {SECTION_LABELS[selectedSection] && (\n          <React.Fragment>\n            <Separator mx=\"8px\">/</Separator>\n            {isLoading ? (\n              <LoadingPlaceholder height={16} width={80} />\n            ) : (\n              <Section>{formatMessage(SECTION_LABELS[selectedSection])}</Section>\n            )}\n          </React.Fragment>\n        )}\n      </Flex>\n      {isMenuOpen &&\n        document &&\n        createPortal(\n          <React.Fragment>\n            <GlobalModalStyle />\n            <MenuWrapper zindex={1000}>\n              <SideBarWrapper p=\"16px 24px\">\n                <FocusTrap focusTrapOptions={{ clickOutsideDeactivates: true }}>\n                  <SideBar collective={collective} selectedSection={selectedSection} />\n                </FocusTrap>\n              </SideBarWrapper>\n              <MenuBackdrop\n                role=\"button\"\n                tabIndex={0}\n                onClick={() => setMenuOpen(false)}\n                onKeyDown={event => {\n                  if (event.key === 'Escape') {\n                    event.preventDefault();\n                    setMenuOpen(false);\n                  }\n                }}\n              />\n            </MenuWrapper>\n          </React.Fragment>,\n          document.body,\n        )}\n    </Container>\n  );\n};\n\nAdminPanelTopBar.propTypes = {\n  isLoading: PropTypes.bool,\n  selectedSection: PropTypes.string,\n  collective: PropTypes.shape({\n    slug: PropTypes.string,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    isHost: PropTypes.bool,\n  }),\n};\n\nexport default AdminPanelTopBar;\n","import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useRouter } from 'next/router';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { isHostAccount } from '../lib/collective.lib';\nimport roles from '../lib/constants/roles';\nimport { API_V2_CONTEXT } from '../lib/graphql/helpers';\nimport useLoggedInUser from '../lib/hooks/useLoggedInUser';\nimport { require2FAForAdmins } from '../lib/policies';\n\nimport { AdminPanelContext } from '../components/admin-panel/AdminPanelContext';\nimport AdminPanelSection from '../components/admin-panel/AdminPanelSection';\nimport { ALL_SECTIONS, SECTIONS_ACCESSIBLE_TO_ACCOUNTANTS } from '../components/admin-panel/constants';\nimport { adminPanelQuery } from '../components/admin-panel/queries';\nimport AdminPanelSideBar from '../components/admin-panel/SideBar';\nimport AdminPanelTopBar from '../components/admin-panel/TopBar';\nimport { Flex, Grid } from '../components/Grid';\nimport MessageBox from '../components/MessageBox';\nimport NotificationBar from '../components/NotificationBar';\nimport Page from '../components/Page';\nimport SignInOrJoinFree from '../components/SignInOrJoinFree';\nimport { TwoFactorAuthRequiredMessage } from '../components/TwoFactorAuthRequiredMessage';\n\nconst messages = defineMessages({\n  collectiveIsArchived: {\n    id: 'collective.isArchived',\n    defaultMessage: '{name} has been archived.',\n  },\n  collectiveIsArchivedDescription: {\n    id: 'collective.isArchived.edit.description',\n    defaultMessage: 'This {type} has been archived and is no longer active.',\n  },\n  userIsArchived: {\n    id: 'user.isArchived',\n    defaultMessage: 'Account has been archived.',\n  },\n  userIsArchivedDescription: {\n    id: 'user.isArchived.edit.description',\n    defaultMessage: 'This account has been archived and is no longer active.',\n  },\n});\n\nconst getDefaultSectionForAccount = (account, loggedInUser) => {\n  if (!account) {\n    return ALL_SECTIONS.INFO;\n  }\n\n  const isAdmin = loggedInUser?.isAdminOfCollective(account);\n  const isAccountant = loggedInUser?.hasRole(roles.ACCOUNTANT, account);\n  const isAccountantOnly = !isAdmin && isAccountant;\n  if (isHostAccount(account)) {\n    return isAccountantOnly ? ALL_SECTIONS.REPORTS : ALL_SECTIONS.EXPENSES;\n  } else {\n    return isAccountantOnly ? ALL_SECTIONS.PAYMENT_RECEIPTS : ALL_SECTIONS.INFO;\n  }\n};\n\nconst getNotification = (intl, account) => {\n  if (account?.isArchived) {\n    if (account.type === 'USER') {\n      return {\n        type: 'warning',\n        title: intl.formatMessage(messages.userIsArchived),\n        description: intl.formatMessage(messages.userIsArchivedDescription),\n      };\n    } else {\n      return {\n        type: 'warning',\n        title: intl.formatMessage(messages.collectiveIsArchived, { name: account.name }),\n        description: intl.formatMessage(messages.collectiveIsArchivedDescription, {\n          type: account.type.toLowerCase(),\n        }),\n      };\n    }\n  }\n};\n\nfunction getBlocker(LoggedInUser, account, section) {\n  if (!LoggedInUser) {\n    return <FormattedMessage id=\"mustBeLoggedIn\" defaultMessage=\"You must be logged in to see this page\" />;\n  } else if (!account) {\n    return <FormattedMessage defaultMessage=\"This account doesn't exist\" />;\n  } else if (account.isIncognito) {\n    return <FormattedMessage defaultMessage=\"You cannot edit this collective\" />;\n  }\n\n  // Check permissions\n  const isAdmin = LoggedInUser.isAdminOfCollective(account);\n  if (SECTIONS_ACCESSIBLE_TO_ACCOUNTANTS.includes(section)) {\n    if (!isAdmin && !LoggedInUser.hasRole(roles.ACCOUNTANT, account)) {\n      return <FormattedMessage defaultMessage=\"You need to be logged in as an admin or accountant to view this page\" />;\n    }\n  } else if (!isAdmin) {\n    return <FormattedMessage defaultMessage=\"You need to be logged in as an admin\" />;\n  }\n}\n\nconst getIsAccountantOnly = (LoggedInUser, account) => {\n  return LoggedInUser && !LoggedInUser.isAdminOfCollective(account) && LoggedInUser.hasRole(roles.ACCOUNTANT, account);\n};\n\nconst AdminPanelPage = () => {\n  const router = useRouter();\n  const { slug, section, subpath } = router.query;\n  const intl = useIntl();\n  const { LoggedInUser, loadingLoggedInUser } = useLoggedInUser();\n  const { data, loading } = useQuery(adminPanelQuery, { context: API_V2_CONTEXT, variables: { slug } });\n\n  const account = data?.account;\n  const notification = getNotification(intl, account);\n  const selectedSection = section || getDefaultSectionForAccount(account, LoggedInUser);\n  const isLoading = loading || loadingLoggedInUser;\n  const blocker = !isLoading && getBlocker(LoggedInUser, account, selectedSection);\n  const titleBase = account?.isHost\n    ? intl.formatMessage({ id: 'AdminPanel.button', defaultMessage: 'Admin' })\n    : intl.formatMessage({ id: 'Settings', defaultMessage: 'Settings' });\n\n  return (\n    <AdminPanelContext.Provider value={{ selectedSection }}>\n      <Page noRobots collective={account} title={account ? `${account.name} - ${titleBase}` : titleBase}>\n        {!blocker && (\n          <AdminPanelTopBar\n            isLoading={isLoading}\n            collective={data?.account}\n            collectiveSlug={slug}\n            selectedSection={selectedSection}\n            display={['flex', null, 'none']}\n          />\n        )}\n        {Boolean(notification) && <NotificationBar {...notification} />}\n        {blocker ? (\n          <Flex flexDirection=\"column\" alignItems=\"center\" my={6}>\n            <MessageBox type=\"warning\" mb={4} maxWidth={400} withIcon>\n              {blocker}\n            </MessageBox>\n            {!LoggedInUser && <SignInOrJoinFree form=\"signin\" disableSignup />}\n          </Flex>\n        ) : (\n          <Grid\n            gridTemplateColumns={['1fr', null, '208px 1fr']}\n            maxWidth={1280}\n            minHeight={600}\n            gridGap={56}\n            m=\"0 auto\"\n            px={3}\n            py={4}\n            data-cy=\"admin-panel-container\"\n          >\n            <AdminPanelSideBar\n              isLoading={isLoading}\n              collective={account}\n              selectedSection={selectedSection}\n              display={['none', null, 'block']}\n              isAccountantOnly={getIsAccountantOnly(LoggedInUser, account)}\n            />\n            {require2FAForAdmins(account) && LoggedInUser && !LoggedInUser.hasTwoFactorAuth ? (\n              <TwoFactorAuthRequiredMessage mt={[null, null, '64px']} />\n            ) : (\n              <AdminPanelSection\n                section={selectedSection}\n                isLoading={isLoading}\n                collective={account}\n                subpath={subpath}\n              />\n            )}\n          </Grid>\n        )}\n      </Page>\n    </AdminPanelContext.Provider>\n  );\n};\n\nAdminPanelPage.getInitialProps = () => {\n  return {\n    scripts: { googleMaps: true }, // TODO: This should be enabled only for events\n  };\n};\n\nexport default AdminPanelPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { get } from 'lodash';\nimport { withRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../lib/graphql/helpers';\nimport { getStripe } from '../lib/stripe';\n\nimport AuthenticatedPage from '../components/AuthenticatedPage';\nimport Container from '../components/Container';\nimport MessageBox from '../components/MessageBox';\nimport { withUser } from '../components/UserProvider';\n\nclass ConfirmOrderPage extends React.Component {\n  static getInitialProps({ query }) {\n    return { id: parseInt(query.id) };\n  }\n\n  static propTypes = {\n    /** OrderId */\n    id: PropTypes.number.isRequired,\n    /** @ignore from graphql */\n    confirmOrder: PropTypes.func.isRequired,\n    /** @ignore from withUser */\n    loadingLoggedInUser: PropTypes.bool.isRequired,\n    /** @ignore from withUser */\n    LoggedInUser: PropTypes.object,\n    /** @ignore from withRouter */\n    router: PropTypes.object,\n  };\n\n  state = {\n    status: ConfirmOrderPage.SUBMITTING,\n    isRequestSent: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    if (!this.props.loadingLoggedInUser && this.props.LoggedInUser) {\n      return this.triggerRequest();\n    }\n  }\n\n  componentDidUpdate() {\n    if (!this.state.isRequestSent && !this.props.loadingLoggedInUser && this.props.LoggedInUser) {\n      return this.triggerRequest();\n    }\n  }\n\n  static SUBMITTING = 1;\n  static ERROR = 3;\n\n  async triggerRequest() {\n    try {\n      this.setState({ isRequestSent: true });\n      const res = await this.props.confirmOrder({ variables: { order: { legacyId: this.props.id } } });\n      const orderConfirmed = res.data.confirmOrder;\n      if (orderConfirmed.stripeError) {\n        this.handleStripeError(orderConfirmed);\n      } else {\n        this.props.router.replace(\n          `/${orderConfirmed.order.fromAccount.slug}/admin/payment-methods?successType=payment`,\n        );\n      }\n    } catch (e) {\n      const error = get(e, 'graphQLErrors.0') || e;\n      this.setState({ status: ConfirmOrderPage.ERROR, error: error.message });\n    }\n  }\n\n  handleStripeError = async ({ id, stripeError: { message, account, response } }) => {\n    if (!response) {\n      this.setState({ status: ConfirmOrderPage.ERROR, error: message });\n      return;\n    }\n    if (response.paymentIntent) {\n      const stripe = await getStripe(null, account);\n      const result = await stripe.handleCardAction(response.paymentIntent.client_secret);\n      if (result.error) {\n        this.setState({ status: ConfirmOrderPage.ERROR, error: result.error.message });\n      }\n      if (result.paymentIntent && result.paymentIntent.status === 'requires_confirmation') {\n        this.triggerRequest({ id });\n      }\n    }\n  };\n\n  render() {\n    const { status, error } = this.state;\n\n    return (\n      <AuthenticatedPage title=\"Order confirmation\">\n        <Container\n          display=\"flex\"\n          py={[5, 6]}\n          px={2}\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          background=\"linear-gradient(180deg, #EBF4FF, #FFFFFF)\"\n        >\n          {status === ConfirmOrderPage.SUBMITTING && (\n            <MessageBox type=\"info\" isLoading>\n              <FormattedMessage id=\"Order.Confirm.Processing\" defaultMessage=\"Confirming your payment method…\" />\n            </MessageBox>\n          )}\n          {status === ConfirmOrderPage.ERROR && (\n            <MessageBox type=\"error\" withIcon>\n              {error}\n            </MessageBox>\n          )}\n        </Container>\n      </AuthenticatedPage>\n    );\n  }\n}\n\nexport const confirmOrderMutation = gql`\n  mutation ConfirmOrder($order: OrderReferenceInput!) {\n    confirmOrder(order: $order) {\n      order {\n        id\n        status\n        transactions {\n          id\n        }\n        fromAccount {\n          id\n          slug\n        }\n      }\n      stripeError {\n        message\n        account\n        response\n      }\n    }\n  }\n`;\n\nconst addConfirmOrderMutation = graphql(confirmOrderMutation, {\n  name: 'confirmOrder',\n  options: { context: API_V2_CONTEXT },\n});\n\nexport default withUser(addConfirmOrderMutation(withRouter(ConfirmOrderPage)));\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin-panel\",\n      function () {\n        return require(\"private-next-pages/admin-panel.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin-panel\"])\n      });\n    }\n  "],"names":["React","defineMessages","FormattedDate","FormattedMessage","injectIntl","styled","width","defaultBackgroundImage","imagePreview","firstSentence","Avatar","Container","Currency","Link","CardWrapper","NameWrapper","MembershipWrapper","StatsWrapper","ValueWrapper","LabelWrapper","CommaList","ul","CollectiveCard","props","messages","id","defaultMessage","intl","collective","membership","memberships","getTierName","tierName","role","formatMessage","type","membershipDates","map","m","createdAt","sort","a","b","oldestMembershipDate","length","roles","Set","coverStyle","backgroundImage","backgroundSize","backgroundPosition","truncatedDescription","description","route","parentCollective","slug","backersCount","name","n","stats","yearlyBudget","valueInCents","currency","memberOf","totalCount","totalAmountSpent","collectives","size","Array","from","date","Component","useIntl","formatCurrency","getCurrencySymbol","Span","formatWithSeparators","precision","value","styles","locale","floatAmount","toLocaleString","defaultProps","H1","ErrorComponent","message","CurrencyPrecision","INTERVALS","getIntervalFromContributionFrequency","DEFAULT_AMOUNT_STYLES","letterSpacing","fontWeight","color","EMPTY_AMOUNT_PLACEHOLDER","FormattedMoneyAmount","abbreviateInterval","amount","interval","frequency","amountStyles","showCurrencyCode","currencyCodeStyles","isCrypto","formattedAmount","isNaN","currencyCode","flexible","oneTime","abbreviate","DEFAULT","css","v4","uuid","fadeIn","getProgressColor","theme","colors","primary","getEmptyProgressColor","MAX_TITLE_LENGTH","GoalContainer","div","black","goal","isReached","progress","includes","index","animateProgress","position","level","isOverlapping","hidden","BarContainer","GoalsCover","renderGoal","bind","updateGoals","maxWait","labelsRefs","maxGoal","g","title","currentProgress","getMaxCurrentAchievement","interpolation","state","populateGoals","setState","firstMount","window","addEventListener","oldProps","removeEventListener","x","Math","pow","params","createRef","max","settingGoals","hasMonthlyGoal","some","goals","createGoal","push","maxCustomGoalsToShow","settingsGoals","sortedGoals","idx","key","lastGoal","slice","ref","current","offsetWidth","min","availWidth","percentage","progressBarPercentageWidth","progressBarWidthInPx","widthInPx","maxAmount","prevGoal","prevX","percentageToPx","getTranslatedPercentage","curX","prevWidth","getGoalLabelWidthInPx","xLabelOffset","distance","curWidth","offset","prevGoals","i","overlap","goalsOverlapInPx","isServerSide","isInitialRender","maxLevelAbove","initialGoals","getInitialGoals","customGoals","getCustomGoals","maxAchievedYet","isLastGoal","overlapWithPrev","newLevel","Number","newProgress","pxToPercentage","hasCustomGoals","getDivTitle","LoadingPlaceholder","LocationAddress","location","isLoading","showMessageIfEmpty","address","country","PropTypes","I18nFormatters","ROLES_DETAILS","ADMIN","MEMBER","ACCOUNTANT","hasRoleDescription","Boolean","MemberRoleDescription","propTypes","oneOf","Object","values","useRouter","Flex","StyledButton","StyledInput","Pagination","limit","total","scrollToTopOnChange","isDisabled","ignoredQueryParams","router","totalPages","ceil","currentPage","queryParams","query","asPath","split","changePage","target","parseInt","pathname","scrollTo","dynamic","ReactPasswordStrengthBar","PasswordStrengthBar","visibility","password","isURL","uploadImageWithXHR","CustomScrollbarCSS","stripHTML","HTMLContent","MessageBox","StyledTag","TrixEditorContainer","withBorders","border","borderColor","error","borderRadius","padding","editorMaxHeight","overflowY","outline","red","minHeight","editorMinHeight","maxHeight","toolbarBackgroundColor","blue","version","display","borderLeft","withStickyToolbar","top","toolbarTop","marginTop","toolbarOffsetY","p","pointerEvents","cursor","background","SUPPORTED_SERVICE_URLS","youTube","anchorFm","RichTextEditor","Trix","editorRef","handleChange","handleUpload","handleFileAccept","trixActionInvoke","event","videoEmbedEnabled","replaceEmbeddedIFrames","defaultValue","trixEmbed","mainContainerRef","linkInput","querySelector","e","handleLink","addLinkBtn","isReady","iframeRegex","RegExp","match","lastIndex","exec","getEditor","loadHTML","iframe","preText","substring","setSelectedRange","insertHTML","attachment","Attachment","content","insertAttachment","postText","videoEmbedButton","videoEmbedDialog","toolbarElement","attachFilesButton","insertAdjacentHTML","trixDialog","actionName","attachVideoDialog","attachVideoDialogInput","getAttribute","removeAttribute","setAttribute","embedLink","trim","embedIframe","service","videoLink","regexps","youtube","vimeo","matches","podcastName","episodeId","podcastUrl","parseServiceLink","constructVideoEmbedURL","sanitizedLink","replace","videoServices","attachmentData","contentType","autolink","onChange","test","file","alert","preventDefault","attachmentContent","isVideoAttachment","remove","setUploading","onProgress","setUploadProgress","onSuccess","fileURL","setAttributes","url","href","onFailure","kind","urlInput","urlInputValue","require_protocol","lastCharacterPosition","lastCharacterIndex","closingPair","openingPair","opening","closing","require","config","blockAttributes","heading1","tagName","attachments","preview","caption","initialize","reset","editor","linkRegex","getDocument","toString","urlLength","autolinkDelimiter","range","hrefAtRange","getCommonAttributesAtRange","newURL","updateInRange","canActivateAttribute","activateAttribute","updateFunc","baseRange","getSelectedRange","autoFocus","placeholder","inputName","disabled","fontSize","showCount","maxLength","undefined","SearchForm","searchPlaceholder","SearchBar","onSubmit","useState","setValue","useEffect","searchInput","elements","q","themeGet","InputContainer","getColor","success","getBgColor","focused","getBorderColor","StyledInputGroup","append","prepend","maxWidth","containerProps","prependProps","appendProps","innerRef","overflow","inputProps","setFocus","onFocus","onBlur","StyledSelectFilter","OPTION_LABELS","ALL","rangeFrom","rangeFromTo","parseAmountRange","strValue","endsWith","minStr","maxStr","getOption","minAmount","label","AmountFilter","steps","allExpensesOption","options","useMemo","step","closestCenter","DndContext","arrayMove","SortableContext","useSortable","verticalListSortingStrategy","CSS","Plus","Times","DragIndicator","SocialLinkType","isValidUrl","Box","StyledSelect","SocialLinksFormField","touched","sortId","items","setItems","onItemChange","useCallback","socialLink","newItems","item","onRemoveItem","filter","addItem","WEBSITE","handleDragEnd","active","over","oldIndex","findIndex","newIndex","SocialLinkTypePicker","pickerProps","DISCORD","FACEBOOK","GITHUB","GITLAB","GIT","INSTAGRAM","MASTODON","MATTERMOST","TUMBLR","TWITTER","YOUTUBE","MEETUP","LINKEDIN","SLACK","DISCOURSE","PIXELFED","GHOST","PEERTUBE","TIKTOK","find","o","SocialLinkItem","attributes","listeners","setNodeRef","transform","transition","style","Transform","onFieldChange","field","fieldValue","onUrlChange","newUrl","typeFromUrl","onUrlBlur","hasSchemaRegexp","onRemove","knownSocialLinkDomains","regexp","knownDomain","formatAccountDetails","payoutMethodData","ignoredKeys","labels","abartn","firstLine","formatKey","s","renderObject","object","prefix","entries","reduce","acc","lines","join","PayoutMethodType","i18nPayoutMethodType","sortSelectOptions","ExpensesPayoutTypeFilter","expenseStatus","i18nExpenseStatus","IGNORED_EXPENSE_STATUS","DRAFT","UNVERIFIED","getOptions","ignoredExpenseStatus","filteredStatuses","status","ExpenseStatusFilter","sortedOptions","expenseTypes","i18nExpenseType","ExpenseTypeFilter","expenseTypeKeys","keys","unshift","encodeDateInterval","PeriodFilter","ExpensesOrder","ExpensesStatusFilter","ExpensesTypeFilter","FilterContainer","FilterLabel","ExpensesFilters","filters","showOrderFilter","wrap","getFilterProps","valueModifier","inputId","preparedValue","memo","FlipMove","DISABLE_ANIMATIONS","ExpenseBudgetItem","StyledCard","P","ExpenseContainer","isFirst","FooterContainer","FooterLabel","span","ExpensesTotal","host","expenses","expenseFieldForTotalAmount","isApproximate","expense","exchangeRate","ExpensesList","nbPlaceholders","isInverted","suggestedTags","view","onDelete","onProcess","_","gql","useQuery","Info","Field","useFormikContext","API_V2_CONTEXT","I18nSupportLink","StyledInputField","StyledSpinner","StyledTooltip","formatStringOptions","strings","formatTransferWiseSelectOptions","TW_API_COLLECTIVE_SLUG","process","env","msg","requiredFieldsQuery","CUSTOM_METHOD_LABEL_BY_CURRENCY","USD","requiredFields","aba","swift_code","Input","input","getFieldName","loading","refetch","formik","isAccountHolderName","fieldName","required","validate","validationRegexp","validationError","meta","hint","inputValue","example","valuesAllowed","c","setFieldValue","refreshRequirementsOnChange","accountDetails","FieldGroup","group","DetailsForm","context","variables","data","transferwise","OC_ENV","console","warn","transactionTypeValues","rf","availableMethods","method","fields","every","addressFields","otherFields","transactionMethodFieldName","transactionMethod","availableCurrenciesQuery","PayoutBankInformationForm","isNew","fixedCurrency","ignoreBlockedCurrencies","optional","skip","availableCurrencies","wiseHost","currencies","code","currencyFieldName","selectedCurrency","validateCurrencyMinimumAmount","invoiceTotalAmount","minAmountForSelectedCurrency","minInvoiceAmount","parseChronologicalOrderInput","str","direction","dayjs","DateTime","OneLineDate","getMessage","to","dateFrom","dateTo","DateRange","isUTC","ChevronDown","InfoCircle","defineMessage","isValidDate","parseDateInterval","stripTime","PeriodFilterPresetsSelect","PopupMenu","StyledButtonSet","DEFAULT_INTERVAL","timezoneType","getIntervalFromValue","isIntervalObject","intervalFromValue","toUTC","utc","getNewInterval","changeField","newValue","newInterval","parseDateForDateRange","dateStr","isEndOfDay","Date","UTC_LABEL","getTimeZoneTypeName","timezone","timeZone","tz","guess","TriggerContainer","minDate","tmpDateInterval","setTmpDateInterval","isValidDateInterval","setIsValidDateInterval","formattedMin","setDate","onClick","setOpen","create","Mode","addAuthTokenToHeader","getWebsiteUrl","ConfirmationModal","TransferwiseIcon","TOAST_TYPE","useToasts","scheduledExpensesQuery","ScheduledExpensesBanner","secondButton","scheduledExpenses","hostId","payoutMethodType","addToast","showConfirmationModal","setConfirmationModalDisplay","hasScheduledExpenses","request","mode","WISE_ENVIRONMENT","PRODUCTION","SANDBOX","handlePayBatch","expenseIds","nodes","body","JSON","stringify","headers","SUCCESS","response","text","SupportLink","ERROR","count","paymentMethod","Admin","attrs","variant","OnboardingProfileCard","removeAdmin","isPending","ORDER_STATUS","i18nOrderStatus","OrderStatusFilter","OrdersFilters","hasStatus","GQLV2_PAYMENT_METHOD_LEGACY_TYPES","i18nPaymentMethodProviderType","i18nPaymentMethodType","toPx","getCollectivePageRoute","AutosizeText","LinkCollective","OrderStatusTag","ProcessOrderButtons","StyledLink","H3","TransactionSign","DetailColumnHeader","ButtonsContainer","OrderContainer","OrderBudgetItem","order","showPlatformTip","showAmountSign","fromAccount","toAccount","legacyId","contributor","account","platformTipAmount","providerType","pendingContributionData","BANK_TRANSFER","ponumber","expectedAt","permissions","OrdersList","orders","useLoggedInUser","usePrevious","CreatePendingOrderModal","MessageBoxGraphqlError","StyledHr","accountOrdersQuery","ORDERS_PER_PAGE","isValidStatus","getVariablesFromQuery","forcedStatus","amountRange","period","searchTerm","hasParams","ROUTE_PARAMS","updateQuery","newParams","OrdersWithData","accountSlug","canCreatePendingOrder","hasFilters","showCreatePendingOrderModal","setShowCreatePendingOrderModal","queryVariables","LoggedInUser","prevLoggedInUser","isHostAdmin","isAdminOfCollective","ResetLink","MODERATION_CATEGORIES","ADULT","AFFILIATE_REVIEW","CASINO_GAMBLING","FINANCE_INSURANCE","PHARMACY","SEO_AUDIENCE","VPN_PROXY","WRITER","MODERATION_CATEGORIES_ALIASES","graphql","gqlV1","editCollectivePageFieldsFragment","createCollectiveMutation","editCollectiveMutation","addCreateCollectiveMutation","mutate","createCollective","CollectiveInputType","tiers","tier","useRef","CollectiveType","USER","ORGANIZATION","COLLECTIVE","FUND","EVENT","PROJECT","HOST_DASHBOARD_SECTIONS","BUDGET_MANAGEMENT","COLLECTIVES","OVERVIEW","REPORTS","EXPENSES","FINANCIAL_CONTRIBUTIONS","PENDING_CONTRIBUTIONS","HOSTED_COLLECTIVES","HOST_VIRTUAL_CARDS","PENDING_APPLICATIONS","ABOUT_ORG_SECTIONS","COLLECTIVE_PAGE","CONNECTED_ACCOUNTS","INFO","TEAM","ORG_BUDGET_SECTIONS","GIFT_CARDS","CREATE_GIFT_CARDS","PAYMENT_METHODS","PAYMENT_RECEIPTS","TIERS","FISCAL_HOST_SECTIONS","FISCAL_HOSTING","SECURITY","HOST_VIRTUAL_CARDS_SETTINGS","INVOICES_RECEIPTS","POLICIES","RECEIVING_MONEY","SENDING_MONEY","COLLECTIVE_SECTIONS","ADVANCED","AUTHORIZED_APPS","COLLECTIVE_GOALS","EXPORT","FOR_DEVELOPERS","HOST","NOTIFICATIONS","CUSTOM_EMAIL","TICKETS","USER_SECURITY","VIRTUAL_CARDS","WEBHOOKS","ACTIVITY_LOG","LEGACY_COLLECTIVE_SETTINGS_SECTIONS","ALL_SECTIONS","SECTIONS_ACCESSIBLE_TO_ACCOUNTANTS","PAGE_TITLES","SECTION_LABELS","UPDATES","CONVERSATIONS","AdminPanelContext","createContext","selectedSection","HOST_FEE_STRUCTURE","MONTHLY_RETAINER","CUSTOM_FEE","TypesI18n","formatHostFeeStructure","i18nMsg","CollectiveHostFeeStructureFilter","optionAll","oldest","CollectiveSortByFilter","Grid","COLLECTIVE_FILTER","SORT_BY","FEE_STRUCTURE","HostAdminCollectiveFilters","PendingApplication","processApplicationAccountFields","COLLECTIVES_PER_PAGE","pendingApplicationsQuery","checkIfQueryHasFilters","hostFeesStructure","orderBy","PendingApplications","hostSlug","hostApplications","pendingApplications","application","DEFAULT_OPTIONS","percentageDisplayed","useLazyGraphQLPaginatedResults","allOptions","results","nbItemsDisplayed","resultsCount","connectAccount","useAsyncCall","ConnectPaypalButton","urlParams","redirect","useNewFlow","json","redirectUrl","Promise","resolve","setTimeout","call","ConnectTransferwiseButton","isConnected","ExclamationTriangle","getPaypalExpiryInfo","timeBeforeExpiry","expiryDate","twoWeeks","icon","refillBalance","paypalEmail","PaypalPreApprovalDetailsIcon","BalancesBreakdown","balances","TransferwiseDetailsIcon","hasPaypalPreApprovalExpired","PayPal","hostInfoCardFields","ColumnTitle","textTransform","lineHeight","flex","paddingTop","Separator","getMainTransferwiseBalance","hostCurrency","HostInfoCard","mainTransferwiseBalance","transferwiseBalances","paypalPreApproval","balance","EXPENSE_STATUS","DismissibleMessage","expenseHostFields","expensesListAdminFieldsFragment","expensesListFieldsFragment","hostDashboardExpensesQuery","onExpenseUpdate","updatedExpense","cache","filteredStatus","modify","existingExpenses","readField","NB_EXPENSES_DISPLAYED","tags","tag","payout","HostDashboardExpenses","isNewAdmin","paypalPreApprovalError","setPaypalPreApprovalError","pageRoute","paginatedExpenses","paypalApprovalError","shallow","hasDisputedOrders","hasInReviewOrders","getQueryParams","dismiss","oldEmail","oldPaypalEmail","newEmail","newPaypalEmail","useMutation","EXPENSE_TYPE","i18nGraphqlException","getI18nLink","StyledModal","CollectiveModalHeader","ModalBody","ModalFooter","StyledRadioList","Label","getDefaultFee","hostFeePercent","editAccountSettingsMutation","DISPLAYED_EXPENSE_TYPES","INVOICE","RECEIPT","GRANT","EXPENSE_TYPE_OPTIONS","EXPENSE_TYPE_SELECT_STYLES","option","CollectiveSettingsModal","setHostFeePercent","selectedOption","setSelectedOption","settings","setExpenseTypes","submitEditSettings","hasParent","parent","expenseType","radio","as","openInNewTab","parseFloat","isCustomFee","onClose","usePopper","useGlobalBlur","useEscapeKey","ESCAPE_KEY","Arrow","StyledMenuPopoverContainer","InnerMenuContainer","TooltipContent","arrowProps","isOutside","callback","keyMatch","focus","MenuPopover","children","placement","isMenuDisplayed","setIsMenuDisplayed","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","setArrowElement","setId","strategy","modifiers","element","arrow","popper","StyledTextarea","unhostAccountMutation","UnhostAccountModal","setMessage","refetchQueries","awaitRefetchQueries","unhostAccount","collectiveName","fiscalHostName","collectiveBalanceAmount","successMsgArgs","accountName","DotsVerticalRounded","Unlink","Pause","Play","StyledRoundButton","FreezeAccountModal","FreezeAccountButton","isFrozen","UnhostAccountButton","HostAdminCollectiveCardMoreButton","hasFreezeModal","setHasFreezeModal","hasUnhostModal","setHasUnhostModal","btnProps","verticalAlign","SliderAlt","StyledCollectiveCard","AddFundsModal","SectionTitle","PlusIcon","green","BoldMsg","HostAdminCollectiveCard","since","currentModal","setCurrentModal","nbFinancialContributors","totalFinancialContributors","bold","hostedCollectivesQuery","HostDashboardHostedCollectives","hostedMemberships","member","fetchCSVFileFromRESTService","simpleDateToISOString","getHostReportURL","accountsSlugs","format","URL","REST_URL","searchParams","set","prepareDateArgs","dateInterval","triggerCSVDownload","reportUrl","filename","until","HostCSVDownloadButton","hostReportUrl","useErrorToast","isFetching","downloadCSV","ChartWrapper","node","getActiveYearsOptions","currentYear","getFullYear","firstYear","activeYears","year","reverse","formatAmountForLegend","isCompactNotation","Intl","NumberFormat","notation","getMinMaxDifference","numberArray","minVal","maxVal","i18nTransactionSettlementStatus","Chart","ssr","hostFeeSectionTimeSeriesQuery","getChartOptions","chart","stacked","legend","show","showForSingleSeries","horizontalAlign","markers","height","dataLabels","enabled","grid","raw","opacity","column","xaxis","yaxis","plotOptions","bar","columnWidth","categories","formatDate","month","toUpperCase","minWidth","formatter","tooltip","y","SERIES_NAMES","hostRevenue","hostFeeShare","getHostFeesWithoutShare","hostFeeNodes","hostFeeShareNodes","totalHostFeeSharePerMonthInCents","result","monthKey","getMonth","getSeriesFromData","timeSeries","dataToSeries","series","fill","forEach","getQueryVariables","HostFeesSectionHistorical","selectedYear","setSelectedYear","hostMetricsTimeSeries","yearsOptions","chartOptions","ChevronUp","Image","StyledLinkButton","getValuesToDisplay","loadingComponent","fees","netHostFee","sharedRevenue","hostMetrics","hostFees","HostFeesSection","showHostFeeChart","setShowHostFeeChart","valuesToDisplay","AMOUNT_STYLES","PlatformTipsCollected","platformTips","pendingPlatformTips","ChartContainer","LegendContainer","Area","Square","Legend","getPreparedAreaPercentage","areas","area","ProportionalAreaChart","hasLegend","ContainerOverlay","totalMoneyManagedQuery","getUTCFullYear","currentMonth","getUTCMonth","totalMoneyManagedProgressNodes","stroke","curve","TotalMoneyManagedHistorical","previousData","hostTimeSeriesData","getMoneyManagedChartAreas","hostBalance","collectivesBalance","TotalMoneyManagedSection","showMoneyManagedChart","setShowMoneyManagedChart","totalMoneyManaged","chartArgs","chartAreas","alignSeries","i18nTransactionKind","StyledBox","timeUnit","seriesIndex","dataPointIndex","formatAmount","dataPoint","kinds","formatKindAmount","amountsByKind","prettyKindAmounts","getTransactionsAreaChartData","contributionStats","contributionsCount","dailyAverageIncomeAmount","expenseStats","expensesCount","dailyAverageAmount","getTransactionsBreakdownChartData","recurringContributionsCount","oneTimeContributionsCount","invoicesCount","reimbursementsCount","grantsCount","hasGrants","getSeriesDataFromTotalReceivedNodes","keyedData","getSeries","getNodes","abs","TransactionsOverviewSection","areaChartData","transactionBreakdownChart","Question","CollectivePickerAsync","NotFound","PERIOD_FILTER_PRESETS","H2","hostReportPageQuery","prepareCollectivesForFilter","getDefaultDateInterval","thisMonth","getInterval","HostDashboardReports","setDateInterval","setCollectives","isActive","control","baseStyles","VAT_OPTIONS","OWN","FormattedRelativeTime","isIndividualAccount","generateDateTitle","revokeAuthorizationMutation","AuthorizedApp","authorization","onRevoke","onCompleted","revokeAuthorization","lastUsedAt","timeElapsed","diff","appName","authorizedAppsQuery","getSettingsRoute","AuthorizedAppsSection","authorizations","loggedInAccount","oAuthAuthorizations","oauthBeta","ForDevelopersLink","CONFIRMATION_MODAL_TERMINATE","deleteApplicationMutation","DeleteOAuthApplicationModal","update","evict","identify","gc","accountCacheId","deleteApplication","oAuthApplications","DELETE","verifyFieldLength","validateOauthApplicationValues","errors","Form","Formik","StyledInputFormikField","H4","WarnIfUnsavedChanges","applicationSettingsFragment","applicationQuery","updateApplicationMutation","CodeContainer","ObfuscatedClientSecret","secret","setShow","LABEL_STYLES","OAuthApplicationSettings","backPath","showDeleteModal","setShowDeleteModal","updateApplication","clientId","clientSecret","resetForm","filteredValues","applicationInput","isSubmitting","dirty","examples","ModalHeader","createApplicationMutation","INITIAL_VALUES","redirectUri","CreateOauthApplicationModal","createApplication","appInput","NetworkStatus","getOauthAppSettingsRoute","applicationsQuery","OAuthApplicationsList","onApplicationCreated","showCreateApplicationModal","setShowCreateApplicationModal","networkStatus","showLoadingState","link","CreateAppLink","app","deletePersonalTokenMutation","DeletePersonalTokenModal","personalToken","deletePersonalToken","personalTokens","deleteToken","OAuthScope","validatePersonalTokenValues","getScopesOptions","scopes","scope","personalTokenSettingsFragment","personalTokenQuery","updatePersonalTokenMutation","PersonalTokenSettings","updateToken","token","expiresAt","filteredValue","updatePersonalToken","form","setFieldTouched","createPersonalTokenMutation","CreatePersonalTokenModal","createPersonalToken","tokenInput","getPersonalTokenSettingsRoute","PersonalTokensList","onPersonalTokenCreated","showCreatePersonalToken","setShowCreatePersonalTokenModal","individual","headerName","queryParam","CreateTokenLink","ForDevelopers","subpath","subSection","saveAs","FileDownloader","downloaded","fetch","buildFetchParams","blob","downloadFile","CheckCircle","Clipboard","Printer","giftCardsDownloadUrl","RedeemLinksTextarea","CreateGiftCardsSuccess","vc","collectiveSlug","redeemLinkTextareaRef","select","document","execCommand","now","downloadUrl","cards","copyLinksToClipboard","Accept","getRedeemLinkFromVC","deliverType","renderEmailSuccess","renderManualSuccess","paymentMethodLabelWithIcon","PaymentMethodSelect","paymentMethods","defaultPaymentMethod","paymentMethodValueAndLabel","getInputBorderColor","Editor","EditorState","StyledMultiEmailInput","onChangeParent","trailing","editorState","initialState","createEmpty","showErrors","term","emails","invalids","stringContent","getCurrentContent","getPlainText","returnedState","extractEmails","SelectCreatable","makeStyledSelect","RadioButtonChecked","RadioButtonUnchecked","memoizeOne","isPrepaid","compose","reportValidityHTML5","CollectivePicker","Loading","StyledCheckbox","StyledInputAmount","StyledSelectCreatable","MIN_AMOUNT","MAX_AMOUNT","WARN_NB_GIFT_CARDS_WITHOUT_HOST_LIMIT","WARN_NB_GIFT_CARDS_WITH_CREDIT_CARD","WARN_GIFT_CARDS_AMOUNT_WITH_CREDIT_CARD","emailCustomMessage","limitToHostsPlaceholder","limitToCollectivesPlaceholder","notBatched","InlineField","isLabelClickable","Title","summary","DeliverTypeRadioSelector","RadioButtonContainer","RadioButtonWithLabel","checked","FieldLabelDetails","CreateGiftCardsForm","batches","noBatchOption","batch","customMessage","numberOfGiftCards","limitedToHosts","add","multiEmailsInitialState","submitting","createdGiftCards","serverError","hasAcceptedWarning","intNumberOfGiftCards","assign","isPaymentMethodDiscouraged","getDefaultPaymentMethod","limitations","canLimitToFiscalHosts","limitedToHostCollectiveIds","optionsToIdsList","CollectiveId","collectiveId","PaymentMethodId","createGiftCards","then","getGiftCardsCount","enable","isSubmitEnabled","flexGrow","collectiveSettings","giftCardsMaxDailyCount","blur","hosts","batchesOptions","getBatchesOptions","renderNoPaymentMethodMessage","getError","pm","changeDeliverType","renderEmailFields","renderManualFields","shouldLimitToSpecificHosts","renderSubmit","collectiveSourcePaymentMethodsQuery","addCollectiveSourcePaymentMethodsQuery","fetchPolicy","createGiftCardsMutation","addCreateGiftCardsMutation","addGraphql","collectiveNavbarFieldsFragment","adminPanelQuery","SettingsSectionTitle","getErrorFromGraphqlException","archiveCollectiveMutation","unarchiveCollectiveMutation","ArchiveCollective","processing","isArchived","confirmationMsg","archiveStatus","setArchiveStatus","defaultAction","modal","setModal","adminPanelMutationParams","archiveCollective","unarchiveCollective","handleArchiveCollective","errorMsg","handleUnarchiveCollective","hasBalance","closeModal","isHost","SettingsLink","withRouter","withUser","deleteCollectiveMutation","deleteUserCollectiveMutation","DeleteCollective","showModal","setShowModal","deleting","deleteStatus","setDeleteStatus","deleteCollective","deleteUserCollective","isSelfHosted","handleDelete","refetchLoggedInUser","isDeletable","Fragment","SendMoneyToCollectiveBtn","SendFundsToCollectiveSection","toCollective","isApproved","confirmTransfer","action","toLowerCase","EmptyBalance","hostCollective","SettingsSubtitle","BORDER","getInterpolationOption","INTERPOLATION_OPTIONS","CollectiveGoals","updatedGoal","defaultType","updatedGoals","isTouched","collectivePage","showGoals","newGoal","splice","editCollectiveSettings","goalsInterpolation","submitted","defaultValues","editGoal","obj","pre","removeGoal","monthlyBudget","showToggle","arr","toggleGoalsOnCollectivePage","addGoal","handleSubmit","editCollectiveSettingsMutation","addEditCollectiveSettingsMutation","useFormik","editCollectivePageQuery","I18nSignInLink","createConnectedAccountMutation","EditPayPalAccount","isReceiving","variation","mutationOptions","connectedAccount","setConnectedAccount","createConnectedAccount","isCreating","createError","initialValues","createdAccount","updatedAt","deleteConnectedAccountMutation","EditPrivacyAccount","deleteConnectedAccount","isDeleting","disconnectAccount","EditTransferWiseAccount","handleConnect","handleDisconnect","deleted","InputSwitch","withToasts","DEFAULT_TWEETS","newBacker","tenBackers","fiftyBackers","oneHundred","oneThousandBackers","EditTwitterAccount","notificationTypes","renderNotification","getNotificationTypes","notificationType","isSaving","isModified","editConnectedAccount","notification","attr","val","defaultTweet","tweet","editConnectedAccountMutation","addEditConnectedAccountMutation","getFromLocalStorage","LOCAL_STORAGE_KEYS","EditConnectedAccount","editMode","connect","disconnect","services","redirectUrlParams","URLSearchParams","accessToken","ACCESS_TOKEN","err","vars","username","capitalize","TITLE_OVERRIDE","ConnectedAccounts","connectedAccountsByService","connectedAccounts","PreviewModal","previewImage","heading","subheading","imgHeight","imgWidth","updateCustomMessageMutation","CustomMessage","thankYouMessage","customEmailMessage","setCustomMessage","setIsModified","showPreview","setShowPreview","onError","updateCustomEmailMessage","FAQ","Content","Entry","EditCollectivePageFAQ","defaultOpen","DragOverlay","getCollectiveSections","getSectionPath","formatErrorMessage","i18nNavbarCategory","i18nCollectivePageSection","Sections","getSettingsQuery","collectiveSettingsV1Query","ItemContainer","isDragging","isDragOverlay","isSubSection","CollectiveSectionEntry","isEnabled","restrictedTo","section","onSectionToggle","collectiveType","hasData","showMissingDataWarning","showDragIcon","dragHandleProps","MenuCategory","setSubSections","draggingId","setDraggingId","handleDragStart","oldSubsections","sections","newSections","draggingItem","Item","forwardRef","displayName","MemoizedItem","DraggableItem","EditCollectivePage","isDirty","setDirty","setSections","submitSetting","sectionPath","draggingSection","subSections","subSectionsIdx","GOALS","InputField","Strong","ParameterColumnHeader","th","ExportImages","tierIndex","encodedTierName","encodeURIComponent","images","tierOptions","image","__html","borderSpacing","isOneOfTypes","exportMembers","Export","widgetCode","useKeyboardShortcut","ENTER_KEY","activateCollectiveAsHostMutation","deactivateCollectiveAsHostMutation","activateBudgetMutation","deactivateBudgetMutation","getCollectiveType","FiscalHosting","isHostAccount","isBudgetActive","activateAsHostStatus","setActivateAsHostStatus","activateBudgetStatus","setActivateBudgetStatus","activateAsHostModal","setActivateAsHostModal","activateBudgetModal","setActivateBudgetModal","activateCollectiveAsHost","deactivateCollectiveAsHost","activateBudget","deactivateBudget","handleActivateAsHost","handleDeactivateAsHost","closeActivateAsHost","handleActivateBudget","handleDeactivateBudget","closeActivateBudget","handlePrimaryBtnClick","plan","hostedCollectives","br","withTheme","GiftCard","DetailsColumnHeader","GiftCardStatus","isConfirmed","user","email","GiftCardDetails","expended","isExpired","yellow","giftCard","redeemCode","initialBalance","monthlyLimitPerMember","getStatusColor","renderValue","toggleExpended","renderDetails","Add","allBatches","NOT_BATCHED_KEY","GiftCards","selected","claimedFilter","picked","onlyConfirmed","isSelected","margin","queryResult","lastGiftCard","renderFilters","renderNoGiftCardMessage","v","GIFT_CARDS_PER_PAGE","getIsConfirmedFromFilter","giftCardsQuery","getGiftCardsVariablesFromProps","addGiftCardsData","Error","COLLECTIVE_CARDS_PER_PAGE","HostsWithData","fetchMore","offsetHeight","allHosts","empty","hostsQuery","addHostsData","orderDirection","ownProps","previousResult","fetchMoreResult","__typename","all","concat","CreateOrganizationForm","CreateHostForm","getDefaultHostId","org","createOrganization","organization","organizationsOptions","organizations","getOrganizationsOptions","getHost","stripeAccount","getInputFields","when","LoadingGrid","CreateHostFormWithData","res","userCollective","Collective","editCollectiveConnectedAccountsQuery","addEditCollectiveConnectedAccountsData","editCollectiveCreateHostMutation","addEditCollectiveCreateHostMutation","proxy","readQuery","round","random","writeQuery","OptionLabel","Fineprint","EditCollectiveHostSection","Host","changeHost","updateSelectedOption","newHost","HostCollectiveId","hostMembership","showLegalNameInfoBox","legalName","renderLegalNameSetInfoMessage","day","emptyBalanceLink","VIRTUAL_CARDS_POLICY_MAX_LENGTH","updateAccountSettingsMutation","HostVirtualCards","updateAccountSetting","updateLoading","virtualcards","policy","virtualCardPolicy","setVirtualCardPolicy","handleSettingsUpdate","matchPm","PAYMENT_METHOD_SERVICE","PAYMENT_METHOD_TYPE","EditPaymentMethod","nbActiveSubscriptions","needsConfirmation","onConfirm","isStripeCreditCard","STRIPE","CREDITCARD","canRemove","hasActions","CardElement","isErrorType","paymentMethodLabel","getStripe","stripeTokenToPaymentMethod","confirmOrderMutation","NewCreditCardForm","addCreditCardMutation","confirmCreditCardMutation","withStripeLoader","EditPaymentMethods","showCreditCardForm","newCreditCardInfo","bankDetails","stripe","stripeElements","removedId","savingId","cardElement","getElement","createToken","newStripePaymentMethod","createCreditCardEditCollective","creditCardInfo","addCreditCard","stripeError","handleStripeError","handleSuccess","confirmCreditCardEditCollective","paymentMethodsQuery","orderToConfirm","confirmOrder","successType","newError","setupIntent","handleCardSetup","client_secret","paymentIntent","handleCardAction","confirmOrderForPaymentMethod","pmLabel","confirmQuestion","confirm","removePaymentMethod","showError","removeConfirm","loadStripe","paymentMethodsWithPendingConfirmation","GIFTCARD","monthlyLimit","getPaymentMethodsToDisplay","hasOrdersThatNeedConfirmation","dismissSuccess","renderError","paymentMethodRequiresConfirmation","contributeAs","submitNewCreditCard","editPaymentMethodFragment","addPaymentMethodsData","addCreateCreditCardMutation","addConfirmCreditCardMutation","removePaymentMethodMutation","addRemovePaymentMethodMutation","addConfirmOrderMutation","saveInvoice","HostName","extend","invoicesQuery","filterInvoices","allInvoices","filterBy","twelveMonthsAgo","subtract","dateMonth","isAfter","ReceiptsLoadingPlaceholder","NoReceipts","ReceiptCard","totalTransactions","loadingInvoice","downloadInvoice","fromCollectiveSlug","fromCollective","toCollectiveSlug","Receipts","invoices","byMonthYear","invoice","monthYear","toISOString","endOf","PaymentReceipts","defaultFilter","activeFilter","setActiveFilter","yearsFilter","DEFAULT_SUPPORTED_EXPENSE_TYPES","omitDeep","EXPENSE_POLICY_MAX_LENGTH","CONTRIBUTION_POLICY_MAX_LENGTH","updateFilterCategoriesMutation","setPoliciesMutation","Policies","showOnlyExpensePolicy","setSelected","updateCategories","isSubmittingCategories","categoriesError","updateCollective","isSubmittingSettings","settingsError","setPolicies","isSettingPolicies","policiesError","collectiveContributionFilteringCategories","collectiveContributionPolicy","collectiveExpensePolicy","collectiveDisableExpenseSubmission","numberOfAdmins","members","selectOptions","optionsArray","contributionPolicy","expensePolicy","disablePublicExpenseSubmission","policies","newSettings","selectedRejectCategories","rejectedCategories","contributionPolicyText","expensePolicyText","alreadyPickedCategories","category","numberOfAdminsOptions","admins","minAdminsApplies","hostAuthorCannotApproveExpensePolicy","authorCannotApproveExpenseEnforcedByHost","appliesToHostedCollectives","mb","pt","COLLECTIVE_MINIMUM_ADMINS","applies","freeze","appliesToSingleAdminCollectives","amountInCents","HostedCollectivesLink","selectedOptions","formatManualInstructions","List","UpdateBankDetailsForm","instructions","formatValues","bankAccount","reference","OrderId","useStructuredForm","whiteSpace","renderInstructions","BANK_TRANSFER_DEFAULT_INSTRUCTIONS","hostQuery","createPayoutMethodMutation","removePayoutMethodMutation","editBankTransferMutation","renderBankInstructions","bankAccountInfo","BankTransfer","createPayoutMethod","removePayoutMethod","editBankTransfer","showForm","setShowForm","showRemoveBankConfirmationModal","setShowRemoveBankConfirmationModal","existingManualPaymentMethod","showEditManualPaymentMethod","existingPayoutMethod","payoutMethods","isManualBankTransfer","manual","existingPayoutMethodMatchesCurrency","isConnectedToStripe","ca","latestBankAccount","payoutMethod","BANK_ACCOUNT","manualPayments","hideTopsection","setSubmitting","string","modifiedPaymentMethods","payoutMethodId","hasFeature","FEATURES","ReceivingMoney","PAYPAL_DONATIONS","ExternalLink","accountQuery","updateSecuritySettingsMutation","CheckboxContainer","getInitialValues","require2FAForAdmins","payoutsTwoFactorAuth","rollingLimit","Security","updateSecuritySettings","marginBottom","SendingMoney","disablePaypalPayouts","PAYPAL_PAYOUTS","paypalConnectButton","togglePaypal","AdminContributeCardsContainer","ContributeTier","listTierQuery","prepareCards","sortedTiers","componentProps","hideContributors","hideCTA","CardsContainer","justifyItems","gridGap","gridTemplateColumns","gridAutoRows","Tickets","tickets","Mutation","ContributeCrypto","ContributeCustom","getFinancialContributions","hasCustomContribution","hasCryptoContribution","waysToContribute","Tiers","filteredTiers","cryptoContributionsEnabledByHost","hasCryptoContributionsDisabled","editSettings","Download","DownloadIcon","QRCode","speakeasy","errorWrongLength","errorWrongFormat","inputLabel","TokenBox","Code","UserSecurity","disablingTwoFactorAuth","disableError","recoveryCodes","enablingTwoFactorAuth","showRecoveryCodesModal","passwordLoading","passwordError","currentPassword","passwordKey","passwordScore","enableTwoFactorAuth","disableTwoFactorAuth","setPassword","issuer","hostname","generateSecret","otpAuthUrl","otpauth_url","base32","twoFactorAuthenticatorCode","verified","totp","verify","encoding","addTwoFactorAuthTokenToIndividual","removeTwoFactorAuthTokenFromIndividual","login","hasPassword","doesAccountAlreadyHave2FA","initialSetupFormValues","initialDisableFormValues","renderPasswordManagement","Blob","addTwoFactorAuthToIndividualMutation","removeTwoFactorAuthFromIndividualMutation","accountHasTwoFactorAuthQuery","setPasswordMutation","CustomStyledIcon","DismissIcon","deleteVirtualCardMutation","DeleteVirtualCardModal","virtualCard","onDeleteRefetchQuery","modalProps","refetchOptions","deleteVirtualCard","isBusy","handleClose","Copy","Manager","Popper","Reference","VirtualCardLimitInterval","EditVirtualCardModal","CardContainer","Action","button","StateLabel","pauseCardMutation","resumeCardMutation","ActionsButton","wrapperRef","arrowRef","displayActions","setDisplayActions","setShowConfirmationModal","isEditingVirtualCard","setIsEditingVirtualCard","isDeletingVirtualCard","setIsDeletingVirtualCard","canEditVirtualCard","canDeleteVirtualCard","confirmOnPauseCard","handleActionSuccess","outside","pauseCard","pauseLoading","resumeCard","resumeLoading","handlePauseUnpause","provider","getLimitIntervalString","spendingLimitInterval","DAILY","WEEKLY","MONTHLY","YEARLY","getLimitString","spendingLimitAmount","spendingLimitRenewsOn","remainingLimit","PER_AUTHORIZATION","available","ALL_TIME","renewsOnDate","VirtualCard","displayDetails","setDisplayDetails","cardNumber","last4","handleCopy","navigator","clipboard","writeText","privateData","expireDate","cvv","assignedTo","assignee","canPauseOrResumeVirtualCard","CollectiveFilter","virtualCardCollectives","collectiveAccountIds","getAllCollectives","parentAccount","String","findCollectiveFilters","collectiveAccountId","selectedValues","selectedValuesString","selectedValue","RequestVirtualCardBtn","VirtualCardFilters","isCollectiveFilter","displayPeriodFilter","allowRequestVirtualCard","filterWidth","Collapse","virtualCardsQuery","VIRTUAL_CARDS_PER_PAGE","VirtualCards","routerQuery","merchant","merchantAccount","handleUpdateFilters","learnMoreLink","openInNewTabNoFollow","hostName","virtualCardMerchants","virtualCards","WebhookEvents","CONNECTED_ACCOUNT_CREATED","COLLECTIVE_APPLY","COLLECTIVE_APPROVED","COLLECTIVE_CREATED","COLLECTIVE_COMMENT_CREATED","COLLECTIVE_EXPENSE_CREATED","COLLECTIVE_EXPENSE_DELETED","COLLECTIVE_EXPENSE_UPDATED","COLLECTIVE_EXPENSE_REJECTED","COLLECTIVE_EXPENSE_APPROVED","COLLECTIVE_EXPENSE_PAID","COLLECTIVE_MEMBER_CREATED","COLLECTIVE_TRANSACTION_CREATED","COLLECTIVE_UPDATE_CREATED","COLLECTIVE_UPDATE_PUBLISHED","SUBSCRIPTION_CANCELED","TICKET_CONFIRMED","WebhookEventsList","i18nWebhookEventType","getFakeActivity","getFakeIndividual","twitterHandle","githubHandle","repositoryUrl","getFakeCollective","getFakeTransaction","isDebt","isRefund","ExpenseId","taxAmount","CreatedByUserId","FromCollectiveId","amountInHostCurrency","hostFeeInHostCurrency","netAmountInHostCurrency","platformFeeInHostCurrency","UsingGiftCardFromCollectiveId","netAmountInCollectiveCurrency","amountSentToHostInHostCurrency","paymentProcessorFeeInHostCurrency","formattedAmountWithInterval","getFakeExpenseEventActivity","getFakeMember","memberCollective","company","website","getFakeOrder","totalAmount","quantity","ExpenseEvents","WebhookEventInfo","transaction","html","isPrivate","hasWebhookEventInfo","WebhookActivityInfoModal","activity","Close","EMPTY_WEBHOOKS","Webhooks","removeList","fieldname","webhooks","newStatus","cleanValue","cleanWebhookUrl","isValid","webhook","validateWebhookUrl","webhookUrl","modified","notifications","editWebhooks","removeWebhook","editWebhook","getEventTypes","eventType","moreInfoModal","getWebhooksFromProps","isLoaded","webhooksCount","GraphqlAPILink","DocLink","renderWebhook","addWebhook","existingWebhooksCount","editCollectiveWebhooksQuery","editCollectiveWebhooksMutation","addEditCollectiveWebhooksData","editEditCollectiveWebhooksMutation","isEmail","EditUserEmailForm","isResendingConfirmation","loadInitialState","emailWaitingForValidation","updateUserEmail","isDone","loggedInUserEmailQuery","addLoggedInUserEmailData","updateUserEmailMutation","addUpdateUserEmailMutation","getApplicableTaxesForCountry","TaxType","ArrowBack","AccountTypesWithHost","TierTypes","convertDateFromApiUtc","convertDateToApiUtc","ActivityLog","AuthorizedApps","Archive","Delete","HostVirtualCardsSettings","PaymentMethods","EditCollectiveForm","taxes","VAT","getVATOptions","GST","getStateFromProps","save","saved","privateInstructionsDescription","inValidDateError","tos","TICKET","validStartDate","validEndDate","isValidSocialLinks","startsAt","endsAt","l","PENDING_ORDERS","PENDING","submitBtnMessageId","isEvent","isUser","currencyOptions","submitBtnLabel","info","getApplicableTaxesFields","className","apply","post","getFieldDefaultValue","socialLinks","renderSection","flexBasis","SettingsForm","AccountSettings","editCollective","handleEditCollective","updatedCollective","t","collectiveFields","sl","currentSlug","FinancialContributions","AssignVirtualCardModal","hostVirtualCardsQuery","AddCardPlaceholder","displayAssignCardModal","setAssignCardModalDisplay","displayCreateVirtualCardModal","setCreateVirtualCardModalDisplay","scroll","handleAssignCardSuccess","handleCreateVirtualCardSuccess","hostedVirtualCardMerchants","hostedVirtualCardCollectives","hostedVirtualCards","ReceiptTemplateForm","showTipForDefaultTitle","placeholders","template","receiptTitlePlaceholder","Trash","extraInfoPlaceholder","BILL_TO_OPTIONS","InvoicesReceipts","defaultReceiptTitlePlaceholder","defaultReceiptTitle","defaultAlternativeReceiptTitle","setSettings","receiptTitle","setReceiptTitle","alternativeReceiptTitle","setAlternativeReceiptTitle","showAlternativeReceiptsSection","setShowAlternativeReceiptsSection","isFieldChanged","setIsFieldChanged","isSaved","defaultInfo","defaultAlternativeInfo","setInfo","alternativeInfo","setAlternativeInfo","infoIsSaved","getBillToOption","getInExpenseTemplate","billTo","setBillTo","billToIsSaved","deleteAlternativeReceipt","getInvoiceTemplatesObj","templates","expenseTemplates","alternative","onChangeDefault","onChangeAlternate","stateFunction","ActivityClassesI18N","accountActivitySubscriptionsFragment","ActivityClasses","ActivityTypes","refetchEmailNotificationQuery","setEmailNotificationMutation","ActivitySwitch","activityType","existingSetting","activitySubscriptions","ACTIVITY_ALL","isResetingSettings","isSubscribed","setSubscribed","isOverridedByAll","setEmailNotification","handleToggle","activities","CollectiveSettings","advancedSettings","big","roleLabel","boxProps","displayAdvancedSettings","setDisplayAdvancedSettings","totalHostedCollectives","CollectiveContainer","GroupView","accounts","handleBack","GROUP_VIEWS","ORGANIZATIONS","BACKED","NecessaryNotificationsList","userActivitySubscriptionsQuery","setNewsletterOptInMutation","GroupSettings","handleGroupSettings","NotificationsSettings","setNewsletterOptIn","setNewsletterOptInLoading","orgs","backedAccounts","backerOf","backedAccount","titles","accountGroups","newsletterOptIn","formatMemberRole","MemberContainer","memberFormMessages","sinceLabel","descriptionLabel","MemberForm","collectiveImg","bindSubmitForm","triggerSubmit","memberRole","setMemberRole","memberAccount","submit","submitForm","memberFieldsFragment","teamSectionQuery","editMemberMutation","editMemberInvitationMutation","removeMemberMutation","EditMemberModal","isLastAdmin","cancelHandler","onEdit","isInvitation","cantRemoveLast","editMemberAccount","isEditingMember","editMemberInvitationAccount","isEditingMemberInvitation","removeMemberAccount","isRemovingMember","submitMemberForm","handleEditMemberMutation","handleEditMemberInvitationMutation","confirmRemoveMember","memberEntry","hasEmail","handleRemoveMemberMutation","handleSubmitForm","inviteMemberMutation","InviteMemberModal","membersIds","setMember","inviteMemberAccount","isInviting","inviteError","handleInviteMemberMutation","isInvitee","getLegacyIdForCollective","ResendMemberInviteBtn","inviteMember","Edit","isFeatureEnabled","InviteNewCard","MemberLogoContainer","MemberCard","nbAdmins","showEditModal","setShowEditModal","isInherited","inherited","memberKey","isAdmin","parentCollectiveName","ChildrenCollectiveSection","Team","showInviteModal","setShowInviteModal","CONTACT_FORM","ContactLink","memberInvitations","childrenAccountsWithMembers","childrenAccounts","child","PendingContributions","TeamSettings","ADMIN_PANEL_SECTIONS","FISCAL_HOST_SETTINGS_SECTIONS","AdminPanelSection","AdminSectionComponent","FiscalHostSettingsComponent","HOST_SECTIONS","MenuLinkContainer","li","isStrong","MenuLink","conditional","isBeta","useContext","MenuSectionHeader","MenuContainer","MenuGroup","useSubmenu","submenuContent","setSubmenu","menuContent","SubMenu","isSelfHostedAccount","getCollectiveTypeKey","isType","OrganizationSettingsMenuLinks","isAccountantOnly","Menu","isIndividual","isSimpleOrg","features","USE_PAYMENT_METHODS","EMIT_GIFT_CARDS","AdminPanelSideBar","onRoute","pageUrl","Menu2","MenuIcon","FocusTrap","createPortal","createGlobalStyle","SideBar","MenuWrapper","zindex","MenuBackdrop","SideBarWrapper","GlobalModalStyle","Section","AdminPanelTopBar","isMenuOpen","setMenuOpen","handleRouteChange","events","on","off","clickOutsideDeactivates","NotificationBar","Page","SignInOrJoinFree","TwoFactorAuthRequiredMessage","collectiveIsArchived","collectiveIsArchivedDescription","userIsArchived","userIsArchivedDescription","getDefaultSectionForAccount","loggedInUser","isAccountant","hasRole","getNotification","getBlocker","isIncognito","getIsAccountantOnly","AdminPanelPage","loadingLoggedInUser","blocker","titleBase","hasTwoFactorAuth","getInitialProps","scripts","googleMaps","AuthenticatedPage","ConfirmOrderPage","SUBMITTING","isRequestSent","triggerRequest","orderConfirmed"],"sourceRoot":""}