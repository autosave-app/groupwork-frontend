{"version":3,"file":"static/chunks/pages/root-actions-1ea0ad21d46a742b.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@styled-icons/feather/ChevronDown/ChevronDown.esm.js","webpack://_N_E/./node_modules/@styled-icons/feather/ChevronUp/ChevronUp.esm.js","webpack://_N_E/./components/ConfirmationModal.js","webpack://_N_E/./components/DateTime.js","webpack://_N_E/./components/MessageBoxGraphqlError.js","webpack://_N_E/./components/StyledButtonSet.js","webpack://_N_E/./lib/i18n/member-role.js","webpack://_N_E/./components/root-actions/AccountSettings.js","webpack://_N_E/./components/root-actions/BanAccountsSummary.js","webpack://_N_E/./components/root-actions/BanAccounts.js","webpack://_N_E/./components/root-actions/BanAccountsWithSearch.js","webpack://_N_E/./components/root-actions/ClearCacheForAccountForm.tsx","webpack://_N_E/./components/root-actions/ConnectAccountsForm.js","webpack://_N_E/./components/root-actions/MergeAccountsForm.js","webpack://_N_E/./components/root-actions/MoveAuthoredContributions.js","webpack://_N_E/./components/ExpensesPickerAsync.js","webpack://_N_E/./components/root-actions/MoveExpenses.js","webpack://_N_E/./components/OrdersPickerAsync.js","webpack://_N_E/./components/root-actions/MoveReceivedContributions.js","webpack://_N_E/./components/root-actions/RootActivityLog.js","webpack://_N_E/./components/root-actions/UnhostAccountForm.js","webpack://_N_E/./pages/root-actions.js","webpack://_N_E/?3bcc"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var ChevronDown = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"stroke\": \"currentColor\",\n    \"strokeLinecap\": \"round\",\n    \"strokeLinejoin\": \"round\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"6 9 12 15 18 9\"\n  }));\n});\nChevronDown.displayName = 'ChevronDown';\nexport var ChevronDownDimensions = {\n  height: 24,\n  width: 24\n};","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var ChevronUp = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"none\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\",\n    \"stroke\": \"currentColor\",\n    \"strokeLinecap\": \"round\",\n    \"strokeLinejoin\": \"round\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 24 24\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"18 15 12 9 6 15\"\n  }));\n});\nChevronUp.displayName = 'ChevronUp';\nexport var ChevronUpDimensions = {\n  height: 24,\n  width: 24\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport Container from './Container';\nimport StyledButton from './StyledButton';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from './StyledModal';\nimport { P } from './Text';\n\nconst messages = defineMessages({\n  cancel: {\n    id: 'actions.cancel',\n    defaultMessage: 'Cancel',\n  },\n});\n\nconst confirmBtnMsgs = defineMessages({\n  confirm: {\n    id: 'confirm',\n    defaultMessage: 'Confirm',\n  },\n  delete: {\n    id: 'actions.delete',\n    defaultMessage: 'Delete',\n  },\n  remove: {\n    id: 'Remove',\n    defaultMessage: 'Remove',\n  },\n});\n\n/**\n * A special value to return from the `continueHandler` to terminate the modal. Its loading state\n * will therefore not be updated to false, which will prevent the \"Warning: Can't perform a React state update on an unmounted component\"\n * issue.\n */\nexport const CONFIRMATION_MODAL_TERMINATE = { __CONFIRMATION_MODAL_TERMINATE: true };\n\n/**\n * ConfirmationModal component. Uses `StyledModal` to create a reusable modal mainly for\n * confirmation purpose.\n */\nconst ConfirmationModal = ({\n  header,\n  body,\n  children,\n  onClose,\n  type,\n  isDanger,\n  isSuccess,\n  cancelLabel,\n  continueLabel,\n  cancelHandler,\n  continueHandler,\n  disableSubmit,\n  ...props\n}) => {\n  const [submitting, setSubmitting] = React.useState(false);\n  const { formatMessage } = useIntl();\n\n  return (\n    <StyledModal role=\"alertdialog\" width=\"570px\" onClose={onClose} trapFocus {...props}>\n      <ModalHeader onClose={onClose}>{header}</ModalHeader>\n      <ModalBody pt={2}>{children || <P>{body}</P>}</ModalBody>\n      <ModalFooter>\n        <Container display=\"flex\" justifyContent={['center', 'flex-end']} flexWrap=\"Wrap\">\n          <StyledButton\n            mx={20}\n            my={1}\n            autoFocus\n            minWidth={140}\n            onClick={cancelHandler || onClose}\n            disabled={submitting}\n            data-cy=\"confirmation-modal-cancel\"\n          >\n            {cancelLabel || formatMessage(messages.cancel)}\n          </StyledButton>\n          <StyledButton\n            my={1}\n            minWidth={140}\n            buttonStyle={isDanger ? 'danger' : isSuccess ? 'success' : 'primary'}\n            data-cy=\"confirmation-modal-continue\"\n            loading={submitting}\n            disabled={disableSubmit}\n            onClick={async () => {\n              let result;\n              try {\n                setSubmitting(true);\n                result = await continueHandler();\n              } finally {\n                if (result !== CONFIRMATION_MODAL_TERMINATE) {\n                  setSubmitting(false);\n                }\n              }\n            }}\n          >\n            {continueLabel || formatMessage(confirmBtnMsgs[type])}\n          </StyledButton>\n        </Container>\n      </ModalFooter>\n    </StyledModal>\n  );\n};\n\nConfirmationModal.propTypes = {\n  /** header of the confirmation modal */\n  header: PropTypes.node.isRequired,\n  /** body of the confirmation modal */\n  children: PropTypes.node,\n  /** Body of the confirmation modal, used in a paragraph if there's no children */\n  body: PropTypes.node,\n  /** handles how the modal is closed */\n  onClose: PropTypes.func.isRequired,\n  /** handles onClick continue button */\n  continueHandler: PropTypes.func.isRequired,\n  /** You can pass a type here to auto-set labels to remove/delete/confirm...etc */\n  type: PropTypes.oneOf(['confirm', 'delete', 'remove']),\n  /** If true, a danger style button will be used for the main button */\n  isDanger: PropTypes.bool,\n  isSuccess: PropTypes.bool,\n  disableSubmit: PropTypes.bool,\n  /** handles onClick cancel button. Defaults to `onClose` prop. */\n  cancelHandler: PropTypes.func,\n  /** continue button label of the confirmation modal. Defaults to `Confirm`. */\n  continueLabel: PropTypes.node,\n  /** cancel button label of the confirmation modal. Defaults to `Cancel`. */\n  cancelLabel: PropTypes.node,\n};\n\nConfirmationModal.defaultProps = {\n  type: 'confirm',\n};\n\n/** @component */\nexport default ConfirmationModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessage, FormattedDate, useIntl } from 'react-intl';\n\nimport { getDateFromValue } from '../lib/date-utils';\nimport dayjs from '../lib/dayjs';\nimport { capitalize } from '../lib/utils';\n\nconst TITLE_MESSAGE = defineMessage({\n  defaultMessage: 'Local time: {localTime}{newLine}UTC time: {utcTime}',\n});\n\nexport const generateDateTitle = (intl, date) => {\n  return intl.formatMessage(TITLE_MESSAGE, {\n    localTime: capitalize(intl.formatDate(date, { dateStyle: 'full', timeStyle: 'long' })),\n    utcTime: capitalize(intl.formatDate(date, { dateStyle: 'full', timeStyle: 'long', timeZone: 'UTC' })),\n    newLine: '\\n',\n  });\n};\n\n/**\n * A wrapper around `FormattedDate` + HTML `<time>` with sensible defaults.\n * Displays the full date and time in the user's locale and in UTC in the title.\n */\nconst DateTime = ({ value, dateStyle, timeStyle, ...props }) => {\n  const intl = useIntl();\n  const [title, setTitle] = React.useState();\n  const date = React.useMemo(() => getDateFromValue(value), [value]);\n  return (\n    <time\n      {...props}\n      title={title}\n      dateTime={date.toISOString()}\n      onMouseEnter={() => setTitle(generateDateTitle(intl, date))}\n    >\n      <FormattedDate dateStyle={dateStyle} timeStyle={timeStyle} value={date} />\n    </time>\n  );\n};\n\nDateTime.propTypes = {\n  /** The value as a Date or as a parsable string */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date), PropTypes.instanceOf(dayjs)]).isRequired,\n  /** Date style, set this to null to hide the date */\n  dateStyle: PropTypes.oneOf(['full', 'long', 'medium', 'short']),\n  /** Time style, set this to display the time along with the date */\n  timeStyle: PropTypes.oneOf(['full', 'long', 'medium', 'short', undefined, null]),\n};\n\nDateTime.defaultProps = {\n  dateStyle: 'long',\n};\n\nexport default DateTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport { formatErrorMessage, getErrorFromGraphqlException } from '../lib/errors';\n\nimport MessageBox from './MessageBox';\n\n/**\n * A `MessageBox` specialized to display GraphQL errors.\n * Accepts all props from `MessageBox`.\n */\nconst MessageBoxGraphqlError = ({ error, ...props }) => {\n  const intl = useIntl();\n  return (\n    <MessageBox type=\"error\" withIcon {...props}>\n      {formatErrorMessage(intl, getErrorFromGraphqlException(error))}\n    </MessageBox>\n  );\n};\n\nMessageBoxGraphqlError.propTypes = {\n  error: PropTypes.any,\n};\n\nexport default MessageBoxGraphqlError;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { themeGet } from '@styled-system/theme-get';\nimport styled from 'styled-components';\n\nimport Container from './Container';\nimport StyledButton from './StyledButton';\n\nconst StyledButtonItem = styled(StyledButton)`\n  border-radius: 0;\n  line-height: 1.5;\n  flex-grow: 1;\n  border-color: ${themeGet('colors.black.300')};\n  transition: color 0.2s, background 0.1s, font-size 30ms;\n\n  &:active p {\n    color: white;\n  }\n  &:hover,\n  &:focus {\n    /* Use a higher z-index on hover to get all the borders colored */\n    z-index: 9;\n  }\n  /* Remove the dotted outline on Firefox */\n  &::-moz-focus-inner {\n    border: 0;\n  }\n  &:first-child {\n    border-radius: ${({ customBorderRadius }) => `${customBorderRadius} 0 0 ${customBorderRadius}`};\n  }\n  &:not(:first-child) {\n    margin-left: -1px;\n  }\n  &:last-child {\n    border-radius: ${({ combo, customBorderRadius }) =>\n      combo ? '0' : `0 ${customBorderRadius} ${customBorderRadius} 0`};\n  }\n`;\n\nStyledButtonItem.propTypes = {\n  combo: PropTypes.bool,\n};\n\nconst StyledButtonSet = ({\n  size,\n  items,\n  children,\n  selected,\n  buttonProps,\n  buttonPropsBuilder,\n  onChange,\n  combo,\n  disabled,\n  customBorderRadius,\n  ...props\n}) => (\n  <Container display=\"flex\" {...props}>\n    {items.map((item, index) => (\n      <StyledButtonItem\n        combo={combo || undefined}\n        color={item === selected ? 'white' : 'black.400'}\n        key={item}\n        buttonSize={size}\n        buttonStyle={item === selected ? 'primary' : undefined}\n        onClick={onChange && (() => onChange(item))}\n        className={item === selected ? 'selected' : undefined}\n        disabled={disabled}\n        aria-pressed={item === selected}\n        type=\"button\"\n        py=\"8px\"\n        customBorderRadius={customBorderRadius}\n        {...buttonProps}\n        {...(buttonPropsBuilder ? buttonPropsBuilder({ item, index, isSelected: item === selected }) : {})}\n      >\n        {children({ item, isSelected: item === selected })}\n      </StyledButtonItem>\n    ))}\n  </Container>\n);\n\nStyledButtonSet.propTypes = {\n  /** A list of elements to build buttons uppon */\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n  /** Button child content renderer. Get passed an object like { item, isSelected } */\n  children: PropTypes.func.isRequired,\n  /** Based on the design system theme */\n  size: PropTypes.oneOf(['small', 'medium', 'large', 'tiny']),\n  /** Currently selected item */\n  selected: PropTypes.any,\n  /** An optional func called with the new item when option changes */\n  onChange: PropTypes.func,\n  /** Setting to style last item to look good in combination with a text input */\n  combo: PropTypes.bool,\n  /** Disable user input */\n  disabled: PropTypes.bool,\n  /** Similar to `buttonProps` but allow props to be added dynamically based on item */\n  buttonPropsBuilder: PropTypes.func,\n  /** Button Props */\n  buttonProps: PropTypes.object,\n  customBorderRadius: PropTypes.string,\n};\n\nStyledButtonSet.defaultProps = {\n  combo: false,\n  size: 'medium',\n  fontSize: '14px',\n  customBorderRadius: '4px',\n};\n\nexport default StyledButtonSet;\n","import { defineMessages } from 'react-intl';\n\nimport roles from '../constants/roles';\n\nconst RolesTranslations = defineMessages({\n  [roles.HOST]: {\n    id: 'Member.Role.HOST',\n    defaultMessage: 'Host',\n  },\n  [roles.ADMIN]: {\n    id: 'Member.Role.ADMIN',\n    defaultMessage: 'Admin',\n  },\n  [roles.MEMBER]: {\n    id: 'Member.Role.MEMBER',\n    defaultMessage: 'Core Contributor',\n  },\n  [roles.CONTRIBUTOR]: {\n    id: 'Member.Role.CONTRIBUTOR',\n    defaultMessage: 'Contributor',\n  },\n  [roles.BACKER]: {\n    id: 'Member.Role.BACKER',\n    defaultMessage: 'Financial Contributor',\n  },\n  [roles.ATTENDEE]: {\n    id: 'Member.Role.ATTENDEE',\n    defaultMessage: 'Attendee',\n  },\n  [roles.FOLLOWER]: {\n    id: 'Member.Role.FOLLOWER',\n    defaultMessage: 'Follower',\n  },\n  [roles.ACCOUNTANT]: {\n    id: 'Member.Role.ACCOUNTANT',\n    defaultMessage: 'Accountant',\n  },\n  [roles.CONNECTED_COLLECTIVE]: {\n    id: 'Member.Role.ConnectedAccount',\n    defaultMessage: 'Connected',\n  },\n  [roles.CONNECTED_ACCOUNT]: {\n    id: 'Member.Role.ConnectedAccount',\n    defaultMessage: 'Connected',\n  },\n});\n\n/**\n * Translate a member role\n *\n * @param {func} `formatMessage` - see `injectIntl` or `useIntl`\n * @param {string} `role` - see `roles`\n */\nconst formatMemberRole = (intl, role) => {\n  const i18nMsg = RolesTranslations[role];\n  return i18nMsg ? intl.formatMessage(i18nMsg) : role;\n};\n\nexport default formatMemberRole;\n","import React, { useEffect } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { useIntl } from 'react-intl';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport Container from '../Container';\nimport { Box, Flex } from '../Grid';\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\nimport StyledCheckbox from '../StyledCheckbox';\nimport StyledInputField from '../StyledInputField';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nexport const editAccountFlagsMutation = gql`\n  mutation EditAccountFlags(\n    $account: AccountReferenceInput!\n    $isArchived: Boolean\n    $isTrustedHost: Boolean\n    $isTwoFactorAuthEnabled: Boolean\n  ) {\n    editAccountFlags(\n      account: $account\n      isArchived: $isArchived\n      isTrustedHost: $isTrustedHost\n      isTwoFactorAuthEnabled: $isTwoFactorAuthEnabled\n    ) {\n      id\n      slug\n    }\n  }\n`;\n\nconst AccountSettings = () => {\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  const [selectedAccountOption, setSelectedAccountOption] = React.useState([]);\n  const [archivedFlag, setArchivedFlag] = React.useState();\n  const [trustedHostFlag, setTrustedHostFlag] = React.useState();\n  const [twoFactorEnabledFlag, setTwoFactorEnabledFlag] = React.useState();\n  const [enableSave, setEnableSave] = React.useState(false);\n  const [editAccountFlags, { loading }] = useMutation(editAccountFlagsMutation, { context: API_V2_CONTEXT });\n\n  useEffect(() => {\n    setArchivedFlag(selectedAccountOption?.value?.isArchived);\n    setTrustedHostFlag(selectedAccountOption?.value?.isTrustedHost);\n    setTwoFactorEnabledFlag(selectedAccountOption?.value?.isTwoFactorAuthEnabled);\n  }, [selectedAccountOption]);\n\n  return (\n    <React.Fragment>\n      <StyledInputField htmlFor=\"ban-accounts-picker\" label=\"Account\" flex=\"1 1\">\n        {({ id }) => (\n          <CollectivePickerAsync\n            inputId={id}\n            onChange={setSelectedAccountOption}\n            includeDeleted={true}\n            includeArchived={true}\n            value={selectedAccountOption}\n            noCache\n          />\n        )}\n      </StyledInputField>\n\n      {selectedAccountOption.length !== 0 && (\n        <React.Fragment>\n          <Container px={1} pt={3} pb={3}>\n            <Box pb={2}>Flags</Box>\n            <Flex flexWrap=\"wrap\" px={1} mt={2}>\n              <Box pr={4}>\n                <StyledCheckbox\n                  name=\"Archived\"\n                  label=\"Archived\"\n                  checked={archivedFlag}\n                  onChange={({ checked }) => {\n                    setEnableSave(true);\n                    setArchivedFlag(checked);\n                  }}\n                />\n              </Box>\n              {selectedAccountOption?.value?.isHost && (\n                <Box>\n                  <StyledCheckbox\n                    name=\"Trusted Host\"\n                    label=\"Trusted Host\"\n                    checked={trustedHostFlag}\n                    onChange={({ checked }) => {\n                      setEnableSave(true);\n                      setTrustedHostFlag(checked);\n                    }}\n                  />\n                </Box>\n              )}\n              <Box>\n                <StyledCheckbox\n                  name=\"2FA\"\n                  label=\"2FA\"\n                  disabled={!twoFactorEnabledFlag && !enableSave}\n                  checked={twoFactorEnabledFlag}\n                  onChange={({ checked }) => {\n                    setEnableSave(true);\n                    setTwoFactorEnabledFlag(checked);\n                  }}\n                />\n              </Box>\n            </Flex>\n            {!twoFactorEnabledFlag && enableSave && (\n              <Container pt={4}>\n                <MessageBox type=\"error\">\n                  <div>Some instructions on what to look when disabling 2FA for a user;</div>\n                  <ul>\n                    <li>\n                      If user has Twitter, GitHub or any other social accounts linked we can ask for a proof to be added\n                      to them.\n                    </li>\n                    <li>\n                      If the user has a payment method linked, we can ask for the credit card information (last 4 digits\n                      + type of card etc).\n                    </li>\n                    <li>\n                      If the account is completely empty, but the user is an admin of another collective or host (where\n                      there&apos;s other admins), we notify the other admins of the collective to verify if it&apos;s\n                      okay to reset the user&apos;s 2FA codes.\n                    </li>\n                    <li>\n                      If the account is completely empty, but the user is the sole admin of another collective or host,\n                      we look at any links in the collective or host account (such as the website link) and ask the user\n                      to upload something to those social links in order to verify. For example if the collective has a\n                      twitter account we ask the user to post a message with that account.\n                    </li>\n                    <li>\n                      If none of the above, there&apos;s no links to social accounts, there&apos;s no credit card\n                      information and the user account is completely empty we just reset them as there&apos;s nothing to\n                      lose.\n                    </li>\n                  </ul>\n                  <div>In doubt, do not hesitate to ask the engineering team.</div>\n                </MessageBox>\n              </Container>\n            )}\n          </Container>\n          <StyledButton\n            mt={4}\n            width=\"100%\"\n            buttonStyle=\"primary\"\n            loading={loading}\n            disabled={!enableSave}\n            onClick={async () => {\n              try {\n                await editAccountFlags({\n                  variables: {\n                    account: { slug: selectedAccountOption?.value?.slug },\n                    isArchived: archivedFlag,\n                    isTrustedHost: trustedHostFlag,\n                    isTwoFactorAuthEnabled: twoFactorEnabledFlag,\n                  },\n                });\n                addToast({\n                  type: TOAST_TYPE.SUCCESS,\n                  title: 'Success',\n                  message: 'Account flags saved',\n                });\n                setEnableSave(false);\n              } catch (e) {\n                addToast({\n                  type: TOAST_TYPE.ERROR,\n                  message: i18nGraphqlException(intl, e),\n                });\n              }\n            }}\n          >\n            Save\n          </StyledButton>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default AccountSettings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from '../Container';\nimport LinkCollective from '../LinkCollective';\nimport { P } from '../Text';\n\nconst BanAccountsSummary = ({ dryRunData }) => {\n  return (\n    <React.Fragment>\n      <P whiteSpace=\"pre-wrap\" lineHeight=\"24px\">\n        {dryRunData.message}\n      </P>\n      {Boolean(dryRunData.accounts.length) && (\n        <Container fontSize=\"13px\" mt={2} maxHeight=\"300px\" overflowY=\"auto\">\n          List of impacted accounts:{' '}\n          {dryRunData.accounts.map((account, index) => (\n            <span key={account.id}>\n              {index > 0 && ', '}\n              <LinkCollective collective={account} openInNewTab />\n            </span>\n          ))}\n        </Container>\n      )}\n    </React.Fragment>\n  );\n};\n\nBanAccountsSummary.propTypes = {\n  dryRunData: PropTypes.object,\n};\n\nexport default BanAccountsSummary;\n","import React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { useIntl } from 'react-intl';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport ConfirmationModal from '../ConfirmationModal';\nimport { Flex } from '../Grid';\nimport StyledButton from '../StyledButton';\nimport StyledCheckbox from '../StyledCheckbox';\nimport StyledInputField from '../StyledInputField';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nimport BanAccountsSummary from './BanAccountsSummary';\n\nexport const banAccountsMutation = gql`\n  mutation BanAccounts($account: [AccountReferenceInput!]!, $dryRun: Boolean!, $includeAssociatedAccounts: Boolean!) {\n    banAccount(account: $account, includeAssociatedAccounts: $includeAssociatedAccounts, dryRun: $dryRun) {\n      isAllowed\n      message\n      accounts {\n        id\n        slug\n        name\n        type\n        ... on AccountWithParent {\n          parent {\n            id\n            slug\n            type\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst BanAccount = () => {\n  const [selectedAccountsOptions, setSelectedAccountsOptions] = React.useState([]);\n  const [includeAssociatedAccounts, setIncludeAssociatedAccounts] = React.useState(true);\n  const [dryRunData, setDryRunData] = React.useState(null);\n  const [_banAccounts, { loading }] = useMutation(banAccountsMutation, { context: API_V2_CONTEXT });\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  const isValid = Boolean(selectedAccountsOptions?.length);\n  const banAccounts = (dryRun = true) =>\n    _banAccounts({\n      variables: {\n        account: selectedAccountsOptions.map(a => ({ legacyId: a.value.id })),\n        includeAssociatedAccounts,\n        dryRun,\n      },\n    });\n\n  return (\n    <div>\n      <StyledInputField htmlFor=\"ban-accounts-picker\" label=\"Account\" flex=\"1 1\">\n        {({ id }) => (\n          <CollectivePickerAsync inputId={id} onChange={setSelectedAccountsOptions} isMulti skipGuests={false} />\n        )}\n      </StyledInputField>\n\n      <Flex flexWrap=\"wrap\" px={1} mt={2}>\n        <StyledCheckbox\n          name=\"associated-accounts\"\n          label=\"Include all associated accounts\"\n          checked={includeAssociatedAccounts}\n          onChange={({ checked }) => {\n            setIncludeAssociatedAccounts(checked);\n          }}\n        />\n      </Flex>\n\n      <StyledButton\n        mt={4}\n        width=\"100%\"\n        buttonStyle=\"primary\"\n        disabled={!isValid}\n        loading={loading}\n        onClick={async () => {\n          try {\n            const result = await banAccounts(true);\n            setDryRunData(result.data.banAccount);\n          } catch (e) {\n            addToast({\n              type: TOAST_TYPE.ERROR,\n              message: i18nGraphqlException(intl, e),\n            });\n          }\n        }}\n      >\n        Analyze\n      </StyledButton>\n      {dryRunData && (\n        <ConfirmationModal\n          isDanger\n          continueLabel=\"Ban accounts\"\n          header=\"Ban accounts\"\n          onClose={() => setDryRunData(null)}\n          disableSubmit={!dryRunData.isAllowed}\n          continueHandler={async () => {\n            try {\n              const result = await banAccounts(false);\n              setDryRunData(null);\n              addToast({\n                type: TOAST_TYPE.SUCCESS,\n                title: `Successfully banned ${result.data.banAccount.accounts.length} accounts`,\n                message: <P whiteSpace=\"pre-wrap\">{result.data.banAccount.message}</P>,\n              });\n            } catch (e) {\n              addToast({\n                type: TOAST_TYPE.ERROR,\n                message: i18nGraphqlException(intl, e),\n              });\n            }\n          }}\n        >\n          <BanAccountsSummary dryRunData={dryRunData} />\n        </ConfirmationModal>\n      )}\n    </div>\n  );\n};\n\nexport default BanAccount;\n","import React from 'react';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { truncate, uniqBy } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport styled, { css } from 'styled-components';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport ConfirmationModal from '../ConfirmationModal';\nimport { Box, Flex } from '../Grid';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport StyledCollectiveCard from '../search-page/StyledCollectiveCard';\nimport SearchBar from '../SearchBar';\nimport StyledButton from '../StyledButton';\nimport StyledCheckbox from '../StyledCheckbox';\nimport StyledLink from '../StyledLink';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nimport { banAccountsMutation } from './BanAccounts';\nimport BanAccountsSummary from './BanAccountsSummary';\n\nexport const searchQuery = gql`\n  query SearchPage($term: String!, $offset: Int) {\n    accounts(\n      searchTerm: $term\n      limit: 12\n      offset: $offset\n      skipRecentAccounts: false\n      orderBy: { field: CREATED_AT, direction: DESC }\n      type: [COLLECTIVE, EVENT, FUND, INDIVIDUAL, ORGANIZATION, PROJECT]\n    ) {\n      nodes {\n        id\n        isActive\n        type\n        slug\n        name\n        tags\n        isHost\n        imageUrl\n        backgroundImageUrl\n        description\n        longDescription\n        website\n        currency\n        location {\n          id\n          country\n        }\n        stats {\n          id\n          totalAmountReceived(useCache: true) {\n            currency\n            valueInCents\n          }\n        }\n        ... on Organization {\n          host {\n            id\n            hostFeePercent\n            totalHostedCollectives\n          }\n        }\n        ... on AccountWithParent {\n          parent {\n            id\n            slug\n            backgroundImageUrl\n          }\n        }\n        backers: members(role: BACKER) {\n          totalCount\n        }\n        memberOf(role: BACKER) {\n          totalCount\n        }\n      }\n      limit\n      offset\n      totalCount\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  border-radius: 16px;\n  cursor: crosshair;\n  transition: box-shadow 0.3s;\n  &:hover {\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n  }\n  ${props =>\n    props.$isSelected &&\n    css`\n      box-shadow: 0px 0px 10px red;\n      &:hover {\n        box-shadow: 0px 0px 5px red;\n      }\n    `}\n`;\n\nconst AccountsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 20px;\n  margin-top: 20px;\n`;\n\nconst BanAccountsWithSearch = () => {\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const { data, loading, error, refetch } = useQuery(searchQuery, {\n    variables: { term: searchTerm },\n    context: API_V2_CONTEXT,\n    skip: !searchTerm,\n  });\n  const [selectedAccounts, setSelectedAccounts] = React.useState([]);\n  const [includeAssociatedAccounts, setIncludeAssociatedAccounts] = React.useState(true);\n  const [dryRunData, setDryRunData] = React.useState(null);\n  const [_banAccounts, { loading: submitting }] = useMutation(banAccountsMutation, { context: API_V2_CONTEXT });\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  const isValid = Boolean(selectedAccounts?.length);\n  const toggleAccountSelection = account => {\n    return !selectedAccounts.some(selectedAccount => selectedAccount.id === account.id)\n      ? setSelectedAccounts(uniqBy([...selectedAccounts, account], 'id'))\n      : setSelectedAccounts(selectedAccounts.filter(a => a.id !== account.id));\n  };\n\n  const banAccounts = (dryRun = true) =>\n    _banAccounts({\n      variables: {\n        account: selectedAccounts.map(a => ({ id: a.id })),\n        includeAssociatedAccounts,\n        dryRun,\n      },\n    });\n\n  return (\n    <div>\n      <SearchBar placeholder=\"Search accounts\" onSubmit={setSearchTerm} disabled={loading || submitting} />\n\n      {error ? (\n        <MessageBoxGraphqlError error={error} />\n      ) : loading ? (\n        <LoadingPlaceholder height={300} width=\"100%\" mt=\"20px\" />\n      ) : data?.accounts?.nodes?.length ? (\n        <AccountsContainer>\n          {data.accounts.nodes.map(account => (\n            <CardContainer\n              key={account.id}\n              $isSelected={selectedAccounts.some(a => a.id === account.id)}\n              onClick={() => toggleAccountSelection(account)}\n              role=\"button\"\n              tabIndex={0}\n              onKeyPress={e => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault();\n                  toggleAccountSelection(account);\n                }\n              }}\n            >\n              <StyledCollectiveCard collective={account} bodyHeight={200} pb={3} px={3} fontSize=\"11px\">\n                <div>\n                  {account.website && (\n                    <Box mb={2}>\n                      <StyledLink openInNewTabNoFollow href={account.website}>\n                        {truncate(account.website, { length: 128 })}\n                      </StyledLink>\n                    </Box>\n                  )}\n                  {account.description && <P fontSize=\"11px\">{truncate(account.description, { length: 120 })}</P>}\n                </div>\n              </StyledCollectiveCard>\n            </CardContainer>\n          ))}\n        </AccountsContainer>\n      ) : searchTerm ? (\n        <P my={4} textAlign=\"center\" fontSize=\"25px\">\n          No results for {searchTerm}\n        </P>\n      ) : null}\n\n      <Flex flexWrap=\"wrap\" px={1} mt={4} justifyContent=\"center\">\n        <StyledCheckbox\n          label=\"Include all associated accounts\"\n          checked={includeAssociatedAccounts}\n          onChange={({ checked }) => {\n            setIncludeAssociatedAccounts(checked);\n          }}\n        />\n      </Flex>\n\n      <StyledButton\n        mt={3}\n        width=\"100%\"\n        buttonStyle=\"primary\"\n        disabled={!isValid}\n        loading={submitting}\n        onClick={async () => {\n          try {\n            const result = await banAccounts(true);\n            setDryRunData(result.data.banAccount);\n          } catch (e) {\n            addToast({\n              type: TOAST_TYPE.ERROR,\n              message: i18nGraphqlException(intl, e),\n            });\n          }\n        }}\n      >\n        Analyze\n      </StyledButton>\n      {dryRunData && (\n        <ConfirmationModal\n          isDanger\n          continueLabel=\"Ban accounts\"\n          header=\"Ban accounts\"\n          cancelHandler={() => setDryRunData(null)}\n          disableSubmit={!dryRunData.isAllowed}\n          continueHandler={async () => {\n            try {\n              const result = await banAccounts(false);\n              setDryRunData(null);\n              setSelectedAccounts([]);\n              refetch(); // Refresh the search results, no need to wait for it\n              addToast({\n                type: TOAST_TYPE.SUCCESS,\n                title: `Successfully banned ${result.data.banAccount.accounts.length} accounts`,\n                message: <P whiteSpace=\"pre-wrap\">{result.data.banAccount.message}</P>,\n              });\n            } catch (e) {\n              addToast({\n                type: TOAST_TYPE.ERROR,\n                message: i18nGraphqlException(intl, e),\n              });\n            }\n          }}\n        >\n          <BanAccountsSummary dryRunData={dryRunData} />\n        </ConfirmationModal>\n      )}\n    </div>\n  );\n};\n\nBanAccountsWithSearch.propTypes = {};\n\nexport default BanAccountsWithSearch;\n","import React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { startCase, uniq } from 'lodash';\nimport { useIntl } from 'react-intl';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { AccountCacheType, ClearCacheMutation, ClearCacheMutationVariables } from '../../lib/graphql/types/v2/graphql';\n\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport { Box, Flex } from '../Grid';\nimport StyledButton from '../StyledButton';\nimport StyledCheckbox from '../StyledCheckbox';\nimport StyledInputField from '../StyledInputField';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst CACHE_TYPES = Object.values(AccountCacheType);\n\nconst clearCacheMutation = gql`\n  mutation ClearCache($account: AccountReferenceInput!, $cacheTypes: [AccountCacheType!]) {\n    clearCacheForAccount(account: $account, type: $cacheTypes) {\n      id\n      slug\n      name\n    }\n  }\n`;\n\nconst ClearCacheForAccountForm = () => {\n  const [account, setAccount] = React.useState(null);\n  const [cacheTypes, setCacheTypes] = React.useState<AccountCacheType[]>(() => [...CACHE_TYPES]);\n  const [clearCache, { loading }] = useMutation<ClearCacheMutation, ClearCacheMutationVariables>(clearCacheMutation, {\n    context: API_V2_CONTEXT,\n  });\n  const { addToast } = useToasts();\n  const isValid = account && cacheTypes.length > 0;\n  const intl = useIntl();\n  return (\n    <div>\n      <StyledInputField htmlFor=\"clear-cache-account\" label=\"Account\" flex=\"1 1\">\n        {({ id }) => (\n          <CollectivePickerAsync inputId={id} onChange={({ value }) => setAccount(value)} skipGuests={false} />\n        )}\n      </StyledInputField>\n\n      <P fontWeight=\"normal\" fontSize=\"14px\" color=\"black.800\" mt={3} mb={2}>\n        Cache types\n      </P>\n\n      <Flex flexWrap=\"wrap\" px={1}>\n        <StyledCheckbox\n          label=\"All\"\n          checked={cacheTypes.length === CACHE_TYPES.length}\n          onChange={({ checked }) => {\n            if (checked) {\n              setCacheTypes(CACHE_TYPES);\n            } else {\n              setCacheTypes([]);\n            }\n          }}\n        />\n        {CACHE_TYPES.map(cacheType => (\n          <Box ml={2} key={cacheType}>\n            <StyledCheckbox\n              label={startCase(cacheType.toLowerCase())}\n              checked={cacheTypes.includes(cacheType)}\n              onChange={({ checked }) => {\n                if (checked) {\n                  setCacheTypes(uniq([...cacheTypes, cacheType]));\n                } else {\n                  setCacheTypes(cacheTypes.filter(t => t !== cacheType));\n                }\n              }}\n            />\n          </Box>\n        ))}\n      </Flex>\n\n      <StyledButton\n        mt={4}\n        width=\"100%\"\n        buttonStyle=\"primary\"\n        disabled={!isValid}\n        loading={loading}\n        onClick={async () => {\n          try {\n            const result = await clearCache({ variables: { account: { legacyId: account.id }, cacheTypes } });\n            const resultAccount = result.data.clearCacheForAccount;\n            addToast({\n              type: TOAST_TYPE.SUCCESS,\n              message: `Cache cleared for ${resultAccount.name} (@${resultAccount.slug})`,\n            });\n          } catch (e) {\n            addToast({\n              type: TOAST_TYPE.ERROR,\n              message: i18nGraphqlException(intl, e),\n            });\n          }\n        }}\n      >\n        Clear cache{account ? ` for ${account.name}` : ''}\n      </StyledButton>\n    </div>\n  );\n};\n\nClearCacheForAccountForm.propTypes = {};\n\nexport default ClearCacheForAccountForm;\n","import React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { useIntl } from 'react-intl';\n\nimport { CollectiveType } from '../../lib/constants/collectives';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport { Flex } from '../Grid';\nimport LinkCollective from '../LinkCollective';\nimport StyledButton from '../StyledButton';\nimport StyledInputField from '../StyledInputField';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst connectAccountsMutation = gql`\n  mutation ConnectAccounts($memberAccount: AccountReferenceInput!, $account: AccountReferenceInput!) {\n    createMember(memberAccount: $memberAccount, account: $account, role: CONNECTED_ACCOUNT) {\n      id\n    }\n  }\n`;\n\nconst CONNECTED_ACCOUNT_ACCEPTED_TYPES = [\n  CollectiveType.COLLECTIVE,\n  CollectiveType.EVENT,\n  CollectiveType.ORGANIZATION,\n  CollectiveType.PROJECT,\n  CollectiveType.FUND,\n];\n\nconst ConnectAccountsForm = () => {\n  const [submitConnectAccounts, { loading }] = useMutation(connectAccountsMutation, { context: API_V2_CONTEXT });\n  const [memberAccount, setMemberAccount] = React.useState(null);\n  const [account, setAccount] = React.useState(null);\n  const { addToast } = useToasts();\n  const isValid = memberAccount && account;\n  const intl = useIntl();\n  const connectCTA = getConnectCTA(memberAccount, account);\n\n  const connectAccounts = async () => {\n    try {\n      await submitConnectAccounts({\n        variables: {\n          memberAccount: { legacyId: memberAccount.id },\n          account: { legacyId: account.id },\n        },\n      });\n\n      addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: (\n          <React.Fragment>\n            <LinkCollective collective={memberAccount} /> is now connected to <LinkCollective collective={account} />\n          </React.Fragment>\n        ),\n      });\n\n      // Reset the form\n      setMemberAccount(null);\n      setAccount(null);\n    } catch (e) {\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        variant: 'light',\n        message: i18nGraphqlException(intl, e),\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Flex alignItems=\"flex-end\">\n        <StyledInputField htmlFor=\"connect-account-1\" label=\"Make...\" flex=\"1 1\">\n          {({ id }) => (\n            <CollectivePickerAsync\n              inputId={id}\n              onChange={option => setMemberAccount(option?.value || null)}\n              collective={memberAccount}\n              types={CONNECTED_ACCOUNT_ACCEPTED_TYPES}\n              isClearable\n            />\n          )}\n        </StyledInputField>\n      </Flex>\n      <Flex alignItems=\"flex-end\" mt={3}>\n        <StyledInputField htmlFor=\"connect-account-2\" label=\"...a connected account of\" flex=\"1 1\">\n          {({ id }) => (\n            <CollectivePickerAsync\n              inputId={id}\n              onChange={option => setAccount(option?.value || null)}\n              filterResults={accounts => (!memberAccount ? accounts : accounts.filter(a => a.id !== memberAccount.id))}\n              collective={account}\n              types={CONNECTED_ACCOUNT_ACCEPTED_TYPES}\n              isClearable\n            />\n          )}\n        </StyledInputField>\n      </Flex>\n      <StyledButton\n        mt={4}\n        width=\"100%\"\n        buttonStyle=\"primary\"\n        disabled={!isValid}\n        loading={loading}\n        onClick={() => connectAccounts()}\n      >\n        {connectCTA}\n      </StyledButton>\n    </div>\n  );\n};\n\nconst getConnectCTA = (fromAccount, toAccount) => {\n  if (!fromAccount || !toAccount) {\n    return 'Connect';\n  } else {\n    return `Connect @${fromAccount.slug} to @${toAccount.slug}`;\n  }\n};\n\nConnectAccountsForm.propTypes = {};\n\nexport default ConnectAccountsForm;\n","import React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { useIntl } from 'react-intl';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport ConfirmationModal from '../ConfirmationModal';\nimport { Flex } from '../Grid';\nimport StyledButton from '../StyledButton';\nimport StyledInputField from '../StyledInputField';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst mergeAccountsMutation = gql`\n  mutation MergeAccounts($fromAccount: AccountReferenceInput!, $toAccount: AccountReferenceInput!, $dryRun: Boolean!) {\n    mergeAccounts(fromAccount: $fromAccount, toAccount: $toAccount, dryRun: $dryRun) {\n      message\n      account {\n        id\n        name\n        slug\n      }\n    }\n  }\n`;\n\nconst MergeAccountsForm = () => {\n  const [submitMergeAccounts, { loading }] = useMutation(mergeAccountsMutation, { context: API_V2_CONTEXT });\n  const [mergeSummary, setMergeSummary] = React.useState(false);\n  const [fromAccount, setFromAccount] = React.useState(null);\n  const [toAccount, setToAccount] = React.useState(null);\n  const { addToast } = useToasts();\n  const isValid = fromAccount && toAccount;\n  const intl = useIntl();\n  const mergeCTA = getMergeCTA(fromAccount, toAccount);\n\n  const mergeAccounts = async (dryRun = true) => {\n    try {\n      const result = await submitMergeAccounts({\n        variables: {\n          dryRun,\n          fromAccount: { legacyId: fromAccount.id },\n          toAccount: { legacyId: toAccount.id },\n        },\n      });\n\n      const resultMessage = result.data.mergeAccounts.message;\n      if (dryRun) {\n        setMergeSummary(resultMessage);\n      } else {\n        const successMessage = `@${fromAccount.slug} has been merged into @${toAccount.slug}`;\n        addToast({\n          type: TOAST_TYPE.SUCCESS,\n          message: !resultMessage ? successMessage : `${successMessage}\\n${resultMessage}`,\n        });\n\n        // Reset the form\n        setMergeSummary(null);\n        setFromAccount(null);\n        setToAccount(null);\n      }\n    } catch (e) {\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        variant: 'light',\n        message: i18nGraphqlException(intl, e),\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Flex alignItems=\"flex-end\">\n        <StyledInputField htmlFor=\"merge-account-1\" label=\"Merge Account...\" flex=\"1 1\">\n          {({ id }) => (\n            <CollectivePickerAsync\n              inputId={id}\n              onChange={option => setFromAccount(option?.value || null)}\n              collective={fromAccount}\n              isClearable\n              noCache // Don't cache to prevent showing merged collectives\n              skipGuests={false}\n            />\n          )}\n        </StyledInputField>\n      </Flex>\n      <Flex alignItems=\"flex-end\" mt={3}>\n        <StyledInputField htmlFor=\"merge-account-2\" label=\"...into\" flex=\"1 1\">\n          {({ id }) => (\n            <CollectivePickerAsync\n              inputId={id}\n              onChange={option => setToAccount(option?.value || null)}\n              filterResults={accounts => (!fromAccount ? accounts : accounts.filter(a => a.id !== fromAccount.id))}\n              collective={toAccount}\n              types={fromAccount ? [fromAccount.type] : undefined}\n              isClearable\n              noCache // Don't cache to prevent showing merged collectives\n              skipGuests={false}\n            />\n          )}\n        </StyledInputField>\n      </Flex>\n      <StyledButton\n        mt={4}\n        width=\"100%\"\n        buttonStyle=\"danger\"\n        disabled={!isValid}\n        loading={loading}\n        onClick={() => mergeAccounts(true)}\n      >\n        {mergeCTA}\n      </StyledButton>\n      {mergeSummary && (\n        <ConfirmationModal\n          isDanger\n          continueLabel=\"Merge profiles\"\n          header={mergeCTA}\n          continueHandler={() => mergeAccounts(false)}\n          cancelHandler={() => setMergeSummary(false)}\n        >\n          <P whiteSpace=\"pre-wrap\" lineHeight=\"24px\">\n            {mergeSummary}\n          </P>\n        </ConfirmationModal>\n      )}\n    </div>\n  );\n};\n\nconst getMergeCTA = (fromAccount, toAccount) => {\n  if (!fromAccount || !toAccount) {\n    return 'Merge';\n  } else {\n    return `Merge @${fromAccount.slug} into @${toAccount.slug}`;\n  }\n};\n\nMergeAccountsForm.propTypes = {};\n\nexport default MergeAccountsForm;\n","import React from 'react';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { useIntl } from 'react-intl';\n\nimport { isIndividualAccount } from '../../lib/collective.lib';\nimport { formatCurrency } from '../../lib/currency-utils';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport Avatar from '../Avatar';\nimport { FLAG_COLLECTIVE_PICKER_COLLECTIVE } from '../CollectivePicker';\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport ConfirmationModal from '../ConfirmationModal';\nimport Container from '../Container';\nimport { Box, Flex } from '../Grid';\nimport LinkCollective from '../LinkCollective';\nimport MessageBox from '../MessageBox';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport StyledButton from '../StyledButton';\nimport StyledCheckbox from '../StyledCheckbox';\nimport StyledInputField from '../StyledInputField';\nimport StyledLink from '../StyledLink';\nimport StyledSelect from '../StyledSelect';\nimport StyledTag from '../StyledTag';\nimport { Label, P, Span } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst moveOrdersFieldsFragment = gql`\n  fragment MoveOrdersFields on Order {\n    id\n    legacyId\n    description\n    createdAt\n    amount {\n      valueInCents\n      currency\n    }\n    fromAccount {\n      id\n      name\n      slug\n      isIncognito\n      imageUrl(height: 48)\n    }\n    toAccount {\n      id\n      slug\n      name\n    }\n  }\n`;\n\nconst ordersQuery = gql`\n  query AuthoredOrdersRoot($account: AccountReferenceInput!) {\n    orders(account: $account, filter: OUTGOING, limit: 100, includeIncognito: true) {\n      nodes {\n        id\n        ...MoveOrdersFields\n      }\n    }\n  }\n  ${moveOrdersFieldsFragment}\n`;\n\nconst moveOrdersMutation = gql`\n  mutation MoveOrders($orders: [OrderReferenceInput!]!, $fromAccount: AccountReferenceInput!, $makeIncognito: Boolean) {\n    moveOrders(orders: $orders, fromAccount: $fromAccount, makeIncognito: $makeIncognito) {\n      id\n      ...MoveOrdersFields\n    }\n  }\n  ${moveOrdersFieldsFragment}\n`;\n\nconst getOrdersOptionsFromData = (intl, data) => {\n  if (!data?.orders) {\n    return [];\n  }\n\n  return data.orders.nodes.map(order => {\n    const date = intl.formatDate(order.createdAt);\n    const amount = formatCurrency(order.amount.valueInCents, order.amount.currency, { locale: intl.locale });\n    return {\n      value: order,\n      label: `${date} - ${amount} contribution to @${order.toAccount.slug} (#${order.legacyId})`,\n    };\n  });\n};\n\nconst getCallToAction = (selectedOrdersOptions, newFromAccount) => {\n  if (newFromAccount?.isIncognito) {\n    return `Mark ${selectedOrdersOptions.length} contributions as incognito`;\n  } else {\n    const base = `Move ${selectedOrdersOptions.length} contributions`;\n    return !newFromAccount ? base : `${base} to @${newFromAccount.slug}`;\n  }\n};\n\nconst getToAccountCustomOptions = fromAccount => {\n  if (!fromAccount) {\n    return [];\n  }\n\n  // The select is always prefilled with the current account\n  const fromAccountOption = { [FLAG_COLLECTIVE_PICKER_COLLECTIVE]: true, value: fromAccount };\n  if (!isIndividualAccount(fromAccount)) {\n    return [fromAccountOption];\n  }\n\n  // Add the incognito profile option for individuals\n  const incognitoLabel = `@${fromAccount.slug}'s incognito profile`;\n  return [\n    fromAccountOption,\n    {\n      [FLAG_COLLECTIVE_PICKER_COLLECTIVE]: true,\n      label: incognitoLabel,\n      value: { name: incognitoLabel, useIncognitoProfile: true, isIncognito: true },\n    },\n  ];\n};\n\nconst formatOrderOption = (option, intl) => {\n  const order = option.value;\n  return (\n    <Flex alignItems=\"center\" title={order.description}>\n      <Avatar collective={order.fromAccount} size={24} />\n      <StyledTag fontSize=\"10px\" mx={2} minWidth={75}>\n        {intl.formatDate(order.createdAt)}\n      </StyledTag>\n      <Span fontSize=\"13px\">\n        {formatCurrency(order.amount.valueInCents, order.amount.currency, { locale: intl.locale })} contribution to @\n        {order.toAccount.slug} (#{order.legacyId})\n      </Span>\n    </Flex>\n  );\n};\n\nconst getOrdersQueryOptions = selectedProfile => {\n  return {\n    skip: !selectedProfile,\n    context: API_V2_CONTEXT,\n    variables: selectedProfile ? { account: { legacyId: selectedProfile.id } } : null,\n    fetchPolicy: 'network-only',\n  };\n};\n\nconst MoveAuthoredContributions = () => {\n  // Local state and hooks\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  const [fromAccount, setFromAccount] = React.useState(null);\n  const [newFromAccount, setNewFromAccount] = React.useState(null);\n  const [hasConfirmationModal, setHasConfirmationModal] = React.useState(false);\n  const [hasConfirmed, setHasConfirmed] = React.useState(false);\n  const [selectedOrdersOptions, setSelectedOrderOptions] = React.useState([]);\n  const isValid = Boolean(fromAccount && newFromAccount && selectedOrdersOptions.length);\n  const callToAction = getCallToAction(selectedOrdersOptions, newFromAccount);\n  const toAccountCustomOptions = React.useMemo(() => getToAccountCustomOptions(fromAccount), [fromAccount]);\n  const hasConfirmCheckbox = !newFromAccount?.useIncognitoProfile;\n\n  // GraphQL\n  const { data, loading, error: ordersQueryError } = useQuery(ordersQuery, getOrdersQueryOptions(fromAccount));\n  const allOptions = React.useMemo(() => getOrdersOptionsFromData(intl, data), [intl, data]);\n  const mutationOptions = { context: API_V2_CONTEXT };\n  const [submitMoveContributions] = useMutation(moveOrdersMutation, mutationOptions);\n  const moveContributions = async () => {\n    try {\n      // Prepare variables\n      const ordersInputs = selectedOrdersOptions.map(({ value }) => ({ id: value.id }));\n      const mutationVariables = { orders: ordersInputs };\n      if (newFromAccount.useIncognitoProfile) {\n        mutationVariables.fromAccount = { legacyId: fromAccount.id };\n        mutationVariables.makeIncognito = true;\n      } else {\n        mutationVariables.fromAccount = { legacyId: newFromAccount.id };\n      }\n\n      // Submit\n      await submitMoveContributions({ variables: mutationVariables });\n      addToast({ type: TOAST_TYPE.SUCCESS, title: 'Contributions moved successfully', message: callToAction });\n\n      // Reset form and purge cache\n      setHasConfirmationModal(false);\n      setFromAccount(null);\n      setNewFromAccount(null);\n      setSelectedOrderOptions([]);\n    } catch (e) {\n      addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(intl, e) });\n    }\n  };\n\n  if (ordersQueryError) {\n    return <MessageBoxGraphqlError error={ordersQueryError} />;\n  }\n\n  return (\n    <div>\n      <StyledInputField htmlFor=\"fromAccount\" label=\"Account that authored the contribution\" flex=\"1 1\">\n        {({ id }) => (\n          <CollectivePickerAsync\n            skipGuests={false}\n            inputId={id}\n            collective={fromAccount}\n            isClearable\n            onChange={option => {\n              setFromAccount(option?.value || null);\n              setSelectedOrderOptions([]);\n              setNewFromAccount(null);\n            }}\n          />\n        )}\n      </StyledInputField>\n\n      <Box mt={3}>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\n          <Label fontWeight=\"normal\" htmlFor=\"contributions\">\n            Select contributions\n          </Label>\n          <StyledButton\n            buttonSize=\"tiny\"\n            buttonStyle=\"secondary\"\n            isBorderless\n            onClick={() => setSelectedOrderOptions(allOptions)}\n            disabled={!fromAccount}\n          >\n            Select all\n          </StyledButton>\n        </Flex>\n        <StyledSelect\n          isLoading={loading}\n          options={allOptions}\n          value={selectedOrdersOptions}\n          inputId=\"contributions\"\n          onChange={options => setSelectedOrderOptions(options)}\n          isClearable\n          isMulti\n          closeMenuOnSelect={false}\n          disabled={!fromAccount}\n          truncationThreshold={5}\n          formatOptionLabel={option => formatOrderOption(option, intl)}\n        />\n      </Box>\n\n      <StyledInputField htmlFor=\"toAccount\" label=\"Move to\" flex=\"1 1\" mt={3}>\n        {({ id }) => (\n          <CollectivePickerAsync\n            inputId={id}\n            collective={newFromAccount}\n            isClearable\n            onChange={option => setNewFromAccount(option?.value || null)}\n            disabled={!fromAccount}\n            customOptions={toAccountCustomOptions}\n            skipGuests={false}\n          />\n        )}\n      </StyledInputField>\n\n      <StyledButton\n        mt={4}\n        width=\"100%\"\n        buttonStyle=\"primary\"\n        disabled={!isValid}\n        onClick={() => setHasConfirmationModal(true)}\n      >\n        {callToAction}\n      </StyledButton>\n\n      {hasConfirmationModal && (\n        <ConfirmationModal\n          header={callToAction}\n          continueHandler={moveContributions}\n          disableSubmit={hasConfirmCheckbox && !hasConfirmed}\n          onClose={() => {\n            setHasConfirmationModal(false);\n            setHasConfirmed(false);\n          }}\n        >\n          <P fontSize=\"14px\" lineHeight=\"18px\">\n            You&apos;re about to move the following contributions from{' '}\n            <StyledLink as={LinkCollective} collective={fromAccount} openInNewTab /> to{' '}\n            <StyledLink as={LinkCollective} collective={newFromAccount} openInNewTab />. Are you sure you want to\n            proceed?\n          </P>\n          <Container maxHeight={300} overflowY=\"auto\" border=\"1px solid lightgrey\" borderRadius=\"8px\" mt={3}>\n            {selectedOrdersOptions.map((option, index) => (\n              <Container\n                key={option.value.id}\n                title={option.value.description}\n                borderTop={!index ? undefined : '1px solid lightgrey'}\n                p={2}\n              >\n                {formatOrderOption(option, intl)}\n              </Container>\n            ))}\n          </Container>\n          {/** We don't need to display this warning when moving to the incognito profile, as it stays under the same account */}\n          {hasConfirmCheckbox && (\n            <MessageBox type=\"warning\" mt={3}>\n              <StyledCheckbox\n                name=\"has-confirmed-move-contributions\"\n                checked={hasConfirmed}\n                onChange={({ checked }) => setHasConfirmed(checked)}\n                label={\n                  <Span>\n                    <strong>Warning</strong>: I understand that the payment methods used for the contributions will be\n                    re-affected to the new profile, which must have the permission to use them.\n                  </Span>\n                }\n              />\n            </MessageBox>\n          )}\n        </ConfirmationModal>\n      )}\n    </div>\n  );\n};\n\nMoveAuthoredContributions.propTypes = {};\n\nexport default MoveAuthoredContributions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { debounce } from 'lodash';\nimport { FormattedDate } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../lib/graphql/helpers';\n\nimport Avatar from './Avatar';\nimport { Flex } from './Grid';\nimport StyledSelect from './StyledSelect';\nimport StyledTag from './StyledTag';\nimport { Span } from './Text';\n\nconst expensesSearchQuery = gql`\n  query ExpensesPickerSearchQuery($account: AccountReferenceInput, $searchTerm: String, $status: ExpenseStatusFilter) {\n    expenses(account: $account, limit: 100, searchTerm: $searchTerm, status: $status) {\n      nodes {\n        id\n        legacyId\n        description\n        createdAt\n        account {\n          id\n          name\n          slug\n          isIncognito\n          imageUrl(height: 48)\n        }\n      }\n    }\n  }\n`;\n\nconst getOptionsFromExpenses = expenses => {\n  if (!expenses?.length) {\n    return [];\n  } else {\n    return expenses.map(expense => ({\n      value: expense,\n      label: `#${expense.legacyId} - ${expense.description}`,\n    }));\n  }\n};\n\n/** Throttle search function to limit invocations while typing */\nconst throttledSearch = debounce((searchFunc, variables) => {\n  return searchFunc({ variables });\n}, 750);\n\nconst getAccountInput = account => {\n  if (!account) {\n    return null;\n  } else if (typeof account.id === 'string') {\n    return { id: account.id };\n  } else if (typeof account.id === 'number') {\n    return { legacyId: account.id };\n  } else if (typeof account.legacyId === 'number') {\n    return { legacyId: account.legacyId };\n  } else {\n    return { slug: account.slug };\n  }\n};\n\nconst formatOptionLabel = option => {\n  return (\n    <Flex alignItems=\"center\">\n      <Avatar collective={option.value.fromAccount} size={24} />\n      <StyledTag ml={2} fontSize=\"11px\">\n        #{option.value.legacyId}\n      </StyledTag>\n      <Span fontSize=\"12px\" ml={2}>\n        <FormattedDate value={option.value.createdAt} /> - {option.value.description}\n      </Span>\n    </Flex>\n  );\n};\n\n/**\n * Fetches expenses based on user search input.\n */\nconst ExpensesPickerAsync = ({ inputId, noCache, account, status, ...props }) => {\n  const fetchPolicy = noCache ? 'network-only' : undefined;\n  const variables = { account: getAccountInput(account), status };\n  const queryParameters = { fetchPolicy, variables, context: API_V2_CONTEXT };\n  const [searchExpenses, { loading, data }] = useLazyQuery(expensesSearchQuery, queryParameters);\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const options = React.useMemo(() => getOptionsFromExpenses(data?.expenses?.nodes), [data?.expenses?.nodes]);\n\n  // If preload is true, trigger a first query on mount or when one of the query param changes\n  React.useEffect(() => {\n    if (account) {\n      throttledSearch(searchExpenses, { searchTerm });\n    }\n  }, [account, searchTerm]);\n\n  return (\n    <StyledSelect\n      inputId={inputId}\n      isLoading={loading}\n      useSearchIcon={true}\n      options={options}\n      filterOption={() => true /** Filtering is done by the API */}\n      onInputChange={newTerm => setSearchTerm(newTerm.trim())}\n      formatOptionLabel={formatOptionLabel}\n      {...props}\n    />\n  );\n};\n\nExpensesPickerAsync.propTypes = {\n  /** The id of the search input */\n  inputId: PropTypes.string.isRequired,\n  /** Max number of collectives displayed at the same time */\n  limit: PropTypes.number,\n  /** If true, results won't be cached (Apollo \"network-only\" mode) */\n  noCache: PropTypes.bool,\n  account: PropTypes.object,\n  status: PropTypes.string,\n};\n\nExpensesPickerAsync.defaultProps = {};\n\nexport default ExpensesPickerAsync;\n","import React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { omit } from 'lodash';\nimport { FormattedDate, useIntl } from 'react-intl';\n\nimport { CollectiveType } from '../../lib/constants/collectives';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport ConfirmationModal from '../ConfirmationModal';\nimport Container from '../Container';\nimport ExpensesPickerAsync from '../ExpensesPickerAsync';\nimport { Flex } from '../Grid';\nimport Link from '../Link';\nimport LinkExpense from '../LinkExpense';\nimport StyledButton from '../StyledButton';\nimport StyledInputField from '../StyledInputField';\nimport StyledLink from '../StyledLink';\nimport StyledTag from '../StyledTag';\nimport { P, Span } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst moveExpensesMutation = gql`\n  mutation MoveExpensesMutation($destinationAccount: AccountReferenceInput!, $expenses: [ExpenseReferenceInput!]!) {\n    moveExpenses(destinationAccount: $destinationAccount, expenses: $expenses) {\n      id\n    }\n  }\n`;\n\nexport default function MoveExpenses() {\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  const [submitMoveExpenses] = useMutation(moveExpensesMutation, { context: API_V2_CONTEXT });\n\n  const [sourceAccount, setSourceAccount] = React.useState(null);\n  const [destinationAccount, setDestinationAccount] = React.useState(null);\n  const [selectedExpenses, setSelectedExpenses] = React.useState([]);\n\n  const [isConfirmationModelOpen, setIsConfirmationModelOpen] = React.useState(false);\n\n  const allowedAccountTypes = Object.values(omit(CollectiveType, [CollectiveType.USER, CollectiveType.INDIVIDUAL]));\n\n  const callToAction = `Move ${selectedExpenses.length} expenses`;\n\n  const moveExpenses = React.useCallback(async () => {\n    try {\n      const selectedExpensesInput = selectedExpenses.map(({ value }) => ({ id: value.id }));\n      const mutationVariables = {\n        expenses: selectedExpensesInput,\n        destinationAccount: {\n          legacyId: destinationAccount.id,\n        },\n      };\n\n      await submitMoveExpenses({ variables: mutationVariables });\n      addToast({ type: TOAST_TYPE.SUCCESS, title: 'Expenses moved successfully', message: callToAction });\n      // Reset form and purge cache\n      setIsConfirmationModelOpen(false);\n      setSourceAccount(null);\n      setDestinationAccount(null);\n      setSelectedExpenses([]);\n    } catch (e) {\n      addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(intl, e) });\n    }\n  }, [selectedExpenses, destinationAccount, callToAction]);\n\n  return (\n    <div>\n      <StyledInputField htmlFor=\"sourceAccount\" label=\"Source account for the expenses\" flex=\"1 1\">\n        {({ id }) => (\n          <CollectivePickerAsync\n            types={allowedAccountTypes}\n            inputId={id}\n            collective={sourceAccount}\n            isClearable\n            onChange={option => {\n              setSourceAccount(option?.value || null);\n            }}\n          />\n        )}\n      </StyledInputField>\n\n      <StyledInputField htmlFor=\"selectedExpenses\" label=\"Select expenses\" flex=\"1 1\" mt={3}>\n        {({ id }) => (\n          <ExpensesPickerAsync\n            value={selectedExpenses}\n            inputId={id}\n            onChange={options => setSelectedExpenses(options)}\n            disabled={!sourceAccount}\n            closeMenuOnSelect={false}\n            account={sourceAccount}\n            noCache\n            isMulti\n            isClearable\n          />\n        )}\n      </StyledInputField>\n\n      <StyledInputField htmlFor=\"destinationAccount\" label=\"Account that will receive the expenses\" flex=\"1 1\" mt={3}>\n        {({ id }) => (\n          <CollectivePickerAsync\n            types={allowedAccountTypes}\n            inputId={id}\n            disabled={selectedExpenses.length === 0}\n            collective={destinationAccount}\n            isClearable\n            onChange={option => {\n              setDestinationAccount(option?.value || null);\n            }}\n          />\n        )}\n      </StyledInputField>\n\n      <StyledButton\n        mt={4}\n        width=\"100%\"\n        buttonStyle=\"primary\"\n        disabled={!selectedExpenses.length === 0 || !destinationAccount}\n        onClick={() => setIsConfirmationModelOpen(true)}\n      >\n        {callToAction}\n      </StyledButton>\n\n      {isConfirmationModelOpen && (\n        <ConfirmationModal\n          header={callToAction}\n          continueHandler={moveExpenses}\n          onClose={() => setIsConfirmationModelOpen(false)}\n        >\n          <P>\n            You&apos;re about to move {selectedExpenses.length} expenses to{' '}\n            <StyledLink as={Link} href={`/${destinationAccount.slug}`} openInNewTab>\n              {destinationAccount.name}\n            </StyledLink>\n            .\n          </P>\n          <Container maxHeight={300} overflowY=\"auto\" border=\"1px solid lightgrey\" borderRadius=\"8px\" mt={3}>\n            {selectedExpenses.map(({ value: expense }, index) => (\n              <Container\n                key={expense.id}\n                title={expense.description}\n                borderTop={!index ? undefined : '1px solid lightgrey'}\n                p={2}\n              >\n                <LinkExpense openInNewTab collective={expense.account} expense={expense}>\n                  <Flex alignItems=\"center\">\n                    <StyledTag ml={2} fontSize=\"11px\">\n                      #{expense.legacyId}\n                    </StyledTag>\n                    <Span fontSize=\"12px\" ml={2}>\n                      <FormattedDate value={expense.createdAt} /> - {expense.description}\n                    </Span>\n                  </Flex>\n                </LinkExpense>\n              </Container>\n            ))}\n          </Container>\n        </ConfirmationModal>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport { debounce } from 'lodash';\nimport { FormattedDate } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../lib/graphql/helpers';\n\nimport Avatar from './Avatar';\nimport { Flex } from './Grid';\nimport StyledSelect from './StyledSelect';\nimport StyledTag from './StyledTag';\nimport { Span } from './Text';\n\nconst ordersSearchQuery = gql`\n  query OrdersPickerSearchQuery(\n    $account: AccountReferenceInput\n    $includeIncognito: Boolean\n    $filter: AccountOrdersFilter\n    $searchTerm: String\n  ) {\n    orders(\n      account: $account\n      filter: $filter\n      limit: 100\n      includeIncognito: $includeIncognito\n      searchTerm: $searchTerm\n    ) {\n      nodes {\n        id\n        legacyId\n        description\n        createdAt\n        amount {\n          valueInCents\n          currency\n        }\n        fromAccount {\n          id\n          name\n          slug\n          isIncognito\n          imageUrl(height: 48)\n        }\n        toAccount {\n          id\n          slug\n          name\n        }\n        tier {\n          id\n          legacyId\n          slug\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst getOptionsFromOrders = orders => {\n  if (!orders?.length) {\n    return [];\n  } else {\n    return orders.map(order => ({\n      value: order,\n      label: `#${order.legacyId} - ${order.description}`,\n    }));\n  }\n};\n\n/** Throttle search function to limit invocations while typing */\nconst throttledSearch = debounce((searchFunc, variables) => {\n  return searchFunc({ variables });\n}, 750);\n\nconst getAccountInput = account => {\n  if (!account) {\n    return null;\n  } else if (typeof account.id === 'string') {\n    return { id: account.id };\n  } else if (typeof account.id === 'number') {\n    return { legacyId: account.id };\n  } else if (typeof account.legacyId === 'number') {\n    return { legacyId: account.legacyId };\n  } else {\n    return { slug: account.slug };\n  }\n};\n\nconst formatOptionLabel = option => {\n  return (\n    <Flex alignItems=\"center\">\n      <Avatar collective={option.value.fromAccount} size={24} />\n      <StyledTag ml={2} fontSize=\"11px\">\n        #{option.value.legacyId}\n      </StyledTag>\n      <Span fontSize=\"12px\" ml={2}>\n        <FormattedDate value={option.value.createdAt} /> - {option.value.description}\n      </Span>\n    </Flex>\n  );\n};\n\n/**\n * A specialization of `CollectivePicker` that fetches the data based on user search.\n */\nconst OrdersPickerAsync = ({ inputId, noCache, account, filter, includeIncognito, ...props }) => {\n  const fetchPolicy = noCache ? 'network-only' : undefined;\n  const variables = { includeIncognito, filter, account: getAccountInput(account) };\n  const queryParameters = { fetchPolicy, variables, context: API_V2_CONTEXT };\n  const [searchOrders, { loading, data }] = useLazyQuery(ordersSearchQuery, queryParameters);\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const options = React.useMemo(() => getOptionsFromOrders(data?.orders?.nodes), [data?.orders?.nodes]);\n\n  // If preload is true, trigger a first query on mount or when one of the query param changes\n  React.useEffect(() => {\n    if (account) {\n      throttledSearch(searchOrders, { searchTerm });\n    }\n  }, [account, searchTerm]);\n\n  return (\n    <StyledSelect\n      inputId={inputId}\n      isLoading={loading}\n      useSearchIcon={true}\n      options={options}\n      filterOption={() => true /** Filtering is done by the API */}\n      onInputChange={newTerm => setSearchTerm(newTerm.trim())}\n      formatOptionLabel={formatOptionLabel}\n      {...props}\n    />\n  );\n};\n\nOrdersPickerAsync.propTypes = {\n  /** The id of the search input */\n  inputId: PropTypes.string.isRequired,\n  /** Max number of collectives displayed at the same time */\n  limit: PropTypes.number,\n  /** If set, only the collectives under this host will be retrieved */\n  hostCollectiveIds: PropTypes.arrayOf(PropTypes.number),\n  /** If true, a query will be triggered even if search is empty */\n  preload: PropTypes.bool,\n  /** If true, results won't be cached (Apollo \"network-only\" mode) */\n  noCache: PropTypes.bool,\n  includeIncognito: PropTypes.bool,\n  filter: PropTypes.oneOf(['OUTGOING', 'INCOMING']),\n  account: PropTypes.object,\n};\n\nOrdersPickerAsync.defaultProps = {};\n\nexport default OrdersPickerAsync;\n","import React from 'react';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { useIntl } from 'react-intl';\n\nimport { formatCurrency } from '../../lib/currency-utils';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport Avatar from '../Avatar';\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport ConfirmationModal from '../ConfirmationModal';\nimport Container from '../Container';\nimport { Flex } from '../Grid';\nimport Link from '../Link';\nimport OrdersPickerAsync from '../OrdersPickerAsync';\nimport StyledButton from '../StyledButton';\nimport StyledInputField from '../StyledInputField';\nimport StyledLink from '../StyledLink';\nimport StyledSelect from '../StyledSelect';\nimport StyledTag from '../StyledTag';\nimport { P, Span } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst moveOrdersMutation = gql`\n  mutation MoveOrdersMutation($orders: [OrderReferenceInput!]!, $tier: TierReferenceInput) {\n    moveOrders(orders: $orders, tier: $tier) {\n      id\n      legacyId\n      description\n      createdAt\n      amount {\n        valueInCents\n        currency\n      }\n      tier {\n        id\n        legacyId\n      }\n      fromAccount {\n        id\n        name\n        slug\n        isIncognito\n        imageUrl(height: 48)\n      }\n      toAccount {\n        id\n        slug\n        name\n      }\n    }\n  }\n`;\n\nconst accountTiersQuery = gql`\n  query MoveContributionsTiersQuery($accountSlug: String!) {\n    account(slug: $accountSlug) {\n      id\n      settings\n      ... on AccountWithContributions {\n        tiers {\n          nodes {\n            id\n            legacyId\n            slug\n            name\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst getCallToAction = (selectedOrdersOptions, newTier) => {\n  const base = `Move ${selectedOrdersOptions.length} contributions`;\n  if (newTier === 'custom') {\n    return `${base} to the \"custom contribution\" tier`;\n  } else {\n    return !newTier ? base : `${base} to \"${newTier.name}\" (#${newTier.legacyId})`;\n  }\n};\n\nconst getTierOption = tier => {\n  return { value: tier, label: `#${tier.legacyId} - ${tier.name}` };\n};\n\nconst getTiersOptions = (tiers, accountSettings) => {\n  if (!tiers) {\n    return [];\n  }\n\n  const tiersOptions = tiers.map(getTierOption);\n  if (!accountSettings?.disableCustomContributions) {\n    tiersOptions.unshift({ value: 'custom', label: 'Custom contribution' });\n  }\n\n  return tiersOptions;\n};\n\nconst MoveReceivedContributions = () => {\n  // Local state and hooks\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  const [receiverAccount, setReceiverAccount] = React.useState(null);\n  const [hasConfirmationModal, setHasConfirmationModal] = React.useState(false);\n  const [selectedOrdersOptions, setSelectedOrderOptions] = React.useState([]);\n  const [newTier, setNewTier] = React.useState(false);\n  const isValid = Boolean(receiverAccount && selectedOrdersOptions.length && newTier);\n  const callToAction = getCallToAction(selectedOrdersOptions, newTier);\n\n  // Fetch tiers\n  const tiersQueryVariables = { accountSlug: receiverAccount?.slug };\n  const tiersQueryOptions = { skip: !receiverAccount, variables: tiersQueryVariables, context: API_V2_CONTEXT };\n  const { data: tiersData, loading: tiersLoading } = useQuery(accountTiersQuery, tiersQueryOptions);\n  const tiersNodes = tiersData?.account.tiers?.nodes;\n  const accountSettings = tiersData?.account.settings;\n  const tiersOptions = React.useMemo(() => getTiersOptions(tiersNodes, accountSettings), [tiersNodes, accountSettings]);\n\n  // Move contributions mutation\n  const mutationOptions = { context: API_V2_CONTEXT };\n  const [submitMoveContributions] = useMutation(moveOrdersMutation, mutationOptions);\n  const moveContributions = async () => {\n    try {\n      // Prepare variables\n      const ordersInputs = selectedOrdersOptions.map(({ value }) => ({ id: value.id }));\n      const mutationVariables = {\n        orders: ordersInputs,\n        tier: newTier === 'custom' ? { isCustom: true } : { id: newTier.id },\n      };\n\n      // Submit\n      await submitMoveContributions({ variables: mutationVariables });\n      addToast({ type: TOAST_TYPE.SUCCESS, title: 'Contributions moved successfully', message: callToAction });\n      // Reset form and purge cache\n      setHasConfirmationModal(false);\n      setReceiverAccount(null);\n      setNewTier(null);\n      setSelectedOrderOptions([]);\n    } catch (e) {\n      addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(intl, e) });\n    }\n  };\n\n  return (\n    <div>\n      <StyledInputField htmlFor=\"receiverAccount\" label=\"Account that received the contributions\" flex=\"1 1\">\n        {({ id }) => (\n          <CollectivePickerAsync\n            inputId={id}\n            collective={receiverAccount}\n            isClearable\n            onChange={option => {\n              setReceiverAccount(option?.value || null);\n              setSelectedOrderOptions([]);\n              setNewTier(null);\n            }}\n          />\n        )}\n      </StyledInputField>\n\n      <StyledInputField htmlFor=\"contributions\" label=\"Select contributions\" flex=\"1 1\" mt={3}>\n        {({ id }) => (\n          <OrdersPickerAsync\n            value={selectedOrdersOptions}\n            inputId={id}\n            onChange={options => setSelectedOrderOptions(options)}\n            disabled={!receiverAccount}\n            closeMenuOnSelect={false}\n            account={receiverAccount}\n            filter=\"INCOMING\"\n            includeIncognito\n            isMulti\n            isClearable\n          />\n        )}\n      </StyledInputField>\n\n      <StyledInputField htmlFor=\"tier\" label=\"Select destination tier\" flex=\"1 1\" mt={3}>\n        {({ id }) => (\n          <StyledSelect\n            inputId={id}\n            disabled={!tiersData}\n            isLoading={tiersLoading}\n            onChange={({ value }) => setNewTier(value)}\n            options={tiersOptions}\n            value={!newTier ? null : getTierOption(newTier)}\n          />\n        )}\n      </StyledInputField>\n\n      <StyledButton\n        mt={4}\n        width=\"100%\"\n        buttonStyle=\"primary\"\n        disabled={!isValid}\n        onClick={() => setHasConfirmationModal(true)}\n      >\n        {callToAction}\n      </StyledButton>\n\n      {hasConfirmationModal && (\n        <ConfirmationModal\n          header={callToAction}\n          continueHandler={moveContributions}\n          onClose={() => setHasConfirmationModal(false)}\n        >\n          <P>\n            You&apos;re about to move {selectedOrdersOptions.length} orders to{' '}\n            {newTier === 'custom' ? (\n              'the custom contribution tier'\n            ) : (\n              <StyledLink\n                as={Link}\n                href={`/${receiverAccount.slug}/contribute/${newTier.slug}-${newTier.legacyId}`}\n                openInNewTab\n              >\n                {newTier.name} (#{newTier.legacyId})\n              </StyledLink>\n            )}\n            .\n          </P>\n          <Container maxHeight={300} overflowY=\"auto\" border=\"1px solid lightgrey\" borderRadius=\"8px\" mt={3}>\n            {selectedOrdersOptions.map(({ value: order }, index) => (\n              <Container\n                key={order.id}\n                title={order.description}\n                borderTop={!index ? undefined : '1px solid lightgrey'}\n                p={2}\n              >\n                <Flex alignItems=\"center\" title={order.description}>\n                  <Avatar collective={order.receiverAccount} size={24} />\n                  <StyledTag fontSize=\"10px\" mx={2} minWidth={75}>\n                    #{order.legacyId}\n                  </StyledTag>\n                  <Flex flexDirection=\"column\">\n                    <Span fontSize=\"13px\">\n                      {intl.formatDate(order.createdAt)}\n                      {' - '}\n                      {formatCurrency(order.amount.valueInCents, order.amount.currency, {\n                        locale: intl.locale,\n                      })}{' '}\n                      contribution to @{order.toAccount.slug}\n                    </Span>\n                    <Span fontSize=\"13px\">\n                      Current tier:{' '}\n                      {order.tier ? (\n                        <StyledLink\n                          as={Link}\n                          href={`/${order.toAccount.slug}/contribute/${order.tier.slug}-${order.tier.legacyId}`}\n                          openInNewTab\n                        >\n                          {order.tier.name}\n                        </StyledLink>\n                      ) : (\n                        'Custom contribution'\n                      )}\n                    </Span>\n                  </Flex>\n                </Flex>\n              </Container>\n            ))}\n          </Container>\n        </ConfirmationModal>\n      )}\n    </div>\n  );\n};\n\nMoveReceivedContributions.propTypes = {};\n\nexport default MoveReceivedContributions;\n","import React from 'react';\n\nimport ActivityLog from '../admin-panel/sections/ActivityLog';\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport { Box } from '../Grid';\nimport StyledInputField from '../StyledInputField';\n\nconst RootActivityLog = () => {\n  const [account, setAccount] = React.useState(null);\n  return (\n    <Box my={4}>\n      <StyledInputField htmlFor=\"activity-log-account\" label=\"Account\" flex=\"1 1\">\n        {({ id }) => (\n          <CollectivePickerAsync inputId={id} onChange={({ value }) => setAccount(value)} collective={account} />\n        )}\n      </StyledInputField>\n      {account && <ActivityLog accountSlug={account.slug} />}\n    </Box>\n  );\n};\n\nexport default RootActivityLog;\n","import React from 'react';\nimport { gql, useMutation } from '@apollo/client';\nimport { useIntl } from 'react-intl';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT, gqlV1 } from '../../lib/graphql/helpers';\n\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport StyledButton from '../StyledButton';\nimport StyledInputField from '../StyledInputField';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst collectivePickerSearchQuery = gqlV1/* GraphQL */ `\n  query UnhostAccountSearchQuery($term: String!, $types: [TypeOfCollective], $limit: Int, $hostCollectiveIds: [Int]) {\n    search(term: $term, types: $types, limit: $limit, hostCollectiveIds: $hostCollectiveIds) {\n      id\n      collectives {\n        id\n        type\n        slug\n        name\n        imageUrl(height: 64)\n        isActive\n        host {\n          id\n          slug\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst unhostAccountMutation = gql`\n  mutation UnhostAccount($account: AccountReferenceInput!) {\n    removeHost(account: $account) {\n      id\n      slug\n      name\n      ... on AccountWithHost {\n        host {\n          id\n        }\n      }\n    }\n  }\n`;\n\nconst UnhostAccountForm = () => {\n  const [account, setAccount] = React.useState(null);\n  const [unhostAccount, { loading }] = useMutation(unhostAccountMutation, { context: API_V2_CONTEXT });\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  return (\n    <div>\n      <StyledInputField htmlFor=\"clear-cache-account\" label=\"Account to unhost\" flex=\"1 1\">\n        {({ id }) => (\n          <CollectivePickerAsync\n            inputId={id}\n            onChange={({ value }) => setAccount(value)}\n            types={['COLLECTIVE', 'FUND']}\n            searchQuery={collectivePickerSearchQuery}\n            filterResults={collectives => collectives.filter(c => Boolean(c.host))}\n            collective={account}\n            noCache\n          />\n        )}\n      </StyledInputField>\n      <StyledButton\n        mt={4}\n        width=\"100%\"\n        buttonStyle=\"primary\"\n        disabled={!account}\n        loading={loading}\n        onClick={async () => {\n          if (!account.host) {\n            addToast({ type: TOAST_TYPE.ERROR, message: 'This account has no host' });\n            return;\n          } else if (\n            !confirm(\n              `You're about to unhost ${account.name} (@${account.slug}) from ${account.host.name} (@${account.host.slug}). Are you sure?`,\n            )\n          ) {\n            return;\n          }\n\n          try {\n            const result = await unhostAccount({ variables: { account: { legacyId: account.id } } });\n            const resultAccount = result.data.removeHost;\n            addToast({\n              type: TOAST_TYPE.SUCCESS,\n              message: `${resultAccount.name} (@${resultAccount.slug}) has been unhosted`,\n            });\n            setAccount(null);\n          } catch (e) {\n            addToast({\n              type: TOAST_TYPE.ERROR,\n              message: i18nGraphqlException(intl, e),\n            });\n          }\n        }}\n      >\n        Unhost {account ? `${account.name} (@${account.slug})` : ''}\n      </StyledButton>\n    </div>\n  );\n};\n\nUnhostAccountForm.propTypes = {};\n\nexport default UnhostAccountForm;\n","import React from 'react';\nimport { ExclamationTriangle } from '@styled-icons/fa-solid/ExclamationTriangle';\nimport { useRouter } from 'next/router';\nimport slugify from 'slugify';\nimport styled, { css } from 'styled-components';\n\nimport AuthenticatedPage from '../components/AuthenticatedPage';\nimport Container from '../components/Container';\nimport { Box, Grid } from '../components/Grid';\nimport Link from '../components/Link';\nimport MessageBox from '../components/MessageBox';\nimport AccountSettings from '../components/root-actions/AccountSettings';\nimport BanAccounts from '../components/root-actions/BanAccounts';\nimport BanAccountsWithSearch from '../components/root-actions/BanAccountsWithSearch';\nimport ClearCacheForAccountForm from '../components/root-actions/ClearCacheForAccountForm';\nimport ConnectAccountsForm from '../components/root-actions/ConnectAccountsForm';\nimport MergeAccountsForm from '../components/root-actions/MergeAccountsForm';\nimport MoveAuthoredContributions from '../components/root-actions/MoveAuthoredContributions';\nimport MoveExpenses from '../components/root-actions/MoveExpenses';\nimport MoveReceivedContributions from '../components/root-actions/MoveReceivedContributions';\nimport RootActivityLog from '../components/root-actions/RootActivityLog';\nimport UnhostAccountForm from '../components/root-actions/UnhostAccountForm';\nimport StyledCard from '../components/StyledCard';\nimport StyledHr from '../components/StyledHr';\nimport { H1, H2, H3, P, Span } from '../components/Text';\n\nconst GRID_TEMPLATE_COLUMNS = ['1fr', 'minmax(220px, 1fr) 6fr'];\n\nconst MENU = [\n  {\n    id: 'Accounts',\n    type: 'category',\n  },\n  { id: 'Clear cache', title: 'Clear cache for account', Component: ClearCacheForAccountForm },\n  { id: 'Connect accounts', Component: ConnectAccountsForm },\n  {\n    id: 'Merge accounts',\n    isDangerous: true,\n    Component: MergeAccountsForm,\n    description: `Before merging user accounts, you must always make sure that the person who requested it own both emails. Merging means payment methods are merged too, so if we just merge 2 accounts because someones ask for it without verifying we could end up in a very bad situation.\\nA simple way to do that is to send a unique random code to the other account they want to claim and ask them to share this code.`,\n  },\n  { id: 'Unhost account', Component: UnhostAccountForm },\n  { id: 'Account Settings', Component: AccountSettings },\n  { id: 'Activity Log', Component: RootActivityLog, useCard: false },\n  {\n    id: 'Contributions & Expenses',\n    type: 'category',\n  },\n  {\n    id: 'Move authored contributions',\n    Component: MoveAuthoredContributions,\n    description: `This tool is meant to edit the account that authored one or more contributions.\n    It can be used to mark contributions as \"Incognito\" by picking the contributor's incognito profile in \"Move to\".\n    The payment methods used for the contributions are re-affected to the new profile, so make sure they have the permission to use them.`,\n  },\n  {\n    id: 'Move received contributions',\n    Component: MoveReceivedContributions,\n    description: `This tool is meant to edit the account that received a contribution.\n    Use it to move contributions to different tiers, sub-projects, events, etc.`,\n  },\n  {\n    id: 'Move expenses',\n    Component: MoveExpenses,\n    description: `This tool is meant to move expenses to another account.`,\n  },\n  {\n    id: 'Moderation',\n    type: 'category',\n  },\n  {\n    id: 'Ban accounts',\n    Component: BanAccounts,\n    isDangerous: true,\n    description: 'Use this action to ban an account or a network of accounts.',\n  },\n  {\n    id: 'Search & ban',\n    Component: BanAccountsWithSearch,\n    isDangerous: true,\n  },\n];\n\n// Add slug for menu sections\nMENU.forEach(menu => (menu.slug = slugify(menu.id, { lower: true })));\n\nconst MenuEntry = styled.div`\n  display: block;\n  background: white;\n  padding: 16px;\n  cursor: pointer;\n  background: none;\n  color: inherit;\n  border: none;\n  font: inherit;\n  outline: inherit;\n  width: 100%;\n  text-align: left;\n\n  ${props =>\n    props.$isActive &&\n    css`\n      font-weight: 800;\n      background: #f5faff;\n    `}\n\n  &: hover {\n    background: #f9f9f9;\n  }\n\n  ${props =>\n    props.$type === 'category' &&\n    css`\n      cursor: default;\n      background: #f9f9f9;\n      border-bottom: 1px solid #eaeaea;\n      box-shadow: 0px -3px 6px #eaeaea;\n    `}\n`;\n\nconst RootActionsPage = () => {\n  const router = useRouter();\n  const selectedMenuEntry = MENU.find(m => m.slug === router.query.section) || MENU[1];\n  const showHiddenActions = Boolean(router.query.showHiddenActions);\n  return (\n    <AuthenticatedPage disableSignup rootOnly>\n      <Container maxWidth=\"1000px\" m=\"0 auto\" mt={4} borderBottom=\"1px solid #e5e5e5\">\n        <H1 textAlign=\"left\" fontSize=\"32px\" py={2} pl={2}>\n          Root actions\n        </H1>\n      </Container>\n      <Grid gridTemplateColumns={GRID_TEMPLATE_COLUMNS} maxWidth=\"1000px\" m=\"0 auto\" mb={5}>\n        <Container borderRight=\"1px solid #e5e5e5\">\n          {MENU.filter(e => showHiddenActions || !e.isHidden).map(menuEntry =>\n            menuEntry.type === 'category' ? (\n              <MenuEntry key={menuEntry.id} title={menuEntry.title || menuEntry.id} $type=\"category\">\n                {menuEntry.id}\n              </MenuEntry>\n            ) : (\n              <MenuEntry\n                key={menuEntry.id}\n                as={Link}\n                href={`/opencollective/root-actions/${menuEntry.slug}`}\n                shallow\n                title={menuEntry.title || menuEntry.id}\n                $isActive={selectedMenuEntry.id === menuEntry.id}\n                $type={menuEntry.type}\n              >\n                {menuEntry.id}\n              </MenuEntry>\n            ),\n          )}\n        </Container>\n        <div>\n          <H3 lineHeight=\"30px\" fontSize=\"24px\" backgroundColor=\"black.50\" color=\"black.800\" p={3}>\n            {selectedMenuEntry.title || selectedMenuEntry.id}\n          </H3>\n          <Box px={[2, 3, 4]}>\n            {selectedMenuEntry.isDangerous && (\n              <Container textAlign=\"center\" my={4}>\n                <H2 fontSize=\"30px\" css={{ textShadow: '0px 2px 2px red' }}>\n                  <ExclamationTriangle color=\"red\" size={30} />\n                  <Span ml={3} css={{ verticalAlign: 'middle' }}>\n                    DANGEROUS ACTION\n                  </Span>\n                </H2>\n                <P mt={2}>Please be super careful with the action below, and double check everything you do.</P>\n                <StyledHr width=\"100%\" mt={4} />\n              </Container>\n            )}\n\n            {selectedMenuEntry.description && (\n              <MessageBox type=\"info\" withIcon my={3} lineHeight=\"20px\" whiteSpace=\"pre-wrap\">\n                {selectedMenuEntry.description}\n              </MessageBox>\n            )}\n            {selectedMenuEntry.useCard === false ? (\n              <selectedMenuEntry.Component />\n            ) : (\n              <StyledCard p={4} my={4} width=\"100%\">\n                <selectedMenuEntry.Component />\n              </StyledCard>\n            )}\n          </Box>\n        </div>\n      </Grid>\n    </AuthenticatedPage>\n  );\n};\n\nRootActionsPage.propTypes = {};\n\nexport default RootActionsPage;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/root-actions\",\n      function () {\n        return require(\"private-next-pages/root-actions.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/root-actions\"])\n      });\n    }\n  "],"names":["React","defineMessages","useIntl","Container","StyledButton","StyledModal","ModalBody","ModalFooter","ModalHeader","P","messages","cancel","id","defaultMessage","confirmBtnMsgs","confirm","remove","CONFIRMATION_MODAL_TERMINATE","__CONFIRMATION_MODAL_TERMINATE","ConfirmationModal","header","body","children","onClose","type","isDanger","isSuccess","cancelLabel","continueLabel","cancelHandler","continueHandler","disableSubmit","props","useState","submitting","setSubmitting","formatMessage","result","defaultProps","defineMessage","FormattedDate","getDateFromValue","dayjs","capitalize","TITLE_MESSAGE","generateDateTitle","intl","date","localTime","formatDate","dateStyle","timeStyle","utcTime","timeZone","newLine","DateTime","value","title","setTitle","useMemo","toISOString","formatErrorMessage","getErrorFromGraphqlException","MessageBox","MessageBoxGraphqlError","error","PropTypes","themeGet","styled","StyledButtonItem","customBorderRadius","combo","propTypes","bool","StyledButtonSet","size","items","selected","buttonProps","buttonPropsBuilder","onChange","disabled","map","item","index","undefined","isSelected","fontSize","roles","RolesTranslations","HOST","ADMIN","MEMBER","CONTRIBUTOR","BACKER","ATTENDEE","FOLLOWER","ACCOUNTANT","CONNECTED_COLLECTIVE","CONNECTED_ACCOUNT","formatMemberRole","role","i18nMsg","useEffect","gql","useMutation","i18nGraphqlException","API_V2_CONTEXT","CollectivePickerAsync","Box","Flex","StyledCheckbox","StyledInputField","TOAST_TYPE","useToasts","editAccountFlagsMutation","AccountSettings","addToast","selectedAccountOption","setSelectedAccountOption","archivedFlag","setArchivedFlag","trustedHostFlag","setTrustedHostFlag","twoFactorEnabledFlag","setTwoFactorEnabledFlag","enableSave","setEnableSave","context","editAccountFlags","loading","isArchived","isTrustedHost","isTwoFactorAuthEnabled","length","checked","isHost","variables","account","slug","SUCCESS","message","ERROR","LinkCollective","BanAccountsSummary","dryRunData","Boolean","accounts","banAccountsMutation","BanAccount","selectedAccountsOptions","setSelectedAccountsOptions","includeAssociatedAccounts","setIncludeAssociatedAccounts","setDryRunData","_banAccounts","isValid","banAccounts","dryRun","a","legacyId","data","banAccount","isAllowed","useQuery","css","LoadingPlaceholder","StyledCollectiveCard","SearchBar","StyledLink","searchQuery","CardContainer","div","$isSelected","AccountsContainer","BanAccountsWithSearch","searchTerm","setSearchTerm","term","skip","refetch","selectedAccounts","setSelectedAccounts","toggleAccountSelection","some","selectedAccount","filter","nodes","e","key","preventDefault","website","description","AccountCacheType","CACHE_TYPES","Object","values","clearCacheMutation","ClearCacheForAccountForm","setAccount","cacheTypes","setCacheTypes","clearCache","cacheType","toLowerCase","includes","t","resultAccount","clearCacheForAccount","name","CollectiveType","connectAccountsMutation","CONNECTED_ACCOUNT_ACCEPTED_TYPES","COLLECTIVE","EVENT","ORGANIZATION","PROJECT","FUND","ConnectAccountsForm","submitConnectAccounts","memberAccount","setMemberAccount","connectCTA","getConnectCTA","connectAccounts","variant","option","fromAccount","toAccount","mergeAccountsMutation","MergeAccountsForm","submitMergeAccounts","mergeSummary","setMergeSummary","setFromAccount","setToAccount","mergeCTA","getMergeCTA","mergeAccounts","resultMessage","successMessage","isIndividualAccount","formatCurrency","Avatar","FLAG_COLLECTIVE_PICKER_COLLECTIVE","StyledSelect","StyledTag","Label","Span","moveOrdersFieldsFragment","ordersQuery","moveOrdersMutation","getOrdersOptionsFromData","orders","order","createdAt","amount","valueInCents","currency","locale","label","getCallToAction","selectedOrdersOptions","newFromAccount","isIncognito","base","getToAccountCustomOptions","fromAccountOption","incognitoLabel","useIncognitoProfile","formatOrderOption","getOrdersQueryOptions","selectedProfile","fetchPolicy","MoveAuthoredContributions","setNewFromAccount","hasConfirmationModal","setHasConfirmationModal","hasConfirmed","setHasConfirmed","setSelectedOrderOptions","callToAction","toAccountCustomOptions","hasConfirmCheckbox","ordersQueryError","allOptions","mutationOptions","submitMoveContributions","moveContributions","ordersInputs","mutationVariables","makeIncognito","options","useLazyQuery","expensesSearchQuery","getOptionsFromExpenses","expenses","expense","throttledSearch","searchFunc","getAccountInput","formatOptionLabel","ExpensesPickerAsync","inputId","noCache","status","queryParameters","searchExpenses","newTerm","trim","Link","LinkExpense","moveExpensesMutation","MoveExpenses","submitMoveExpenses","sourceAccount","setSourceAccount","destinationAccount","setDestinationAccount","selectedExpenses","setSelectedExpenses","isConfirmationModelOpen","setIsConfirmationModelOpen","allowedAccountTypes","USER","INDIVIDUAL","moveExpenses","useCallback","selectedExpensesInput","ordersSearchQuery","getOptionsFromOrders","OrdersPickerAsync","includeIncognito","searchOrders","accountTiersQuery","newTier","getTierOption","tier","getTiersOptions","tiers","accountSettings","tiersOptions","disableCustomContributions","unshift","MoveReceivedContributions","receiverAccount","setReceiverAccount","setNewTier","tiersQueryVariables","accountSlug","tiersQueryOptions","tiersData","tiersLoading","tiersNodes","settings","isCustom","ActivityLog","RootActivityLog","gqlV1","collectivePickerSearchQuery","unhostAccountMutation","UnhostAccountForm","unhostAccount","collectives","c","host","removeHost","ExclamationTriangle","useRouter","slugify","AuthenticatedPage","Grid","BanAccounts","StyledCard","StyledHr","H1","H2","H3","GRID_TEMPLATE_COLUMNS","MENU","Component","isDangerous","useCard","forEach","menu","lower","MenuEntry","$isActive","$type","RootActionsPage","router","selectedMenuEntry","find","m","query","section","showHiddenActions","isHidden","menuEntry","textShadow","verticalAlign"],"sourceRoot":""}