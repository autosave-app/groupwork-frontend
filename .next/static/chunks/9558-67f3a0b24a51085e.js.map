{"version":3,"file":"static/chunks/9558-67f3a0b24a51085e.js","mappings":"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","sources":["webpack://_N_E/./components/AuthenticatedPage.js","webpack://_N_E/./components/CollectivePickerAsync.js","webpack://_N_E/./components/LinkCollective.js","webpack://_N_E/./components/LinkExpense.js","webpack://_N_E/./components/admin-panel/sections/ActivityLog/ActivityAccountFilter.js","webpack://_N_E/./lib/i18n/activities.ts","webpack://_N_E/./components/admin-panel/sections/ActivityLog/ActivityTypeFilter.js","webpack://_N_E/./components/admin-panel/sections/ActivityLog/ActivityFilters.js","webpack://_N_E/./components/admin-panel/sections/ActivityLog/ActivityDescription.js","webpack://_N_E/./components/admin-panel/sections/ActivityLog/CollectiveEditedDetails.js","webpack://_N_E/./components/admin-panel/sections/ActivityLog/ActivityDetails.js","webpack://_N_E/./components/admin-panel/sections/ActivityLog/ActivityListItem.js","webpack://_N_E/./components/admin-panel/sections/ActivityLog/index.js","webpack://_N_E/./lib/constants/activities.ts","webpack://_N_E/./lib/constants/currency-precision.js","webpack://_N_E/./lib/constants/intervals.js","webpack://_N_E/./lib/currency-utils.js","webpack://_N_E/./lib/date-utils.js","webpack://_N_E/./lib/i18n/collective-type.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Container from './Container';\nimport { Flex } from './Grid';\nimport Loading from './Loading';\nimport MessageBox from './MessageBox';\nimport Page from './Page';\nimport SignInOrJoinFree from './SignInOrJoinFree';\nimport { withUser } from './UserProvider';\n\n/**\n * A wrapper around `Page` that will display a spinner while user is loading.\n * If authentication fails, users will be prompted with a form to login that will\n * redirect them to the correct page once they do.\n *\n * Unless a `noRobots={true}` is provided, pages wrapped with this helper will not be indexed\n * by default.\n *\n * ## Usage\n *\n * ```jsx\n * <AuthenticatedPage>\n *   {(LoggedInUser) => (\n *     <div>\n *       Hello {LoggedInUser.collective.name}!\n *     </div>\n *   )}\n * </AuthenticatedPage>\n * ```\n */\nclass AuthenticatedPage extends React.Component {\n  static propTypes = {\n    /** A child renderer to call when user is properly authenticated */\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n    /** Whether user can signup on this page */\n    disableSignup: PropTypes.bool,\n    /** Whether this page is limited to root users */\n    rootOnly: PropTypes.bool,\n    /** @ignore from withUser */\n    loadingLoggedInUser: PropTypes.bool,\n    /** @ignore from withUser */\n    LoggedInUser: PropTypes.object,\n  };\n\n  renderContent(loadingLoggedInUser, LoggedInUser) {\n    if (!LoggedInUser) {\n      return (\n        <Container display=\"flex\" justifyContent=\"center\" py={[5, null, 6]} px={2}>\n          {loadingLoggedInUser ? (\n            <Loading />\n          ) : (\n            <Flex flexDirection=\"column\" alignItems=\"center\">\n              <MessageBox type=\"warning\" mb={4} maxWidth={400} withIcon>\n                <FormattedMessage\n                  id=\"authorization.loginRequired\"\n                  defaultMessage=\"You need to be logged in to continue.\"\n                />\n              </MessageBox>\n              <SignInOrJoinFree defaultForm=\"signin\" disableSignup={this.props.disableSignup} />\n            </Flex>\n          )}\n        </Container>\n      );\n    } else if (this.props.rootOnly && !LoggedInUser.isRoot) {\n      return (\n        <Flex flexDirection=\"column\" alignItems=\"center\">\n          <MessageBox type=\"warning\" my={[5, 6, 7]} maxWidth={400} withIcon>\n            <FormattedMessage\n              id=\"AuthenticatedPage.RootOnly\"\n              defaultMessage=\"This page is limited to site administrators\"\n            />\n          </MessageBox>\n        </Flex>\n      );\n    } else if (typeof this.props.children === 'function') {\n      return this.props.children(LoggedInUser);\n    } else {\n      return this.props.children;\n    }\n  }\n\n  render() {\n    const { LoggedInUser, loadingLoggedInUser, ...pageProps } = this.props;\n\n    return (\n      <Page noRobots {...pageProps}>\n        {this.renderContent(loadingLoggedInUser, LoggedInUser)}\n      </Page>\n    );\n  }\n}\n\nexport default withUser(AuthenticatedPage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLazyQuery } from '@apollo/client';\nimport { debounce } from 'lodash';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport { CollectiveType } from '../lib/constants/collectives';\nimport { gqlV1 } from '../lib/graphql/helpers';\nimport formatCollectiveType from '../lib/i18n/collective-type';\n\nimport CollectivePicker from './CollectivePicker';\n\nconst collectivePickerSearchQuery = gqlV1/* GraphQL */ `\n  query CollectivePickerSearchQuery(\n    $term: String!\n    $types: [TypeOfCollective]\n    $limit: Int\n    $hostCollectiveIds: [Int]\n    $parentCollectiveIds: [Int]\n    $skipGuests: Boolean\n    $includeArchived: Boolean\n  ) {\n    search(\n      term: $term\n      types: $types\n      limit: $limit\n      hostCollectiveIds: $hostCollectiveIds\n      parentCollectiveIds: $parentCollectiveIds\n      skipGuests: $skipGuests\n      includeArchived: $includeArchived\n    ) {\n      id\n      collectives {\n        id\n        type\n        slug\n        name\n        currency\n        location {\n          id\n          address\n          country\n        }\n        imageUrl(height: 64)\n        hostFeePercent\n        isActive\n        isArchived\n        isHost\n        isTrustedHost\n        isTwoFactorAuthEnabled\n      }\n    }\n  }\n`;\n\n/** Throttle search function to limit invocations while typing */\nconst throttledSearch = debounce((searchFunc, variables) => {\n  return searchFunc({ variables });\n}, 750);\n\nconst Messages = defineMessages({\n  searchForType: {\n    id: 'SearchFor',\n    defaultMessage: 'Search for {entity}',\n  },\n  // eslint-disable-next-line camelcase\n  searchForType_2: {\n    id: 'SearchFor2',\n    defaultMessage: 'Search for {entity1} or {entity2}',\n  },\n  // eslint-disable-next-line camelcase\n  searchForType_3: {\n    id: 'SearchFor3',\n    defaultMessage: 'Search for {entity1}, {entity2} or {entity3}',\n  },\n  search: {\n    id: 'Search',\n    defaultMessage: 'Search',\n  },\n  searchForUsers: {\n    defaultMessage: 'Search for Users by name or email',\n  },\n});\n\n/**\n * If a single type is selected, will return a label like: `Search for users`\n * Otherwise it just returns `Search`\n */\nconst getPlaceholder = (intl, types) => {\n  const nbTypes = types ? types.length : 0;\n  if (nbTypes === 0 || nbTypes > 3) {\n    return intl.formatMessage(Messages.search);\n  } else if (nbTypes === 1) {\n    if (types[0] === CollectiveType.USER) {\n      return intl.formatMessage(Messages.searchForUsers);\n    } else {\n      return intl.formatMessage(Messages.searchForType, { entity: formatCollectiveType(intl, types[0], 100) });\n    }\n  } else {\n    // Format by passing a map of entities like { entity1: 'Collectives' }\n    return intl.formatMessage(\n      Messages[`searchForType_${nbTypes}`],\n      types.reduce((i18nParams, type, index) => {\n        i18nParams[`entity${index + 1}`] = formatCollectiveType(intl, type, 100);\n        return i18nParams;\n      }, {}),\n    );\n  }\n};\n\n/**\n * A specialization of `CollectivePicker` that fetches the data based on user search.\n */\nconst CollectivePickerAsync = ({\n  inputId,\n  types = undefined,\n  limit = 20,\n  hostCollectiveIds = undefined,\n  parentCollectiveIds = undefined,\n  preload = false,\n  filterResults = undefined,\n  searchQuery = collectivePickerSearchQuery,\n  invitable = false,\n  emptyCustomOptions = [],\n  noCache = false,\n  isLoading = false,\n  skipGuests = true,\n  includeArchived = false,\n  ...props\n}) => {\n  const fetchPolicy = noCache ? 'network-only' : undefined;\n  const [searchCollectives, { loading, data }] = useLazyQuery(searchQuery, { fetchPolicy });\n  const [term, setTerm] = React.useState(null);\n  const intl = useIntl();\n  const collectives = ((term || preload) && data?.search?.collectives) || [];\n  const filteredCollectives = filterResults ? filterResults(collectives) : collectives;\n  const placeholder = getPlaceholder(intl, types);\n\n  // If preload is true, trigger a first query on mount or when one of the query param changes\n  React.useEffect(() => {\n    if (term || preload) {\n      throttledSearch(searchCollectives, {\n        term: term || '',\n        types,\n        limit,\n        hostCollectiveIds,\n        parentCollectiveIds,\n        skipGuests,\n        includeArchived,\n      });\n    }\n  }, [types, limit, hostCollectiveIds, parentCollectiveIds, term]);\n\n  return (\n    <CollectivePicker\n      inputId={inputId}\n      isLoading={Boolean(loading || isLoading)}\n      collectives={filteredCollectives}\n      groupByType={!types || types.length > 1}\n      filterOption={() => true /** Filtering is done by the API */}\n      sortFunc={collectives => collectives /** Already sorted by the API */}\n      placeholder={placeholder}\n      types={types}\n      useSearchIcon={true}\n      isSearchable\n      // Only displays the invite option if no results were found:\n      invitable={invitable}\n      onInputChange={newTerm => {\n        setTerm(newTerm.trim());\n      }}\n      customOptions={!term ? emptyCustomOptions : []}\n      {...props}\n    />\n  );\n};\n\nCollectivePickerAsync.propTypes = {\n  ...CollectivePicker.propTypes,\n  /** The id of the search input */\n  inputId: PropTypes.string.isRequired,\n  /** The types of collectives to retrieve */\n  types: PropTypes.arrayOf(PropTypes.oneOf(Object.values(CollectiveType))),\n  /** Whether we should group collectives by type. By default, this is true when there's more than one type */\n  groupByType: PropTypes.bool,\n  /** Max number of collectives displayed at the same time */\n  limit: PropTypes.number,\n  /** If set, only the collectives under this host will be retrieved */\n  hostCollectiveIds: PropTypes.arrayOf(PropTypes.number),\n  /** If set, only the collectives under this parent collective will be retrieved */\n  parentCollectiveIds: PropTypes.arrayOf(PropTypes.number),\n  /** If true, a query will be triggered even if search is empty */\n  preload: PropTypes.bool,\n  /** If true, results won't be cached (Apollo \"network-only\" mode) */\n  noCache: PropTypes.bool,\n  /** Query to use for the search. Override to add custom fields */\n  searchQuery: PropTypes.any.isRequired,\n  /** Custom options that are displayed when the field is empty */\n  emptyCustomOptions: PropTypes.any,\n  /** Function to filter results returned by the API */\n  filterResults: PropTypes.func,\n  /** If true, a permanent option to create a collective will be displayed in the select */\n  creatable: PropTypes.bool,\n  /** If true, a permanent option to invite a new user will be displayed in the select */\n  invitable: PropTypes.bool,\n  skipGuests: PropTypes.bool,\n  onInvite: PropTypes.func,\n  /** Include archived collectives **/\n  includeArchived: PropTypes.bool,\n};\n\nexport default CollectivePickerAsync;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport { getCollectivePageRoute } from '../lib/url-helpers';\n\nimport Link from './Link';\n\n/**\n * Create a `Link` to the collective based on collective type.\n * It properly deals with type `EVENT` and `isIncognito`\n */\nconst LinkCollective = ({\n  collective,\n  target = undefined,\n  title = undefined,\n  noTitle = false,\n  children = undefined,\n  ...props\n}) => {\n  if (!collective || collective.isIncognito) {\n    return children || <FormattedMessage id=\"profile.incognito\" defaultMessage=\"Incognito\" />;\n  } else if (collective.isGuest) {\n    if (children) {\n      return children;\n    } else if (collective.name === 'Guest') {\n      return <FormattedMessage id=\"profile.guest\" defaultMessage=\"Guest\" />;\n    } else {\n      return collective.name;\n    }\n  } else if (!collective.slug || collective.type === 'VENDOR') {\n    return children || collective.name;\n  }\n\n  const { type, slug, name, isIncognito } = collective;\n  if (type === 'USER' && (!name || isIncognito || !slug)) {\n    return children || <FormattedMessage id=\"profile.incognito\" defaultMessage=\"Incognito\" />;\n  }\n  return (\n    <Link href={getCollectivePageRoute(collective)} title={noTitle ? null : title || name} target={target} {...props}>\n      {children || name || slug}\n    </Link>\n  );\n};\n\nLinkCollective.propTypes = {\n  /** The collective to link to */\n  collective: PropTypes.shape({\n    name: PropTypes.string,\n    slug: PropTypes.string,\n    type: PropTypes.string,\n    isIncognito: PropTypes.bool,\n    isGuest: PropTypes.bool,\n    parentCollective: PropTypes.shape({\n      slug: PropTypes.string,\n    }),\n  }),\n  /** If not given, will render the name of the collective */\n  children: PropTypes.node,\n  title: PropTypes.string,\n  target: PropTypes.string,\n  /** Set this to true to remove the `title` attribute from the link */\n  noTitle: PropTypes.bool,\n};\n\nexport default LinkCollective;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getCollectiveTypeForUrl } from '../lib/collective.lib';\n\nimport Link from './Link';\n\nconst LinkExpense = ({ collective, expense, ...props }) => {\n  const parentCollectiveSlugRoute = collective.parent?.slug\n    ? `/${collective.parent.slug}/${getCollectiveTypeForUrl(collective)}`\n    : '';\n  const expenseId = expense.legacyId || expense.id;\n\n  return <Link href={`${parentCollectiveSlugRoute}/${collective.slug}/expenses/${expenseId}`} {...props} />;\n};\n\nLinkExpense.propTypes = {\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    parent: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }),\n  }).isRequired,\n  expense: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    legacyId: PropTypes.number,\n  }).isRequired,\n};\n\nexport default LinkExpense;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessage, useIntl } from 'react-intl';\n\nimport { CollectiveType } from '../../../../lib/constants/collectives';\n\nimport { CUSTOM_OPTIONS_POSITION } from '../../../CollectivePicker';\nimport CollectivePickerAsync from '../../../CollectivePickerAsync';\nimport { getSelectFilterStyles } from '../../../StyledSelectFilter';\n\nconst SELECT_STYLES = getSelectFilterStyles();\n\nconst getCustomOptions = (intl, account) => {\n  const options = [\n    {\n      value: account,\n      isCustomOption: true,\n      label: intl.formatMessage(defineMessage({ defaultMessage: 'Own account' })),\n    },\n  ];\n\n  if (account?.childrenAccounts?.totalCount > 0) {\n    options.push({\n      id: '__CHILDREN_ACCOUNTS__',\n      isCustomOption: true,\n      label: intl.formatMessage(defineMessage({ defaultMessage: 'All children accounts' })),\n    });\n  }\n  if (account?.isHost) {\n    options.push({\n      id: '__HOSTED_ACCOUNTS__',\n      isCustomOption: true,\n      label: intl.formatMessage(defineMessage({ defaultMessage: 'All hosted accounts' })),\n    });\n  }\n\n  return options;\n};\n\nconst encodeOptions = options => {\n  return !Array.isArray(options) ? options.id : options.map(option => option.value.slug).join(',');\n};\n\nconst decodeOption = (customOptions, value) => {\n  if (!value) {\n    return customOptions[0];\n  } else if (value === '__CHILDREN_ACCOUNTS__') {\n    return customOptions.find(option => option.id === '__CHILDREN_ACCOUNTS__');\n  } else if (value === '__HOSTED_ACCOUNTS__') {\n    return customOptions.find(option => option.id === '__HOSTED_ACCOUNTS__');\n  } else {\n    return value.split(',').map(slug => ({ value: { slug }, label: slug }));\n  }\n};\n\nconst ActivityAccountFilter = ({ account, value, onChange }) => {\n  const intl = useIntl();\n  const customOptions = React.useMemo(() => getCustomOptions(intl, account), [account]);\n  const selectedOption = React.useMemo(() => decodeOption(customOptions, value), [customOptions, value]);\n  const isMulti = Array.isArray(selectedOption);\n  const dispatchOptionsChange = options => onChange(encodeOptions(options));\n\n  // If selectedOption wasn't set while there's a value, it means that the value is invalid. In this case we reset to the default value.\n  React.useEffect(() => {\n    if (account && value && !selectedOption) {\n      dispatchOptionsChange(customOptions[0]);\n    }\n  }, [account, value, selectedOption]);\n\n  return (\n    <CollectivePickerAsync\n      inputId=\"activity-filter-account\"\n      isMulti={isMulti}\n      preload\n      useCompactMode\n      isLoading={!account}\n      disabled={!account}\n      types={[CollectiveType.COLLECTIVE, CollectiveType.EVENT, CollectiveType.PROJECT, CollectiveType.FUND]}\n      hostCollectiveIds={account?.isHost ? [account?.legacyId] : null}\n      parentCollectiveIds={!account?.isHost ? [account?.legacyId] : null}\n      customOptions={customOptions}\n      customOptionsPosition={CUSTOM_OPTIONS_POSITION.TOP}\n      value={selectedOption}\n      fontSize=\"12px\"\n      lineHeight=\"14px\"\n      styles={SELECT_STYLES}\n      onChange={(options, event) => {\n        if (event.action === 'select-option') {\n          const selectedOption = isMulti ? event.option : options;\n          if (selectedOption.isCustomOption) {\n            dispatchOptionsChange(selectedOption); // Switch back to single mode when selecting a custom option\n          } else {\n            dispatchOptionsChange(Array.isArray(options) ? options : [options]); // Switch to multi mode if we pick a collective\n          }\n        } else if (options.length === 0) {\n          dispatchOptionsChange(customOptions[0]); // Switch back to single mode when clearing the selection\n        } else {\n          dispatchOptionsChange(options);\n        }\n      }}\n    />\n  );\n};\n\nActivityAccountFilter.propTypes = {\n  account: PropTypes.shape({\n    name: PropTypes.string,\n    slug: PropTypes.string,\n    imageUrl: PropTypes.string,\n    legacyId: PropTypes.number,\n    isHost: PropTypes.bool,\n  }),\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nexport default ActivityAccountFilter;\n","import { defineMessages, MessageDescriptor } from 'react-intl';\n\nimport { ActivityTypes } from '../constants/activities';\n\nexport const ActivityDescriptionI18n = defineMessages({\n  // Collective creation & applications\n  COLLECTIVE_CREATED: {\n    defaultMessage:\n      '<AccountType></AccountType> <Account></Account> created{hasParent, select, true { under <AccountParent></AccountParent>} other {}}',\n  },\n  COLLECTIVE_EDITED: {\n    defaultMessage: '<Account></Account> edited',\n  },\n  COLLECTIVE_REJECTED: {\n    defaultMessage: '<Account></Account> application rejected',\n  },\n  ORGANIZATION_COLLECTIVE_CREATED: {\n    defaultMessage: '<Account></Account> created',\n  },\n  COLLECTIVE_CREATED_GITHUB: {\n    defaultMessage: '<Account></Account> created through GitHub',\n  },\n  COLLECTIVE_APPLY: {\n    defaultMessage: '<Account></Account> applied to be hosted by <Host></Host>',\n  },\n  COLLECTIVE_APPROVED: {\n    defaultMessage: '<Account></Account> application approved',\n  },\n  // Freezing collectives\n  COLLECTIVE_FROZEN: {\n    defaultMessage: '<Account></Account> frozen',\n  },\n  COLLECTIVE_UNFROZEN: {\n    defaultMessage: '<Account></Account> unfrozen',\n  },\n  // Comments & conversations\n  COLLECTIVE_COMMENT_CREATED: {\n    defaultMessage: 'New comment on <CommentEntity></CommentEntity>',\n  },\n  // TODO: Link update\n  UPDATE_COMMENT_CREATED: {\n    defaultMessage: 'New comment on update',\n  },\n  EXPENSE_COMMENT_CREATED: {\n    defaultMessage: 'New comment on <Expense>expense</Expense>',\n  },\n  // TODO: Link conversation\n  CONVERSATION_COMMENT_CREATED: {\n    defaultMessage: 'New comment on conversation',\n  },\n  // TODO Link conversation\n  COLLECTIVE_CONVERSATION_CREATED: {\n    defaultMessage: 'New conversation started on <Account></Account>',\n  },\n  // Expenses\n  COLLECTIVE_EXPENSE_CREATED: {\n    defaultMessage: 'New <Expense>expense</Expense> from <FromAccount></FromAccount> to <Account></Account>',\n  },\n  COLLECTIVE_EXPENSE_DELETED: {\n    defaultMessage: 'Expense deleted',\n  },\n  COLLECTIVE_EXPENSE_UPDATED: {\n    defaultMessage: '<Expense>Expense</Expense> from <FromAccount></FromAccount> to <Account></Account> updated',\n  },\n  COLLECTIVE_EXPENSE_REJECTED: {\n    defaultMessage: 'Rejected <Expense>expense</Expense> from <FromAccount></FromAccount> to <Account></Account>',\n  },\n  COLLECTIVE_EXPENSE_APPROVED: {\n    defaultMessage: 'Approved <Expense>expense</Expense> from <FromAccount></FromAccount> to <Account></Account>',\n  },\n  COLLECTIVE_EXPENSE_UNAPPROVED: {\n    defaultMessage: 'Unapproved <Expense>expense</Expense> from <FromAccount></FromAccount> to <Account></Account>',\n  },\n  COLLECTIVE_EXPENSE_MOVED: {\n    defaultMessage: '<Expense>Expense</Expense> moved from <FromAccount></FromAccount> to <Account></Account>',\n  },\n  COLLECTIVE_EXPENSE_PAID: {\n    defaultMessage: 'Paid <Expense>expense</Expense> from <FromAccount></FromAccount> to <Account></Account>',\n  },\n  COLLECTIVE_EXPENSE_MARKED_AS_UNPAID: {\n    defaultMessage: 'Marked <Expense>expense</Expense> as unpaid',\n  },\n  COLLECTIVE_EXPENSE_MARKED_AS_SPAM: {\n    defaultMessage: 'Marked <Expense>expense</Expense> as SPAM',\n  },\n  COLLECTIVE_EXPENSE_MARKED_AS_INCOMPLETE: {\n    defaultMessage: 'Marked <Expense>expense</Expense> as incomplete',\n  },\n  COLLECTIVE_EXPENSE_PROCESSING: {\n    defaultMessage: '<Expense>Expense</Expense> processing',\n  },\n  COLLECTIVE_EXPENSE_SCHEDULED_FOR_PAYMENT: {\n    defaultMessage: '<Expense>Expense</Expense> scheduled for payment',\n  },\n  COLLECTIVE_EXPENSE_ERROR: {\n    defaultMessage: '<Expense>Expense</Expense> payment failed',\n  },\n  COLLECTIVE_EXPENSE_INVITE_DRAFTED: {\n    defaultMessage: 'Invited someone to submit <Expense>expense</Expense> to <Account></Account>',\n  },\n  COLLECTIVE_EXPENSE_RECURRING_DRAFTED: {\n    defaultMessage: 'New draft created for <Expense>recurring expense</Expense> on <Account></Account>',\n  },\n  COLLECTIVE_EXPENSE_MISSING_RECEIPT: {\n    defaultMessage: 'Notified admins about a missing receipt for <Expense>expense</Expense> on <Account></Account>',\n  },\n  TAXFORM_REQUEST: {\n    defaultMessage: 'Tax form request sent to <Account></Account>',\n  },\n  // Members\n  COLLECTIVE_MEMBER_CREATED: {\n    defaultMessage: '<FromAccount></FromAccount> joined <Account></Account> as a <MemberRole></MemberRole>',\n  },\n  COLLECTIVE_MEMBER_INVITED: {\n    defaultMessage:\n      '<FromAccount></FromAccount> was invited to join <Account></Account> as a <MemberRole></MemberRole>',\n  },\n  COLLECTIVE_CORE_MEMBER_INVITED: {\n    defaultMessage:\n      '<FromAccount></FromAccount> was invited to join <Account></Account> as a <MemberRole></MemberRole>',\n  },\n  COLLECTIVE_CORE_MEMBER_INVITATION_DECLINED: {\n    defaultMessage:\n      '<FromAccount></FromAccount> declined the invitation to join <Account></Account> as a <MemberRole></MemberRole>',\n  },\n  COLLECTIVE_CORE_MEMBER_ADDED: {\n    defaultMessage:\n      '<FromAccount></FromAccount> was added to <Account></Account> with the role <MemberRole></MemberRole>',\n  },\n  COLLECTIVE_CORE_MEMBER_EDITED: {\n    defaultMessage: 'Edited <FromAccount></FromAccount> membership to <Account></Account>',\n  },\n  COLLECTIVE_CORE_MEMBER_REMOVED: {\n    defaultMessage: '<FromAccount></FromAccount> removed as <MemberRole></MemberRole> of <Account></Account>',\n  },\n  // Transactions\n  COLLECTIVE_TRANSACTION_CREATED: {\n    defaultMessage: 'New transaction from <FromAccount></FromAccount> to <Account></Account>',\n  },\n  // Updates\n  COLLECTIVE_UPDATE_CREATED: {\n    defaultMessage: 'New update drafted on <Account></Account>',\n  },\n  COLLECTIVE_UPDATE_PUBLISHED: {\n    defaultMessage: 'Update published on <Account></Account>',\n  },\n  // Contact\n  COLLECTIVE_CONTACT: {\n    defaultMessage: '<FromAccount></FromAccount> contacted <Account></Account>',\n  },\n  // Virtual cards\n  // TODO: Link virtual cards and/or admin page\n  COLLECTIVE_VIRTUAL_CARD_ADDED: {\n    defaultMessage: 'New virtual card added to <Account></Account>',\n  },\n  COLLECTIVE_VIRTUAL_CARD_CREATED: {\n    defaultMessage: 'New virtual card created on <Account></Account>',\n  },\n  COLLECTIVE_VIRTUAL_CARD_MISSING_RECEIPTS: {\n    defaultMessage: 'Notified admins about a missing receipt for <Expense>expense</Expense> on <Account></Account>',\n  },\n  COLLECTIVE_VIRTUAL_CARD_SUSPENDED: {\n    defaultMessage: 'Virtual card suspended on <Account></Account>',\n  },\n  VIRTUAL_CARD_REQUESTED: {\n    defaultMessage: 'Requested a virtual card for <Account></Account>',\n  },\n  VIRTUAL_CARD_PURCHASE: {\n    defaultMessage: 'New <Expense>purchase</Expense> with virtual card',\n  },\n  VIRTUAL_CARD_CHARGE_DECLINED: {\n    defaultMessage: 'Virtual card charge declined on <Account></Account>',\n  },\n  // Connected accounts\n  CONNECTED_ACCOUNT_CREATED: {\n    id: 'WebhookEvents.CONNECTED_ACCOUNT_CREATED',\n    defaultMessage: 'Connected account added',\n  },\n  // Contributions\n  SUBSCRIPTION_CANCELED: {\n    defaultMessage: '<Order>Recurring contribution</Order> cancelled',\n  },\n  TICKET_CONFIRMED: {\n    id: 'WebhookEvents.TICKET_CONFIRMED',\n    defaultMessage: 'Ticket confirmed',\n  },\n  CONTRIBUTION_REJECTED: {\n    defaultMessage: 'Contribution from <FromAccount></FromAccount> rejected by <Account></Account>',\n  },\n  ORDER_CANCELED_ARCHIVED_COLLECTIVE: {\n    defaultMessage: '<Order>Recurring contribution</Order> cancelled on <Account></Account> (archived)',\n  },\n  ORDER_PROCESSING: {\n    defaultMessage:\n      '<Order>Contribution</Order> from <FromAccount></FromAccount> to <Account></Account> set as processing',\n  },\n  ORDER_PROCESSING_CRYPTO: {\n    defaultMessage:\n      'Crypto <Order>contribution</Order> from <FromAccount></FromAccount> to <Account></Account> set as processing',\n  },\n  ORDER_PENDING_CONTRIBUTION_NEW: {\n    defaultMessage: 'New pending <Order>contribution</Order> from <FromAccount></FromAccount> to <Account></Account>',\n  },\n  ORDER_PENDING_CONTRIBUTION_REMINDER: {\n    defaultMessage:\n      'Sent reminder to <FromAccount></FromAccount> about <Order>contribution</Order> to <Account></Account>',\n  },\n  BACKYOURSTACK_DISPATCH_CONFIRMED: {\n    defaultMessage: 'BackYourStack dispatch confirmed for <Account></Account>',\n  },\n  PAYMENT_FAILED: {\n    defaultMessage:\n      'Payment from <FromAccount></FromAccount> to <Account></Account> for <Order>contribution</Order> failed',\n  },\n  PAYMENT_CREDITCARD_CONFIRMATION: {\n    defaultMessage: 'Asked for credit card confirmation for <Order>contribution</Order> on <Account></Account>',\n  },\n  PAYMENT_CREDITCARD_EXPIRING: {\n    defaultMessage: 'Sent a reminder about expiring credit card to <Account></Account>',\n  },\n  USER_PAYMENT_METHOD_CREATED: {\n    defaultMessage: 'Created a new payment method for <Account></Account>',\n  },\n  // Sign in\n  USER_NEW_TOKEN: {\n    defaultMessage: 'Requested a new sign in token', // Deprecated and replaced by USER_SIGNIN\n  },\n  USER_SIGNIN: {\n    defaultMessage: 'Signed In',\n  },\n  OAUTH_APPLICATION_AUTHORIZED: {\n    defaultMessage: 'Authorized a new OAuth application',\n  },\n  USER_CHANGE_EMAIL: {\n    defaultMessage: 'Changed email address',\n  },\n  USER_PASSWORD_SET: {\n    defaultMessage: 'Changed password',\n  },\n  TWO_FACTOR_CODE_ADDED: {\n    defaultMessage: 'Two factor authentication added',\n  },\n  TWO_FACTOR_CODE_DELETED: {\n    defaultMessage: 'Two factor authentication removed',\n  },\n  // Gift cards\n  USER_CARD_CLAIMED: {\n    defaultMessage: 'Claimed a gift card from <FromAccount></FromAccount>',\n  },\n  USER_CARD_INVITED: {\n    defaultMessage: 'Generated a new gift card for <Account></Account>',\n  },\n  // Host\n  ACTIVATED_COLLECTIVE_AS_HOST: {\n    defaultMessage: 'Activated <Account></Account> as a host',\n  },\n  ACTIVATED_COLLECTIVE_AS_INDEPENDENT: {\n    defaultMessage: 'Activated <Account></Account> as an independent collective',\n  },\n  DEACTIVATED_COLLECTIVE_AS_HOST: {\n    defaultMessage: 'Deactivated <Account></Account> as a host',\n  },\n});\n\ntype ActivityTranslations = Partial<Record<keyof typeof ActivityTypes, MessageDescriptor>>;\n\nexport const ActivityTypeI18n: ActivityTranslations = defineMessages({\n  ACTIVITY_ALL: {\n    id: 'WebhookEvents.All',\n    defaultMessage: 'All',\n  },\n  CONNECTED_ACCOUNT_CREATED: {\n    id: 'WebhookEvents.CONNECTED_ACCOUNT_CREATED',\n    defaultMessage: 'Connected account added',\n  },\n  COLLECTIVE_APPLY: {\n    id: 'WebhookEvents.COLLECTIVE_APPLY',\n    defaultMessage: 'New collective application',\n  },\n  COLLECTIVE_APPROVED: {\n    id: 'WebhookEvents.COLLECTIVE_APPROVED',\n    defaultMessage: 'Collective application approved',\n  },\n  COLLECTIVE_REJECTED: {\n    id: 'WebhookEvents.COLLECTIVE_REJECTED',\n    defaultMessage: 'Collective application rejected',\n  },\n  COLLECTIVE_CREATED: {\n    id: 'WebhookEvents.COLLECTIVE_CREATED',\n    defaultMessage: 'Collective created',\n  },\n  ORGANIZATION_COLLECTIVE_CREATED: {\n    defaultMessage: 'Organization created',\n  },\n  USER_CREATED: {\n    defaultMessage: 'User profile created',\n  },\n  USER_NEW_TOKEN: {\n    defaultMessage: 'Signed in',\n  },\n  USER_CHANGE_EMAIL: {\n    defaultMessage: 'Changed email address',\n  },\n  USER_CARD_CLAIMED: {\n    defaultMessage: 'Gift card claimed',\n  },\n  USER_CARD_INVITED: {\n    defaultMessage: 'Gift card invited',\n  },\n  USER_PAYMENT_METHOD_CREATED: {\n    defaultMessage: 'New payment method',\n  },\n  COLLECTIVE_CREATED_GITHUB: {\n    defaultMessage: 'Collective created via GitHub',\n  },\n  COLLECTIVE_EDITED: {\n    defaultMessage: 'Account edited',\n  },\n  COLLECTIVE_CONVERSATION_CREATED: {\n    id: 'Conversation.created',\n    defaultMessage: 'Conversation created',\n  },\n  COLLECTIVE_EXPENSE_CREATED: {\n    id: 'WebhookEvents.COLLECTIVE_EXPENSE_CREATED',\n    defaultMessage: 'New expenses',\n  },\n  COLLECTIVE_EXPENSE_UNAPPROVED: {\n    id: 'Expense.Activity.Unapproved',\n    defaultMessage: 'Expense unapproved',\n  },\n  COLLECTIVE_EXPENSE_DELETED: {\n    defaultMessage: 'Expense deleted',\n  },\n  COLLECTIVE_EXPENSE_UPDATED: {\n    id: 'Expense.Activity.Updated',\n    defaultMessage: 'Expense updated',\n  },\n  COLLECTIVE_EXPENSE_REJECTED: {\n    id: 'Expense.Activity.Rejected',\n    defaultMessage: 'Expense rejected',\n  },\n  COLLECTIVE_EXPENSE_APPROVED: {\n    id: 'Expense.Activity.Approved',\n    defaultMessage: 'Expense approved',\n  },\n  COLLECTIVE_EXPENSE_PAID: {\n    id: 'Expense.Activity.Paid',\n    defaultMessage: 'Expense paid',\n  },\n  COLLECTIVE_EXPENSE_MOVED: {\n    defaultMessage: 'Expense moved',\n  },\n  COLLECTIVE_EXPENSE_MARKED_AS_UNPAID: {\n    id: 'Expense.Activity.MarkedAsUnpaid',\n    defaultMessage: 'Expense marked as unpaid',\n  },\n  COLLECTIVE_EXPENSE_INVITE_DRAFTED: {\n    id: 'Expense.Activity.Invite.Drafted',\n    defaultMessage: 'Expense invited',\n  },\n  COLLECTIVE_EXPENSE_PROCESSING: {\n    id: 'Expense.Activity.Processing',\n    defaultMessage: 'Expense processing',\n  },\n  COLLECTIVE_EXPENSE_SCHEDULED_FOR_PAYMENT: {\n    id: 'Expense.Activity.ScheduledForPayment',\n    defaultMessage: 'Expense scheduled for payment',\n  },\n  COLLECTIVE_EXPENSE_ERROR: {\n    id: 'Expense.Activity.Error',\n    defaultMessage: 'Expense error',\n  },\n  COLLECTIVE_EXPENSE_MARKED_AS_SPAM: {\n    id: 'Expense.Activity.MarkedAsSpam',\n    defaultMessage: 'Expense marked as spam',\n  },\n  COLLECTIVE_EXPENSE_MARKED_AS_INCOMPLETE: {\n    id: 'Expense.Activity.MarkedAsIncomplete',\n    defaultMessage: 'Expense marked as incomplete',\n  },\n  COLLECTIVE_EXPENSE_RECURRING_DRAFTED: {\n    defaultMessage: 'Recurring expense drafted',\n  },\n  COLLECTIVE_MEMBER_CREATED: {\n    id: 'WebhookEvents.COLLECTIVE_MEMBER_CREATED',\n    defaultMessage: 'New member',\n  },\n  COLLECTIVE_FROZEN: {\n    defaultMessage: 'Frozen account',\n  },\n  COLLECTIVE_UNFROZEN: {\n    defaultMessage: 'Unfrozen account',\n  },\n  COLLECTIVE_MEMBER_INVITED: {\n    defaultMessage: 'Invited members',\n  },\n  COLLECTIVE_CORE_MEMBER_ADDED: {\n    defaultMessage: 'Core member added',\n  },\n  COLLECTIVE_CORE_MEMBER_INVITED: {\n    defaultMessage: 'Core member invited',\n  },\n  COLLECTIVE_CORE_MEMBER_INVITATION_DECLINED: {\n    defaultMessage: 'Core member invitation declined',\n  },\n  COLLECTIVE_CORE_MEMBER_REMOVED: {\n    defaultMessage: 'Core member removed',\n  },\n  COLLECTIVE_CORE_MEMBER_EDITED: {\n    defaultMessage: 'Core member edited',\n  },\n  COLLECTIVE_CONTACT: {\n    id: 'Contact',\n    defaultMessage: 'Contact',\n  },\n  COLLECTIVE_VIRTUAL_CARD_SUSPENDED: {\n    defaultMessage: 'Virtual card suspended',\n  },\n  COLLECTIVE_VIRTUAL_CARD_ADDED: {\n    defaultMessage: 'Virtual card added',\n  },\n  VIRTUAL_CARD_REQUESTED: {\n    defaultMessage: 'Virtual card requested',\n  },\n  VIRTUAL_CARD_CHARGE_DECLINED: {\n    defaultMessage: 'Virtual card charge declined',\n  },\n  CONTRIBUTION_REJECTED: {\n    defaultMessage: 'Contribution rejected',\n  },\n  COLLECTIVE_TRANSACTION_CREATED: {\n    id: 'WebhookEvents.COLLECTIVE_TRANSACTION_CREATED',\n    defaultMessage: 'New transaction',\n  },\n  COLLECTIVE_UPDATE_CREATED: {\n    id: 'WebhookEvents.COLLECTIVE_UPDATE_CREATED',\n    defaultMessage: 'New update drafted',\n  },\n  COLLECTIVE_UPDATE_PUBLISHED: {\n    id: 'connectedAccounts.twitter.updatePublished.toggle.label',\n    defaultMessage: 'Update published',\n  },\n  SUBSCRIPTION_CANCELED: {\n    defaultMessage: 'Recurring contribution cancelled',\n  },\n  SUBSCRIPTION_ACTIVATED: {\n    defaultMessage: 'Recurring contribution activated',\n  },\n  SUBSCRIPTION_CONFIRMED: {\n    defaultMessage: 'Recurring contribution confirmed',\n  },\n  TICKET_CONFIRMED: {\n    id: 'WebhookEvents.TICKET_CONFIRMED',\n    defaultMessage: 'Ticket confirmed',\n  },\n  ORDER_CANCELED_ARCHIVED_COLLECTIVE: {\n    defaultMessage: 'Contribution canceled (archived collective)',\n  },\n  ORDER_PROCESSING: {\n    defaultMessage: 'Contribution processing',\n  },\n  ORDER_PROCESSING_CRYPTO: {\n    defaultMessage: 'Contribution processing (crypto)',\n  },\n  ORDER_PENDING_CONTRIBUTION_NEW: {\n    defaultMessage: 'New pending contribution',\n  },\n  ORDER_THANKYOU: {\n    defaultMessage: 'New order',\n  },\n  ORDERS_SUSPICIOUS: {\n    defaultMessage: 'Suspicious order',\n  },\n  ACTIVATED_COLLECTIVE_AS_HOST: {\n    defaultMessage: 'Activated as host',\n  },\n  ACTIVATED_COLLECTIVE_AS_INDEPENDENT: {\n    defaultMessage: 'Activated as independent',\n  },\n  DEACTIVATED_COLLECTIVE_AS_HOST: {\n    defaultMessage: 'Deactivated as host',\n  },\n  PAYMENT_FAILED: {\n    defaultMessage: 'Payment failed',\n  },\n  TAXFORM_REQUEST: {\n    defaultMessage: 'Tax form request',\n  },\n  COLLECTIVE_COMMENT_CREATED: {\n    defaultMessage: 'Comment posted',\n  },\n  CONVERSATION_COMMENT_CREATED: {\n    defaultMessage: 'New comment on conversation',\n  },\n  UPDATE_COMMENT_CREATED: {\n    defaultMessage: 'New comment on update',\n  },\n  EXPENSE_COMMENT_CREATED: {\n    defaultMessage: 'New comment on expense',\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { omitBy } from 'lodash';\nimport { defineMessage, useIntl } from 'react-intl';\n\nimport { isIndividualAccount } from '../../../../lib/collective.lib';\nimport { ActivityTypes } from '../../../../lib/constants/activities';\nimport { ActivityTypeI18n } from '../../../../lib/i18n/activities';\n\nimport { StyledSelectFilter } from '../../../StyledSelectFilter';\n\nconst ActivityCategories = {\n  HOST: {\n    title: defineMessage({ id: 'Member.Role.HOST', defaultMessage: 'Host' }),\n    activities: ['COLLECTIVE_APPLY', 'COLLECTIVE_APPROVED', 'COLLECTIVE_REJECTED', 'COLLECTIVE_CREATED_GITHUB'],\n  },\n  EXPENSES: {\n    title: defineMessage({ id: 'Expenses', defaultMessage: 'Expenses' }),\n    activities: [\n      'COLLECTIVE_EXPENSE_CREATED',\n      'COLLECTIVE_EXPENSE_DELETED',\n      'COLLECTIVE_EXPENSE_UPDATED',\n      'COLLECTIVE_EXPENSE_REJECTED',\n      'COLLECTIVE_EXPENSE_APPROVED',\n      'COLLECTIVE_EXPENSE_UNAPPROVED',\n      'COLLECTIVE_EXPENSE_PAID',\n      'COLLECTIVE_EXPENSE_MARKED_AS_UNPAID',\n      'COLLECTIVE_EXPENSE_MARKED_AS_SPAM',\n      'COLLECTIVE_EXPENSE_MARKED_AS_INCOMPLETE',\n      'COLLECTIVE_EXPENSE_PROCESSING',\n      'COLLECTIVE_EXPENSE_SCHEDULED_FOR_PAYMENT',\n      'COLLECTIVE_EXPENSE_ERROR',\n      'COLLECTIVE_EXPENSE_INVITE_DRAFTED',\n      'COLLECTIVE_EXPENSE_RECURRING_DRAFTED',\n      'COLLECTIVE_EXPENSE_MOVED',\n      'EXPENSE_COMMENT_CREATED',\n      'TAXFORM_REQUEST',\n    ],\n  },\n  ACCOUNTS: {\n    title: defineMessage({ defaultMessage: 'Accounts' }),\n    activities: [\n      'COLLECTIVE_CREATED',\n      'COLLECTIVE_EDITED',\n      'COLLECTIVE_FROZEN',\n      'COLLECTIVE_UNFROZEN',\n      'COLLECTIVE_CONTACT',\n      'CONNECTED_ACCOUNT_CREATED',\n    ],\n  },\n  CONTRIBUTIONS: {\n    title: defineMessage({ id: 'Contributions', defaultMessage: 'Contributions' }),\n    activities: [\n      'SUBSCRIPTION_CANCELED',\n      'SUBSCRIPTION_ACTIVATED',\n      'SUBSCRIPTION_CONFIRMED',\n      'CONTRIBUTION_REJECTED',\n      'TICKET_CONFIRMED',\n      'ORDER_CANCELED_ARCHIVED_COLLECTIVE',\n      'ORDER_PROCESSING',\n      'ORDER_PROCESSING_CRYPTO',\n      'ORDER_PENDING_CONTRIBUTION_NEW',\n      'ORDER_THANKYOU',\n      'ORDERS_SUSPICIOUS',\n      'PAYMENT_FAILED',\n    ],\n  },\n  UPDATES: {\n    title: defineMessage({ defaultMessage: 'Updates & Conversations' }),\n    activities: [\n      'COLLECTIVE_UPDATE_CREATED',\n      'COLLECTIVE_UPDATE_PUBLISHED',\n      'UPDATE_COMMENT_CREATED',\n      'CONVERSATION_COMMENT_CREATED',\n      'COLLECTIVE_CONVERSATION_CREATED',\n    ],\n  },\n  MEMBERS: {\n    title: defineMessage({ defaultMessage: 'Members' }),\n    activities: [\n      'COLLECTIVE_MEMBER_INVITED',\n      'COLLECTIVE_CORE_MEMBER_ADDED',\n      'COLLECTIVE_CORE_MEMBER_INVITED',\n      'COLLECTIVE_CORE_MEMBER_INVITATION_DECLINED',\n      'COLLECTIVE_CORE_MEMBER_REMOVED',\n      'COLLECTIVE_CORE_MEMBER_EDITED',\n    ],\n  },\n  VIRTUAL_CARDS: {\n    title: defineMessage({ id: 'VirtualCards.Title', defaultMessage: 'Virtual Cards' }),\n    activities: [\n      'COLLECTIVE_VIRTUAL_CARD_SUSPENDED',\n      'COLLECTIVE_VIRTUAL_CARD_ADDED',\n      'VIRTUAL_CARD_REQUESTED',\n      'VIRTUAL_CARD_CHARGE_DECLINED',\n    ],\n  },\n  GIFT_CARDS: {\n    title: defineMessage({ id: 'editCollective.menu.giftCards', defaultMessage: 'Gift Cards' }),\n    activities: ['USER_CARD_CLAIMED', 'USER_CARD_INVITED'],\n  },\n  USER: {\n    title: defineMessage({ defaultMessage: 'User Account' }),\n    activities: ['USER_CREATED', 'USER_NEW_TOKEN', 'USER_CHANGE_EMAIL'],\n  },\n};\n\nexport const isSupportedActivityTypeFilter = (account, value) => {\n  const allowedValues = new Set(Object.keys(ActivityTypes));\n  if (account) {\n    if (account.slug !== 'opensource') {\n      allowedValues.delete('COLLECTIVE_CREATED_GITHUB');\n    }\n    if (!isIndividualAccount(account)) {\n      ActivityCategories.USER.activities.forEach(activity => allowedValues.delete(activity));\n    }\n  }\n\n  return !value || allowedValues.has(value);\n};\n\nconst getOption = (intl, activityType) => ({\n  label: ActivityTypeI18n[activityType] ? intl.formatMessage(ActivityTypeI18n[activityType]) : activityType,\n  value: activityType,\n});\n\nconst getOptions = (intl, account) => {\n  // Uncomment the code below to see unclassified activities\n  // const allClassified = flatten(Object.values(ActivityCategories).map(c => c.activities));\n  // const unclassified = difference(Object.keys(ActivityTypes), allClassified);\n  // console.log(unclassified);\n\n  const categories = !account\n    ? ActivityCategories\n    : omitBy(ActivityCategories, (_, category) => {\n        if (category === 'HOST' && !account.isHost) {\n          return true;\n        } else if (category === 'USER' && !isIndividualAccount(account)) {\n          return true;\n        }\n      });\n\n  return [\n    { label: intl.formatMessage({ id: 'WebhookEvents.All', defaultMessage: 'All' }) },\n    ...Object.values(categories).map(({ title, activities }) => {\n      return {\n        label: intl.formatMessage(title),\n        options: activities\n          .filter(activity => isSupportedActivityTypeFilter(account, activity))\n          .map(activity => getOption(intl, activity)),\n      };\n    }),\n  ];\n};\n\nconst ActivityTypeFilter = ({ account, onChange, value, ...props }) => {\n  const intl = useIntl();\n  const options = React.useMemo(() => getOptions(intl, account), [account]);\n  return (\n    <StyledSelectFilter\n      inputId=\"activity-type-filter\"\n      onChange={({ value }) => onChange(value)}\n      isLoading={!account}\n      disabled={!account}\n      options={options}\n      value={value ? getOption(intl, value) : options[0]}\n      isSearchable\n      {...props}\n    />\n  );\n};\n\nActivityTypeFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  account: PropTypes.shape({ type: PropTypes.string }),\n};\n\nexport default ActivityTypeFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { encodeDateInterval } from '../../../../lib/date-utils';\n\nimport Container from '../../../Container';\nimport PeriodFilter from '../../../filters/PeriodFilter';\nimport { Box, Flex } from '../../../Grid';\n\nimport ActivityAccountFilter from './ActivityAccountFilter';\nimport ActivityTypeFilter from './ActivityTypeFilter';\n\nconst FilterContainer = styled(Box)`\n  margin-bottom: 24px;\n`;\n\nconst FilterLabel = styled.label`\n  font-weight: 600;\n  font-size: 9px;\n  line-height: 14px;\n  letter-spacing: 0.6px;\n  text-transform: uppercase;\n  color: #9d9fa3;\n`;\n\nconst ActivityFilters = ({ filters, onChange, account }) => {\n  const getFilterProps = (name, valueModifier) => {\n    return {\n      inputId: `activity-filter-${name}`,\n      value: filters?.[name],\n      onChange: value => {\n        const preparedValue = valueModifier ? valueModifier(value) : value;\n        onChange({ ...filters, [name]: value === 'ALL' ? null : preparedValue });\n      },\n    };\n  };\n\n  return (\n    <Container>\n      <Flex flexWrap=\"wrap\">\n        <FilterContainer width={[1, 1 / 3, 1 / 3]}>\n          <FilterLabel htmlFor=\"activity-filter-period\">\n            <FormattedMessage id=\"Period\" defaultMessage=\"Period\" />\n          </FilterLabel>\n          <PeriodFilter {...getFilterProps('period', encodeDateInterval)} />\n        </FilterContainer>\n        <FilterContainer width={[1, 1 / 3, 1 / 3]} pl={[0, '19px']}>\n          <FilterLabel htmlFor=\"activity-filter-type\">\n            <FormattedMessage defaultMessage=\"Activity\" />\n          </FilterLabel>\n          <ActivityTypeFilter account={account} {...getFilterProps('type')} />\n        </FilterContainer>\n        {(account?.isHost || account?.childrenAccounts?.totalCount > 0) && (\n          <FilterContainer width={[1, 1 / 3, 1 / 3]} pl={[0, '19px']}>\n            <FilterLabel htmlFor=\"activity-filter-account\">\n              <FormattedMessage defaultMessage=\"Account\" />\n            </FilterLabel>\n            <ActivityAccountFilter account={account} {...getFilterProps('account')} />\n          </FilterContainer>\n        )}\n      </Flex>\n    </Container>\n  );\n};\n\nActivityFilters.propTypes = {\n  onChange: PropTypes.func,\n  filters: PropTypes.object,\n  account: PropTypes.shape({\n    isHost: PropTypes.bool,\n    childrenAccounts: PropTypes.object,\n  }),\n};\n\nexport default React.memo(ActivityFilters);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { capitalize } from 'lodash';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { ActivityDescriptionI18n } from '../../../../lib/i18n/activities';\nimport formatCollectiveType from '../../../../lib/i18n/collective-type';\nimport formatMemberRole from '../../../../lib/i18n/member-role';\nimport { getCollectivePageRoute } from '../../../../lib/url-helpers';\n\nimport Link from '../../../Link';\nimport LinkCollective from '../../../LinkCollective';\nimport LinkExpense from '../../../LinkExpense';\n\nconst ActivityDescription = ({ activity }) => {\n  const intl = useIntl();\n\n  if (!ActivityDescriptionI18n[activity.type]) {\n    return capitalize(activity.type.replace('_', ' '));\n  }\n\n  return intl.formatMessage(ActivityDescriptionI18n[activity.type], {\n    hasParent: Boolean(activity.account?.parent),\n    FromAccount: () => <LinkCollective collective={activity.fromAccount} openInNewTab />,\n    Account: () => <LinkCollective collective={activity.account} openInNewTab />,\n    AccountType: () => formatCollectiveType(intl, activity.account?.type || 'COLLECTIVE'),\n    AccountParent: () => <LinkCollective collective={activity.account?.parent} openInNewTab />,\n    Expense: msg =>\n      !activity.expense ? (\n        msg\n      ) : (\n        <LinkExpense\n          collective={activity.expense.account}\n          expense={activity.expense}\n          title={activity.expense.description}\n          openInNewTab\n        >\n          {msg} #{activity.expense.legacyId}\n        </LinkExpense>\n      ),\n    Order: msg =>\n      !activity.order ? (\n        msg\n      ) : (\n        <Link\n          href={`${getCollectivePageRoute(activity.order.toAccount)}/orders?searchTerm=%23${activity.order.legacyId}`}\n          title={activity.order.description}\n          openInNewTab\n        >\n          {msg} #{activity.order.legacyId}\n        </Link>\n      ),\n    Host: () => <LinkCollective collective={activity.host} openInNewTab />,\n    CommentEntity: () => {\n      if (activity.expense) {\n        return (\n          <LinkExpense\n            collective={activity.expense.account}\n            expense={activity.expense}\n            title={activity.expense.description}\n            openInNewTab\n          >\n            <FormattedMessage id=\"Transaction.kind.EXPENSE\" defaultMessage=\"Expense\" /> #{activity.expense.legacyId}\n          </LinkExpense>\n        );\n      } else {\n        // We're not yet linking conversations & updates to comments in the activity table\n        return <LinkCollective collective={activity.account} openInNewTab />;\n      }\n    },\n    MemberRole: () => {\n      if (activity.data?.member?.role) {\n        return formatMemberRole(intl, activity.data.member.role);\n      } else if (activity.data?.invitation?.role) {\n        return formatMemberRole(intl, activity.data.invitation.role);\n      } else {\n        return 'member';\n      }\n    },\n  });\n};\n\nActivityDescription.propTypes = {\n  activity: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ActivityDescription;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { diffArrays, diffChars, diffJson } from 'diff';\nimport { has, isEmpty, pickBy, startCase } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nconst diffValues = (prevValue, newValue) => {\n  if (typeof prevValue === 'string' || typeof newValue === 'string') {\n    return { type: 'string', diff: diffChars(prevValue ?? '', newValue ?? '') };\n  } else if (Array.isArray(prevValue) || Array.isArray(newValue)) {\n    return { type: 'array', diff: diffArrays(prevValue ?? [], newValue ?? []) };\n  } else if (typeof prevValue === 'object' || typeof newValue === 'object') {\n    return { type: 'object', diff: diffJson(prevValue ?? {}, newValue ?? {}) };\n  } else {\n    return {\n      type: 'default',\n      diff: [\n        { removed: true, value: JSON.stringify(prevValue) },\n        { added: true, value: JSON.stringify(newValue) },\n      ],\n    };\n  }\n};\n\nconst deepCompare = (prev, next) => {\n  const removedKeys = Object.keys(prev).filter(key => !has(next, key));\n  const addedKeys = Object.keys(next).filter(key => !has(prev, key));\n  const changedValues = pickBy(next, (value, key) => !addedKeys.includes(key) && prev[key] !== value);\n  return [\n    ...removedKeys.map(key => ({ action: 'remove', key, prevValue: JSON.stringify(prev[key]) })),\n    ...addedKeys.map(key => ({ action: 'add', key, newValue: JSON.stringify(next[key]) })),\n    ...Object.keys(changedValues).map(key => ({\n      action: 'update',\n      key,\n      newValue: next[key],\n      prevValue: prev[key],\n      changes: diffValues(prev[key], next[key]),\n    })),\n  ];\n};\n\nconst DiffLine = styled.div`\n  display: flex;\n  margin: 8px 0;\n`;\n\nconst RemovedValue = styled.span`\n  background-color: #8b0000;\n  text-decoration: line-through;\n  opacity: 0.45;\n`;\n\nconst AddedValue = styled.span`\n  background: #006330;\n`;\n\nconst DiffedKey = styled.span`\n  font-weight: bold;\n  color: orange;\n  min-width: 100px;\n  margin-right: 8px;\n  display: block;\n`;\n\nexport const CollectiveEditedDetails = ({ activity }) => {\n  const { newData, previousData } = activity.data ?? {};\n  const fullDiff = React.useMemo(() => deepCompare(previousData, newData), [newData, previousData]);\n\n  if (!fullDiff.length || (isEmpty(newData) && isEmpty(previousData))) {\n    return (\n      <i>\n        <FormattedMessage defaultMessage=\"No details to show\" />\n      </i>\n    );\n  }\n\n  return fullDiff.map(({ action, key, changes, newValue, prevValue }, index) => (\n    // eslint-disable-next-line react/no-array-index-key\n    <DiffLine key={index}>\n      <DiffedKey>{startCase(key)}</DiffedKey>\n      {action === 'remove' ? (\n        <RemovedValue>{prevValue}</RemovedValue>\n      ) : action === 'add' ? (\n        <AddedValue>{newValue}</AddedValue>\n      ) : action === 'update' ? (\n        <div>\n          {changes.diff.map((part, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <React.Fragment key={index}>\n              {part.added ? (\n                <AddedValue>{part.value}</AddedValue>\n              ) : part.removed ? (\n                <RemovedValue>{part.value}</RemovedValue>\n              ) : (\n                <span>{part.value}</span>\n              )}\n              {/* Separate array values (e.g. for tags) with commas */}\n              {changes.type === 'array' && index < changes.diff.length - 1 && ', '}\n              {/* For numbers & unknown types, show as \"Previous value → New value\" */}\n              {changes.type === 'default' && index < changes.diff.length - 1 && ' → '}\n            </React.Fragment>\n          ))}\n        </div>\n      ) : null}\n    </DiffLine>\n  ));\n};\n\nCollectiveEditedDetails.propTypes = {\n  activity: PropTypes.shape({ type: PropTypes.string.isRequired, data: PropTypes.object }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CollectiveEditedDetails } from './CollectiveEditedDetails';\n\nconst ActivityDetailComponents = {\n  COLLECTIVE_EDITED: CollectiveEditedDetails,\n};\n\nexport const DETAILED_ACTIVITY_TYPES = Object.keys(ActivityDetailComponents);\n\nconst ActivityDetails = ({ activity }) => {\n  const ActivityDetailsComponent = ActivityDetailComponents[activity.type];\n  return ActivityDetailsComponent ? <ActivityDetailsComponent activity={activity} /> : null;\n};\n\nActivityDetails.propTypes = {\n  activity: PropTypes.shape({ type: PropTypes.string.isRequired, data: PropTypes.object }).isRequired,\n};\n\nexport default ActivityDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@styled-icons/feather/ChevronDown';\nimport { ChevronUp } from '@styled-icons/feather/ChevronUp';\nimport { themeGet } from '@styled-system/theme-get';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport Avatar from '../../../Avatar';\nimport DateTime from '../../../DateTime';\nimport { Box, Flex } from '../../../Grid';\nimport LinkCollective from '../../../LinkCollective';\nimport StyledButton from '../../../StyledButton';\nimport StyledLink from '../../../StyledLink';\nimport { P, Span } from '../../../Text';\n\nimport ActivityDescription from './ActivityDescription';\nimport ActivityDetails, { DETAILED_ACTIVITY_TYPES } from './ActivityDetails';\n\nconst MetadataContainer = styled.div`\n  display: flex;\n  align-items: center;\n  grid-gap: 8px;\n  color: #4d4f51;\n  a {\n    color: #4d4f51;\n    text-decoration: none;\n    &:hover {\n      color: #4e5052;\n    }\n  }\n`;\n\nconst DetailsContainer = styled.div`\n  width: 100%;\n  padding: 16px;\n  background: ${themeGet('colors.black.800')};\n  box-shadow: 0px 0px 6px 4px #1e1e1e inset;\n  color: white;\n  margin-top: 16px;\n  font-size: 12px;\n  border-radius: 4px;\n`;\n\nconst ActivityListItem = ({ activity }) => {\n  const [showDetails, setShowDetails] = React.useState(false);\n  return (\n    <Box px=\"16px\" py=\"14px\">\n      <P color=\"black.900\" fontWeight=\"500\" fontSize=\"14px\">\n        <ActivityDescription activity={activity} />\n      </P>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mt=\"10px\">\n        <MetadataContainer>\n          {activity.isSystem ? (\n            <Span>\n              <FormattedMessage defaultMessage=\"System Activity\" />\n            </Span>\n          ) : (\n            <FormattedMessage\n              id=\"ByUser\"\n              defaultMessage=\"By {userName}\"\n              values={{\n                userName: !activity.individual ? (\n                  <Span>\n                    <FormattedMessage id=\"user.Unknown\" defaultMessage=\"Unknown\" />\n                  </Span>\n                ) : (\n                  <StyledLink as={LinkCollective} color=\"black.700\" collective={activity.individual}>\n                    <Flex alignItems=\"center\" gridGap=\"8px\">\n                      <Avatar radius={24} collective={activity.individual} />\n                      {activity.individual.name}\n                    </Flex>\n                  </StyledLink>\n                ),\n              }}\n            />\n          )}\n          •\n          <DateTime value={activity.createdAt} dateStyle=\"medium\" />\n        </MetadataContainer>\n        {DETAILED_ACTIVITY_TYPES.includes(activity.type) && (\n          <StyledButton\n            ml={12}\n            isBorderless\n            buttonStyle=\"secondary\"\n            buttonSize=\"tiny\"\n            onClick={() => setShowDetails(!showDetails)}\n          >\n            {!showDetails ? (\n              <FormattedMessage defaultMessage=\"Show Details\" />\n            ) : (\n              <FormattedMessage defaultMessage=\"Hide Details\" />\n            )}\n            <Span ml={1}>\n              {showDetails ? <ChevronUp size=\"1em\" strokeWidth=\"3px\" /> : <ChevronDown size=\"1em\" strokeWidth=\"3px\" />}\n            </Span>\n          </StyledButton>\n        )}\n      </Flex>\n      {showDetails && (\n        <DetailsContainer>\n          <ActivityDetails activity={activity} />\n        </DetailsContainer>\n      )}\n    </Box>\n  );\n};\n\nActivityListItem.propTypes = {\n  activity: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    individual: PropTypes.shape({ name: PropTypes.string }),\n    isSystem: PropTypes.bool,\n  }).isRequired,\n};\n\nexport default ActivityListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { isEmpty, omit, omitBy } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { parseDateInterval } from '../../../../lib/date-utils';\nimport { API_V2_CONTEXT } from '../../../../lib/graphql/helpers';\n\nimport Container from '../../../Container';\nimport { Box } from '../../../Grid';\nimport LoadingPlaceholder from '../../../LoadingPlaceholder';\nimport MessageBox from '../../../MessageBox';\nimport MessageBoxGraphqlError from '../../../MessageBoxGraphqlError';\nimport Pagination from '../../../Pagination';\nimport StyledCard from '../../../StyledCard';\n\nimport ActivityFilters from './ActivityFilters';\nimport ActivityListItem from './ActivityListItem';\nimport { isSupportedActivityTypeFilter } from './ActivityTypeFilter';\n\nconst activityLogQuery = gql`\n  query AccountActivityLog(\n    $accountSlug: String!\n    $limit: Int\n    $offset: Int\n    $dateFrom: DateTime\n    $dateTo: DateTime\n    $type: [ActivityAndClassesType!]\n    $account: [AccountReferenceInput!]!\n    $includeHostedAccounts: Boolean\n    $includeChildrenAccounts: Boolean\n    $excludeParentAccount: Boolean\n  ) {\n    account(slug: $accountSlug) {\n      id\n      name\n      slug\n      legacyId\n      isHost\n      type\n      ... on Collective {\n        childrenAccounts {\n          totalCount\n        }\n      }\n    }\n    activities(\n      account: $account\n      limit: $limit\n      offset: $offset\n      dateFrom: $dateFrom\n      dateTo: $dateTo\n      type: $type\n      includeHostedAccounts: $includeHostedAccounts\n      includeChildrenAccounts: $includeChildrenAccounts\n      excludeParentAccount: $excludeParentAccount\n    ) {\n      offset\n      limit\n      totalCount\n      nodes {\n        id\n        createdAt\n        type\n        data\n        isSystem\n        fromAccount {\n          id\n          name\n          slug\n          type\n        }\n        host {\n          id\n          name\n          slug\n          type\n        }\n        account {\n          id\n          name\n          slug\n          type\n          ... on AccountWithParent {\n            parent {\n              id\n              slug\n              name\n              type\n            }\n          }\n        }\n        expense {\n          id\n          legacyId\n          description\n          account {\n            id\n            name\n            type\n            slug\n            ... on AccountWithParent {\n              parent {\n                id\n                slug\n              }\n            }\n          }\n        }\n        order {\n          id\n          legacyId\n          description\n          toAccount {\n            id\n            name\n            slug\n            ... on AccountWithParent {\n              parent {\n                id\n                slug\n              }\n            }\n          }\n        }\n        individual {\n          id\n          slug\n          name\n          type\n          imageUrl(height: 48)\n        }\n      }\n    }\n  }\n`;\n\nconst ActivityLogContainer = styled(StyledCard)`\n  & > *:not(:last-child) {\n    border-bottom: 1px solid #dcdde0;\n  }\n\n  a {\n    color: black;\n    text-decoration: underline dotted;\n    &:hover {\n      color: #4e5052;\n    }\n  }\n`;\n\nconst ACTIVITY_LIMIT = 10;\n\nconst getQueryVariables = (accountSlug, router) => {\n  const routerQuery = omit(router.query, ['slug', 'section']);\n  const offset = parseInt(routerQuery.offset) || 0;\n  const { period, type, account, limit } = routerQuery;\n  const { from: dateFrom, to: dateTo } = parseDateInterval(period);\n\n  // Account filters\n  let filteredAccounts = { slug: accountSlug };\n  let includeChildrenAccounts, includeHostedAccounts, excludeParentAccount;\n  if (account === '__CHILDREN_ACCOUNTS__') {\n    includeChildrenAccounts = true;\n    excludeParentAccount = true;\n  } else if (account === '__HOSTED_ACCOUNTS__') {\n    includeHostedAccounts = true;\n  } else if (account) {\n    filteredAccounts = account.split(',').map(slug => ({ slug }));\n    includeChildrenAccounts = true; // By default, we include children of selected accounts\n  }\n\n  return {\n    accountSlug,\n    dateFrom,\n    dateTo,\n    limit: limit ? parseInt(limit) : ACTIVITY_LIMIT,\n    offset,\n    type: type,\n    account: filteredAccounts,\n    includeChildrenAccounts,\n    excludeParentAccount,\n    includeHostedAccounts,\n  };\n};\n\nconst getChangesThatRequireUpdate = (account, queryParams) => {\n  const changes = {};\n  if (!account) {\n    return changes;\n  }\n\n  if (!isSupportedActivityTypeFilter(account, queryParams.type)) {\n    changes.type = null;\n  }\n  return changes;\n};\n\nconst ActivityLog = ({ accountSlug }) => {\n  const router = useRouter();\n  const routerQuery = omit(router.query, ['slug', 'section']);\n  const offset = parseInt(routerQuery.offset) || 0;\n  const { data, loading, error } = useQuery(activityLogQuery, {\n    variables: getQueryVariables(accountSlug, router),\n    context: API_V2_CONTEXT,\n    fetchPolicy: 'network-only',\n  });\n\n  const handleUpdateFilters = queryParams => {\n    const pathname = router.asPath.split('?')[0];\n    return router.push({\n      pathname,\n      query: omitBy({ ...routerQuery, ...queryParams }, value => !value),\n    });\n  };\n\n  // Reset type if not supported by the account\n  React.useEffect(() => {\n    const changesThatRequireUpdate = getChangesThatRequireUpdate(data?.account, routerQuery);\n    if (!isEmpty(changesThatRequireUpdate)) {\n      handleUpdateFilters({ ...routerQuery, ...changesThatRequireUpdate });\n    }\n  }, [data?.account, routerQuery]);\n\n  return (\n    <Box mt={3}>\n      <ActivityFilters\n        filters={routerQuery}\n        onChange={queryParams => handleUpdateFilters({ ...queryParams, offset: null })}\n        account={data?.account}\n      />\n      {error ? (\n        <MessageBoxGraphqlError error={error} />\n      ) : loading ? (\n        <LoadingPlaceholder width=\"100%\" height={163} />\n      ) : !data?.activities?.nodes ? (\n        <MessageBox type=\"error\" withIcon>\n          <FormattedMessage\n            id=\"mustBeAdmin\"\n            defaultMessage=\"You must be an admin of this collective to see this page\"\n          />\n        </MessageBox>\n      ) : (\n        <React.Fragment>\n          {!data.activities.totalCount ? (\n            <MessageBox type=\"info\" withIcon>\n              <FormattedMessage defaultMessage=\"No activity yet\" />\n            </MessageBox>\n          ) : (\n            <ActivityLogContainer>\n              {data.activities.nodes.map(activity => (\n                <ActivityListItem key={activity.id} activity={activity} />\n              ))}\n            </ActivityLogContainer>\n          )}\n        </React.Fragment>\n      )}\n      {data?.activities?.totalCount > ACTIVITY_LIMIT && (\n        <Container display=\"flex\" justifyContent=\"center\" fontSize=\"14px\" my={3}>\n          <Pagination\n            offset={offset}\n            total={data.activities.totalCount}\n            limit={ACTIVITY_LIMIT}\n            ignoredQueryParams={['slug', 'section']}\n          />\n        </Container>\n      )}\n    </Box>\n  );\n};\n\nActivityLog.propTypes = {\n  accountSlug: PropTypes.string.isRequired,\n};\n\nexport default ActivityLog;\n","export const ActivityClasses = {\n  COLLECTIVE: 'collectives',\n  EXPENSES: 'expenses',\n  CONTRIBUTIONS: 'contributions',\n  ACTIVITIES_UPDATES: 'activitiesUpdates',\n  VIRTUAL_CARDS: 'virtualCards',\n  FUND_EVENTS: 'fundsEvents',\n  REPORTS: 'reports',\n} as const;\n\nexport const ActivityTypes = {\n  ACTIVITY_ALL: 'all',\n  CONNECTED_ACCOUNT_CREATED: 'connected_account.created',\n  COLLECTIVE_CREATED: 'collective.created',\n  ORGANIZATION_COLLECTIVE_CREATED: 'organization.collective.created',\n  COLLECTIVE_CREATED_GITHUB: 'collective.created.github',\n  COLLECTIVE_APPLY: 'collective.apply',\n  COLLECTIVE_APPROVED: 'collective.approved',\n  COLLECTIVE_REJECTED: 'collective.rejected',\n  COLLECTIVE_EDITED: 'collective.edited',\n  COLLECTIVE_CONVERSATION_CREATED: 'collective.conversation.created',\n  COLLECTIVE_EXPENSE_CREATED: 'collective.expense.created',\n  COLLECTIVE_EXPENSE_DELETED: 'collective.expense.deleted',\n  COLLECTIVE_EXPENSE_UPDATED: 'collective.expense.updated',\n  COLLECTIVE_EXPENSE_REJECTED: 'collective.expense.rejected',\n  COLLECTIVE_EXPENSE_APPROVED: 'collective.expense.approved',\n  COLLECTIVE_EXPENSE_UNAPPROVED: 'collective.expense.unapproved',\n  COLLECTIVE_EXPENSE_PAID: 'collective.expense.paid',\n  COLLECTIVE_EXPENSE_MARKED_AS_UNPAID: 'collective.expense.unpaid',\n  COLLECTIVE_EXPENSE_MARKED_AS_SPAM: 'collective.expense.spam',\n  COLLECTIVE_EXPENSE_MARKED_AS_INCOMPLETE: 'collective.expense.incomplete',\n  COLLECTIVE_EXPENSE_PROCESSING: 'collective.expense.processing',\n  COLLECTIVE_EXPENSE_SCHEDULED_FOR_PAYMENT: 'collective.expense.scheduledForPayment',\n  COLLECTIVE_EXPENSE_ERROR: 'collective.expense.error',\n  COLLECTIVE_EXPENSE_INVITE_DRAFTED: 'collective.expense.invite.drafted',\n  COLLECTIVE_EXPENSE_RECURRING_DRAFTED: 'collective.expense.recurring.drafted',\n  COLLECTIVE_EXPENSE_MISSING_RECEIPT: 'collective.expense.missing.receipt',\n  COLLECTIVE_EXPENSE_MOVED: 'collective.expense.moved',\n  COLLECTIVE_FROZEN: 'collective.frozen',\n  COLLECTIVE_UNFROZEN: 'collective.unfrozen',\n  COLLECTIVE_MONTHLY_REPORT: 'collective.monthlyreport',\n  COLLECTIVE_MEMBER_INVITED: 'collective.member.invited',\n  COLLECTIVE_MEMBER_CREATED: 'collective.member.created',\n  COLLECTIVE_CORE_MEMBER_ADDED: 'collective.core.member.added',\n  COLLECTIVE_CORE_MEMBER_INVITED: 'collective.core.member.invited',\n  COLLECTIVE_CORE_MEMBER_INVITATION_DECLINED: 'collective.core.member.invitation.declined',\n  COLLECTIVE_CORE_MEMBER_REMOVED: 'collective.core.member.removed',\n  COLLECTIVE_CORE_MEMBER_EDITED: 'collective.core.member.edited',\n  COLLECTIVE_TRANSACTION_CREATED: 'collective.transaction.created',\n  COLLECTIVE_UPDATE_CREATED: 'collective.update.created',\n  COLLECTIVE_UPDATE_PUBLISHED: 'collective.update.published',\n  COLLECTIVE_CONTACT: 'collective.contact',\n  COLLECTIVE_VIRTUAL_CARD_MISSING_RECEIPTS: 'collective.virtualcard.missing.receipts',\n  COLLECTIVE_VIRTUAL_CARD_SUSPENDED: 'collective.virtualcard.suspended',\n  COLLECTIVE_VIRTUAL_CARD_ADDED: 'collective.virtualcard.added',\n  VIRTUAL_CARD_REQUESTED: 'virtual_card.requested',\n  VIRTUAL_CARD_CHARGE_DECLINED: 'virtualcard.charge.declined',\n  CONTRIBUTION_REJECTED: 'contribution.rejected',\n  SUBSCRIPTION_ACTIVATED: 'subscription.activated',\n  SUBSCRIPTION_CONFIRMED: 'subscription.confirmed',\n  SUBSCRIPTION_CANCELED: 'subscription.canceled',\n  TICKET_CONFIRMED: 'ticket.confirmed',\n  USER_CREATED: 'user.created',\n  USER_NEW_TOKEN: 'user.new.token',\n  USER_CHANGE_EMAIL: 'user.changeEmail',\n  USER_PAYMENT_METHOD_CREATED: 'user.paymentMethod.created',\n  USER_CARD_CLAIMED: 'user.card.claimed',\n  USER_CARD_INVITED: 'user.card.invited',\n  WEBHOOK_STRIPE_RECEIVED: 'webhook.stripe.received',\n  WEBHOOK_PAYPAL_RECEIVED: 'webhook.paypal.received',\n  ORDER_CANCELED_ARCHIVED_COLLECTIVE: 'order.canceled.archived.collective',\n  ORDER_PROCESSING: 'order.processing',\n  ORDER_PROCESSING_CRYPTO: 'order.processing.crypto',\n  ORDER_PENDING_CONTRIBUTION_NEW: 'order.new.pendingFinancialContribution',\n  ORDER_PENDING_CONTRIBUTION_REMINDER: 'order.reminder.pendingFinancialContribution',\n  ORDER_THANKYOU: 'order.thankyou',\n  ORDERS_SUSPICIOUS: 'orders.suspicious',\n  BACKYOURSTACK_DISPATCH_CONFIRMED: 'backyourstack.dispatch.confirmed',\n  ACTIVATED_COLLECTIVE_AS_HOST: 'activated.collective.as.host',\n  ACTIVATED_COLLECTIVE_AS_INDEPENDENT: 'activated.collective.as.independent',\n  DEACTIVATED_COLLECTIVE_AS_HOST: 'deactivated.collective.as.host',\n  PAYMENT_FAILED: 'payment.failed',\n  PAYMENT_CREDITCARD_CONFIRMATION: 'payment.creditcard.confirmation',\n  PAYMENT_CREDITCARD_EXPIRING: 'payment.creditcard.expiring',\n  TAXFORM_REQUEST: 'taxform.request',\n  COLLECTIVE_COMMENT_CREATED: 'collective.comment.created',\n  CONVERSATION_COMMENT_CREATED: 'conversation.comment.created',\n  UPDATE_COMMENT_CREATED: 'update.comment.created',\n  EXPENSE_COMMENT_CREATED: 'expense.comment.created',\n} as const;\n\nexport const ActivityAttribution = {\n  // Activities initiated by this account\n  AUTHORED: 'AUTHORED',\n  // Activities that targeted this account\n  RECEIVED: 'RECEIVED',\n  // Activities where author and target both points to this account (e.g. settings update)\n  SELF: 'SELF',\n  // Activities that happened on accounts hosted by this account\n  HOSTED_ACCOUNTS: 'HOSTED_ACCOUNTS',\n} as const;\n","export const CurrencyPrecision = {\n  DEFAULT: 2,\n};\n\nexport default CurrencyPrecision;\n","const INTERVALS = {\n  oneTime: 'oneTime',\n  month: 'month',\n  year: 'year',\n  flexible: 'flexible',\n};\n\nexport const getGQLV2FrequencyFromInterval = interval => {\n  switch (interval) {\n    case INTERVALS.month:\n      return 'MONTHLY';\n    case INTERVALS.year:\n      return 'YEARLY';\n    case INTERVALS.flexible:\n      return 'FLEXIBLE';\n    default:\n      return 'ONETIME';\n  }\n};\n\nexport default INTERVALS;\n","import getSymbolFromCurrency from 'currency-symbol-map';\nimport { isNil, round } from 'lodash';\n\nimport { CurrencyPrecision } from './constants/currency-precision';\n\nfunction getCurrencySymbolFallback(currency) {\n  return Number(0)\n    .toLocaleString('en-US', {\n      style: 'currency',\n      currency,\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    })\n    .replace(/(^0\\s?)|(\\s?0$)/, '');\n}\n\nexport function getCurrencySymbol(currency) {\n  return getSymbolFromCurrency(currency) || getCurrencySymbolFallback(currency);\n}\n\nexport const getPrecisionFromAmount = amount => {\n  return amount.toString().slice(-2) === '00' ? 0 : CurrencyPrecision.DEFAULT;\n};\n\nexport function graphqlAmountValueInCents(amount) {\n  if (isNil(amount)) {\n    return amount;\n  }\n\n  // GQLV2 is an object\n  if (typeof amount === 'object') {\n    return amount?.valueInCents;\n  }\n  // GQLV2 is already a value in cents\n  return amount;\n}\n\nexport function formatCurrency(amount, currency = 'USD', options = {}) {\n  if (isNil(amount)) {\n    return '--';\n  }\n\n  // Compatibility with amounts from GQLV2\n  if (typeof amount === 'object') {\n    currency = amount.currency || currency;\n    if (!isNil(amount.valueInCents)) {\n      amount = amount.valueInCents;\n    } else if (!isNil(amount.value)) {\n      amount = Math.round(amount.value * 100);\n    } else {\n      return '--';\n    }\n  }\n\n  amount = amount / 100;\n  let minimumFractionDigits = 2;\n  let maximumFractionDigits = 2;\n  if (Object.prototype.hasOwnProperty.call(options, 'minimumFractionDigits')) {\n    minimumFractionDigits = options.minimumFractionDigits;\n  } else if (Object.prototype.hasOwnProperty.call(options, 'precision')) {\n    minimumFractionDigits = options.precision;\n    maximumFractionDigits = options.precision;\n  }\n\n  const formatAmount = currencyDisplay => {\n    return amount.toLocaleString(options.locale, {\n      style: 'currency',\n      currency,\n      minimumFractionDigits: minimumFractionDigits,\n      maximumFractionDigits: maximumFractionDigits,\n      currencyDisplay,\n    });\n  };\n\n  try {\n    // We manually add the exact currency (e.g. \"$10 USD\") in many places. This is to prevent\n    // showing the currency twice is some locales ($US10 USD)\n    return formatAmount('narrowSymbol');\n  } catch (e) {\n    // ... unfortunately, some old versions of Safari doesn't support it, so we need a fallback\n    return formatAmount('symbol');\n  }\n}\n\nexport const formatValueAsCurrency = (value, options) =>\n  formatCurrency(value.valueInCents || value.value * 100, value.currency, options);\n\nexport const floatAmountToCents = floatAmount => {\n  if (isNaN(floatAmount) || floatAmount === null) {\n    return floatAmount;\n  } else {\n    return Math.round(floatAmount * 100);\n  }\n};\n\nexport const centsAmountToFloat = amount => {\n  if (isNaN(amount) || isNil(amount)) {\n    return null;\n  } else {\n    return round(amount / 100, 2);\n  }\n};\n\n/**\n * Small helper to get the value in cents from an amount, works with GQLV1 & GQLV2\n * @param {number|object} amount\n * @returns\n */\nexport const getAmountInCents = amount => {\n  if (amount === null) {\n    return amount;\n  } else if (typeof amount === 'number') {\n    return amount;\n  } else if (typeof amount === 'object') {\n    if (!isNil(amount.valueInCents)) {\n      return amount.valueInCents;\n    } else if (!isNil(amount.value)) {\n      return Math.round(amount.value * 100);\n    }\n  }\n\n  return amount;\n};\n","import { padStart } from 'lodash';\n\nimport INTERVALS from './constants/intervals';\nimport dayjs from './dayjs';\n\n/**\n * For a given date, return the next charge date.\n *\n * @param {Date} firstChargeDate\n * @param {month|year} interval\n */\nexport const getNextChargeDate = (firstChargeDate, interval) => {\n  if (interval === INTERVALS.month) {\n    if (firstChargeDate.getDate() > 15) {\n      return new Date(firstChargeDate.getFullYear(), firstChargeDate.getMonth() + 2);\n    }\n    return new Date(firstChargeDate.getFullYear(), firstChargeDate.getMonth() + 1);\n  } else if (interval === INTERVALS.year) {\n    return new Date(firstChargeDate.getFullYear() + 1, firstChargeDate.getMonth());\n  } else {\n    return null;\n  }\n};\n\n/**\n * Format a datetime object to an ISO date like `YYYY-MM-DD`\n */\nexport const toIsoDateStr = date => {\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getUTCDate();\n  return `${year}-${padStart(month.toString(), 2, '0')}-${padStart(day.toString(), 2, '0')}`;\n};\n\n/**\n * From an order frequency provided as `ContributionFrequency` GQLV2 enum, returns an interval\n * as we use it in the DB (ie. MONTHLY => month)\n */\nexport const getIntervalFromContributionFrequency = input => {\n  switch (input) {\n    case 'MONTHLY':\n      return INTERVALS.month;\n    case 'YEARLY':\n      return INTERVALS.year;\n    case 'FLEXIBLE':\n      return INTERVALS.flexible;\n    default:\n      return null;\n  }\n};\n\n/**\n * Takes a date and returns it as a string in the format YYYY-MM-DD\n */\nexport const stripTime = date => {\n  if (!date) {\n    return '';\n  } else {\n    return dayjs(date).format('YYYY-MM-DD');\n  }\n};\n\n/**\n * A helper that returns a Date object from different types of input.\n * Currently supports:\n * - string: ISO date string\n * - Date object\n * - DayJS object\n * - null\n */\nexport const getDateFromValue = value => {\n  if (!value) {\n    return null;\n  } else if (typeof value === 'string') {\n    return new Date(value);\n  } else if (value instanceof Date) {\n    return value;\n  } else if (value instanceof dayjs) {\n    return value.toDate();\n  }\n};\n\n/**\n * From a simple date as '2020-01-01', returns a string like '2020-01-01T00:00:00Z'.\n */\nexport const simpleDateToISOString = (date, isEndOfDay, timezoneType) => {\n  if (!date) {\n    return null;\n  } else {\n    const isUTC = timezoneType === 'UTC';\n    const dayjsTimeMethod = isEndOfDay ? 'endOf' : 'startOf';\n    const result = isUTC ? dayjs.utc(date) : dayjs(date);\n    return result[dayjsTimeMethod]('day').toISOString();\n  }\n};\n\n/**\n * Parse `strValue` in a \"dateFrom→dateTo\" format and returns an object like { from, to, timezoneType }.\n * Each value in the object will be `undefined` if there's no filter for it.\n */\nexport const parseDateInterval = strValue => {\n  const parsedValue = strValue?.match(/^(?<from>[^→]+)(→(?<to>.+?(?=~UTC|$)))?(~(?<timezoneType>UTC))?$/);\n  if (parsedValue) {\n    const getDateIsoString = dateStr => (!dateStr || dateStr === 'all' ? undefined : dateStr);\n    return {\n      from: getDateIsoString(parsedValue.groups.from),\n      to: getDateIsoString(parsedValue.groups.to),\n      timezoneType: parsedValue.groups.timezoneType || 'local',\n    };\n  } else {\n    return { from: undefined, to: undefined, timezoneType: 'local' };\n  }\n};\n\n/**\n * Opposite of `parseDateInterval`: takes an object like {from, to, timezoneType} and returns a string\n * like \"from→to\".\n */\nexport const encodeDateInterval = interval => {\n  if (!interval || (!interval.from && !interval.to)) {\n    return '';\n  }\n\n  const encodeDate = (date, isEndOfDay) => {\n    return simpleDateToISOString(date, isEndOfDay, interval.timezoneType) || 'all';\n  };\n\n  const baseResult = `${encodeDate(interval.from, false)}→${encodeDate(interval.to, true)}`;\n  return interval.timezoneType === 'UTC' ? `${baseResult}~UTC` : baseResult;\n};\n\nexport const convertDateToApiUtc = (date, timezone) => {\n  const result = dayjs.tz(date, timezone).utc().format('YYYY-MM-DD HH:mm:ss+00');\n  // console.log('convertDateToApiUtc', date, timezone, result);\n  return result;\n};\n\nexport const convertDateFromApiUtc = (date, timezone) => {\n  const result = dayjs(date).tz(timezone).format('YYYY-MM-DD HH:mm:ss');\n  // console.log('convertDateFromApiUtc', date, timezone, result);\n  return result;\n};\n\n/**\n * Check if the date is valid while editing\n */\nexport const isValidDate = date => {\n  return date && !date.startsWith('0');\n};\n","import { defineMessages } from 'react-intl';\n\nimport { CollectiveType } from '../constants/collectives';\n\nconst TypesI18n = defineMessages({\n  [CollectiveType.ORGANIZATION]: {\n    id: 'CollectiveType.Organization',\n    defaultMessage: '{count, plural, one {Organization} other {Organizations}}',\n  },\n  [CollectiveType.USER]: {\n    id: 'CollectiveType.User',\n    defaultMessage: '{count, plural, one {User} other {Users}}',\n  },\n  [CollectiveType.COLLECTIVE]: {\n    id: 'CollectiveType.Collective',\n    defaultMessage: '{count, plural, one {Collective} other {Collectives}}',\n  },\n  [CollectiveType.EVENT]: {\n    id: 'CollectiveType.Event',\n    defaultMessage: '{count, plural, one {Event} other {Events}}',\n  },\n  [CollectiveType.PROJECT]: {\n    id: 'CollectiveType.Project',\n    defaultMessage: '{count, plural, one {Project} other {Projects}}',\n  },\n  [CollectiveType.FUND]: {\n    id: 'CollectiveType.Fund',\n    defaultMessage: '{count, plural, one {Fund} other {Funds}}',\n  },\n});\n\n/**\n * Translate a member role\n *\n * @param {object} `intl` - see `injectIntl`\n * @param {string} `type`\n */\nconst formatCollectiveType = (intl, type, count = 1) => {\n  const i18nMsg = TypesI18n[type];\n  return i18nMsg ? intl.formatMessage(i18nMsg, { count }) : type;\n};\n\nexport default formatCollectiveType;\n"],"names":["React","FormattedMessage","Container","Flex","Loading","MessageBox","Page","SignInOrJoinFree","withUser","AuthenticatedPage","loadingLoggedInUser","LoggedInUser","props","disableSignup","rootOnly","isRoot","children","pageProps","renderContent","Component","useLazyQuery","defineMessages","useIntl","CollectiveType","gqlV1","formatCollectiveType","CollectivePicker","collectivePickerSearchQuery","throttledSearch","searchFunc","variables","Messages","searchForType","id","defaultMessage","searchForType_2","searchForType_3","search","searchForUsers","getPlaceholder","intl","types","nbTypes","length","formatMessage","USER","entity","reduce","i18nParams","type","index","CollectivePickerAsync","inputId","undefined","limit","hostCollectiveIds","parentCollectiveIds","preload","filterResults","searchQuery","invitable","emptyCustomOptions","noCache","isLoading","skipGuests","includeArchived","fetchPolicy","searchCollectives","loading","data","useState","term","setTerm","collectives","filteredCollectives","placeholder","useEffect","Boolean","newTerm","trim","getCollectivePageRoute","Link","LinkCollective","collective","target","title","noTitle","isIncognito","isGuest","name","slug","getCollectiveTypeForUrl","LinkExpense","expense","parentCollectiveSlugRoute","parent","expenseId","legacyId","defineMessage","CUSTOM_OPTIONS_POSITION","getSelectFilterStyles","SELECT_STYLES","getCustomOptions","account","options","value","isCustomOption","label","childrenAccounts","totalCount","push","isHost","encodeOptions","Array","isArray","map","option","join","decodeOption","customOptions","find","split","ActivityAccountFilter","onChange","useMemo","selectedOption","isMulti","dispatchOptionsChange","COLLECTIVE","EVENT","PROJECT","FUND","TOP","event","action","ActivityDescriptionI18n","COLLECTIVE_CREATED","COLLECTIVE_EDITED","COLLECTIVE_REJECTED","ORGANIZATION_COLLECTIVE_CREATED","COLLECTIVE_CREATED_GITHUB","COLLECTIVE_APPLY","COLLECTIVE_APPROVED","COLLECTIVE_FROZEN","COLLECTIVE_UNFROZEN","COLLECTIVE_COMMENT_CREATED","UPDATE_COMMENT_CREATED","EXPENSE_COMMENT_CREATED","CONVERSATION_COMMENT_CREATED","COLLECTIVE_CONVERSATION_CREATED","COLLECTIVE_EXPENSE_CREATED","COLLECTIVE_EXPENSE_DELETED","COLLECTIVE_EXPENSE_UPDATED","COLLECTIVE_EXPENSE_REJECTED","COLLECTIVE_EXPENSE_APPROVED","COLLECTIVE_EXPENSE_UNAPPROVED","COLLECTIVE_EXPENSE_MOVED","COLLECTIVE_EXPENSE_PAID","COLLECTIVE_EXPENSE_MARKED_AS_UNPAID","COLLECTIVE_EXPENSE_MARKED_AS_SPAM","COLLECTIVE_EXPENSE_MARKED_AS_INCOMPLETE","COLLECTIVE_EXPENSE_PROCESSING","COLLECTIVE_EXPENSE_SCHEDULED_FOR_PAYMENT","COLLECTIVE_EXPENSE_ERROR","COLLECTIVE_EXPENSE_INVITE_DRAFTED","COLLECTIVE_EXPENSE_RECURRING_DRAFTED","COLLECTIVE_EXPENSE_MISSING_RECEIPT","TAXFORM_REQUEST","COLLECTIVE_MEMBER_CREATED","COLLECTIVE_MEMBER_INVITED","COLLECTIVE_CORE_MEMBER_INVITED","COLLECTIVE_CORE_MEMBER_INVITATION_DECLINED","COLLECTIVE_CORE_MEMBER_ADDED","COLLECTIVE_CORE_MEMBER_EDITED","COLLECTIVE_CORE_MEMBER_REMOVED","COLLECTIVE_TRANSACTION_CREATED","COLLECTIVE_UPDATE_CREATED","COLLECTIVE_UPDATE_PUBLISHED","COLLECTIVE_CONTACT","COLLECTIVE_VIRTUAL_CARD_ADDED","COLLECTIVE_VIRTUAL_CARD_CREATED","COLLECTIVE_VIRTUAL_CARD_MISSING_RECEIPTS","COLLECTIVE_VIRTUAL_CARD_SUSPENDED","VIRTUAL_CARD_REQUESTED","VIRTUAL_CARD_PURCHASE","VIRTUAL_CARD_CHARGE_DECLINED","CONNECTED_ACCOUNT_CREATED","SUBSCRIPTION_CANCELED","TICKET_CONFIRMED","CONTRIBUTION_REJECTED","ORDER_CANCELED_ARCHIVED_COLLECTIVE","ORDER_PROCESSING","ORDER_PROCESSING_CRYPTO","ORDER_PENDING_CONTRIBUTION_NEW","ORDER_PENDING_CONTRIBUTION_REMINDER","BACKYOURSTACK_DISPATCH_CONFIRMED","PAYMENT_FAILED","PAYMENT_CREDITCARD_CONFIRMATION","PAYMENT_CREDITCARD_EXPIRING","USER_PAYMENT_METHOD_CREATED","USER_NEW_TOKEN","USER_SIGNIN","OAUTH_APPLICATION_AUTHORIZED","USER_CHANGE_EMAIL","USER_PASSWORD_SET","TWO_FACTOR_CODE_ADDED","TWO_FACTOR_CODE_DELETED","USER_CARD_CLAIMED","USER_CARD_INVITED","ACTIVATED_COLLECTIVE_AS_HOST","ACTIVATED_COLLECTIVE_AS_INDEPENDENT","DEACTIVATED_COLLECTIVE_AS_HOST","ActivityTypeI18n","ACTIVITY_ALL","USER_CREATED","SUBSCRIPTION_ACTIVATED","SUBSCRIPTION_CONFIRMED","ORDER_THANKYOU","ORDERS_SUSPICIOUS","isIndividualAccount","ActivityTypes","StyledSelectFilter","ActivityCategories","HOST","activities","EXPENSES","ACCOUNTS","CONTRIBUTIONS","UPDATES","MEMBERS","VIRTUAL_CARDS","GIFT_CARDS","isSupportedActivityTypeFilter","allowedValues","Set","Object","keys","forEach","activity","has","getOption","activityType","getOptions","categories","_","category","values","filter","ActivityTypeFilter","styled","encodeDateInterval","PeriodFilter","Box","FilterContainer","FilterLabel","ActivityFilters","filters","getFilterProps","valueModifier","preparedValue","memo","formatMemberRole","ActivityDescription","replace","hasParent","FromAccount","fromAccount","Account","AccountType","AccountParent","Expense","msg","description","Order","order","toAccount","Host","host","CommentEntity","MemberRole","member","role","invitation","diffArrays","diffChars","diffJson","diffValues","prevValue","newValue","diff","removed","JSON","stringify","added","deepCompare","prev","next","removedKeys","key","addedKeys","changedValues","includes","changes","DiffLine","div","RemovedValue","span","AddedValue","DiffedKey","CollectiveEditedDetails","newData","previousData","fullDiff","part","ActivityDetailComponents","DETAILED_ACTIVITY_TYPES","ActivityDetails","ActivityDetailsComponent","ChevronDown","ChevronUp","themeGet","Avatar","DateTime","StyledButton","StyledLink","P","Span","MetadataContainer","DetailsContainer","ActivityListItem","showDetails","setShowDetails","isSystem","userName","individual","createdAt","gql","useQuery","useRouter","parseDateInterval","API_V2_CONTEXT","LoadingPlaceholder","MessageBoxGraphqlError","Pagination","StyledCard","activityLogQuery","ActivityLogContainer","ACTIVITY_LIMIT","getQueryVariables","accountSlug","router","routerQuery","query","offset","parseInt","period","dateFrom","from","dateTo","to","filteredAccounts","includeChildrenAccounts","includeHostedAccounts","excludeParentAccount","getChangesThatRequireUpdate","queryParams","ActivityLog","context","error","handleUpdateFilters","pathname","asPath","changesThatRequireUpdate","nodes","ActivityClasses","ACTIVITIES_UPDATES","FUND_EVENTS","REPORTS","COLLECTIVE_MONTHLY_REPORT","WEBHOOK_STRIPE_RECEIVED","WEBHOOK_PAYPAL_RECEIVED","ActivityAttribution","AUTHORED","RECEIVED","SELF","HOSTED_ACCOUNTS","CurrencyPrecision","DEFAULT","INTERVALS","oneTime","month","year","flexible","getGQLV2FrequencyFromInterval","interval","getSymbolFromCurrency","getCurrencySymbolFallback","currency","Number","toLocaleString","style","minimumFractionDigits","maximumFractionDigits","getCurrencySymbol","getPrecisionFromAmount","amount","toString","slice","graphqlAmountValueInCents","valueInCents","formatCurrency","Math","round","prototype","hasOwnProperty","call","precision","formatAmount","currencyDisplay","locale","e","formatValueAsCurrency","floatAmountToCents","floatAmount","isNaN","centsAmountToFloat","getAmountInCents","dayjs","getNextChargeDate","firstChargeDate","getDate","Date","getFullYear","getMonth","toIsoDateStr","date","day","getUTCDate","getIntervalFromContributionFrequency","input","stripTime","format","getDateFromValue","toDate","simpleDateToISOString","isEndOfDay","timezoneType","isUTC","dayjsTimeMethod","result","utc","toISOString","strValue","parsedValue","match","getDateIsoString","dateStr","groups","encodeDate","baseResult","convertDateToApiUtc","timezone","tz","convertDateFromApiUtc","isValidDate","startsWith","TypesI18n","ORGANIZATION","count","i18nMsg"],"sourceRoot":""}