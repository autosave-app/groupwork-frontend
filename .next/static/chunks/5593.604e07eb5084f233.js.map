{"version":3,"file":"static/chunks/5593.604e07eb5084f233.js","mappings":"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","sources":["webpack://_N_E/./node_modules/lodash/maxBy.js","webpack://_N_E/./components/GoalsCover.js"],"sourcesContent":["var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nfunction maxBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)\n    : undefined;\n}\n\nmodule.exports = maxBy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce, get, maxBy, sortBy, truncate } from 'lodash';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport styled, { css } from 'styled-components';\nimport { v4 as uuid } from 'uuid';\n\nimport { formatCurrency } from '../lib/currency-utils';\n\nimport Container from './Container';\nimport { fadeIn } from './StyledKeyframes';\n\nconst getProgressColor = theme => theme.colors.primary[600];\nconst getEmptyProgressColor = () => '#e2e2e2';\nconst MAX_TITLE_LENGTH = 32;\n\nconst GoalContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  text-align: right;\n  transition: width 3s;\n  height: 25px;\n  color: ${props => props.theme.colors.black[700]};\n  border-right: 1px solid\n    ${props => (props.goal.isReached ? getProgressColor(props.theme) : getEmptyProgressColor(props.theme))};\n  width: ${props => `${props.goal.progress * 100}%`};\n  z-index: ${props => (['balance', 'yearlyBudget'].includes(props.goal.slug) ? 310 : (20 - props.index) * 10)};\n  transition: ${props =>\n    !props.goal.animateProgress\n      ? 'opacity 0.3s, height 1s, padding-top 1s'\n      : 'opacity 2s, height 1s, padding-top 1s, width 2s ease-in-out;'};\n\n  .caption {\n    display: inline-block;\n    padding: 1rem 0.5rem 1rem 0.5rem;\n    font-size: 13px;\n    line-height: 15px;\n  }\n\n  .label {\n    background: rgb(245, 247, 250);\n    padding: 0;\n    line-height: 1.5;\n    font-size: 13px;\n    text-align: right;\n    color: inherit;\n    white-space: nowrap;\n  }\n\n  .amount {\n    font-weight: 500;\n  }\n\n  .interval {\n    color: #aaaeb3;\n    font-size: 10px;\n    font-weight: normal;\n  }\n\n  ${props =>\n    props.goal.isReached &&\n    css`\n      color: ${props.theme.colors.black[800]};\n    `}\n\n  ${props =>\n    props.goal.isReached &&\n    props.goal.position === 'below' &&\n    css`\n      border-top: 4px solid ${getProgressColor(props.theme)};\n    `}\n\n  ${props =>\n    props.goal.position === 'above' &&\n    css`\n      border-bottom: 4px solid ${getEmptyProgressColor(props.theme)};\n      top: auto;\n      bottom: 76px;\n\n      .caption {\n        margin-top: -5.5rem;\n      }\n    `}\n\n  ${props => {\n    if (props.goal.level === 1) {\n      if (props.goal.position === 'below') {\n        return css`\n          height: 50px;\n          padding-top: 4rem;\n          border-right-style: dotted;\n          border-right-color: ${props.theme.colors.primary[300]};\n        `;\n      } else {\n        return css`\n          height: 70px;\n        `;\n      }\n    }\n  }}\n\n  ${props => {\n    if (props.goal.isOverlapping) {\n      return css`\n        opacity: 0.2;\n      `;\n    } else {\n      return css`\n        animation: ${fadeIn} 0.3s;\n      `;\n    }\n  }}\n\n  ${props =>\n    props.goal.hidden &&\n    css`\n      opacity: 0;\n    `}\n`;\n\nconst BarContainer = styled.div`\n  position: relative;\n  width: 100%;\n  margin: 6rem auto 1rem;\n  min-height: 80px;\n\n  .withGoals {\n    margin-top: 10rem;\n  }\n\n  .max-level-above-1 {\n    margin-top: 15rem;\n  }\n\n  @media (max-width: 1400px) {\n    width: 90%;\n  }\n\n  @media (max-width: 420px) {\n    width: 95%;\n  }\n`;\n\nclass GoalsCover extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object.isRequired,\n    interpolation: PropTypes.oneOf(['linear', 'logarithm', 'auto']),\n    intl: PropTypes.object.isRequired,\n  };\n\n  static defaultProps = {\n    interpolation: 'auto',\n  };\n\n  constructor(props) {\n    super(props);\n    this.renderGoal = this.renderGoal.bind(this);\n    this.updateGoals = debounce(this.updateGoals.bind(this), 100, { maxWait: 200 });\n    this.labelsRefs = {};\n    this.messages = defineMessages({\n      'bar.balance': {\n        id: 'cover.bar.balance',\n        defaultMessage: \"Today's Balance\",\n      },\n      'bar.yearlyBudget': {\n        id: 'cover.bar.yearlyBudget',\n        defaultMessage: 'Estimated Annual Budget',\n      },\n      'bar.monthlyBudget': {\n        id: 'cover.bar.monthlyBudget',\n        defaultMessage: 'Estimated Monthly Budget',\n      },\n    });\n\n    const maxGoal = maxBy(get(props.collective, 'settings.goals', []), g => (g.title ? g.amount : 0));\n    this.currentProgress = maxGoal ? this.getMaxCurrentAchievement() / maxGoal.amount : 1.0;\n    this.interpolation = props.interpolation || get(props.collective, 'settings.goalsInterpolation', 'auto');\n    this.state = { ...this.populateGoals(true, true) };\n  }\n\n  componentDidMount() {\n    this.setState({ ...this.populateGoals(false, true), firstMount: true });\n    window.addEventListener('resize', this.updateGoals);\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.state.firstMount || this.props.collective !== oldProps.collective) {\n      this.updateGoals();\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateGoals);\n  }\n\n  updateGoals(firstMount = false) {\n    this.setState({ ...this.populateGoals(), firstMount });\n  }\n\n  /** Returns a percentage (0.0-1.0) that represent X position */\n  getTranslatedPercentage(x) {\n    const interpolation = this.props.interpolation || this.interpolation;\n    if (interpolation === 'logarithm' || (interpolation === 'auto' && this.currentProgress <= 0.3)) {\n      // See https://www.desmos.com/calculator/30pua5xx7q\n      return -1 * Math.pow(x - 1, 2) + 1;\n    }\n\n    return x;\n  }\n\n  /** Create goal object with correct defaults and store a ref for React */\n  createGoal(slug, params) {\n    this.labelsRefs[slug] = this.labelsRefs[slug] || React.createRef();\n    return {\n      precision: 0,\n      isReached: false,\n      level: 0,\n      position: 'above',\n      ...params,\n      slug,\n    };\n  }\n\n  /** Returns the main goals current progress, either max balance or annual budget */\n  getMaxCurrentAchievement() {\n    const { collective } = this.props;\n    return Math.max(get(collective, 'stats.balance'), get(collective, 'stats.yearlyBudget', 0));\n  }\n\n  /**\n   * Returns the base goals (balance, yearly budget...) without custom goals.\n   * All goals returned here have a slug prefilled.\n   */\n  getInitialGoals() {\n    const { intl, collective } = this.props;\n    const settingGoals = get(this.props.collective, 'settings.goals', []);\n    const hasMonthlyGoal = settingGoals.some(goal => goal.type === 'monthlyBudget');\n\n    // Always show current balance\n    const goals = [\n      this.createGoal('balance', {\n        animateProgress: true,\n        title: intl.formatMessage(this.messages['bar.balance']),\n        amount: get(collective, 'stats.balance'),\n        precision: 2,\n        position: 'below',\n        isReached: true,\n      }),\n    ];\n\n    // Add yearly and monthly budgets\n    if (\n      get(collective, 'stats.yearlyBudget') > 0 &&\n      get(collective, 'stats.yearlyBudget') !== get(collective, 'stats.balance')\n    ) {\n      if (hasMonthlyGoal) {\n        goals.push(\n          this.createGoal('monthlyBudget', {\n            animateProgress: true,\n            title: intl.formatMessage(this.messages['bar.monthlyBudget']),\n            amount: get(collective, 'stats.yearlyBudget') / 12,\n            precision: 0,\n            position: 'below',\n            isReached: true,\n          }),\n        );\n      } else {\n        goals.push(\n          this.createGoal('yearlyBudget', {\n            animateProgress: true,\n            title: intl.formatMessage(this.messages['bar.yearlyBudget']),\n            amount: get(collective, 'stats.yearlyBudget'),\n            precision: 0,\n            position: 'below',\n            isReached: true,\n          }),\n        );\n      }\n    }\n\n    // Animate only the most advanced one\n    if (goals.length === 2) {\n      if (goals[0].amount <= goals[1].amount) {\n        goals[0].animateProgress = false;\n      } else {\n        goals[1].animateProgress = false;\n      }\n    }\n\n    return goals;\n  }\n\n  /**\n   * Get at most `maxCustomGoalsToShow` custom goals. If goals are filtered,\n   * we make sure to always return the last one to have a complete progress bar.\n   *\n   * Also adds a unique slug to goals.\n   */\n  getCustomGoals(maxCustomGoalsToShow) {\n    const settingsGoals = get(this.props.collective, 'settings.goals', []);\n    const sortedGoals = sortBy(settingsGoals, 'amount');\n    const goals = sortedGoals.map((goal, idx) => this.createGoal(`goal-${idx}-${goal.key || uuid()}`, goal));\n\n    // No need to remove goals\n    if (goals.length <= maxCustomGoalsToShow) {\n      return goals;\n    }\n\n    // Filter goals, ensure we keep the last one\n    const lastGoal = goals[goals.length - 1];\n    if (!maxCustomGoalsToShow) {\n      return [lastGoal];\n    }\n\n    return [...goals.slice(0, maxCustomGoalsToShow - 1), lastGoal];\n  }\n\n  /**\n   * If a ref exists for this goal, get its real with. Otherwise estimate\n   * it based on its title (for initial rendering and server-side rendering)\n   */\n  getGoalLabelWidthInPx(goal) {\n    const ref = this.labelsRefs[goal.slug];\n    if (ref && ref.current) {\n      return ref.current.offsetWidth + 15; // Add a bigger hit box\n    } else if (goal.title) {\n      return Math.min(MAX_TITLE_LENGTH, goal.title.length) * 8;\n    } else {\n      // When there's no title we just show a single word - \"Goal\".\n      // 12 characters should be enough for most languages.\n      return 12 * 8;\n    }\n  }\n\n  /** Given a percent size, returns its value in pixels */\n  percentageToPx(availWidth, percentage) {\n    const progressBarPercentageWidth = availWidth > 420 ? 0.8 : 0.95;\n    const progressBarWidthInPx = availWidth * progressBarPercentageWidth;\n    return percentage * progressBarWidthInPx;\n  }\n\n  /** Given a pixels size, returns its value as a percentage of availWidth */\n  pxToPercentage(availWidth, widthInPx) {\n    return widthInPx / availWidth;\n  }\n\n  /** Returns the overlap size if any, 0 otherwise */\n  goalsOverlapInPx(availWidth, maxAmount, prevGoal, goal) {\n    if (!prevGoal) {\n      return 0;\n    }\n\n    // No overlap is possible if not at the same position or level\n    if (goal.position !== prevGoal.position || goal.level !== prevGoal.level) {\n      return 0;\n    }\n\n    // Get position and distance between the markers\n    const prevX = this.percentageToPx(availWidth, this.getTranslatedPercentage(prevGoal.amount / maxAmount));\n    const curX = this.percentageToPx(availWidth, this.getTranslatedPercentage(goal.amount / maxAmount));\n    const prevWidth = this.getGoalLabelWidthInPx(prevGoal);\n    // If goal is at the far left of the graphic, label will be moved to the right\n    const xLabelOffset = prevX - prevWidth;\n    const distance = xLabelOffset < 0 ? curX - prevX + xLabelOffset : curX - prevX;\n\n    // Calculate overlap size\n    const curWidth = this.getGoalLabelWidthInPx(goal);\n    const offset = distance - curWidth;\n    return offset < 0 ? -offset : 0;\n  }\n\n  /**\n   * Test goals position against the first previous goal on the same position / level\n   *\n   * @returns {goal, overlap}\n   */\n  overlapWithPrev(availWidth, maxAmount, prevGoals, goal) {\n    for (let i = prevGoals.length - 1; i >= 0; i--) {\n      const prevGoal = prevGoals[i];\n      if (goal.position === prevGoal.position && goal.level === prevGoal.level) {\n        return {\n          prevGoal,\n          overlap: this.goalsOverlapInPx(availWidth, maxAmount, prevGoal, goal),\n        };\n      }\n    }\n    return { prevGoal: null, overlap: 0 };\n  }\n\n  /** @returns {Object} {goals, hasCustomGoals, maxAmount, maxLevelAbove} */\n  populateGoals(isServerSide, isInitialRender) {\n    // Show only one custom goal on mobile\n    let maxLevelAbove = 0;\n    let availWidth = 700;\n    let maxCustomGoalsToShow = 10;\n    if (isServerSide) {\n      maxCustomGoalsToShow = 0;\n    } else {\n      availWidth = get(window, 'screen.availWidth') || 560;\n      if (availWidth <= 560) {\n        maxCustomGoalsToShow = 0;\n      } else if (availWidth < 728) {\n        maxCustomGoalsToShow = 1;\n      } else if (availWidth < 896) {\n        maxCustomGoalsToShow = 2;\n      } else if (availWidth < 1120) {\n        maxCustomGoalsToShow = 3;\n      }\n    }\n\n    // Get all goals sorted by amount\n    const initialGoals = this.getInitialGoals();\n    const customGoals = this.getCustomGoals(maxCustomGoalsToShow);\n    const goals = sortBy([...initialGoals, ...customGoals], 'amount');\n    const maxAmount = maxBy(goals, g => g.amount).amount;\n    const maxAchievedYet = this.getMaxCurrentAchievement();\n\n    // Set goals positions\n    for (let i = 0; i < goals.length; i++) {\n      const isLastGoal = i === goals.length - 1;\n      const goal = goals[i];\n      goal.progress = this.getTranslatedPercentage(goal.amount / maxAmount);\n      goal.isReached = goal.isReached || maxAchievedYet > goal.amount;\n      goal.hidden = false;\n\n      const prevGoals = goals.slice(0, i);\n      const overlapWithPrev = goal => this.overlapWithPrev(availWidth, maxAmount, prevGoals, goal);\n      const { prevGoal, overlap } = overlapWithPrev(goal);\n\n      // -- Overlap 😱 --\n      if (overlap > 0) {\n        // 1st strategy: we change the level by 1\n        const newLevel = Number(!prevGoal.level);\n        if (overlapWithPrev({ ...goal, level: newLevel }).overlap === 0) {\n          goal.level = newLevel;\n          if (goal.position === 'above') {\n            maxLevelAbove = Math.max(maxLevelAbove, newLevel);\n          }\n        } else {\n          // 2nd strategy: we shift by given offset, and we change opacity\n          // - of the prev goal if this is last goal, of the current otherwise\n          // Will not shift at less than 0% or more than 100%\n          if (!isLastGoal) {\n            goal.isOverlapping = true;\n            const newProgress = goal.progress + this.pxToPercentage(availWidth, overlap);\n            goal.progress = newProgress <= 1 ? newProgress : 1;\n          } else {\n            prevGoal.isOverlapping = true;\n            const newProgress = prevGoal.progress - this.pxToPercentage(availWidth, overlap);\n            prevGoal.progress = newProgress >= 0 ? newProgress : 0;\n          }\n        }\n      }\n\n      // Change progress to animate goal. Never animate the last goal as it would\n      // result in a partial progress bar for first rendering. Hide when rendered\n      // on server side to avoid getting the marker stuck while waiting for\n      // re-hydrating\n      if (goal.animateProgress && !isLastGoal) {\n        if (isServerSide) {\n          goal.hidden = true;\n        }\n        if (isInitialRender) {\n          goal.progress = 0;\n        }\n      }\n    }\n\n    return { goals, maxAmount, maxLevelAbove, hasCustomGoals: customGoals.length > 0 };\n  }\n\n  getDivTitle(title, description) {\n    if (title && description) {\n      return `${title}\\n\\n${description}`;\n    } else {\n      return title || description || '';\n    }\n  }\n\n  renderGoal(goal, index) {\n    const { collective, intl } = this.props;\n    const slug = goal.slug;\n    const amount = formatCurrency(goal.amount || 0, collective.currency, {\n      precision: goal.precision || 0,\n      locale: intl.locale,\n    });\n\n    return (\n      <GoalContainer className={`goal ${goal.slug}`} key={slug} goal={goal} index={index}>\n        <div className=\"caption\" title={this.getDivTitle(goal.title, goal.description)}>\n          <div className=\"label\" ref={this.labelsRefs[goal.slug]}>\n            {goal.title ? (\n              truncate(goal.title, { length: MAX_TITLE_LENGTH })\n            ) : (\n              <FormattedMessage id=\"ContributionType.Goal\" defaultMessage=\"Goal\" />\n            )}\n          </div>\n          <div className=\"amount\">\n            {amount}\n            {(goal.type === 'yearlyBudget' || goal.type === 'monthlyBudget') && (\n              <div className=\"interval\">\n                <FormattedMessage\n                  id=\"tier.interval\"\n                  defaultMessage=\"per {interval, select, month {month} year {year} other {}}\"\n                  values={{ interval: goal.type === 'yearlyBudget' ? 'year' : 'month' }}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </GoalContainer>\n    );\n  }\n\n  render() {\n    const { collective } = this.props;\n\n    if (!collective) {\n      return <div />;\n    }\n\n    return (\n      <BarContainer>\n        <Container\n          className={`max-level-above-${this.state.maxLevelAbove} ${this.state.hasCustomGoals ? 'withGoals' : ''}`}\n        >\n          <Container>\n            {this.state.goals &&\n              this.state.goals.map((goal, index) => {\n                return this.renderGoal(goal, index);\n              })}\n          </Container>\n        </Container>\n      </BarContainer>\n    );\n  }\n}\n\nexport default injectIntl(GoalsCover);\n"],"names":["React","defineMessages","FormattedMessage","injectIntl","styled","css","v4","uuid","formatCurrency","Container","fadeIn","getProgressColor","theme","colors","primary","getEmptyProgressColor","MAX_TITLE_LENGTH","GoalContainer","div","props","black","goal","isReached","progress","includes","slug","index","animateProgress","position","level","isOverlapping","hidden","BarContainer","GoalsCover","renderGoal","bind","updateGoals","maxWait","labelsRefs","messages","id","defaultMessage","maxGoal","collective","g","title","amount","currentProgress","getMaxCurrentAchievement","interpolation","state","populateGoals","setState","firstMount","window","addEventListener","oldProps","removeEventListener","x","Math","pow","params","createRef","precision","max","intl","settingGoals","hasMonthlyGoal","some","type","goals","createGoal","formatMessage","push","length","maxCustomGoalsToShow","settingsGoals","sortedGoals","map","idx","key","lastGoal","slice","ref","current","offsetWidth","min","availWidth","percentage","progressBarPercentageWidth","progressBarWidthInPx","widthInPx","maxAmount","prevGoal","prevX","percentageToPx","getTranslatedPercentage","curX","prevWidth","getGoalLabelWidthInPx","xLabelOffset","distance","curWidth","offset","prevGoals","i","overlap","goalsOverlapInPx","isServerSide","isInitialRender","maxLevelAbove","initialGoals","getInitialGoals","customGoals","getCustomGoals","maxAchievedYet","isLastGoal","overlapWithPrev","newLevel","Number","newProgress","pxToPercentage","hasCustomGoals","description","currency","locale","getDivTitle","interval","Component"],"sourceRoot":""}