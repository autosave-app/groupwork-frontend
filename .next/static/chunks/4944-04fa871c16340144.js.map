{"version":3,"file":"static/chunks/4944-04fa871c16340144.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;AAEA,IAAMW,oBAAoB,GAAG;EAC3BC,MAAM,EAAE,QADmB;EAE3BC,cAAc,EAAE,iBAFW;EAG3BC,IAAI,EAAE;AAHqB,CAA7B;AAMO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,QAAkD;EAAA,IAAzCC,KAAyC,QAAzCA,KAAyC;EAAA,IAAlCC,IAAkC,QAAlCA,IAAkC;EAAA,IAA5BC,MAA4B,QAA5BA,MAA4B;EAAA,IAApBC,aAAoB,QAApBA,aAAoB;EAChF,oBACE,wDAAC,iDAAD;IAAM,aAAa,EAAC,QAApB;IAAA,wBACE,uDAAC,2DAAD;MAAA;MAAkB,cAAc;QAAA;QAAA;MAAA;QAAA;QAAA;MAAA,EAAhC;MAA0D,MAAM,EAAE;QAAEH,KAAK,EAAE,oDAAMA,KAAN,EAAa,CAAb;MAAT;IAAlE,EADF,EAEGE,MAAM,iBACL;MAAA,uBACE,uDAAC,2DAAD;QAAA;QACE,cAAc;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA,EADhB;QAEE,MAAM,EAAE;UAAEA,MAAM,EAAER,oBAAoB,CAACQ,MAAD,CAApB,IAAgCA;QAA1C;MAFV;IADF,EAHJ,EAUGD,IAAI,iBACH;MAAA,uBACE,uDAAC,2DAAD;QAAA;QACE,cAAc;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA,EADhB;QAEE,MAAM,EAAE;UAAEA,IAAI,eAAE,uDAAC,0DAAD;YAAU,KAAK,EAAEA,IAAjB;YAAuB,SAAS,EAAC;UAAjC;QAAR;MAFV;IADF,EAXJ,EAkBGE,aAAa,iBACZ,wDAAC,gDAAD;MAAA,wBACE,gEADF,eAEE;QAAM,IAAI,EAAC,KAAX;QAAiB,cAAW,SAA5B;QAAA;MAAA,EAFF,uBAME,uDAAC,2DAAD;QAAA;QAAkB,cAAc;UAAA;UAAA;QAAA;MAAhC,EANF;IAAA,EAnBJ;EAAA,EADF;AA+BD,CAhCM;AAkCP,IAAMC,gBAAgB,GAAGjB,iGAAH;EAAA;EAAA;AAAA,4CAAtB;;AAKA,IAAMmB,0BAA0B,GAAG,SAA7BA,0BAA6B,QAAmF;EAAA,yBAAhFC,MAAgF;EAAA,IAAtEC,YAAsE,gBAAtEA,YAAsE;EAAA,IAAxDC,QAAwD,gBAAxDA,QAAwD;EAAA,IAA9CT,KAA8C,gBAA9CA,KAA8C;EAAA,IAAvCU,YAAuC,gBAAvCA,YAAuC;EAAA,IAAvBC,gBAAuB,SAAvBA,gBAAuB;EACpH,IAAMZ,IAAI,GAAGb,gEAAO,EAApB;EACA,oBACE,uDAAC,+DAAD;IACE,OAAO,EAAC,OADV;IAEE,sBAAsB,EAAC,QAFzB;IAGE,SAAS,EAAE,CAACsB,YAHd;IAIE,OAAO,EAAE;MAAA,OAAMV,gBAAgB,CAACC,IAAD,EAAOS,YAAP,CAAtB;IAAA,CAJX;IAAA,uBAME,wDAAC,iDAAD;MAAM,QAAQ,EAAC,QAAf;MAAwB,UAAU,EAAC,QAAnC;MAAA,wBACE,wDAAC,gBAAD;QAAA,WACG,CAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEL,aAAd,SADH,eAEE,uDAAC,sEAAD;UACE,MAAM,EAAEO,YAAF,aAAEA,YAAF,cAAEA,YAAF,GAAkBE,IAAI,CAACC,KAAL,CAAWb,KAAK,GAAG,GAAnB,CAD1B;UAEE,QAAQ,EAAES,QAFZ;UAGE,SAAS,EAAE,CAHb;UAIE,YAAY,EAAE,IAJhB;UAKE,gBAAgB,EAAEE;QALpB,EAFF;MAAA,EADF,eAWE,uDAAC,2FAAD;QAAY,IAAI,EAAC;MAAjB,EAXF;IAAA;EANF,EADF;AAsBD,CAxBD;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,yDAAeL,0BAAf;;;;;;;;;;;;;;;;;AC1FA;AACA;AAEA;;;AAEA,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAChB,KAAD,EAAQiB,eAAR,EAAyBC,eAAzB,EAA0CC,SAA1C,EAAqDC,eAArD,EAAyE;EAC/F,IAAI,CAACpB,KAAD,IAAUA,KAAK,CAACqB,MAAN,GAAeD,eAA7B,EAA8C;IAC5C,OAAOF,eAAP;EACD,CAFD,MAEO,IAAIlB,KAAK,CAACqB,MAAN,GAAeF,SAAnB,EAA8B;IACnC,OAAOF,eAAP;EACD,CAFM,MAEA;IACL,IAAMK,WAAW,GAAGH,SAAS,GAAGC,eAAhC;IACA,IAAMG,oBAAoB,GAAG,CAACvB,KAAK,CAACqB,MAAN,GAAeD,eAAhB,IAAmCE,WAAhE;IACA,IAAME,SAAS,GAAGN,eAAe,GAAGD,eAApC;IACA,IAAMQ,aAAa,GAAGD,SAAS,GAAGD,oBAAlC;IACA,OAAOX,IAAI,CAACC,KAAL,CAAWK,eAAe,GAAGO,aAA7B,CAAP;EACD;AACF,CAZD;;AAcA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASC,cAAT,EAA4B;EAC/C,IAAI,CAACA,cAAL,EAAqB;IACnB,OAAOD,MAAP;EACD,CAFD,MAEO,IAAIE,KAAK,CAACC,OAAN,CAAcH,MAAd,CAAJ,EAA2B;IAChC,OAAOA,MAAM,CAACI,GAAP,CAAW,UAAAC,KAAK;MAAA,OAAK,OAAOA,KAAP,KAAiB,QAAjB,GAA4BJ,cAAc,CAACI,KAAD,CAA1C,GAAoDA,KAAzD;IAAA,CAAhB,CAAP;EACD,CAFM,MAEA;IACL,OAAOJ,cAAc,CAACD,MAAD,CAArB;EACD;AACF,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAMM,YAAY,GAAG,SAAfA,YAAe,OASf;EAAA,IARJC,QAQI,QARJA,QAQI;EAAA,IAPJlC,KAOI,QAPJA,KAOI;EAAA,IANJiB,eAMI,QANJA,eAMI;EAAA,IALJC,eAKI,QALJA,eAKI;EAAA,IAJJC,SAII,QAJJA,SAII;EAAA,IAHJC,eAGI,QAHJA,eAGI;EAAA,IAFJe,WAEI,QAFJA,WAEI;EAAA,IADJP,cACI,QADJA,cACI;EACJ,IAAMQ,YAAY,GAAGpB,eAAe,CAAChB,KAAD,EAAQiB,eAAR,EAAyBC,eAAzB,EAA0CC,SAA1C,EAAqDC,eAArD,CAApC;EACA,IAAMO,MAAM,GAAGQ,WAAW,GAAG,CAACvB,IAAI,CAACC,KAAL,CAAWuB,YAAY,GAAGD,WAA1B,CAAD,EAAyC,IAAzC,EAA+CC,YAA/C,CAAH,GAAkEA,YAA5F;EACA,OAAOF,QAAQ,CAAC;IACdlC,KAAK,EAALA,KADc;IAEdqC,QAAQ,EAAEX,YAAY,CAACC,MAAD,EAASC,cAAT;EAFR,CAAD,CAAf;AAID,CAhBD;;AAkBAK,YAAY,CAACK,SAAb,GAAyB;EACvB;EACAtC,KAAK,EAAEc,0DAFgB;;EAGvB;EACAG,eAAe,EAAEH,qEAJM;;EAKvB;EACAI,eAAe,EAAEJ,qEANM;;EAOvB;EACAK,SAAS,EAAEL,qEARY;;EASvB;EACAM,eAAe,EAAEN,qEAVM;;EAWvB;EACAoB,QAAQ,EAAEpB,mEAZa;;EAavB;EACAc,cAAc,EAAEd,wDAdO;;EAevB;EACAqB,WAAW,EAAErB,0DAAgB0B;AAhBN,CAAzB;;AAmBA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,QAAyB;EAAA,IAAtB3C,KAAsB,SAAtBA,KAAsB;EAAA,IAAfqC,QAAe,SAAfA,QAAe;EAC7C,oBAAO,uDAAC,iDAAD;IAAM,QAAQ,YAAKA,QAAL,OAAd;IAAA,UAAkCrC;EAAlC,EAAP;AACD,CAFD;;AASAiC,YAAY,CAACW,YAAb,GAA4B;EAC1BV,QAAQ,EAAES;AADgB,CAA5B;AAIA,yDAAeV,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAEA;AAEA;AACA;AACA;;AAEA,IAAMiB,aAAa,GAAGL,yDAAa,CAAC;EAAA;EAClCM,cAAc;IAAA;IAAA;EAAA;IAAA;IAAA;EAAA;IAAA;IAAA;EAAA;IAAA;IAAA;EAAA;IAAA;IAAA;EAAA;AADoB,CAAD,CAAnC;AAIO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACrD,IAAD,EAAOE,IAAP,EAAgB;EAC/C,OAAOF,IAAI,CAACsD,aAAL,CAAmBH,aAAnB,EAAkC;IACvCI,SAAS,EAAEL,gEAAU,CAAClD,IAAI,CAACwD,UAAL,CAAgBtD,IAAhB,EAAsB;MAAEuD,SAAS,EAAE,MAAb;MAAqBC,SAAS,EAAE;IAAhC,CAAtB,CAAD,CADkB;IAEvCC,OAAO,EAAET,gEAAU,CAAClD,IAAI,CAACwD,UAAL,CAAgBtD,IAAhB,EAAsB;MAAEuD,SAAS,EAAE,MAAb;MAAqBC,SAAS,EAAE,MAAhC;MAAwCE,QAAQ,EAAE;IAAlD,CAAtB,CAAD,CAFoB;IAGvCC,OAAO,EAAE;EAH8B,CAAlC,CAAP;AAKD,CANM;AAQP;AACA;AACA;AACA;;AACA,IAAMvE,QAAQ,GAAG,SAAXA,QAAW,OAA+C;EAAA,IAA5CW,KAA4C,QAA5CA,KAA4C;EAAA,IAArCwD,SAAqC,QAArCA,SAAqC;EAAA,IAA1BC,SAA0B,QAA1BA,SAA0B;EAAA,IAAZI,KAAY;;EAC9D,IAAM9D,IAAI,GAAGb,+DAAO,EAApB;;EACA,sBAA0BH,2CAAA,EAA1B;EAAA;EAAA,IAAOgF,KAAP;EAAA,IAAcC,QAAd;;EACA,IAAM/D,IAAI,GAAGlB,0CAAA,CAAc;IAAA,OAAMgE,2EAAgB,CAAC/C,KAAD,CAAtB;EAAA,CAAd,EAA6C,CAACA,KAAD,CAA7C,CAAb;EACA,oBACE,+FACM6D,KADN;IAEE,KAAK,EAAEE,KAFT;IAGE,QAAQ,EAAE9D,IAAI,CAACiE,WAAL,EAHZ;IAIE,YAAY,EAAE;MAAA,OAAMF,QAAQ,CAACZ,iBAAiB,CAACrD,IAAD,EAAOE,IAAP,CAAlB,CAAd;IAAA,CAJhB;IAAA,uBAME,uDAAC,qDAAD;MAAe,SAAS,EAAEuD,SAA1B;MAAqC,SAAS,EAAEC,SAAhD;MAA2D,KAAK,EAAExD;IAAlE;EANF,GADF;AAUD,CAdD;;AAyBAZ,QAAQ,CAACuD,YAAT,GAAwB;EACtBY,SAAS,EAAE;AADW,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,yDAAenE,QAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;AACO,IAAMsF,KAAK,GAAG;EACnBC,WAAW,EAAE,aADM;EAEnBC,SAAS,EAAE,WAFQ;EAGnBC,QAAQ,EAAE,UAHS;EAInBC,YAAY,EAAE,cAJK;EAKnBC,gBAAgB,EAAE,kBALC;EAMnBC,YAAY,EAAE,cANK;EAOnBC,YAAY,EAAE,cAPK;EAQnBC,YAAY,EAAE,cARK;EASnBC,OAAO,EAAE;AATU,CAAd;AAYP,IAAMC,eAAe,GAAGjB,0DAAc,gNACnCO,KAAK,CAACC,WAD6B,EACf;EACnBU,EAAE,cADiB;EAEnBnC,cAAc;IAAA;IAAA;EAAA;AAFK,CADe,2LAKnCwB,KAAK,CAACG,QAL6B,EAKlB;EAChBQ,EAAE,WADc;EAEhBnC,cAAc;IAAA;IAAA;EAAA;AAFE,CALkB,2LASnCwB,KAAK,CAACI,YAT6B,EASd;EACpBO,EAAE,eADkB;EAEpBnC,cAAc;IAAA;IAAA;EAAA;AAFM,CATc,2LAanCwB,KAAK,CAACE,SAb6B,EAajB;EACjBS,EAAE,YADe;EAEjBnC,cAAc;IAAA;IAAA;EAAA;AAFG,CAbiB,2LAiBnCwB,KAAK,CAACK,gBAjB6B,EAiBV;EACxBM,EAAE,uCADsB;EAExBnC,cAAc;IAAA;IAAA;EAAA;AAFU,CAjBU,2LAqBnCwB,KAAK,CAACM,YArB6B,EAqBd;EACpBK,EAAE,gBADkB;EAEpBnC,cAAc;IAAA;IAAA;EAAA;AAFM,CArBc,2LAyBnCwB,KAAK,CAACO,YAzB6B,EAyBd;EACpBI,EAAE,wBADkB;EAEpBnC,cAAc;IAAA;IAAA;EAAA;AAFM,CAzBc,2LA6BnCwB,KAAK,CAACQ,YA7B6B,EA6Bd;EACpBG,EAAE,wBADkB;EAEpBnC,cAAc;IAAA;IAAA;EAAA;AAFM,CA7Bc,2LAiCnCwB,KAAK,CAACS,OAjC6B,EAiCnB;EACfE,EAAE,wCADa;EAEfnC,cAAc;IAAA;IAAA;EAAA;AAFC,CAjCmB,oBAAtC;AAuCA,IAAMoC,qBAAqB,GAAGnB,0DAAc,kNACzCO,KAAK,CAACC,WADmC,EACrB;EACnBU,EAAE,yBADiB;EAEnBnC,cAAc;IAAA;IAAA;EAAA;AAFK,CADqB,4LAMzCwB,KAAK,CAACG,QANmC,EAMxB;EAChBQ,EAAE,qBADc;EAEhBnC,cAAc;IAAA;IAAA;EAAA;AAFE,CANwB,4LAWzCwB,KAAK,CAACI,YAXmC,EAWpB;EACpBO,EAAE,yBADkB;EAEpBnC,cAAc;IAAA;IAAA;EAAA;AAFM,CAXoB,4LAezCwB,KAAK,CAACE,SAfmC,EAevB;EACjBS,EAAE,uBADe;EAEjBnC,cAAc;IAAA;IAAA;EAAA;IAAA;IAAA;IAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;EAAA;AAFG,CAfuB,4LAoBzCwB,KAAK,CAACK,gBApBmC,EAoBhB;EACxBM,EAAE,kDADsB;EAExBnC,cAAc;IAAA;IAAA;EAAA;AAFU,CApBgB,4LAwBzCwB,KAAK,CAACM,YAxBmC,EAwBpB;EACpBK,EAAE,wBADkB;EAEpBnC,cAAc;IAAA;IAAA;EAAA;AAFM,CAxBoB,4LA6BzCwB,KAAK,CAACO,YA7BmC,EA6BpB;EACpBI,EAAE,mCADkB;EAEpBnC,cAAc;IAAA;IAAA;EAAA;AAFM,CA7BoB,4LAiCzCwB,KAAK,CAACQ,YAjCmC,EAiCpB;EACpBG,EAAE,yCADkB;EAEpBnC,cAAc;IAAA;IAAA;EAAA;AAFM,CAjCoB,4LAqCzCwB,KAAK,CAACS,OArCmC,EAqCzB;EACfE,EAAE,oCADa;EAEfnC,cAAc;IAAA;IAAA;EAAA;AAFC,CArCyB,qBAA5C;;AA2CA,IAAMqC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,GAAG;EAAA,oBAAI,uDAAC,sDAAD;IAAM,IAAI,EAAC,aAAX;IAAA,UAA0BA;EAA1B,EAAJ;AAAA,CAAjC;;AAEA,IAAMC,iBAAiB,GAAG,2KACvBf,KAAK,CAACE,SADc,EACF;EACjB,mBAAmBW;AADF,CADE,CAAvB;;AAMA,IAAMG,cAAc,GAAGxG,mGAAH;EAAA;EAAA;AAAA,wGAIhBoF,0DAJgB,EAKhBD,gEALgB,EAMhBE,+DANgB,EAOhBC,yFAPgB,EAUPN,2EAAQ,CAAC,oBAAD,CAVD,EAWAA,2EAAQ,CAAC,oBAAD,CAXR,CAApB;AAeA;AACA;AACA;AACA;;AACA,IAAM0B,WAAW,GAAG,SAAdA,WAAc,OAAmF;EAAA,IAAhF9F,IAAgF,QAAhFA,IAAgF;EAAA,IAA1E+F,IAA0E,QAA1EA,IAA0E;EAAA,IAApErB,aAAoE,QAApEA,aAAoE;EAAA,IAArDpC,QAAqD,QAArDA,QAAqD;EAAA,IAA3CH,SAA2C,QAA3CA,QAA2C;EAAA,IAAjCqC,KAAiC,QAAjCA,KAAiC;EAAA,IAA1BwB,mBAA0B,QAA1BA,mBAA0B;EACrG,oBACE,uDAAC,+DAAD;IACE,OAAO,EAAE;MAAA,oBACP,wDAAC,2CAAD;QAAA,WACGhG,IAAI,CAACsD,aAAL,CAAmBkC,qBAAqB,CAACO,IAAD,CAAxC,EAAgDJ,iBAAiB,CAACI,IAAD,CAAjE,CADH,EAEGC,mBAFH;MAAA,EADO;IAAA,CADX;IAAA,UAQG,kBAAAlC,KAAK;MAAA,oBACJ,uDAAC,cAAD,kCAAoBA,KAApB;QAA2B,aAAa,EAAEY,aAA1C;QAAyD,KAAK,EAAEF,KAAhE;QAAuE,WAAW,EAAEA,KAApF;QAA2F,QAAQ,EAAElC,QAArG;QAAA,UACGH,SAAQ,IAAInC,IAAI,CAACsD,aAAL,CAAmBgC,eAAe,CAACS,IAAD,CAAlC;MADf,GADI;IAAA;EARR,EADF;AAgBD,CAjBD;;AAoCAD,WAAW,CAACjD,YAAZ,GAA2B;EACzB2B,KAAK,EAAE;AADkB,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,yDAAeF,iEAAU,CAACwB,WAAD,CAAzB;;;;;;;;;;;;;;;;;;;;ACjLA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA,IAAMa,yBAAyB,GAAG,SAA5BA,yBAA4B,OAAmC;EAAA,IAAhCC,SAAgC,QAAhCA,SAAgC;EAAA,IAArBC,IAAqB,QAArBA,IAAqB;EAAA,IAAfC,QAAe,QAAfA,QAAe;EACnE,IAAM9G,IAAI,GAAGb,+DAAO,EAApB;;EACA,IAAIyH,SAAJ,EAAe;IACb,oBAAO,uDAAC,oEAAD;MAAoB,MAAM,EAAE,EAA5B;MAAgC,KAAK,EAAE;IAAvC,EAAP;EACD;;EAED,QAAQC,IAAR;IACE,KAAKN,2GAAL;MACE,oBACE,wDAAC,iDAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,wBACE,uDAAC,gEAAD;UAAU,IAAI,EAAEO,QAAhB;UAA0B,KAAK,EAAC;QAAhC,EADF,eAEE,uDAAC,iDAAD;UAAM,EAAE,EAAE,CAAV;UAAA,UAAcN,6FAAqB,CAACxG,IAAD,EAAO6G,IAAP;QAAnC,EAFF;MAAA,EADF;;IAMF,KAAKN,+GAAL;MACE,oBACE,wDAAC,iDAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,wBACE,uDAAC,kFAAD;UAAY,IAAI,EAAEO,QAAlB;UAA4B,KAAK,EAAC;QAAlC,EADF,eAEE,uDAAC,iDAAD;UAAM,EAAE,EAAE,CAAV;UAAA,UAAcN,6FAAqB,CAACxG,IAAD,EAAO6G,IAAP;QAAnC,EAFF;MAAA,EADF;;IAMF,KAAKN,uGAAL;MACE,oBACE,wDAAC,iDAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,wBACE,uDAAC,4EAAD;UAAQ,IAAI,EAAEO,QAAd;UAAwB,KAAK,EAAC;QAA9B,EADF,eAEE,uDAAC,iDAAD;UAAM,EAAE,EAAE,CAAV;UAAA;QAAA,EAFF;MAAA,EADF;;IAMF,KAAKP,yGAAL;IACA,KAAKA,mHAAL;MACE,oBACE,wDAAC,iDAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,wBACE,uDAAC,4EAAD;UAAY,IAAI,EAAEO,QAAlB;UAA4B,KAAK,EAAC;QAAlC,EADF,eAEE,uDAAC,iDAAD;UAAM,EAAE,EAAE,CAAV;UAAA;QAAA,EAFF;MAAA,EADF;;IAMF;MACE,oBACE,wDAAC,iDAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,wBACE,uDAAC,qFAAD;UAAW,IAAI,EAAEA,QAAjB;UAA2B,KAAK,EAAC;QAAjC,EADF,eAEE,uDAAC,iDAAD;UAAM,EAAE,EAAE,CAAV;UAAA,UAAcN,6FAAqB,CAACxG,IAAD,EAAO6G,IAAP;QAAnC,EAFF;MAAA,EADF;EA/BJ;AAsCD,CA5CD;;AAoDAF,yBAAyB,CAAC9D,YAA1B,GAAyC;EACvCiE,QAAQ,EAAE;AAD6B,CAAzC,EAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,yDAAeH,yBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAM+B,aAAa,GAAG;EACpBC,SAAS,EAAE,KADS;EAEpBC,KAAK,EAAEC,SAFa;EAGpBC,MAAM,EAAED,SAHY;EAIpBE,OAAO,EAAEF;AAJW,CAAtB;AAOA,IAAMG,0BAA0B,GAAG3B,uBAAH,sSAAhC;;AAMA,IAAM4B,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAnF,KAAK,EAAI;EAAA;;EACvC,IAAMoF,SAAS,GAAGC,OAAO,gBAACrF,KAAK,CAACsF,IAAP,wEAAC,YAAYC,QAAb,kFAAC,qBAAsBC,YAAvB,0DAAC,sBAAoCC,MAArC,CAAzB;;EAEA,iBAAqBd,mCAAS,EAA9B;EAAA,IAAQe,QAAR,cAAQA,QAAR;;EACA,mBAA6ElC,sBAAW,CAAC0B,0BAAD,EAA6B;IACnHS,OAAO,EAAEjC,6BAAcA;EAD4F,CAA7B,CAAxF;EAAA;EAAA,IAAOkC,qBAAP;EAAA;EAAA,IAAyCC,UAAzC,kBAAgCC,OAAhC;EAAA,IAA4DC,WAA5D,kBAAqDC,KAArD;;EAGA,IAAMC,MAAM,GAAGxC,gCAAS,CAAC;IACvBmB,aAAa,kCAAOA,aAAP;MAAsBsB,UAAU,EAAElG,KAAK,CAACkG;IAAxC,EADU;IAEjBC,QAFiB,oBAERC,MAFQ,EAEA;MAAA;QAAA;;QAAA;QAAA;UAAA;YAAA;cAAA;gBACbF,UADa,GAC0BE,MAD1B,CACbF,UADa,EACDpB,KADC,GAC0BsB,MAD1B,CACDtB,KADC,EACMG,OADN,GAC0BmB,MAD1B,CACMnB,OADN,EACeD,MADf,GAC0BoB,MAD1B,CACepB,MADf;gBAAA;gBAAA,OAEfY,qBAAqB,CAAC;kBAC1BS,SAAS,EAAE;oBACTvB,KAAK,EAALA,KADS;oBAETG,OAAO,EAAPA,OAFS;oBAGTD,MAAM,EAANA,MAHS;oBAITsB,OAAO,EAAE,OAAOJ,UAAU,CAACzE,EAAlB,KAAyB,QAAzB,GAAoC;sBAAEA,EAAE,EAAEyE,UAAU,CAACzE;oBAAjB,CAApC,GAA4D;sBAAE8E,QAAQ,EAAEL,UAAU,CAACzE;oBAAvB;kBAJ5D;gBADe,CAAD,CAFN;;cAAA;gBAUrB,oBAAAzB,KAAK,CAACwG,SAAN,2EAAAxG,KAAK;gBACL0F,QAAQ,CAAC;kBACP3C,IAAI,EAAE2B,mDADC;kBAEPgC,OAAO,eAAE,oBAAC,sBAAD;oBAAkB,EAAE,+CAApB;oBAAmE,cAAc;sBAAA;sBAAA;oBAAA;kBAAjF;gBAFF,CAAD,CAAR;gBAIA,kBAAA1G,KAAK,CAAC2G,OAAN,uEAAA3G,KAAK;;cAfgB;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAgBtB,CAlBsB;IAmBvB4G,QAnBuB,oBAmBdR,MAnBc,EAmBN;MAAA;;MACf,IAAMS,MAAM,GAAG,EAAf;;MACA,IAAI,CAACT,MAAM,CAACvB,SAAZ,EAAuB;QACrBgC,MAAM,CAAChC,SAAP,GAAmB,UAAnB;MACD;;MACD,IAAI,CAACuB,MAAM,CAACnB,OAAZ,EAAqB;QACnB4B,MAAM,CAAC5B,OAAP,GAAiB,UAAjB;MACD;;MACD,IAAI,CAACmB,MAAM,CAACtB,KAAR,IAAiB,kBAAAsB,MAAM,CAACtB,KAAP,gEAAcgC,MAAd,IAAuB,EAA5C,EAAgD;QAC9CD,MAAM,CAAC/B,KAAP,GAAe,UAAf;MACD;;MACD,OAAO+B,MAAP;IACD;EA/BsB,CAAD,CAAxB;;EAkCA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;IAAA;;IACxBd,MAAM,CAACe,SAAP,CAAiB,EAAjB;IACA,mBAAAhH,KAAK,CAAC2G,OAAN,yEAAA3G,KAAK;EACN,CAHD;;EAKA,oBACE,oBAAC,2BAAD;IAAa,KAAK,EAAC,OAAnB;IAA2B,OAAO,EAAE+G,WAApC;IAAiD,SAAS;EAA1D,GAA+D/G,KAA/D;IAAA,uBACE;MAAM,QAAQ,EAAEiG,MAAM,CAACgB,YAAvB;MAAA,wBACE,oBAAC,+BAAD;QAAa,OAAO,EAAEjH,KAAK,CAAC2G,OAA5B;QAAA,uBACE,oBAAC,sBAAD;UAAkB,EAAE,uCAApB;UAA2D,cAAc;YAAA;YAAA;UAAA;QAAzE;MADF,EADF,eAIE,qBAAC,6BAAD;QAAW,EAAE,EAAE,CAAf;QAAA,wBACE,oBAAC,MAAD;UAAA,uBACE,oBAAC,sBAAD;YACE,EAAE,mDADJ;YAEE,cAAc;cAAA;cAAA;YAAA;UAFhB;QADF,EADF,EAOGvB,SAAS,iBACR,qBAAC,cAAD;UAAA,wBACE,oBAAC,uBAAD;YAAU,WAAW,EAAC,WAAtB;YAAkC,EAAE,EAAE;UAAtC,EADF,eAEE,oBAAC,MAAD;YAAG,QAAQ,EAAC,MAAZ;YAAmB,UAAU,EAAC,KAA9B;YAAoC,UAAU,EAAC,MAA/C;YAAA,uBACE,oBAAC,sBAAD;cAAkB,EAAE,8CAApB;cAAkE,cAAc;gBAAA;gBAAA;cAAA;YAAhF;UADF,EAFF,eAKE,oBAAC,gBAAD;YAAK,EAAE,EAAE,CAAT;YAAA,uBACE,oBAAC,0BAAD;cAAa,OAAO,2BAAEpF,KAAK,CAACsF,IAAN,CAAWC,QAAb,mFAAE,sBAAqBC,YAAvB,0DAAE,sBAAmCC;YAAzD;UADF,EALF;QAAA,EARJ,eAkBE,oBAAC,uBAAD;UAAU,WAAW,EAAC,WAAtB;UAAkC,EAAE,EAAE;QAAtC,EAlBF,eAmBE,oBAAC,+BAAD;UACE,aAAa,EAAC,MADhB;UAEE,KAAK,eACH,oBAAC,sBAAD;YACE,EAAE,qDADJ;YAEE,cAAc;cAAA;cAAA;YAAA;UAFhB,EAHJ;UAQE,OAAO,EAAC,QARV;UASE,KAAK,EAAEQ,MAAM,CAACiB,OAAP,CAAelC,MAAf,IAAyBiB,MAAM,CAACY,MAAP,CAAc7B,MAThD;UAUE,eAAe,EAAC,KAVlB;UAAA,UAYG,kBAAAmC,UAAU;YAAA,oBACT,oBAAC,gCAAD,kCACMA,UADN;cAEE,QAAQ,EAAC,KAFX;cAGE,IAAI,EAAC,QAHP;cAIE,EAAE,EAAC,QAJL;cAKE,QAAQ,EAAE,kBAAAhL,KAAK;gBAAA,OAAI8J,MAAM,CAACmB,aAAP,CAAqB,QAArB,EAA+BjL,KAA/B,CAAJ;cAAA,CALjB;cAME,KAAK,EAAE8J,MAAM,CAACG,MAAP,CAAcpB,MANvB;cAOE,QAAQ,EAAEa;YAPZ,GADS;UAAA;QAZb,EAnBF,eA2CE,oBAAC,+BAAD;UACE,EAAE,EAAE,CADN;UAEE,aAAa,EAAC,MAFhB;UAGE,KAAK,eAAE,oBAAC,sBAAD;YAAkB,EAAE,+CAApB;YAAmE,cAAc;cAAA;cAAA;YAAA;UAAjF,EAHT;UAIE,OAAO,EAAC,SAJV;UAKE,KAAK,EAAEI,MAAM,CAACiB,OAAP,CAAejC,OAAf,IAA0BgB,MAAM,CAACY,MAAP,CAAc5B,OALjD;UAME,eAAe,EAAC,KANlB;UAOE,gBAAgB,MAPlB;UAQE,QAAQ,MARV;UAAA,UAUG,kBAAAkC,UAAU;YAAA,oBACT,oBAAC,2BAAD,kCACMA,UADN;cAEE,IAAI,EAAC,SAFP;cAGE,EAAE,EAAC,SAHL;cAIE,QAAQ,EAAElB,MAAM,CAACoB,YAJnB;cAKE,KAAK,EAAEpB,MAAM,CAACG,MAAP,CAAcnB,OALvB;cAME,IAAI,EAAC,MANP;cAOE,QAAQ,EAAEY;YAPZ,GADS;UAAA;QAVb,EA3CF,eAiEE,oBAAC,+BAAD;UACE,EAAE,EAAE,CADN;UAEE,aAAa,EAAC,MAFhB;UAGE,KAAK,eACH,oBAAC,sBAAD;YACE,EAAE,gCADJ;YAEE,cAAc;cAAA;cAAA;YAAA;UAFhB,EAJJ;UASE,OAAO,EAAC,OATV;UAUE,KAAK,EAAEI,MAAM,CAACiB,OAAP,CAAepC,KAAf,IAAwBmB,MAAM,CAACY,MAAP,CAAc/B,KAV/C;UAWE,eAAe,EAAC,KAXlB;UAYE,gBAAgB,MAZlB;UAaE,QAAQ,MAbV;UAAA,UAeG,kBAAAqC,UAAU;YAAA,oBACT,oBAAC,6BAAD,kCACMA,UADN;cAEE,IAAI,EAAC,OAFP;cAGE,EAAE,EAAC,OAHL;cAIE,QAAQ,EAAElB,MAAM,CAACoB,YAJnB;cAKE,KAAK,EAAEpB,MAAM,CAACG,MAAP,CAActB,KALvB;cAME,QAAQ,EAAEe;YANZ,GADS;UAAA;QAfb,EAjEF,eA2FE,oBAAC,gBAAD;UAAK,EAAE,EAAE,CAAT;UAAA,uBACE,oBAAC,6BAAD;YACE,IAAI,EAAC,KADP;YAEE,KAAK,eACH,qBAAC,iBAAD;cAAM,QAAQ,EAAC,MAAf;cAAsB,UAAU,EAAC,KAAjC;cAAuC,UAAU,EAAC,MAAlD;cAAA,wBACE,oBAAC,sBAAD;gBACE,EAAE,iDADJ;gBAEE,cAAc;kBAAA;kBAAA;gBAAA;cAFhB,EADF,eAKE,oBAAC,iBAAD;gBAAM,KAAK,EAAC,WAAZ;gBAAA;cAAA,EALF;YAAA,EAHJ;YAWE,QAAQ,MAXV;YAYE,OAAO,EAAEI,MAAM,CAACG,MAAP,CAAcvB,SAZzB;YAaE,QAAQ,EAAE;cAAA,IAAGyC,OAAH,QAAGA,OAAH;cAAA,OAAiBrB,MAAM,CAACmB,aAAP,CAAqB,WAArB,EAAkCE,OAAlC,CAAjB;YAAA,CAbZ;YAcE,KAAK,EAAErB,MAAM,CAACiB,OAAP,CAAerC,SAAf,IAA4BoB,MAAM,CAACY,MAAP,CAAchC;UAdnD;QADF,EA3FF,EA6GGkB,WAAW,iBACV,oBAAC,gBAAD;UAAK,EAAE,EAAE,CAAT;UAAA,uBACE,oBAAC,yBAAD;YAAY,IAAI,EAAC,OAAjB;YAAyB,QAAQ,EAAC,MAAlC;YAAA,UACGA,WAAW,CAACW;UADf;QADF,EA9GJ;MAAA,EAJF,eAyHE,oBAAC,+BAAD;QAAa,WAAW,MAAxB;QAAA,uBACE,oBAAC,wBAAD;UAAW,OAAO,EAAC,MAAnB;UAA0B,cAAc,EAAE,CAAC,QAAD,EAAW,UAAX,CAA1C;UAAkE,QAAQ,EAAC,MAA3E;UAAA,uBACE,oBAAC,2BAAD;YACE,EAAE,EAAE,CADN;YAEE,QAAQ,EAAE,GAFZ;YAGE,WAAW,EAAE,SAHf;YAIE,WAAQ,6BAJV;YAKE,OAAO,EAAEb,UALX;YAME,IAAI,EAAC,QANP;YAOE,QAAQ,EAAE,CAACI,MAAM,CAACsB,OAPpB;YAAA,uBASE,oBAAC,sBAAD;cAAkB,EAAE,eAApB;cAAmC,cAAc;gBAAA;gBAAA;cAAA;YAAjD;UATF;QADF;MADF,EAzHF;IAAA;EADF,GADF;AA6ID,CA3LD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwNA;AACA,4EAAepC,uBAAf;;;AC7PA;AAGA;;;;AAEA,IAAMqC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAAoC;EAAA,IAAjCnJ,QAAiC,QAAjCA,QAAiC;EAAA,IAAvB6H,UAAuB,QAAvBA,UAAuB;EAAA,IAAXZ,IAAW,QAAXA,IAAW;;EAChE,sBAAkCpK,cAAA,CAAe,KAAf,CAAlC;EAAA;EAAA,IAAOuM,SAAP;EAAA,IAAkBC,YAAlB;;EACA,oBACE,qBAAC,cAAD;IAAA,WACGrJ,QAAQ,CAAC;MAAEsJ,OAAO,EAAE;QAAA,OAAMD,YAAY,CAAC,IAAD,CAAlB;MAAA;IAAX,CAAD,CADX,EAEGD,SAAS,iBAAI,oBAAC,uCAAD;MAAyB,IAAI,EAAEnC,IAA/B;MAAqC,UAAU,EAAEY,UAAjD;MAA6D,OAAO,EAAE;QAAA,OAAMwB,YAAY,CAAC,KAAD,CAAlB;MAAA;IAAtE,EAFhB;EAAA,EADF;AAMD,CARD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,qEAAeF,qBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAEA;AAEA;AACA;AACA;;AAEA,IAAMK,YAAY,GAAGvM,uEAAM,CAACwI,8DAAD,CAAN,CAAqBgE,KAArB,CAA2B;EAC9CC,UAAU,EAAE,MADkC;EAE9CC,WAAW,EAAE;AAFiC,CAA3B,CAAH;EAAA;EAAA;AAAA,oMAMN,UAAAhI,KAAK;EAAA,OAAIA,KAAK,CAACiI,MAAV;AAAA,CANC,EAOL,UAAAjI,KAAK;EAAA,OAAIA,KAAK,CAACkI,OAAV;AAAA,CAPA,EAUP,UAAAlI,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,GAAzB,CAAJ;AAAA,CAVE,EAYd,UAAArI,KAAK;EAAA,OACLA,KAAK,CAAC,eAAD,CAAL,IACA4H,gEADA,iGAKwB,UAAA5H,KAAK;IAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBE,OAAnB,CAA2B,GAA3B,CAAJ;EAAA,CAL7B,EAMwB,UAAAtI,KAAK;IAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBE,OAAnB,CAA2B,GAA3B,CAAJ;EAAA,CAN7B,EAOa,UAAAtI,KAAK;IAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBE,OAAnB,CAA2B,GAA3B,CAAJ;EAAA,CAPlB,CADK;AAAA,CAZS,EA0BM,UAAAtI,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBE,OAAnB,CAA2B,GAA3B,CAAJ;AAAA,CA1BX,EA2BL,UAAAtI,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBE,OAAnB,CAA2B,GAA3B,CAAJ;AAAA,CA3BA,CAAlB;AAkCA,IAAMC,eAAe,GAAGjN,mGAAH;EAAA;EAAA;AAAA,aACjB,UAAA0E,KAAK;EAAA,OACLA,KAAK,CAACwI,QAAN,IACAZ,gEADA,sBAEe5H,KAAK,CAACwI,QAFrB,CADK;AAAA,CADY,CAArB;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,MAAM;EAAA,OAAIA,MAAJ;AAAA,CAA9B;AAEA;AACA;AACA;;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAWhB;EAAA,IAVJC,OAUI,QAVJA,OAUI;EAAA,IATJC,QASI,QATJA,QASI;EAAA,yBARJC,QAQI;EAAA,IARJA,QAQI,8BARO,KAQP;EAAA,yBAPJC,QAOI;EAAA,IAPJA,QAOI,8BAPON,eAOP;EAAA,yBANJO,QAMI;EAAA,IANJA,QAMI,8BANOjE,SAMP;EAAA,+BALJkE,cAKI;EAAA,IALJA,cAKI,oCALalE,SAKb;EAAA,6BAJJmE,YAII;EAAA,IAJJA,YAII,kCAJW,MAIX;EAAA,8BAHJC,aAGI;EAAA,IAHJA,aAGI,mCAHY,UAGZ;EAAA,2BAFJC,UAEI;EAAA,IAFJA,UAEI,gCAFSrE,SAET;EAAA,IADDsE,SACC;;EACJ,oBACE;IAAM,WAAQ,SAAd;IAAwB,EAAE,EAAE,CAA5B;IAA+B,EAAE,EAAE,CAAnC;IAAkE,GAAG,EAAC;EAAtE,GAAgFA,SAAhF;IAAA,UACGT,OAAO,CAAC1K,GAAR,CAAY,UAAAwK,MAAM,EAAI;MACrB,IAAMY,UAAU,GAAGZ,MAAM,KAAKM,QAA9B;MACA,oBACE,uDAAC,eAAD;QAA8B,QAAQ,EAAEI,UAAxC;QAAA,uBACE,uDAAC,YAAD;UACE,mCAA0BV,MAAM,CAACa,WAAP,EAA1B,CADF;UAEE,OAAO,EAAED,UAAU,GAAGvE,SAAH,GAAe;YAAA,OAAM8D,QAAQ,CAACH,MAAD,CAAd;UAAA,CAFpC;UAGE,iBAAeY,UAHjB;UAIE,QAAQ,EAAEL,cAJZ;UAKE,QAAQ,EAAEH,QALZ;UAME,MAAM,EAAEI,YANV;UAOE,OAAO,EAAEC,aAPX;UAAA,uBASE,uDAAC,iDAAD;YAAM,UAAU,EAAC,QAAjB;YAAA,UAA2BJ,QAAQ,CAACL,MAAD;UAAnC;QATF;MADF,GAAsBA,MAAtB,CADF;IAeD,CAjBA;EADH,GADF;AAsBD,CAlCD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,yDAAeC,aAAf;;;;;GAnC+C;EAAEa,SAAS,EAAE;AAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpE/C;AAIA;;;AAEA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,OAA2C;EAAA,IAAxCvN,KAAwC,QAAxCA,KAAwC;EAAA,IAAjC0M,SAAiC,QAAjCA,QAAiC;EAAA,IAAvBc,OAAuB,QAAvBA,MAAuB;EAAA,IAAZ3J,KAAY;;EACvE,oBACE,uDAAC,kEAAD;IACE,MAAM,EAAC,GADT;IAEE,IAAI,EAAC,QAFP;IAGE,GAAG,EAAC,GAHN;IAIE,GAAG,EAAC,KAJN;IAKE,WAAW,EAAE;MAAEU,KAAK,EAAE;IAAT,CALf;IAME,UAAU,EAAC,QANb;IAOE,QAAQ,EAAE,GAPZ;IAQE,IAAI,EAAC;EARP,GASMV,KATN;IAUE,KAAK,EAAE4J,KAAK,CAACzN,KAAD,CAAL,GAAe,EAAf,GAAoBA,KAV7B;IAWE,QAAQ,EAAE,kBAAA0N,CAAC;MAAA,OAAIhB,SAAQ,CAACiB,UAAU,CAACD,CAAC,CAACE,MAAF,CAAS5N,KAAV,CAAX,CAAZ;IAAA,CAXb;IAYE,MAAM,EAAE,gBAAA0N,CAAC,EAAI;MACX,IAAMG,QAAQ,GAAG,oDAAM,oDAAMF,UAAU,CAACD,CAAC,CAACE,MAAF,CAAS5N,KAAV,CAAhB,EAAkC,CAAlC,CAAN,EAA4C,CAA5C,EAA+C,GAA/C,CAAjB;;MACA0M,SAAQ,CAACe,KAAK,CAACI,QAAD,CAAL,GAAkB7N,KAAlB,GAA0B6N,QAA3B,CAAR;;MACA,IAAIL,OAAJ,EAAY;QACVA,OAAM,CAACE,CAAD,CAAN;MACD;IACF;EAlBH,GADF;AAsBD,CAvBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,yDAAeH,qBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AAEA,IAAMkB,OAAO,GAAGtP,wEAAM,CAAC6O,gFAAD,CAAT;EAAA;EAAA;AAAA,yBAAb;AAIO,IAAMU,OAAO,GAAGvP,wEAAM,CAACqP,4DAAD,CAAN,CAAkB7C,KAAlB,CAAwB;EAC7CgD,OAAO,EAAE,eADoC;EAE7CC,QAAQ,EAAE;AAFmC,CAAxB,CAAH;EAAA;EAAA;AAAA,iVAQE,UAAA/K,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmB4C,KAAnB,CAAyBC,IAA7B;AAAA,CARP,EASF,UAAAjL,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,GAAzB,CAAJ;AAAA,CATH,EAUT,UAAArI,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,GAAzB,CAAJ;AAAA,CAVI,EAgBM,UAAArI,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmB4C,KAAnB,CAAyBC,IAA7B;AAAA,CAhBX,EAiBE,UAAAjL,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmB8C,IAAnB,CAAwB,GAAxB,CAAJ;AAAA,CAjBP,EAmBH,UAAAlL,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmB8C,IAAnB,CAAwB,GAAxB,CAAJ;AAAA,CAnBF,EA8BhB,UAAAlL,KAAK;EAAA,OACLA,KAAK,CAACmL,MAAN,IACAvD,iEADA,0EAEsB,UAAA5H,KAAK;IAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmB8C,IAAnB,CAAwB,EAAxB,CAAJ;EAAA,CAF3B,EAGkB,UAAAlL,KAAK;IAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmB8C,IAAnB,CAAwB,GAAxB,CAAJ;EAAA,CAHvB,EAKa,UAAAlL,KAAK;IAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmB8C,IAAnB,CAAwB,GAAxB,CAAJ;EAAA,CALlB,EAOW,UAAAlL,KAAK;IAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,GAAzB,CAAJ;EAAA,CAPhB,CADK;AAAA,CA9BW,CAAb;AA0CP,IAAM+C,KAAK,GAAG9P,sGAAH;EAAA;EAAA;AAAA,qHAQE,UAAA0E,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,GAAzB,CAAJ;AAAA,CARP,CAAX;AAYA,IAAMiD,YAAY,GAAGhQ,wEAAM,CAACI,gDAAD,CAAT;EAAA;EAAA;AAAA,0HAMa,UAAAsE,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,GAAzB,CAAJ;AAAA,CANlB,CAAlB;AAUA,IAAMkD,UAAU,GAAGjQ,wEAAM,CAACK,iDAAD,CAAT;EAAA;EAAA;AAAA,wGAIY,UAAAqE,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,GAAzB,CAAJ;AAAA,CAJjB,CAAhB;AAQA,IAAMmD,eAAe,GAAGlQ,wGAAH;EAAA;EAAA;AAAA,iJAArB;AAYA,IAAMoQ,YAAY,GAAGpQ,wEAAM,CAACkQ,eAAD,CAAT;EAAA;EAAA;AAAA,mEAEL,UAAAxL,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmB8C,IAAnB,CAAwB,GAAxB,CAAJ;AAAA,CAFA,EAKH,UAAAlL,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmB8C,IAAnB,CAAwB,GAAxB,CAAJ;AAAA,CALF,CAAlB;AAUA,IAAMS,eAAe,GAAGrQ,wEAAM,CAACkQ,eAAD,CAAT;EAAA;EAAA;AAAA,wCACV,UAAAxL,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,GAAzB,CAAJ;AAAA,CADK,EAGR,UAAArI,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,GAAzB,CAAJ;AAAA,CAHG,CAArB;AAOA,IAAMuD,QAAQ,GAAGrL,2DAAc,CAAC;EAC9BsL,WAAW,EAAE;IACXpK,EAAE,+BADS;IAEXnC,cAAc;MAAA;MAAA;IAAA;EAFH,CADiB;EAK9BwM,SAAS,EAAE;IACTrK,EAAE,6BADO;IAETnC,cAAc;MAAA;MAAA;IAAA;EAFL,CALmB;EAS9ByM,QAAQ,EAAE;IACRtK,EAAE,4BADM;IAERnC,cAAc;MAAA;MAAA;IAAA;EAFN;AAToB,CAAD,CAA/B;;AAeA,IAAM0M,UAAU,GAAG,SAAbA,UAAa,CAAAC,IAAI,EAAI;EACzB,IAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACzO,MAAnB,EAA2B;IACzB,OAAO,EAAP;EACD,CAFD,MAEO;IACL,OAAOyO,IAAI,CAAC/N,GAAL,CAAS,UAAAgO,GAAG;MAAA,OAAK;QAAEC,KAAK,EAAED,GAAT;QAAc/P,KAAK,EAAE+P;MAArB,CAAL;IAAA,CAAZ,CAAP;EACD;AACF,CAND;;AAQA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,OAA6F;EAAA;;EAAA,IAA1FC,aAA0F,QAA1FA,aAA0F;EAAA,IAA3ElQ,KAA2E,QAA3EA,KAA2E;EAAA,IAApE0M,QAAoE,QAApEA,QAAoE;EAAA,IAA1DyD,iBAA0D,QAA1DA,iBAA0D;EAAA,IAAvCC,YAAuC,QAAvCA,YAAuC;EAAA,IAAzBzD,QAAyB,QAAzBA,QAAyB;EAAA,IAAZ9I,KAAY;;EACnH,eAA0B3E,gEAAO,EAAjC;EAAA,IAAQmE,aAAR,YAAQA,aAAR;;EACA,IAAMgN,QAAQ,GAAGtR,yCAAA,EAAjB;EACA,IAAMwR,UAAU,GAAGxR,yCAAA,EAAnB;EACA,IAAMyR,WAAW,GAAGzR,yCAAA,EAApB;;EACA,sBAA0BA,2CAAA,CAAe,KAAf,CAA1B;EAAA;EAAA,IAAO0R,MAAP;EAAA,IAAeC,OAAf;;EACA,uBAAwB3R,2CAAA,CAAe8Q,UAAU,CAAC7P,KAAK,IAAIoQ,YAAV,CAAzB,CAAxB;EAAA;EAAA,IAAON,IAAP;EAAA,IAAaa,OAAb;;EACA,uBAAoC5R,2CAAA,CAAe,EAAf,CAApC;EAAA;EAAA,IAAO6R,UAAP;EAAA,IAAmBC,aAAnB;;EACA,IAAMC,sBAAsB,GAAGZ,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAE3D,MAAf,CAAsB,UAAAwE,EAAE;IAAA,OAAI,CAACjB,IAAI,CAACkB,IAAL,CAAU,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAACjR,KAAF,KAAY+Q,EAAhB;IAAA,CAAX,CAAL;EAAA,CAAxB,CAA/B;EAEA,IAAMnG,WAAW,GAAG7L,8CAAA,CAAkB,YAAM;IAC1C,IAAI0R,MAAJ,EAAY;MACVC,OAAO,CAAC,KAAD,CAAP;IACD;EACF,CAJmB,EAIjB,CAACD,MAAD,CAJiB,CAApB;;EAMA,IAAMU,MAAM,GAAG,SAATA,MAAS,CAAApB,GAAG,EAAI;IACpB,IAAMqB,OAAO,GAAG,yOAAWtB,IAAX,IAAiB;MAAEE,KAAK,EAAED,GAAG,CAAC3C,WAAJ,EAAT;MAA4BpN,KAAK,EAAE+P,GAAG,CAAC3C,WAAJ;IAAnC,CAAjB,IAA0E,OAA1E,CAAhB;;IACAuD,OAAO,CAACS,OAAD,CAAP;IACA1E,QAAQ,CAAC0E,OAAD,CAAR;EACD,CAJD;;EAMA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;IAC9B,IAAIZ,MAAJ,EAAY;MACV7F,WAAW;IACZ,CAFD,MAEO;MACL8F,OAAO,CAAC,IAAD,CAAP;MACAY,UAAU,CAAC;QAAA;;QAAA,OAAMjB,QAAN,aAAMA,QAAN,4CAAMA,QAAQ,CAAEkB,OAAhB,sDAAM,kBAAmBC,KAAnB,EAAN;MAAA,CAAD,EAAmC,EAAnC,CAAV;IACD;EACF,CAPD;;EASA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAC1B,GAAD,EAAM2B,MAAN,EAAiB;IACjC,IAAMC,WAAW,GAAG7B,IAAI,CAACvD,MAAL,CAAY,UAAAqF,CAAC;MAAA,OAAIA,CAAC,CAAC5R,KAAF,KAAY+P,GAAhB;IAAA,CAAb,CAApB;IACAY,OAAO,CAACgB,WAAD,CAAP;;IACA,IAAID,MAAJ,EAAY;MACVhF,QAAQ,CAACiF,WAAD,CAAR;IACD;EACF,CAND,CA/BmH,CAuCnH;;;EACAvD,6EAAa,CAACmC,UAAD,EAAa,UAAAsB,OAAO,EAAI;IACnC,IAAIA,OAAJ,EAAa;MACXjH,WAAW;IACZ;EACF,CAJY,CAAb,CAxCmH,CA8CnH;;EACAyD,+EAAc,CAAC;IAAEyD,QAAQ,EAAElH,WAAZ;IAAyBmH,QAAQ,EAAEzD,2EAAUA;EAA7C,CAAD,CAAd;EAEA,oBACE,wDAAC,4DAAD;IAAA,uBACE,yDAAC,iDAAD;MAAM,GAAG,EAAEiC,UAAX;MAAuB,QAAQ,EAAC,MAAhC;MAAA,oBACIJ,iBAAiB,GAAGL,IAAH,GAAUD,UAAU,CAAC7P,KAAD,CADzC,0CACG,MAAgD+B,GAAhD,CAAoD,UAAAgO,GAAG;QAAA,oBACtD,wDAAC,4DAAD;UAEE,OAAO,EAAC,eAFV;UAGE,EAAE,EAAC,KAHL;UAIE,EAAE,EAAC,KAJL;UAKE,KAAK,EAAEpD,QAAQ,GAAG,WAAH,GAAiB,WALlC;UAME,gBAAgB,EAAE;YAChBnB,OAAO,EAAE;cAAA,OAAMiG,SAAS,CAAC1B,GAAG,CAAC/P,KAAL,EAAY,IAAZ,CAAf;YAAA,CADO;YAEhB2M,QAAQ,EAARA;UAFgB,CANpB;UAAA,UAWGoD,GAAG,CAACC;QAXP,GACOD,GAAG,CAAC/P,KADX,CADsD;MAAA,CAAvD,CADH,eAgBE,wDAAC,6DAAD;QAAA,UACG;UAAA,IAAGgS,GAAH,SAAGA,GAAH;UAAA,oBACC,wDAAC,iDAAD;YAAM,GAAG,EAAEA,GAAX;YAAA,uBACE,yDAAC,OAAD;cACE,WAAQ,wBADV;cAEE,MAAM,EAAEvB,MAFV;cAGE,OAAO,EAAEY,iBAHX;cAIE,QAAQ,EAAE1E,QAJZ;cAKE,SAAS,EAAE,mBAAAe,CAAC,EAAI;gBACd,IAAIA,CAAC,CAACuE,GAAF,KAAU,GAAd,EAAmB;kBACjBvE,CAAC,CAACwE,cAAF;kBACAb,iBAAiB;gBAClB;cACF,CAVH;cAAA,wBAYE,wDAAC,OAAD;gBAAS,IAAI,EAAC;cAAd,EAZF,EAY0B,GAZ1B,EAaG,CAAAvB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEzO,MAAN,IAAe,CAAf,GAAmBgC,aAAa,CAACoM,QAAQ,CAACE,SAAV,CAAhC,GAAuDtM,aAAa,CAACoM,QAAQ,CAACG,QAAV,CAbvE;YAAA;UADF,EADD;QAAA;MADH,EAhBF,EAqCGa,MAAM,iBACL,wDAAC,0DAAD;QAAQ,SAAS,EAAC,QAAlB;QAAA,UACG;UAAA,IAAG0B,SAAH,SAAGA,SAAH;UAAA,IAAcH,GAAd,SAAcA,GAAd;UAAA,IAAmBI,KAAnB,SAAmBA,KAAnB;UAAA,oBACC;YACE,kBAAgBD,SADlB;YAEE,GAAG,EAAEH,GAFP;YAGE,KAAK,kCACAI,KADA;cAEHC,MAAM,EAAE;YAFL,EAHP;YAAA,uBAQE,yDAAC,4DAAD;cACE,CAAC,EAAE,CADL;cAEE,QAAQ,EAAC,MAFX;cAGE,SAAS,EAAC;YAHZ,GAIMxO,KAJN;cAKE,GAAG,EAAE2M,WALP;cAME,SAAS,EAAC,sBANZ;cAAA,wBAQE,yDAAC,YAAD;gBAAc,KAAK,EAAC,WAApB;gBAAA,wBACE,wDAAC,OAAD;kBAAS,IAAI,EAAC;gBAAd,EADF,eAEE,wDAAC,KAAD;kBACE,WAAQ,yBADV;kBAEE,QAAQ,EAAE7D,QAFZ;kBAGE,WAAW,EAAEtJ,aAAa,CAACoM,QAAQ,CAACC,WAAV,CAH5B;kBAIE,GAAG,EAAEW,QAJP;kBAKE,KAAK,EAAEO,UALT;kBAME,QAAQ,EAAE,kBAAAlD,CAAC;oBAAA,OAAImD,aAAa,CAACnD,CAAC,CAACE,MAAF,CAAS5N,KAAV,CAAjB;kBAAA,CANb;kBAOE,MAAM,EAAE,kBAAM;oBACZ,IAAI,EAAC8Q,sBAAD,aAACA,sBAAD,eAACA,sBAAsB,CAAEzP,MAAzB,CAAJ,EAAqC;sBACnCuJ,WAAW;oBACZ;kBACF,CAXH;kBAYE,UAAU,EAAE,oBAAA8C,CAAC,EAAI;oBACf,IAAIA,CAAC,CAACuE,GAAF,KAAU,OAAd,EAAuB;sBACrBvE,CAAC,CAACwE,cAAF;sBACA,IAAMI,MAAM,GAAG5E,CAAC,CAACE,MAAF,CAAS5N,KAAT,CAAeuS,IAAf,EAAf;;sBACA,IAAI,CAACD,MAAL,EAAa;wBACX;sBACD;;sBAEDnB,MAAM,CAACmB,MAAD,CAAN;sBACAzB,aAAa,CAAC,EAAD,CAAb;;sBACA,IAAI,CAACV,iBAAL,EAAwB;wBACtB;wBACAqC,qBAAqB,CAAC;0BAAA;;0BAAA,+BAAMhC,WAAW,CAACe,OAAlB,yDAAM,qBAAqBkB,QAArB,CAA8B,CAA9B,EAAiCC,MAAM,CAACC,gBAAxC,CAAN;wBAAA,CAAD,EAAkE,EAAlE,CAArB;sBACD;oBACF;kBACF;gBA3BH,EAFF;cAAA,EARF,EAwCG,CAAC,CAAAzC,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAE7O,MAAf,MAAyByO,IAAzB,aAAyBA,IAAzB,uBAAyBA,IAAI,CAAEzO,MAA/B,CAAD,IAA0C,CAA1C,iBACC,yDAAC,gDAAD;gBAAK,QAAQ,EAAC,GAAd;gBAAA,WACG,EAACyP,sBAAD,aAACA,sBAAD,eAACA,sBAAsB,CAAEzP,MAAzB,IACG,IADH,GAEGyP,sBAAsB,CAAC/O,GAAvB,CAA2B,UAAAgP,EAAE;kBAAA,oBAC3B,yDAAC,UAAD;oBAAqB,EAAE,EAAC,MAAxB;oBAA+B,EAAE,EAAC,KAAlC;oBAAwC,eAAe,EAAC,SAAxD;oBAAA,wBACE,wDAAC,4DAAD;sBAAW,IAAI,EAAC,MAAhB;sBAAuB,OAAO,EAAC,eAA/B;sBAAA,UACGA;oBADH,EADF,eAIE,wDAAC,YAAD;sBACE,sDAA6CA,EAA7C,CADF;sBAEE,QAAQ,EAAEpE,QAFZ;sBAGE,OAAO,EAAE,mBAAM;wBACbwE,MAAM,CAACJ,EAAD,CAAN,CADa,CAEb;;wBACAO,UAAU,CAAC;0BAAA;;0BAAA,OAAMjB,QAAN,aAAMA,QAAN,6CAAMA,QAAQ,CAAEkB,OAAhB,uDAAM,mBAAmBC,KAAnB,EAAN;wBAAA,CAAD,EAAmC,EAAnC,CAAV;sBACD,CAPH;sBAQE,MAAM,EAAE,kBAAM;wBACZ,IAAIT,EAAE,KAAKb,aAAa,CAACA,aAAa,CAAC7O,MAAd,GAAuB,CAAxB,CAAxB,EAAoD;0BAClDgQ,iBAAiB;wBAClB;sBACF,CAZH;sBAAA,uBAcE,wDAAC,uEAAD;wBAAM,IAAI,EAAC;sBAAX;oBAdF,EAJF;kBAAA,GAAiBN,EAAjB,CAD2B;gBAAA,CAA7B,CAHN,EA0BG,CAACZ,iBAAD,IACCL,IAAI,CAAC/N,GAAL,CAAS,UAAAgO,GAAG;kBAAA,oBACV,yDAAC,UAAD;oBAA4B,EAAE,EAAC,MAA/B;oBAAsC,EAAE,EAAC,KAAzC;oBAA+C,SAAS,MAAxD;oBAAA,wBACE,wDAAC,4DAAD;sBAAW,OAAO,EAAC,eAAnB;sBAAA,UAAoCA,GAAG,CAACC;oBAAxC,EADF,eAEE,wDAAC,eAAD;sBACE,8CAAqCD,GAAG,CAAC/P,KAAzC,CADF;sBAEE,QAAQ,EAAE2M,QAFZ;sBAGE,OAAO,EAAE,mBAAM;wBACb8E,SAAS,CAAC1B,GAAG,CAAC/P,KAAL,CAAT;sBACD,CALH;sBAAA,uBAOE,wDAAC,yEAAD;wBAAO,IAAI,EAAC;sBAAZ;oBAPF,EAFF;kBAAA,GAAiB+P,GAAG,CAAC/P,KAArB,CADU;gBAAA,CAAZ,CA3BJ;cAAA,EAzCJ;YAAA;UARF,EADD;QAAA;MADH,EAtCJ;IAAA;EADF,EADF;AA8ID,CA/LD;;AA2MAiQ,eAAe,CAACrN,YAAhB,GAA+B;EAC7BgQ,SAAS,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,MAAf,CADkB;EAE7BC,QAAQ,EAAE,OAFmB;EAG7B1C,iBAAiB,EAAE;AAHU,CAA/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,sEAAepR,uCAAA,CAAWkR,eAAX,CAAf;;;;;;;;;;;;;;;;;;;;;;AClWA;AAGA;;AAEO,IAAM+C,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,eAAe;EAAA,uCAC9CA,eAAe,IAAI,IAD2B;IAElDC,OAAO,EAAE,iBAACC,UAAD,EAAaC,KAAb,EAAuB;MAC9B,IAAMC,MAAM,iDACPF,UADO;QAEVG,UAAU,EAAE,SAFF;QAGVC,YAAY,EAAE,GAHJ;QAIVxH,OAAO,EAAE,OAJC;QAKVyH,UAAU,EAAE,GALF;QAMVlP,WAAW,EAAE;MANH,GAON,CAAA2O,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEC,OAAjB,KAA4B,IAPtB;QAQV,WAAW;UACT5O,WAAW,EAAE;QADJ;MARD,EAAZ;;MAaA,IAAI8O,KAAK,CAACK,SAAV,EAAqB;QACnBJ,MAAM,CAACC,UAAP,GAAoB,OAApB;QACAD,MAAM,CAACK,SAAP,GAAmB,iBAAnB;MACD;;MAED,OAAOL,MAAP;IACD;EAtBiD;AAAA,CAA7C;AAyBP;AACA;AACA;AACA;;AACO,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA9P,KAAK,EAAI;EACzC,IAAMwP,MAAM,GAAGtU,0CAAA,CAAc;IAAA,OAAMiU,qBAAqB,CAACnP,KAAK,CAACwP,MAAP,CAA3B;EAAA,CAAd,EAAyD,CAACxP,KAAK,CAACwP,MAAP,CAAzD,CAAf;EACA,oBACE,uDAAC,+DAAD;IAAc,QAAQ,EAAE,EAAxB;IAA4B,QAAQ,EAAC,MAArC;IAA4C,UAAU,EAAC,MAAvD;IAA8D,YAAY,EAAE;EAA5E,GAAuFxP,KAAvF;IAA8F,MAAM,EAAEwP;EAAtG,GADF;AAGD,CALM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCP;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAMS,eAAe,GAAG1M,qEAAH,qfAArB;AAeA;AACA;AACA;;AACA,IAAM2M,aAAa,GAAG,SAAhBA,aAAgB,OAAuC;EAAA,IAApCC,OAAoC,QAApCA,OAAoC;EAAA,IAA3BC,KAA2B,QAA3BA,KAA2B;EAAA,IAApB/D,aAAoB,QAApBA,aAAoB;;EAC3D,mBAA+B7I,4DAAW,CAACyM,eAAD,EAAkB;IAAEtK,OAAO,EAAEjC,yEAAcA;EAAzB,CAAlB,CAA1C;EAAA;EAAA,IAAOoJ,OAAP;EAAA,IAAkBhH,OAAlB,oBAAkBA,OAAlB;;EACA,IAAMuK,OAAO,GAAG,CAAAF,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAElE,IAAT,MAAiBmE,KAAjB,aAAiBA,KAAjB,uBAAiBA,KAAK,CAAEnE,IAAxB,CAAhB;;EACA,iBAAqBtH,oEAAS,EAA9B;EAAA,IAAQe,QAAR,cAAQA,QAAR;;EACA,IAAMxJ,IAAI,GAAGb,gEAAO,EAApB;EACA,oBACE,wDAAC,kEAAD;IACE,QAAQ,EAAEyK,OADZ;IAEE,KAAK,EAAEuK,OAFT;IAGE,aAAa,EAAEhE,aAHjB;IAIE,QAAQ;MAAA,0WAAE,iBAAMJ,IAAN;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAEAqE,gBAFA,GAEmBH,OAAO,GAAG;kBAAEA,OAAO,EAAE;oBAAE1O,EAAE,EAAE0O,OAAO,CAAC1O;kBAAd;gBAAX,CAAH,GAAqC;kBAAE2O,KAAK,EAAE;oBAAE3O,EAAE,EAAE2O,KAAK,CAAC3O;kBAAZ;gBAAT,CAF/D;gBAAA;gBAAA,OAGAqL,OAAO,CAAC;kBAAEzG,SAAS,kCAAOiK,gBAAP;oBAAyBrE,IAAI,EAAEA,IAAI,CAAC/N,GAAL,CAAS,UAAAgO,GAAG;sBAAA,OAAIA,GAAG,CAAC/P,KAAR;oBAAA,CAAZ;kBAA/B;gBAAX,CAAD,CAHP;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAKNuJ,QAAQ,CAAC;kBAAE3C,IAAI,EAAE2B,gFAAR;kBAA0BgC,OAAO,EAAEqJ,2EAAoB,CAAC7T,IAAD;gBAAvD,CAAD,CAAR;;cALM;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAF;;MAAA;QAAA;MAAA;IAAA;EAJV,EADF;AAeD,CApBD;;AAwCA,IAAMsU,GAAG,GAAGlV,wEAAM,CAACqP,4DAAD,CAAN,CAAkB7C,KAAlB,CAAwB;EAClC2I,EAAE,EAAE,KAD8B;EAElCC,EAAE,EAAE,KAF8B;EAGlC5F,OAAO,EAAE;AAHyB,CAAxB,CAAH;EAAA;EAAA;AAAA,QAAT;;AAMA,IAAM6F,IAAI,GAAG,SAAPA,IAAO,QAAuG;EAAA,IAApGR,OAAoG,SAApGA,OAAoG;EAAA,IAA3FC,KAA2F,SAA3FA,KAA2F;EAAA,IAApFtN,SAAoF,SAApFA,SAAoF;EAAA,IAAzE8N,KAAyE,SAAzEA,KAAyE;EAAA,IAAlEC,WAAkE,SAAlEA,WAAkE;EAAA,IAArDxS,QAAqD,SAArDA,QAAqD;EAAA,IAA3CyS,OAA2C,SAA3CA,OAA2C;EAAA,IAAlCzE,aAAkC,SAAlCA,aAAkC;EAAA,IAAnB0E,YAAmB,SAAnBA,YAAmB;EAClH,IAAM7U,IAAI,GAAGb,gEAAO,EAApB;EACA,IAAMgV,OAAO,GAAG,CAAAF,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAElE,IAAT,MAAiBmE,KAAjB,aAAiBA,KAAjB,uBAAiBA,KAAK,CAAEnE,IAAxB,CAAhB;;EAEA,IAAM+E,SAAS,GAAG,SAAZA,SAAY,QAAoB;IAAA,IAAjB9E,GAAiB,SAAjBA,GAAiB;IAAA,IAAZC,KAAY,SAAZA,KAAY;IACpC,IAAM8E,aAAa,GAAG,CAAAJ,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAG3E,GAAH,CAAX,KAAsB,EAA5C;;IAEA,IAAMgF,WAAW,gBACf,wDAAC,GAAD;MAAe,WAAQ;IAAvB,GAAyCD,aAAzC;MAAA,UACG9E,KADH,aACGA,KADH,cACGA,KADH,GACYD;IADZ,IAAUA,GAAV,CADF;;IAMA,OAAO7N,QAAQ,GAAGA,QAAQ,CAAC;MAAE+P,GAAG,EAAElC,GAAP;MAAYA,GAAG,EAAHA,GAAZ;MAAiBgF,WAAW,EAAXA,WAAjB;MAA8BlR,KAAK,EAAEiR;IAArC,CAAD,CAAX,GAAoEC,WAAnF;EACD,CAVD;;EAWA,oBACE,yDAAC,iDAAD;IAAM,QAAQ,EAAC,MAAf;IAAsB,UAAU,EAAC,YAAjC;IAAA,WACG,CAAAf,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEpN,IAAT,kBAAiB,wDAAC,yEAAD;MAAgB,IAAI,EAAEoN,OAAO,CAACpN,IAA9B;MAAoC,QAAQ,EAAEoN,OAAO,CAAC5J,QAAtD;MAAgE,SAAS,EAAEzD;IAA3E,EADpB,EAGGgO,OAAO,gBACN,wDAAC,aAAD;MAAe,OAAO,EAAEX,OAAxB;MAAiC,KAAK,EAAEC,KAAxC;MAA+C,aAAa,EAAE/D;IAA9D,EADM,GAGNgE,OAAO,iBACL,yDAAC,2CAAD;MAAA,WACGA,OAAO,CAACc,KAAR,CAAc,CAAd,EAAiBP,KAAjB,EAAwB1S,GAAxB,CAA4B,UAAAgO,GAAG;QAAA,OAAI8E,SAAS,CAAC;UAAE9E,GAAG,EAAHA;QAAF,CAAD,CAAb;MAAA,CAA/B,CADH,EAEG6E,YAAY,IACXC,SAAS,CAAC;QACR9E,GAAG,EAAE,UADG;QAERC,KAAK,EAAEjQ,IAAI,CAACsD,aAAL,CAAmBR,0DAAa,CAAC;UAAA;UAAEM,cAAc;YAAA;YAAA;UAAA;QAAhB,CAAD,CAAhC;MAFC,CAAD,CAHb,EAQG+Q,OAAO,CAAC7S,MAAR,GAAiBoT,KAAjB,iBACC,wDAAC,GAAD;QAAK,KAAK,EAAC,WAAX;QAAuB,KAAK,EAAEP,OAAO,CAACc,KAAR,CAAcP,KAAd,EAAqBQ,IAArB,CAA0B,IAA1B,CAA9B;QAAA,uBACE,wDAAC,4DAAD;UACE,EAAE,sBADJ;UAEE,cAAc;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA,EAFhB;UAGE,MAAM,EAAE;YAAEC,KAAK,EAAEhB,OAAO,CAAC7S,MAAR,GAAiBoT;UAA1B;QAHV;MADF,EATJ;IAAA,EAPN;EAAA,EADF;AA8BD,CA7CD;;AA6EAD,IAAI,CAAC5R,YAAL,GAAoB;EAClB6R,KAAK,EAAE;AADW,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,yDAAeD,IAAf;;;;;;;;;;;;AChKA;AAGA;;;AAEA,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;EACxC,oBACE;IACE,WAAQ,kBADV;IAEE,KAAK,EAAEA,QAAQ,GAAG,WAAH,GAAiB,SAFlC;IAGE,EAAE,EAAE,CAHN;IAAA,UAMGA,QAAQ,GAAG,GAAH,GAAS;EANpB,EADF;AAUD,CAXD;;;;;;;;;;;;;;;;AAiBA,yDAAeD,eAAf;;;;;GAXW;EAAEE,aAAa,EAAE;AAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXX;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMQ,SAAS,GAAG1W,wEAAM,CAACwW,6DAAD,CAAT;EAAA;EAAA;AAAA,8FAAf;AASAE,SAAS,CAACjT,YAAV,GAAyB;EACvBkT,YAAY,EAAE;AADS,CAAzB;AAIA,IAAMC,YAAY,GAAG5W,wEAAM,CAACoW,8EAAD,CAAT;EAAA;EAAA;AAAA,kBAAlB;AAIA,IAAMS,YAAY,GAAG7W,wEAAM,CAACmW,8EAAD,CAAT;EAAA;EAAA;AAAA,oCAAlB;AAKA,IAAMW,aAAa,GAAG9W,wEAAM,CAACqI,2DAAD,CAAT;EAAA;EAAA;AAAA,sSAAnB;AA0BA,IAAM0O,aAAa,GAAG/W,wEAAM,CAACqI,2DAAD,CAAT;EAAA;EAAA;AAAA,+BAEf,UAAA3D,KAAK;EAAA,OACLA,KAAK,CAACsS,UAAN,IACA1K,iEADA,2FAGYwK,aAHZ,EAIMF,YAJN,EAOMC,YAPN,EASmBN,mEATnB,CADK;AAAA,CAFU,CAAnB;AAkBA,IAAMU,QAAQ,GAAGjX,wEAAM,CAACmJ,qCAAD,CAAT;EAAA;EAAA;AAAA,+CAAd;AAKA,IAAM+N,oBAAoB,GAAGlX,kGAAH;EAAA;EAAA;AAAA,+CAA1B;;AAOA,IAAMmX,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,WAAW,EAAI;EACpC,IAAIA,WAAW,GAAG,IAAlB,EAAwB;IACtB,iBAAUA,WAAV;EACD,CAFD,MAEO,IAAIA,WAAW,GAAG,OAAlB,EAA2B;IAChC,iBAAU,CAACA,WAAW,GAAG,IAAf,EAAqBC,OAArB,CAA6B,CAA7B,CAAV;EACD,CAFM,MAEA,IAAID,WAAW,GAAG,UAAlB,EAA8B;IACnC,iBAAU,CAACA,WAAW,GAAG,OAAf,EAAwBC,OAAxB,CAAgC,CAAhC,CAAV;EACD,CAFM,MAEA;IACL,iBAAU,CAACD,WAAW,GAAG,UAAf,EAA2BC,OAA3B,CAAmC,CAAnC,CAAV;EACD;AACF,CAVD;AAYA;AACA;AACA;AACA;;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAatB;EAAA,IAZJC,SAYI,QAZJA,SAYI;EAAA,IAXJ/P,SAWI,QAXJA,SAWI;EAAA,IAVJgQ,aAUI,QAVJA,aAUI;EAAA,IATJC,GASI,QATJA,GASI;EAAA,IARJC,IAQI,QARJA,IAQI;EAAA,IAPJjE,SAOI,QAPJA,SAOI;EAAA,IANJkE,GAMI,QANJA,GAMI;EAAA,IALJC,QAKI,QALJA,QAKI;EAAA,IAJJC,QAII,QAJJA,QAII;EAAA,IAHJC,YAGI,QAHJA,YAGI;EAAA,IAFJC,MAEI,QAFJA,MAEI;EAAA,IADDrT,KACC;;EACJ,IAAIsT,OAAO,GAAG,IAAd;;EACA,IAAMC,MAAM,GAAG,uDAASR,GAAT,EAAc,KAAd,KAAwB,uDAASA,GAAT,EAAc,KAAd,CAAxB,IAAgD,uDAASA,GAAT,EAAc,KAAd,CAA/D;;EAEA,IAAIjQ,SAAJ,EAAe;IACbwQ,OAAO,gBAAG,wDAAC,oEAAD;MAAoB,YAAY,EAAE;IAAlC,EAAV;EACD,CAFD,MAEO,IAAIR,aAAJ,EAAmB;IACxBQ,OAAO,gBAAG,wDAAC,gEAAD;MAAe,IAAI,EAAC;IAApB,EAAV;EACD,CAFM,MAEA,IAAIT,SAAJ,EAAe;IACpBS,OAAO,gBACL,wDAAC,uEAAD;MAAiB,KAAK,EAAC,SAAvB;MAAiC,IAAI,EAAC,KAAtC;MAA4C,YAAY,EAAE;QAAEE,iBAAiB,EAAEhB;MAArB,CAA1D;MAAA,uBACE,wDAAC,4DAAD;QAAkB,EAAE,sBAApB;QAA0C,cAAc;UAAA;UAAA;QAAA;MAAxD;IADF,EADF;EAKD,CANM,MAMA,IAAI,CAACO,GAAD,IAAQ/S,KAAK,CAAC2H,OAAlB,EAA2B;IAChC2L,OAAO,gBACL,yDAAC,2CAAD;MAAA,wBACE,wDAAC,YAAD;QAAc,KAAK,EAAC,SAApB;QAA8B,IAAI,EAAC;MAAnC,EADF,eAEE,wDAAC,YAAD;QAAc,KAAK,EAAC,SAApB;QAA8B,IAAI,EAAC;MAAnC,EAFF;IAAA,EADF;EAMD,CAPM,MAOA,IAAI,CAACP,GAAL,EAAU;IACfO,OAAO,gBAAG,wDAAC,8EAAD;MAAU,KAAK,EAAC,SAAhB;MAA0B,IAAI,EAAC;IAA/B,EAAV;EACD,CAFM,MAEA,IAAIC,MAAJ,EAAY;IACjBD,OAAO,gBAAG,wDAAC,YAAD;MAAc,KAAK,EAAC,SAApB;MAA8B,IAAI,EAAC;IAAnC,EAAV;EACD,CAFM,MAEA;IACL,IAAMG,WAAW,GAAGzV,KAAK,CAACC,OAAN,CAAc+U,IAAd,IAAsB,kDAAIA,IAAJ,CAAtB,GAAkCA,IAAtD;IACAM,OAAO,gBAAG;MAAK,GAAG,EAAE3B,wEAAY,CAACoB,GAAD,EAAM,IAAN,EAAY;QAAEW,KAAK,EAAED;MAAT,CAAZ,CAAtB;MAA2D,GAAG,EAAER,GAAG,IAAIC;IAAvE,EAAV;EACD;;EAED,oBACE,yDAAC,aAAD,kCACMlT,KADN;IAEE,UAAU,EAAEqF,OAAO,CAAC0N,GAAG,IAAI/S,KAAK,CAAC2H,OAAd,CAFrB;IAGE,QAAQ,EAAEqL,IAHZ;IAIE,EAAE,EAAED,GAAG,GAAGlS,sDAAH,GAAU,KAJnB;IAKE,IAAI,EAAEkS,GALR;IAME,KAAK,EAAEG,QANT;IAOE,YAAY,MAPd;IAAA,wBASE,wDAAC,aAAD;MAAe,IAAI,EAAEF,IAArB;MAA2B,SAAS,EAAEjE,SAAtC;MAAiD,KAAK,EAAEmE,QAAxD;MAAkE,MAAM,EAAEG,MAA1E;MAAA,UACGC;IADH,EATF,EAYGF,YAAY,iBACX,yDAAC,2DAAD;MAAW,EAAE,EAAC,KAAd;MAAoB,QAAQ,EAAEJ,IAAI,IAAI,GAAtC;MAA2C,SAAS,EAAC,MAArD;MAA4D,EAAE,EAAE,CAAhE;MAAA,WACGlQ,SAAS,gBACR,wDAAC,oEAAD;QAAoB,MAAM,EAAE;MAA5B,EADQ,GAENoQ,QAAQ,gBACV,wDAAC,QAAD;QAAU,QAAQ,EAAC,MAAnB;QAA0B,KAAK,EAAC,WAAhC;QAA4C,UAAU,EAAC,KAAvD;QAAA,UACGA;MADH,EADU,gBAKV,wDAAC,qCAAD;QAAG,SAAS,EAAC,QAAb;QAAsB,QAAQ,EAAC,MAA/B;QAAsC,KAAK,EAAC,WAA5C;QAAA,uBACE,wDAAC,4DAAD;UAAkB,EAAE,mBAApB;UAAuC,cAAc;YAAA;YAAA;UAAA;QAArD;MADF,EARJ,EAYGC,QAAQ,iBACP,wDAAC,qCAAD;QAAG,EAAE,EAAC,KAAN;QAAY,QAAQ,EAAC,MAArB;QAA4B,UAAU,EAAC,MAAvC;QAA8C,KAAK,EAAC,WAApD;QAAgE,UAAU,EAAC,KAA3E;QAAA,UACGV,cAAc,CAACU,QAAD;MADjB,EAbJ;IAAA,EAbJ;EAAA,GADF;AAmCD,CA9ED;;AA+FAP,mBAAmB,CAAC7T,YAApB,GAAmC;EACjCiU,IAAI,EAAE,EAD2B;EAEjCK,MAAM,EAAE,mBAFyB;EAGjCJ,GAAG,EAAE;AAH4B,CAAnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,yDAAeL,mBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtNA;AAEA;AAEA;AAEA;;;;AACA,IAAMgB,eAAe,GAAGtY,iGAAH;EAAA;EAAA;AAAA,gDAENqY,8DAFM,CAArB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAME,eAAe,GAAGvY,iGAAH;EAAA;EAAA;AAAA,uHAIbsY,eAJa,CAArB;AASA;;AACA,IAAME,mBAAmB,GAAGxY,iGAAH;EAAA;EAAA;AAAA,6EAOrB,UAAA0E,KAAK;EAAA,OACLA,KAAK,CAACuR,QAAN,GACI3J,gEADJ,oHASIA,gEATJ,4FADK;AAAA,CAPgB,CAAzB;AAsBA;;AACO,IAAMmM,SAAS,GAAG,SAAZA,SAAY,OAA4B;EAAA,IAAzB1V,QAAyB,QAAzBA,QAAyB;EAAA,IAAZ2B,KAAY;;EACnD,oBACE,wDAAC,eAAD,kCAAqBA,KAArB;IAAA,wBACE,uDAAC,mBAAD;MAAqB,QAAQ,EAAE;IAA/B,EADF,EAEG3B,QAFH;EAAA,GADF;AAMD,CAPM;;AAWP;AACO,IAAM2V,UAAU,GAAG,SAAbA,UAAa,QAA4B;EAAA,IAAzB3V,QAAyB,SAAzBA,QAAyB;EAAA,IAAZ2B,KAAY;;EACpD,oBACE,wDAAC,eAAD,kCAAqBA,KAArB;IAAA,wBACE,uDAAC,mBAAD;MAAqB,QAAQ;IAA7B,EADF,EAEG3B,QAFH;EAAA,GADF;AAMD,CAPM;;AAWP;AACA,sEAAewV,gDAAAA,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AAGA;AAEA;AACA;;;AASA,IAAMO,mBAAmB,GAAG9Y,2EAAH;EAAA;EAAA;AAAA,0BAAzB;AAQA,IAAM+Y,wBAAwB,GAAG/Y,2EAAH;EAAA;EAAA;AAAA,oLAWX;EAAA,IAAGoU,YAAH,QAAGA,YAAH;EAAA,OAAsBA,YAAtB;AAAA,CAXW,CAA9B;AAcA;AACA;AACA;AACA;;AACO,IAAM4E,cAAc,GAAG,SAAjBA,cAAiB,QAA8D;EAAA,IAA3DhO,OAA2D,SAA3DA,OAA2D;EAAA,IAAlDiO,gBAAkD,SAAlDA,gBAAkD;EAAA,IAAhCvB,IAAgC,SAAhCA,IAAgC;;EAC1F,IAAMwB,UAAU,gBACd,oBAAC,6BAAD;IAAgB,UAAU,EAAElO,OAA5B;IAAA,uBACE,oBAAC,sBAAD;MAAQ,UAAU,EAAEA,OAApB;MAA6B,MAAM,EAAE0M;IAArC;EADF,EADF;;EAMA,IAAI,CAACuB,gBAAL,EAAuB;IACrB,OAAOC,UAAP;EACD,CAFD,MAEO;IACL,oBACE,qBAAC,mBAAD;MAAA,WACGA,UADH,eAEE,oBAAC,wBAAD;QAA0B,YAAY,EAAEP,6CAAqB,CAACM,gBAAgB,CAACxR,IAAlB,CAA7D;QAAA,uBACE,oBAAC,6BAAD;UAAgB,UAAU,EAAEwR,gBAA5B;UAAA,uBACE,oBAAC,sBAAD;YAAQ,UAAU,EAAEA,gBAApB;YAAsC,MAAM,EAAEvB,IAAI,GAAG;UAArD;QADF;MADF,EAFF;IAAA,EADF;EAUD;AACF,CArBM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CP;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,IAAMiC,sCAAgB,GAAG3Z,iDAAM,CAACqP,wBAAD,CAAT;EAAA;EAAA;AAAA,uHAAtB;AASA,IAAMuK,cAAc,GAAG5Z,iDAAM,OAAT;EAAA;EAAA;AAAA,8NAchByW,4BAdgB,CAApB;AAoBA,IAAMoD,KAAK,GAAG7Z,iDAAM,CAAC,KAAD,CAAT;EAAA;EAAA;AAAA,2SAAX;AAmBA,IAAM8Z,eAAe,GAAG9Z,iDAAM,CAACmZ,kCAAD,CAAT;EAAA;EAAA;AAAA,4DAArB;;AAOA,IAAMY,qBAAqB,GAAG,SAAxBA,qBAAwB,OAA6C;EAAA,IAA1ClF,OAA0C,QAA1CA,OAA0C;EAAA,IAAjC7K,IAAiC,QAAjCA,IAAiC;EAAA,IAA3BY,UAA2B,QAA3BA,UAA2B;EAAA,IAAZlG,KAAY;;EACzE,IAAM9D,IAAI,GAAGb,0BAAO,EAApB;EACA,IAAMqR,UAAU,GAAGxR,YAAA,EAAnB;;EACA,sBAAkCA,cAAA,CAAe,KAAf,CAAlC;EAAA;EAAA,IAAOoa,SAAP;EAAA,IAAkBC,YAAlB;;EACA,uBAAkCra,cAAA,CAAe,IAAf,CAAlC;EAAA;EAAA,IAAOsa,UAAP;EAAA,IAAmBC,WAAnB;;EACA,uBAA8Dva,cAAA,CAAe,KAAf,CAA9D;EAAA;EAAA,IAAOwa,yBAAP;EAAA,IAAkCC,wBAAlC;;EACA,IAAMC,yBAAyB,GAAG,CAAAzF,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAE0F,MAAT,MAAoBlB,+CAAtD;EACA,IAAMoB,WAAW,GAAG;IAAEC,EAAE,EAAE,CAAN;IAASC,EAAE,EAAE,CAAb;IAAgBC,YAAY,EAAE,IAA9B;IAAoCxC,KAAK,EAAE,MAA3C;IAAmDyC,SAAS,EAAE;EAA9D,CAApB;;EAEA,IAAMxO,OAAO,GAAG,SAAVA,OAAU,GAAM;IACpB4N,YAAY,CAAC,IAAD,CAAZ;EACD,CAFD,CATyE,CAazE;;;EACAhL,gCAAa,CAACmC,UAAD,EAAa,UAAAsB,OAAO,EAAI;IACnC,IAAIA,OAAO,IAAIwH,UAAX,IAAyBF,SAAzB,IAAsC,CAACc,QAAQ,CAACC,cAAT,CAAwB,8BAAxB,CAA3C,EAAoG;MAClGd,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CAJY,CAAb,CAdyE,CAoBzE;;EACA/K,kCAAc,CAAC;IACbyD,QAAQ,EAAE,oBAAM;MACd,IAAIuH,UAAJ,EAAgB;QACdD,YAAY,CAAC,KAAD,CAAZ;MACD;IACF,CALY;IAMbrH,QAAQ,EAAEzD,iCAAUA;EANP,CAAD,CAAd;EASA,oBACE,qBAAC,cAAD;IAAA,wBACE,qBAAC,uBAAD;MAAA,wBACE,oBAAC,0BAAD;QAAA,UACG;UAAA,IAAG0D,GAAH,SAAGA,GAAH;UAAA,oBACC,oBAAC,gBAAD;YAAK,GAAG,EAAEA,GAAV;YAAe,OAAO,EAAExG,OAAxB;YAAA,uBACE,oBAAC,sCAAD;cACE,IAAI,EAAEkN,mDAAuB,CAAC1E,OAAO,CAAC0F,MAAT,CAD/B;cAEE,WAAQ;YAFV,GAGM7V,KAHN;cAAA,uBAKE,qBAAC,iBAAD;gBAAA,WACG4U,0CAAiB,CAAC1Y,IAAD,EAAOiU,OAAO,CAAC0F,MAAf,CADpB,eAEE,oBAAC,eAAD,KAFF;cAAA;YALF;UADF,EADD;QAAA;MADH,EADF,EAkBGP,SAAS,iBACRZ,sBAAA,eACE,oBAAC,oBAAD;QAAQ,SAAS,EAAC,QAAlB;QAAA,UACG;UAAA;;UAAA,IAAGvG,GAAH,SAAGA,GAAH;UAAA,IAAQI,KAAR,SAAQA,KAAR;UAAA,IAAegI,UAAf,SAAeA,UAAf;UAAA,oBACC,qBAAC,cAAD;YAAgB,GAAG,EAAEpI,GAArB;YAA0B,KAAK,EAAEI,KAAjC;YAAwC,YAAY,EAAE5G,OAAtD;YAAA,wBACE,qBAAC,iBAAD;cAAM,UAAU,EAAC,QAAjB;cAA0B,GAAG,EAAE+E,UAA/B;cAA2C,aAAa,EAAC,QAAzD;cAAkE,CAAC,EAAE,CAArE;cAAA,WACG,CAACkJ,yBAAD,iBACC,oBAAC,qCAAD;gBACE,IAAI,EAAEtQ,IADR;gBAEE,WAAW,EAAEyQ,WAFf;gBAGE,UAAU,EAAE7P,UAHd;gBAIE,OAAO,EAAEiK,OAJX;gBAKE,WAAW,EAAEA,OAAO,CAACqG,WALvB;gBAME,aAAa,EAAE,uBAAA5J,MAAM;kBAAA,OAAI6I,WAAW,CAAC,CAAC7I,MAAF,CAAf;gBAAA,CANvB;gBAOE,SAAS,EAAE;kBAAA,OAAM2I,YAAY,CAAC,KAAD,CAAlB;gBAAA;cAPb,EAFJ,EAYG,CAAApF,OAAO,SAAP,IAAAA,OAAO,WAAP,oCAAAA,OAAO,CAAEqG,WAAT,8EAAsBC,mBAAtB,kBACC,oBAAC,2BAAD,kCACMV,WADN;gBAEE,OAAO,EAAE,mBAAM;kBACbJ,wBAAwB,CAAC,IAAD,CAAxB;gBACD,CAJH;gBAAA,uBAME,oBAAC,yCAAD;kBAAA,uBACE,oBAAC,sBAAD;oBAAkB,EAAE,4BAApB;oBAAgD,cAAc;sBAAA;sBAAA;oBAAA;kBAA9D;gBADF;cANF,GAbJ;YAAA,EADF,eA0BE,oBAAC,KAAD;cAAO,GAAG,EAAEY,UAAU,CAACpI,GAAvB;cAA4B,KAAK,EAAEoI,UAAU,CAAChI;YAA9C,EA1BF;UAAA,EADD;QAAA;MADH,EADF,EAiCE6H,QAAQ,CAACM,IAjCX,CAnBJ;IAAA,EADF,EAwDGhB,yBAAyB,iBACxB,oBAAC,2CAAD;MAA8B,OAAO,EAAEvF,OAAvC;MAAgD,OAAO,EAAE;QAAA,OAAMwF,wBAAwB,CAAC,KAAD,CAA9B;MAAA;IAAzD,EAzDJ;EAAA,EADF;AA8DD,CA5FD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA,mEAAeN,qBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjLA;AAEA;AAEA;;AAEA,IAAMsB,MAAM,GAAGrb,2EAAH;EAAA;EAAA;AAAA,+NAGU,UAAA0E,KAAK;EAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyB,GAAzB,CAAJ;AAAA,CAHf,EAiBR,UAAArI,KAAK;EAAA,OACLA,KAAK,CAACsJ,UAAN,IACA1B,6CADA,kDAGsB,UAAA5H,KAAK;IAAA,OAAIA,KAAK,CAACmI,KAAN,CAAYC,MAAZ,CAAmBE,OAAnB,CAA2B,GAA3B,CAAJ;EAAA,CAH3B,CADK;AAAA,CAjBG,CAAZ;AAyBA;AACA;AACA;;AACA,IAAMsO,YAAY,GAAG,SAAfA,YAAe,OAA0C;EAAA,IAAvCC,OAAuC,QAAvCA,OAAuC;EAAA,IAA9BC,aAA8B,QAA9BA,aAA8B;EAAA,IAAfjO,QAAe,QAAfA,QAAe;EAC7D,oBACE,oBAAC,iBAAD;IAAM,QAAQ,EAAC,MAAf;IAAsB,cAAc,EAAC,QAArC;IAAA,UACG,4BAAI7K,KAAK,CAAC6Y,OAAD,CAAL,CAAeE,IAAf,EAAJ,EAA2B7Y,GAA3B,CAA+B,UAAA8Y,KAAK;MAAA,oBACnC,oBAAC,MAAD;QAEE,IAAI,EAAC,QAFP;QAGE,QAAQ,EAAE,CAHZ;QAIE,UAAU,EAAEA,KAAK,KAAKF,aAJxB;QAKE,OAAO,EAAE;UAAA,OAAMjO,QAAQ,CAACmO,KAAD,CAAd;QAAA,CALX;QAME,SAAS,EAAE,mBAAAC,KAAK,EAAI;UAClB,IAAIA,KAAK,CAAC7I,GAAN,KAAc,OAAlB,EAA2B;YACzB6I,KAAK,CAAC5I,cAAN;YACAxF,QAAQ,CAACmO,KAAD,CAAR;UACD;QACF;MAXH,GACOA,KADP,CADmC;IAAA,CAApC;EADH,EADF;AAmBD,CApBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,4DAAeJ,YAAf;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;IAEqBQ;;;;;;;;;;;;;;;;8EAgBX;MAAEN,aAAa,EAAE,CAAjB;MAAoBhE,aAAa,EAAE;IAAnC;;uFAqBS,YAAM;MACrB,MAAKuE,QAAL,CAAc;QAAA,IAAGP,aAAH,QAAGA,aAAH;QAAA,OAAwB;UAAEA,aAAa,EAAE/Z,IAAI,CAACua,GAAL,CAASR,aAAa,GAAG,CAAzB,EAA4B,CAA5B;QAAjB,CAAxB;MAAA,CAAd;IACD;;uFAEgB,YAAM;MACrB,MAAKO,QAAL,CAAc;QAAA;;QAAA,IAAGP,aAAH,SAAGA,aAAH;QAAA,OAAwB;UACpCA,aAAa,EAAE/Z,IAAI,CAACwa,GAAL,CAAST,aAAa,GAAG,CAAzB,EAA4B,CAAC,4BAAK9W,KAAL,CAAWwX,KAAX,wEAAkBha,MAAlB,KAA4B,CAA7B,IAAkC,CAA9D;QADqB,CAAxB;MAAA,CAAd;IAGD;;;;;;;WA3BD,6BAAoB;MAAA;;MAClB,KAAKia,aAAL,GAAqBrB,QAAQ,CAACsB,gBAAT,CAA0B,SAA1B,EAAqC,UAAAT,KAAK,EAAI;QACjE,IAAIA,KAAK,CAAC7I,GAAN,KAAc,WAAlB,EAA+B;UAC7B,MAAI,CAACuJ,cAAL;QACD,CAFD,MAEO,IAAIV,KAAK,CAAC7I,GAAN,KAAc,YAAlB,EAAgC;UACrC,MAAI,CAACwJ,cAAL;QACD,CAFM,MAEA,IAAIX,KAAK,CAAC7I,GAAN,KAAc,QAAlB,EAA4B;UACjC,MAAI,CAACpO,KAAL,CAAW2G,OAAX;QACD;MACF,CARoB,CAArB;IASD;;;WAED,gCAAuB;MACrB,IAAI,KAAK8Q,aAAT,EAAwB;QACtB,KAAKrB,QAAL,CAAcyB,mBAAd,CAAkC,KAAKJ,aAAvC;QACA,KAAKA,aAAL,GAAqB,IAArB;MACD;IACF;;;WAYD,wBAAeK,IAAf,EAAqB;MAAA;;MACnB,IAAI,CAACA,IAAI,CAACnQ,OAAV,EAAmB;QACjB,OAAO5C,SAAP;MACD,CAFD,MAEO;QACL,OAAO;UAAA,OACL+S,IAAI,CAACnQ,OAAL,CAAa;YACX7E,SAAS,EAAE,MAAI,CAACyM,KAAL,CAAWuD,aADX;YAEXiF,UAAU,EAAE,oBAAAjF,aAAa;cAAA,OAAI,MAAI,CAACuE,QAAL,CAAc;gBAAEvE,aAAa,EAAbA;cAAF,CAAd,CAAJ;YAAA;UAFd,CAAb,CADK;QAAA,CAAP;MAKD;IACF;;;WAED,2BAAkBgF,IAAlB,EAAwB;MACtB,IAAI,KAAK9X,KAAL,CAAWgY,iBAAf,EAAkC;QAChC,OAAO,KAAKhY,KAAL,CAAWgY,iBAAX,CAA6B;UAAEF,IAAI,EAAJA,IAAF;UAAQhF,aAAa,EAAE,KAAKvD,KAAL,CAAWuD;QAAlC,CAA7B,CAAP;MACD;;MAED,oBACE,oBAAC,kCAAD;QACE,GAAG,EAAEgF,IAAI,CAAC/E,GADZ;QAEE,IAAI,EAAE,GAFR;QAGE,OAAO,EAAE,KAAKkF,cAAL,CAAoBH,IAApB,CAHX;QAIE,aAAa,EAAE,KAAKvI,KAAL,CAAWuD,aAJ5B;QAKE,KAAK,EAAEgF,IAAI,CAAC5X;MALd,EADF;IASD;;;WAED,kBAAS;MAAA;MAAA;;MACP,kBAAwC,KAAKF,KAA7C;MAAA,IAAQkY,UAAR,eAAQA,UAAR;MAAA,IAAoBV,KAApB,eAAoBA,KAApB;MAAA,IAA8BxX,KAA9B;;MACA,IAAQ8W,aAAR,GAA0B,KAAKvH,KAA/B,CAAQuH,aAAR;MACA,IAAMqB,YAAY,GAAGX,KAAK,GAAGA,KAAK,CAACV,aAAD,CAAR,GAA0B,IAApD;MACA,IAAMsB,OAAO,GAAG,4BAAKpY,KAAL,CAAWwX,KAAX,0EAAkBha,MAAlB,KAA4B,CAA5C;MACA,IAAM6a,gBAAgB,GAAGD,OAAO,GAAG,CAAnC;MAEA,oBACE,qBAAC,2BAAD,oEAAiBpY,KAAjB;QAAwB,KAAK,EAAC,MAA9B;QAAqC,QAAQ,EAAE,GAA/C;QAAoD,SAAS,EAAE,KAA/D;QAAA,wBACE,oBAAC,+BAAD;UAAa,EAAE,EAAE,CAAjB;UAAA,uBACE,oBAAC,sBAAD;YAAkB,EAAE,uCAApB;YAA2D,cAAc;cAAA;cAAA;YAAA;UAAzE;QADF,EADF,eAIE,qBAAC,6BAAD;UAAW,EAAE,EAAE,CAAf;UAAA,wBACE,qBAAC,iBAAD;YAAM,cAAc,EAAC,QAArB;YAA8B,KAAK,EAAC,MAApC;YAAA,WACGqY,gBAAgB,iBACf,oBAAC,2BAAD;cACE,UAAU,EAAC,MADb;cAEE,YAAY,MAFd;cAGE,EAAE,EAAC,OAHL;cAIE,EAAE,EAAC,KAJL;cAKE,OAAO,EAAE,KAAKV,cALhB;cAME,QAAQ,EAAE,CAACb,aANb;cAAA,uBAQE,oBAAC,8BAAD;gBAAW,IAAI,EAAE;cAAjB;YARF,EAFJ,eAaE,oBAAC,iBAAD;cAAM,EAAE,EAAE,CAAV;cAAa,KAAK,EAAC,MAAnB;cAA0B,cAAc,EAAC,QAAzC;cAAA,UACGqB,YAAY,IAAI,KAAKH,iBAAL,CAAuBG,YAAvB;YADnB,EAbF,EAgBGE,gBAAgB,iBACf,oBAAC,2BAAD;cACE,UAAU,EAAC,MADb;cAEE,YAAY,MAFd;cAGE,EAAE,EAAC,OAHL;cAIE,EAAE,EAAC,KAJL;cAKE,OAAO,EAAE,KAAKT,cALhB;cAME,QAAQ,EAAE,CAACQ,OAAD,IAAYtB,aAAa,KAAKsB,OAAO,GAAG,CANpD;cAAA,uBAQE,oBAAC,gCAAD;gBAAY,IAAI,EAAE;cAAlB;YARF,EAjBJ;UAAA,EADF,EA8BGF,UAAU,IAAIA,UAAU,CAAC;YAAEJ,IAAI,EAAEK;UAAR,CAAD,CA9B3B,EA+BGE,gBAAgB,iBACf,oBAAC,gBAAD;YAAK,EAAE,EAAE,CAAT;YAAA,uBACE,oBAAC,uBAAD;cACE,OAAO,EAAED,OADX;cAEE,aAAa,EAAEtB,aAFjB;cAGE,QAAQ,EAAE,kBAAAA,aAAa;gBAAA,OAAI,MAAI,CAACO,QAAL,CAAc;kBAAEP,aAAa,EAAbA;gBAAF,CAAd,CAAJ;cAAA;YAHzB;UADF,EAhCJ;QAAA,EAJF;MAAA,GADF;IAgDD;;;;EAlI4C5b;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ/C;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,IAAM0d,QAAQ,GAAG,SAAXA,QAAW;EAAA,IAAG1S,UAAH,QAAGA,UAAH;EAAA,IAAeiK,OAAf,QAAeA,OAAf;EAAA,IAAwB2H,IAAxB,QAAwBA,IAAxB;EAAA,IAA8Be,WAA9B,QAA8BA,WAA9B;EAAA,oBACf,qBAAC,iBAAD;IAAM,cAAc,EAAC,eAArB;IAAqC,EAAE,EAAE,EAAzC;IAA6C,EAAE,EAAE,CAAjD;IAAA,wBACE,qBAAC,gBAAD;MAAK,IAAI,EAAC,SAAV;MAAA,WACG,CAACf,IAAI,CAACgB,WAAL,IAAoBhB,IAAI,CAACiB,IAA1B,kBACC,oBAAC,MAAD;QAAG,QAAQ,EAAC,MAAZ;QAAmB,UAAU,EAAC,MAA9B;QAAqC,KAAK,EAAC,WAA3C;QAAuD,EAAE,EAAE,CAA3D;QAAA,UACGjB,IAAI,CAACgB,WAAL,IAAoBhB,IAAI,CAACiB;MAD5B,EAFJ,eAME,oBAAC,MAAD;QAAG,QAAQ,EAAC,MAAZ;QAAmB,KAAK,EAAC,WAAzB;QAAA,uBACE,oBAAC,iBAAD;UAAe,KAAK,EAAEjB,IAAI,CAACkB,UAA3B;UAAuC,KAAK,EAAC,OAA7C;UAAqD,IAAI,EAAC,SAA1D;UAAoE,GAAG,EAAC;QAAxE;MADF,EANF;IAAA,EADF,eAWE,qBAAC,wBAAD;MAAW,EAAE,EAAE,CAAf;MAAkB,IAAI,EAAC,SAAvB;MAAiC,SAAS,EAAC,OAA3C;MAAA,wBACE;QAAA,UAAMlB,IAAI,CAACpb,MAAL,iBAAe,oBAAC,mCAAD;UAAsB,MAAM,EAAEob,IAAI,CAACpb,MAAnC;UAA2C,QAAQ,EAAEyT,OAAO,CAACvT;QAA7D;MAArB,EADF,EAEGic,WAAW,iBACV,qBAAC,2BAAD;QACE,UAAU,EAAC,MADb;QAEE,YAAY,MAFd;QAGE,EAAE,EAAC,OAHL;QAIE,EAAE,EAAE,CAJN;QAKE,OAAO,EAAE;UAAA,OAAMN,wBAAM,CAACM,WAAD,EAAcF,kEAAyB,CAACzS,UAAD,EAAaiK,OAAb,CAAvC,CAAZ;QAAA,CALX;QAAA,wBAOE,oBAAC,4BAAD;UAAc,IAAI,EAAC;QAAnB,EAPF,oBAO8B,oBAAC,sBAAD;UAAkB,EAAE,YAApB;UAAgC,cAAc;YAAA;YAAA;UAAA;QAA9C,EAP9B;MAAA,EAHJ;IAAA,EAXF;EAAA,EADe;AAAA,CAAjB;;AAoCA,IAAM8I,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAC/S,UAAD,EAAaiK,OAAb,EAAyB;EACnD,IAAI,CAACA,OAAL,EAAc;IACZ,OAAO,EAAP;EACD;;EAED,IAAIA,OAAO,CAACpN,IAAR,KAAiByV,2CAArB,EAA2C;IACzC,OAAOrI,OAAO,CAACgJ,aAAR,IAAyB,EAAhC;EACD,CAFD,MAEO;IAAA;;IACL,IAAMC,KAAK,GAAG,mBAAAjJ,OAAO,CAACiJ,KAAR,kEAAe1Q,MAAf,CAAsB;MAAA,IAAGqK,GAAH,SAAGA,GAAH;MAAA,OAAa1N,OAAO,CAAC0N,GAAD,CAApB;IAAA,CAAtB,MAAoD,EAAlE;IACA,6CAAWqG,KAAX,+BAAqBjJ,OAAO,CAACgJ,aAA7B;EACD;AACF,CAXD;;AAaA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,QAA4B;EAAA,IAAzBvW,SAAyB,SAAzBA,SAAyB;EAAA,IAAdwW,OAAc,SAAdA,OAAc;;EACxD,IAAIxW,SAAJ,EAAe;IACb,oBAAO,oBAAC,kCAAD;MAAqB,aAAa,MAAlC;MAAmC,KAAK,EAAC,MAAzC;MAAgD,SAAS,EAAE;IAA3D,EAAP;EACD,CAFD,MAEO;IACL,oBAAO;MAAQ,KAAK,EAAC,0BAAd;MAAyC,KAAK,EAAC,MAA/C;MAAsD,MAAM,EAAE,GAA9D;MAAmE,GAAG,EAAEwW;IAAxE,EAAP;EACD;AACF,CAND;;AAaA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,QAAsC;EAAA,IAAnCrT,UAAmC,SAAnCA,UAAmC;EAAA,IAAvBiK,OAAuB,SAAvBA,OAAuB;EAAA,IAAdxJ,OAAc,SAAdA,OAAc;;EACrE,sBAAsCzL,cAAA,CAAe,IAAf,CAAtC;EAAA;EAAA,IAAOse,WAAP;EAAA,IAAoBC,cAApB;;EACA,uBAAsCve,cAAA,CAAe,IAAf,CAAtC;EAAA;EAAA,IAAO2d,WAAP;EAAA,IAAoBa,cAApB;;EACA,uBAAwCxe,cAAA,CAAe,KAAf,CAAxC;EAAA;EAAA,IAAOye,YAAP;EAAA,IAAqBC,eAArB;;EACA,IAAMpC,KAAK,GAAGtc,aAAA,CAAc;IAAA,OAAM+d,mBAAmB,CAAC/S,UAAD,EAAaiK,OAAb,CAAzB;EAAA,CAAd,EAA8D,CAACjK,UAAD,EAAaiK,OAAb,CAA9D,CAAd;EAEAjV,eAAA,CAAgB,YAAM;IACpBwd,4DAAmB,CAACvI,OAAD,CAAnB,CACG2J,IADH,CACQ,UAAAC,IAAI,EAAI;MACZH,eAAe,CAAC,KAAD,CAAf;MACAF,cAAc,CAACK,IAAD,CAAd;MACAN,cAAc,CAACO,GAAG,CAACC,eAAJ,CAAoBF,IAApB,CAAD,CAAd;IACD,CALH,WAMS,YAAM;MACXH,eAAe,CAAC,IAAD,CAAf;IACD,CARH;IASA,OAAO,YAAM;MACX,IAAIJ,WAAJ,EAAiB;QACfQ,GAAG,CAACE,eAAJ,CAAoBV,WAApB;MACD;IACF,CAJD;EAKD,CAfD,EAeG,EAfH;EAiBA,oBACE,oBAAC,iBAAD;IACE,KAAK,EAAEhC,KADT;IAEE,OAAO,EAAE7Q,OAFX;IAGE,UAAU,EAAE;MAAA,IAAGmR,IAAH,SAAGA,IAAH;MAAA,oBACV,oBAAC,QAAD;QACE,UAAU,EAAE5R,UADd;QAEE,OAAO,EAAEiK,OAFX;QAGE,IAAI,EAAE2H,IAHR;QAIE,WAAW,EAAEA,IAAI,CAAC/U,IAAL,KAAc,iBAAd,GAAkC8V,WAAlC,GAAgD;MAJ/D,EADU;IAAA,CAHd;IAWE,iBAAiB,EAAE;MAAA,IAAGf,IAAH,SAAGA,IAAH;MAAA,OACjBA,IAAI,CAAC/U,IAAL,KAAc,iBAAd,GACE4W,YAAY,gBACV,oBAAC,4CAAD;QAA8B,OAAO,EAAExJ,OAAvC;QAAgD,UAAU,EAAEjK,UAA5D;QAAA,UACG;UAAA,IAAGpD,SAAH,SAAGA,SAAH;UAAA,IAAcqX,eAAd,SAAcA,eAAd;UAAA,oBACC,oBAAC,kCAAD;YACE,OAAO,EAAEA,eADX;YAEE,aAAa,EAAErX,SAFjB;YAGE,QAAQ,EAAE6V,kEAAyB,CAACzS,UAAD,EAAaiK,OAAb,CAHrC;YAIE,IAAI,EAAE;UAJR,EADD;QAAA;MADH,EADU,gBAYV,oBAAC,qBAAD;QAAuB,SAAS,EAAE,CAACqJ,WAAnC;QAAgD,OAAO,EAAEA;MAAzD,EAbJ,gBAgBE,oBAAC,kCAAD;QAAqB,GAAG,EAAE1B,IAAI,CAAC/E,GAA/B;QAAoC,IAAI,EAAE,GAA1C;QAA+C,KAAK,EAAE+E,IAAI,CAAC5X,KAA3D;QAAkE,QAAQ,EAAE4X,IAAI,CAACiB;MAAjF,EAjBe;IAAA;EAXrB,EADF;AAkCD,CAzDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA,sEAAeQ,wBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnJA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMsB,kBAAkB,GAAGvf,2EAAH;EAAA;EAAA;AAAA,wJAAxB;AAWA,IAAMwf,gBAAgB,GAAGxf,iEAAA,CAAiB;EAAE,WAAW;AAAb,CAAjB,CAAH;EAAA;EAAA;AAAA,sLAAtB;AAgBA,IAAMyf,gBAAgB,GAAGzf,2EAAH;EAAA;EAAA;AAAA,qGAIiBwf,gBAJjB,CAAtB;;AAUA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAA7K,OAAO,EAAI;EACpC,IAAI,CAACA,OAAL,EAAc;IACZ,OAAO,CAAP;EACD,CAFD,MAEO,IAAIA,OAAO,CAACpN,IAAR,KAAiByV,2CAArB,EAA2C;IAChD,OAAO,eAAKrI,OAAO,CAACgJ,aAAb,CAAP;EACD,CAFM,MAEA;IACL,OAAO,eAAKhJ,OAAO,CAACgJ,aAAb,IAA8B,eAAKhJ,OAAO,CAACiJ,KAAR,CAAc1Q,MAAd,CAAqB;MAAA,IAAGqK,GAAH,QAAGA,GAAH;MAAA,OAAa1N,OAAO,CAAC0N,GAAD,CAApB;IAAA,CAArB,CAAL,CAArC;EACD;AACF,CARD;;AAUA,IAAMkI,iBAAiB,GAAG,SAApBA,iBAAoB,QAUpB;EAAA;;EAAA,IATJnY,SASI,SATJA,SASI;EAAA,IARJwC,IAQI,SARJA,IAQI;EAAA,IAPJ4V,UAOI,SAPJA,UAOI;EAAA,IANJC,cAMI,SANJA,cAMI;EAAA,IALJhL,OAKI,SALJA,OAKI;EAAA,IAJJiL,kBAII,SAJJA,kBAII;EAAA,IAHJC,IAGI,SAHJA,IAGI;EAAA,IAFJhP,aAEI,SAFJA,aAEI;EAAA,IADJiP,SACI,SADJA,SACI;;EACJ,sBAA4CpgB,cAAA,CAAe,KAAf,CAA5C;EAAA;EAAA,IAAOqgB,eAAP;EAAA,IAAwBC,gBAAxB;;EACA,IAAMC,eAAe,GAAGP,UAAU,GAAG/K,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAE7J,OAAZ,GAAsB6J,OAAtB,aAAsBA,OAAtB,uBAAsBA,OAAO,CAAEuL,KAAjE;EACA,IAAMC,WAAW,GAAGN,IAAI,KAAK,OAA7B;EACA,IAAMO,eAAe,GAAGP,IAAI,KAAK,WAAjC;EACA,IAAMQ,QAAQ,GAAG,CAAA1L,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEpN,IAAT,MAAkByV,yCAAnC;EACA,IAAMuD,cAAc,GAAGF,QAAQ,KAAI1L,OAAJ,aAAIA,OAAJ,yCAAIA,OAAO,CAAEiJ,KAAb,mDAAI,eAAgB4C,KAAhB,CAAsB,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAAClJ,GAAF,KAAU,IAAd;EAAA,CAAvB,CAAJ,CAA/B;EACA,IAAMmJ,eAAe,GAAG,CAACP,WAAD,GAAe,CAAf,GAAmBX,kBAAkB,CAAC7K,OAAD,CAA7D;EACA,IAAMgM,uBAAuB,GAAG,CAACxH,+CAAD,EAAyBA,uCAAzB,EAA6C2H,QAA7C,CAAsDnM,OAAtD,aAAsDA,OAAtD,uBAAsDA,OAAO,CAAE0F,MAA/D,CAAhC;EACA,IAAM0G,6BAA6B,GACjC,CAACJ,uBAAuB,IAAI,CAAAhM,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAE0F,MAAT,MAAoBlB,+CAAhD,MACCgG,mDAAiB,CAACxK,OAAO,CAACqG,WAAT,CAAjB,IAA0CrG,OAAO,CAACqG,WAAR,CAAoBC,mBAD/D,CADF;EAGA,IAAM+F,eAAe,GACnB,CAAArM,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEsM,uBAAT,KAAoC,0BAAAtM,OAAO,CAACsM,uBAAR,gFAAiC7f,QAAjC,MAA8CuT,OAAO,CAACvT,QAD5F;EAGA,oBACE,qBAAC,gBAAD;IAAkB,uCAA8BuT,OAA9B,aAA8BA,OAA9B,uBAA8BA,OAAO,CAAE5J,QAAvC,CAAlB;IAAA,wBACE,qBAAC,iBAAD;MAAM,cAAc,EAAC,eAArB;MAAqC,QAAQ,EAAC,MAA9C;MAAA,wBACE,qBAAC,iBAAD;QAAM,IAAI,EAAC,GAAX;QAAe,QAAQ,EAAC,iBAAxB;QAA0C,QAAQ,EAAE,CAAC,IAAD,EAAO,KAAP,CAApD;QAAmE,EAAE,EAAC,MAAtE;QAAA,wBACE,oBAAC,gBAAD;UAAK,EAAE,EAAE,CAAT;UAAA,UACGzD,SAAS,gBACR,oBAAC,iCAAD;YAAoB,KAAK,EAAE,EAA3B;YAA+B,MAAM,EAAE;UAAvC,EADQ,gBAGR,oBAAC,cAAD;YACE,IAAI,EAAE,EADR;YAEE,OAAO,EAAE2Y,eAFX;YAGE,gBAAgB,EAAEA,eAAe,CAACha,EAAhB,KAAuB0O,OAAO,CAACuM,gBAAR,CAAyBjb,EAAhD,GAAqD,IAArD,GAA4D0O,OAAO,CAACuM;UAHxF;QAJJ,EADF,EAYG5Z,SAAS,gBACR,oBAAC,iCAAD;UAAoB,MAAM,EAAE;QAA5B,EADQ,gBAGR,qBAAC,gBAAD;UAAA,wBACE,oBAAC,4BAAD;YACE,OAAO,eAAE,oBAAC,sBAAD;cAAkB,EAAE,oBAApB;cAAwC,cAAc;gBAAA;gBAAA;cAAA;YAAtD,EADX;YAEE,SAAS,EAAE,CAFb;YAAA,uBAIE,oBAAC,yBAAD;cACE,EAAE,EAAEjC,mBADN;cAEE,gBAAgB,MAFlB;cAGE,IAAI,YAAK2Z,8CAAsB,CAACrK,OAAO,CAAC7J,OAAT,CAA3B,uBAAyD6J,OAAO,CAAC5J,QAAjE,CAHN;cAAA,uBAKE,oBAAC,2BAAD;gBACE,KAAK,EAAE4J,OAAO,CAAC2I,WADjB;gBAEE,SAAS,EAAE,GAFb;gBAGE,eAAe,EAAE,EAHnB;gBAIE,eAAe,EAAE,EAJnB;gBAKE,eAAe,EAAE,EALnB;gBAME,WAAW,EAAE,KANf;gBAOE,cAAc,EAAEyB,oBAPlB;gBAAA,UASG;kBAAA,IAAGpe,KAAH,SAAGA,KAAH;kBAAA,IAAUqC,QAAV,SAAUA,QAAV;kBAAA,oBACC,oBAAC,OAAD;oBACE,UAAU,EAAC,KADb;oBAEE,UAAU,EAAC,OAFb;oBAGE,cAAc,EAAC,MAHjB;oBAIE,KAAK,EAAC,WAJR;oBAKE,QAAQ,YAAKA,QAAL,OALV;oBAME,WAAQ,eANV;oBAAA,UAQGrC;kBARH,EADD;gBAAA;cATH;YALF;UAJF,EADF,eAmCE,qBAAC,MAAD;YAAG,EAAE,EAAC,KAAN;YAAY,QAAQ,EAAC,MAArB;YAA4B,KAAK,EAAC,WAAlC;YAAA,WACGwf,WAAW,gBACV,oBAAC,6BAAD;cAAgB,UAAU,EAAExL,OAAO,CAAC7J;YAApC,EADU,gBAGV,oBAAC,sBAAD;cAAA;cACE,cAAc;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;cAAA,EADhB;cAEE,MAAM,EAAE;gBACNoV,KAAK,eAAE,oBAAC,6BAAD;kBAAgB,UAAU,EAAEvL,OAAO,CAACuL;gBAApC,EADD;gBAENpV,OAAO,eAAE,oBAAC,6BAAD;kBAAgB,UAAU,EAAE6J,OAAO,CAAC7J;gBAApC;cAFH;YAFV,EAJJ,EAYG,KAZH,eAaE,oBAAC,uBAAD;cAAU,KAAK,EAAE6J,OAAO,CAACwM;YAAzB,EAbF,EAcGhB,WAAW,iBACV,qBAAC,cAAD;cAAA,WACG,KADH,eAEE,oBAAC,sBAAD;gBACE,EAAE,iBADJ;gBAEE,cAAc;kBAAA;kBAAA;gBAAA;kBAAA;kBAAA;gBAAA,EAFhB;gBAGE,MAAM,EAAE;kBACNiB,OAAO,eACL,oBAAC,mCAAD;oBACE,MAAM,EAAE,cACNzM,OAAO,CAAC7J,OADF,EAEN,4CAFM,EAGN,cAAI6J,OAAO,CAAC7J,OAAZ,EAAqB,+BAArB,EAAsD,CAAtD,CAHM,CADV;oBAME,QAAQ,EAAE6J,OAAO,CAAC7J,OAAR,CAAgB1J,QAN5B;oBAOE,YAAY,EAAE;sBAAE8D,KAAK,EAAE;oBAAT;kBAPhB;gBAFI;cAHV,EAFF;YAAA,EAfJ;UAAA,EAnCF;QAAA,EAfJ;MAAA,EADF,eA2FE,qBAAC,iBAAD;QAAM,aAAa,EAAE,CAAC,KAAD,EAAQ,QAAR,CAArB;QAAwC,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAA5C;QAAoD,QAAQ,EAAC,MAA7D;QAAoE,UAAU,EAAE,CAAC,QAAD,EAAW,UAAX,CAAhF;QAAA,wBACE,oBAAC,iBAAD;UACE,EAAE,EAAE,CADN;UAEE,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAFN;UAGE,aAAa,EAAC,QAHhB;UAIE,QAAQ,EAAE,GAJZ;UAKE,UAAU,EAAC,UALb;UAME,WAAQ,oBANV;UAAA,UAQGoC,SAAS,gBACR,oBAAC,iCAAD;YAAoB,MAAM,EAAE,EAA5B;YAAgC,KAAK,EAAE;UAAvC,EADQ,gBAGR,qBAAC,cAAD;YAAA,wBACE;cAAA,WACGqY,cAAc,iBAAI,oBAAC,8BAAD;gBAAiB,QAAQ,EAAED;cAA3B,EADrB,eAEE,oBAAC,iBAAD;gBAAM,KAAK,EAAC,WAAZ;gBAAwB,QAAQ,EAAC,MAAjC;gBAAA,uBACE,oBAAC,mCAAD;kBAAsB,MAAM,EAAE/K,OAAO,CAACzT,MAAtC;kBAA8C,QAAQ,EAAEyT,OAAO,CAACvT,QAAhE;kBAA0E,SAAS,EAAE;gBAArF;cADF,EAFF;YAAA,EADF,EAOG4f,eAAe,iBACd,oBAAC,wBAAD;cAAW,KAAK,EAAC,WAAjB;cAA6B,QAAQ,EAAC,MAAtC;cAA6C,EAAE,EAAE,CAAjD;cAAA,uBACE,oBAAC,yCAAD;gBAA4B,MAAM,EAAErM,OAAO,CAACsM;cAA5C;YADF,EARJ;UAAA;QAXJ,EADF,EA2BG3Z,SAAS,gBACR,oBAAC,iCAAD;UAAoB,MAAM,EAAE,EAA5B;UAAgC,KAAK,EAAE;QAAvC,EADQ,gBAGR,qBAAC,iBAAD;UAAA,WACG,CAAC6Y,WAAW,IAAIC,eAAhB,KAAoCG,cAApC,iBACC,oBAAC,gBAAD;YAAK,EAAE,EAAC,KAAR;YAAA,uBACE,oBAAC,4BAAD;cACE,OAAO,eACL,oBAAC,sBAAD;gBAAkB,EAAE,0BAApB;gBAA8C,cAAc;kBAAA;kBAAA;gBAAA;cAA5D,EAFJ;cAAA,uBAKE,oBAAC,sCAAD;gBAAe,IAAI,EAAE;cAArB;YALF;UADF,EAFJ,EAYG,CAACJ,WAAW,IAAIC,eAAhB,kBACC,oBAAC,6BAAD;YAAgB,IAAI,EAAEzL,OAAO,CAACpN,IAA9B;YAAoC,QAAQ,EAAEoN,OAAO,CAAC5J,QAAtD;YAAgE,EAAE,EAAE,CAApE;YAAuE,EAAE,EAAE,CAA3E;YAA8E,EAAE,EAAC,KAAjF;YAAuF,QAAQ,EAAC;UAAhG,EAbJ,EAeGgW,6BAA6B,gBAC5B,oBAAC,8BAAD;YAAuB,IAAI,EAAEjX,IAA7B;YAAmC,UAAU,EAAE6K,OAAO,CAAC7J,OAAvD;YAAgE,OAAO,EAAE6J,OAAzE;YAAkF,CAAC,EAAC;UAApF,EAD4B,gBAG5B,oBAAC,+BAAD;YACE,MAAM,EAAEA,OAAO,CAAC0F,MADlB;YAEE,QAAQ,EAAC,MAFX;YAGE,UAAU,EAAC,MAHb;YAIE,aAAa,EAAC,QAJhB;YAKE,UAAU,EAAC,MALb;YAME,CAAC,EAAC,SANJ;YAOE,cAAc,EAAE,mBAAS1F,OAAO,CAAC0M,sBAAjB,EAAyC,aAAzC,CAPlB;YAQE,cAAc,EAAE1M,OAAO,CAACuL,KAAR,CAAcoB;UARhC,EAlBJ;QAAA,EA9BJ;MAAA,EA3FF;IAAA,EADF,eA2JE,qBAAC,iBAAD;MAAM,QAAQ,EAAC,MAAf;MAAsB,cAAc,EAAC,eAArC;MAAqD,UAAU,EAAC,QAAhE;MAAyE,EAAE,EAAE,CAA7E;MAAA,wBACE,oBAAC,gBAAD;QAAK,EAAE,EAAE,CAAT;QAAA,UACGnB,WAAW,IAAIC,eAAf,gBACC,qBAAC,iBAAD;UAAA,wBACE,qBAAC,gBAAD;YAAK,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAT;YAAA,wBACE,oBAAC,kBAAD;cAAA,uBACE,oBAAC,sBAAD;gBAAkB,EAAE,wBAApB;gBAA4C,cAAc;kBAAA;kBAAA;gBAAA;cAA1D;YADF,EADF,eAIE,oBAAC,gBAAD;cAAK,EAAE,EAAC,KAAR;cAAA,uBACE,oBAAC,uCAAD;gBACE,SAAS,EAAE9Y,SADb;gBAEE,IAAI,EAAEqN,OAAF,aAAEA,OAAF,gDAAEA,OAAO,CAAE4M,YAAX,0DAAE,sBAAuBha,IAF/B;gBAGE,QAAQ,EAAC,MAHX;gBAIE,QAAQ,EAAC,MAJX;gBAKE,UAAU,EAAC,QALb;gBAME,KAAK,EAAC;cANR;YADF,EAJF;UAAA,EADF,EAgBGmZ,eAAe,GAAG,CAAlB,iBACC,qBAAC,gBAAD;YAAK,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAT;YAAA,wBACE,oBAAC,kBAAD;cAAA,uBACE,oBAAC,sBAAD;gBAAkB,EAAE,uBAApB;gBAA2C,cAAc;kBAAA;kBAAA;gBAAA;cAAzD;YADF,EADF,EAIGpZ,SAAS,gBACR,oBAAC,iCAAD;cAAoB,MAAM,EAAE,EAA5B;cAAgC,KAAK,EAAE;YAAvC,EADQ,gBAGR,qBAAC,2BAAD;cACE,KAAK,EAAC,WADR;cAEE,QAAQ,EAAC,MAFX;cAGE,MAAM,EAAC,SAHT;cAIE,UAAU,EAAC,MAJb;cAKE,OAAO,EAAE;gBAAA,OAAM0Y,gBAAgB,CAAC,IAAD,CAAtB;cAAA,CALX;cAME,EAAE,EAAE,CANN;cAOE,EAAE,EAAE,CAAC,CAPP;cAQE,YAAY,MARd;cAAA,wBAUE,oBAAC,8BAAD;gBAAc,IAAI,EAAE;cAApB,EAVF,2BAYE,oBAAC,sBAAD;gBACE,EAAE,6BADJ;gBAEE,cAAc;kBAAA;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA;sBAAA;wBAAA;wBAAA;sBAAA;oBAAA;oBAAA;sBAAA;wBAAA;sBAAA;wBAAA;wBAAA;sBAAA;oBAAA;kBAAA;kBAAA;kBAAA;gBAAA,EAFhB;gBAGE,MAAM,EAAE;kBAAEnK,KAAK,EAAE6K;gBAAT;cAHV,EAZF;YAAA,EAPJ;UAAA,EAjBJ;QAAA,EADD,gBAgDC,oBAAC,mBAAD;UACE,OAAO,EAAE/L,OADX;UAEE,OAAO,EAAE,cAAIA,OAAJ,EAAa,yBAAb,EAAwC,KAAxC,CAFX;UAGE,aAAa,EAAE9D;QAHjB;MAjDJ,EADF,EAyDG+O,kBAAkB,KAAIjL,OAAJ,aAAIA,OAAJ,uBAAIA,OAAO,CAAEqG,WAAb,CAAlB,IAA8C,CAAC2F,uBAA/C,iBACC,oBAAC,gBAAD;QAAA,uBACE,oBAAC,qCAAD;UACE,IAAI,EAAE7W,IADR;UAEE,UAAU,EAAE6K,OAAO,CAAC7J,OAFtB;UAGE,OAAO,EAAE6J,OAHX;UAIE,WAAW,EAAEA,OAAO,CAACqG,WAJvB;UAKE,WAAW,oEAAOkE,+DAAP;YAA0CsC,EAAE,EAAE,CAA9C;YAAiD/G,EAAE,EAAE;UAArD,EALb;UAME,SAAS,EAAEqF;QANb;MADF,EA1DJ;IAAA,EA3JF,EAiOGC,eAAe,iBACd,oBAAC,iCAAD;MACE,UAAU,EAAEpL,OAAO,CAAC7J,OADtB;MAEE,OAAO,EAAE6J,OAFX;MAGE,OAAO,EAAE;QAAA,OAAMqL,gBAAgB,CAAC,KAAD,CAAtB;MAAA;IAHX,EAlOJ;EAAA,EADF;AA2OD,CApQD;;AAiUAP,iBAAiB,CAAClc,YAAlB,GAAiC;EAC/Bsc,IAAI,EAAE;AADyB,CAAjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,6DAAeJ,iBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5ZA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMuC,SAAS,GAAGliB,wEAAM,CAACqI,2DAAD,CAAT;EAAA;EAAA;AAAA,mGAAf;AAQA6Z,SAAS,CAACze,YAAV,GAAyB;EACvB2B,KAAK,EAAE;AADgB,CAAzB;;AAIA,IAAM+c,UAAU,GAAG,SAAbA,UAAa;EAAA,IAAG/gB,MAAH,QAAGA,MAAH;EAAA,IAAcsD,KAAd;;EAAA,oBACjB,wDAAC,qCAAD;IAAG,QAAQ,EAAC,MAAZ;IAAmB,UAAU,EAAC,MAA9B;IAAqC,KAAK,EAAC,WAA3C;IAAA,uBAEE,wDAAC,uEAAD;MAAsB,MAAM,EAAEtD,MAAM,IAAI;IAAxC,GAAkDsD,KAAlD;EAFF,EADiB;AAAA,CAAnB;;AAWA,IAAM0d,aAAa,GAAGpiB,kGAAH;EAAA;EAAA;AAAA,4GASf,UAAA0E,KAAK;EAAA,OACLA,KAAK,CAAC2d,OAAN,IACA/V,iEADA,yBADK;AAAA,CATU,EAgBfyL,2DAhBe,CAAnB;;AAmBA,IAAMuK,WAAW,GAAG,SAAdA,WAAc,QAAuC;EAAA;;EAAA,IAApC1X,UAAoC,SAApCA,UAAoC;EAAA,IAAxB2X,KAAwB,SAAxBA,KAAwB;EAAA,IAAjBC,UAAiB,SAAjBA,UAAiB;;EACzD,eAAmBziB,gEAAO,EAA1B;EAAA,IAAQ0iB,MAAR,YAAQA,MAAR;;EACA,IAAMC,gBAAgB,GACpB,CAAC,0BAAAH,KAAK,CAACI,4BAAN,gFAAoCC,OAApC,KAA+C,CAAhD,IAAqD,CAAC,2BAAAL,KAAK,CAACI,4BAAN,kFAAoCE,MAApC,KAA8C,CAA/C,IAAoD,EAD3G;EAEA,IAAMC,MAAM,GAAGlY,UAAU,CAACnD,IAAX,KAAoBsa,0FAAnC;EACA,IAAMiB,YAAY,GAAG,CAACpY,UAAU,CAACqY,MAAZ,IAAsBnB,kFAAmB,CAAClX,UAAD,CAA9D;EACA,IAAMsY,SAAS,GAAG,CAAC,mBAAD,EAAsB,MAAtB,EAA8BV,UAAU,GAAG,IAAH,GAAU,mBAAlD,CAAlB;EAEA,oBACE,wDAAC,6DAAD;IACE,OAAO,EAAC,MADV;IAEE,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,WAAb,CAFR;IAGE,KAAK,EAAC,MAHR;IAIE,aAAa,EAAE,CAAC,QAAD,EAAW,KAAX,EAAkBA,UAAU,GAAG,IAAH,GAAU,QAAtC,CAJjB;IAKE,EAAE,EAAE,CALN;IAAA,UAOG,CAACQ,YAAD,gBACC,yDAAC,2CAAD;MAAA,wBACE,yDAAC,aAAD;QAAe,WAAQ,6BAAvB;QAAqD,OAAO,MAA5D;QAAA,wBACE,yDAAC,SAAD;UAAA,wBACE,wDAAC,2DAAD;YACE,OAAO,EAAC,cADV;YAEE,QAAQ,EAAC,MAFX;YAGE,EAAE,EAAC,KAHL;YAIE,UAAU,EAAC,KAJb;YAKE,KAAK,EAAC,MALR;YAME,SAAS,EAAC,QANZ;YAAA,UAQGf,gFAAiB,CAACrX,UAAU,CAACtJ,QAAZ;UARpB,EADF,EAWG,CAAC,CAACygB,gGAAD,EAAyBA,4FAAzB,EAA+Cf,QAA/C,CAAwDpW,UAAU,CAACnD,IAAnE,CAAD,gBACC,wDAAC,6DAAD;YACE,IAAI,EAAEjC,wEADR;YAEE,aAAa,EAAC,WAFhB;YAGE,KAAK,EAAC,WAHR;YAIE,mBAAmB,eACjB,wDAAC,2CAAD;cAAA,uBACE,wDAAC,iDAAD;gBAAK,EAAE,EAAE,CAAT;gBAAA,uBACE,wDAAC,4DAAD;kBACE,EAAE,sCADJ;kBAEE,cAAc;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;kBAAA,EAFhB;kBAGE,MAAM,EAAE;oBACNpE,MAAM,EAAE4gB,6EAAc,CAAC,CAAAO,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEc,mBAAP,CAA2B9hB,YAA3B,KAA2C,CAA5C,EAA+CqJ,UAAU,CAACtJ,QAA1D,EAAoE;sBACxFmhB,MAAM,EAANA;oBADwF,CAApE;kBADhB;gBAHV;cADF;YADF;UALJ,EADD,gBAsBC,wDAAC,kDAAD;YAAM,aAAa,EAAC,WAApB;YAAgC,KAAK,EAAC,WAAtC;YAAA,uBACE,wDAAC,4DAAD;cAAkB,EAAE,wCAApB;cAA4D,cAAc;gBAAA;gBAAA;cAAA;YAA1E;UADF,EAjCJ;QAAA,EADF,eAuCE,wDAAC,UAAD;UAAY,MAAM,EAAEF,KAAK,CAACjB,OAAN,CAAc/f,YAAlC;UAAgD,QAAQ,EAAEqJ,UAAU,CAACtJ;QAArE,EAvCF;MAAA,EADF,eA0CE,yDAAC,aAAD;QAAe,SAAS,EAAE4hB,SAA1B;QAAA,wBACE,yDAAC,SAAD;UAAA,wBACE,wDAAC,iFAAD;YAAW,IAAI,EAAC;UAAhB,EADF,EAEGtY,UAAU,CAACqY,MAAX,gBACC,wDAAC,6DAAD;YAAa,IAAI,EAAEzd,kFAAnB;YAAuC,aAAa,EAAC,WAArD;YAAiE,KAAK,EAAC;UAAvE,EADD,gBAGC,wDAAC,6DAAD;YACE,IAAI,EAAEA,kFADR;YAEE,aAAa,EAAC,WAFhB;YAGE,KAAK,EAAC,WAHR;YAIE,mBAAmB,eACjB,wDAAC,iDAAD;cAAK,EAAE,EAAE,CAAT;cAAA,uBACE,wDAAC,4DAAD;gBACE,EAAE,8BADJ;gBAEE,cAAc;kBAAA;kBAAA;gBAAA;kBAAA;kBAAA;gBAAA,EAFhB;gBAGE,MAAM,EAAE;kBACNpE,MAAM,EAAE4gB,6EAAc,CAAC,CAAAO,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEe,iBAAP,CAAyB/hB,YAAzB,KAAyC,CAA1C,EAA6CqJ,UAAU,CAACtJ,QAAxD,EAAkE;oBACtFmhB,MAAM,EAANA;kBADsF,CAAlE;gBADhB;cAHV;YADF;UALJ,EALJ;QAAA,EADF,eA0BE,wDAAC,UAAD;UAAY,MAAM,EAAEF,KAAK,CAACgB,oBAAN,CAA2BhiB,YAA/C;UAA6D,QAAQ,EAAEqJ,UAAU,CAACtJ;QAAlF,EA1BF;MAAA,EA1CF,eAsEE,yDAAC,aAAD;QAAe,SAAS,EAAE4hB,SAA1B;QAAA,wBACE,yDAAC,SAAD;UAAA,wBACE,wDAAC,iFAAD;YAAQ,IAAI,EAAC;UAAb,EADF,eAEE,wDAAC,4DAAD;YAAkB,EAAE,2BAApB;YAA+C,cAAc;cAAA;cAAA;YAAA;UAA7D,EAFF;QAAA,EADF,eAKE,wDAAC,UAAD;UACE,MAAM,EAAEX,KAAK,CAACgB,oBAAN,CAA2BhiB,YAA3B,GAA0CghB,KAAK,CAACjB,OAAN,CAAc/f,YADlE;UAEE,QAAQ,EAAEqJ,UAAU,CAACtJ;QAFvB,EALF;MAAA,EAtEF,EAgFG,CAACwhB,MAAD,iBACC,yDAAC,aAAD;QAAe,WAAQ,gCAAvB;QAAwD,SAAS,EAAEI,SAAnE;QAAA,wBACE,yDAAC,SAAD;UAAA,wBACE,wDAAC,8EAAD;YAAU,IAAI,EAAC;UAAf,EADF,eAEE,wDAAC,6DAAD;YACE,IAAI,EAAE1d,0FADR;YAEE,aAAa,EAAC,WAFhB;YAGE,KAAK,EAAC,WAHR;YAIE,mBAAmB,eACjB,yDAAC,2CAAD;cAAA,wBACE,wDAAC,iDAAD;gBAAK,EAAE,EAAE,CAAT;gBAAA,uBACE,wDAAC,4DAAD;kBACE,EAAE,uDADJ;kBAEE,cAAc;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;kBAAA,EAFhB;kBAGE,MAAM,EAAE;oBAAEpE,MAAM,EAAE4gB,6EAAc,CAACU,gBAAD,EAAmB9X,UAAU,CAACtJ,QAA9B,EAAwC;sBAAEmhB,MAAM,EAANA;oBAAF,CAAxC;kBAAxB;gBAHV;cADF,EADF,eAQE,wDAAC,iDAAD;gBAAK,EAAE,EAAE,CAAT;gBAAA,uBACE,wDAAC,4DAAD;kBACE,EAAE,oDADJ;kBAEE,cAAc;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;kBAAA,EAFhB;kBAGE,MAAM,EAAE;oBACNrhB,MAAM,EAAE4gB,6EAAc,CAAC,CAAAO,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEiB,mBAAP,CAA2BjiB,YAA3B,KAA2C,CAA5C,EAA+CqJ,UAAU,CAACtJ,QAA1D,EAAoE;sBACxFmhB,MAAM,EAANA;oBADwF,CAApE;kBADhB;gBAHV;cADF,EARF;YAAA;UALJ,EAFF;QAAA,EADF,eA+BE,wDAAC,UAAD;UAAY,MAAM,EAAEF,KAAK,CAACkB,YAAN,CAAmBliB,YAAvC;UAAqD,QAAQ,EAAEqJ,UAAU,CAACtJ;QAA1E,EA/BF;MAAA,EAjFJ;IAAA,EADD,gBAsHC,yDAAC,2CAAD;MAAA,wBACE,yDAAC,aAAD;QAAe,WAAQ,iCAAvB;QAAA,wBACE,yDAAC,SAAD;UAAA,sCAEE,wDAAC,4DAAD;YAAA;YAAkB,cAAc;cAAA;cAAA;YAAA;UAAhC,EAFF;QAAA,EADF,eAKE,wDAAC,UAAD;UACE,MAAM,EAAEG,IAAI,CAACiiB,GAAL,CAASnB,KAAK,CAACoB,gBAAN,CAAuBpiB,YAAhC,CADV;UAEE,QAAQ,EAAEghB,KAAK,CAACoB,gBAAN,CAAuBriB;QAFnC,EALF;MAAA,EADF,eAWE,yDAAC,aAAD;QAAe,WAAQ,mCAAvB;QAA2D,SAAS,EAAE4hB,SAAtE;QAAA,wBACE,yDAAC,SAAD;UAAA,sCAEE,wDAAC,4DAAD;YAAA;YAAkB,cAAc;cAAA;cAAA;YAAA;UAAhC,EAFF;QAAA,EADF,eAKE,wDAAC,UAAD;UAAY,MAAM,EAAEX,KAAK,CAACqB,iBAAN,CAAwBriB,YAA5C;UAA0D,QAAQ,EAAEghB,KAAK,CAACqB,iBAAN,CAAwBtiB;QAA5F,EALF;MAAA,EAXF;IAAA;EA7HJ,EADF;AAoJD,CA5JD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA,sEAAe1B,uCAAA,CAAW0iB,WAAX,CAAf;;;;;;;;;;AC3PA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;AACA,IAAMwB,uBAAuB,GAAG9jB,uEAAM,CAACqI,2DAAD,CAAN,CAAkBmE,KAAlB,CAAwB;EACtDuX,QAAQ,EAAEF,gGAD4C;EAEtDnJ,EAAE,EAAEmJ,gFAFkD;EAGtDK,CAAC,EAAE;AAHmD,CAAxB,CAAH;EAAA;EAAA;AAAA,QAA7B;AAMA;;AACA,yDAAeJ,uBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMe,kCAAkC,GAAG5c,qEAAH,w3BAAxC;AAoCO,IAAM6c,kBAAkB,GAAG7c,qEAAH,k3BAwB3Byc,0GAxB2B,EAyB3BH,8FAzB2B,EA0B3BM,kCA1B2B,CAAxB;AA6BA,IAAME,+BAA+B,GAAG9c,qEAAH,mgCAmCxCyc,0GAnCwC,EAoCxCH,8FApCwC,CAArC;AAuCA,IAAMS,0BAA0B,GAAG/c,qEAAH,g+BA4BnCyc,0GA5BmC,EA6BnCH,8FA7BmC,EA8BnCD,qFA9BmC,EA+BnCO,kCA/BmC,CAAhC;AAkCA,IAAMI,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,OAAD,EAAUlC,YAAV,EAA2B;EAC9D,IAAIkC,OAAJ,EAAa;IACX,OAAOF,0BAAP;EACD,CAFD,MAEO,IAAIhC,YAAJ,EAAkB;IACvB,OAAO+B,+BAAP;EACD,CAFM,MAEA;IACL,OAAOD,kBAAP;EACD;AACF,CARM,EAUP;;AACO,IAAMK,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,cAAD,EAAiBC,QAAjB,EAA2BrC,YAA3B,EAA4C;EACxF,IAAIA,YAAJ,EAAkB;IAChB,OAAO;MAAEsC,IAAI,EAAEF,cAAR;MAAwB9P,KAAK,EAAE,CAA/B;MAAkCiQ,IAAI,EAAEd,wGAAe,GAAGrX,MAAlB,CAAyB,UAAAmY,IAAI;QAAA,OAAIA,IAAI,KAAKnB,kGAAb;MAAA,CAA7B;IAAxC,CAAP;EACD,CAFD,MAEO;IACL,OAAO;MAAEkB,IAAI,EAAEF,cAAR;MAAwBC,QAAQ,EAARA,QAAxB;MAAkC/P,KAAK,EAAE,CAAzC;MAA4CiQ,IAAI,EAAEd,wGAAe;IAAjE,CAAP;EACD;AACF,CANM;AAQP,IAAMgB,mBAAmB,GAAGzlB,kGAAH;EAAA;EAAA;AAAA,aACrB,UAAA0E,KAAK;EAAA,OACL,CAACA,KAAK,CAACghB,QAAP,IACApZ,iEADA,mCADK;AAAA,CADgB,CAAzB;AAQA,IAAMqZ,OAAO,GAAG,CAAC,KAAD,EAAQ,UAAR,EAAoB,cAApB,CAAhB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACxY,MAAD,EAAS4V,YAAT,EAA0B;EAC9C,QAAQ5V,MAAR;IACE,KAAK,KAAL;MACE,oBAAO,wDAAC,4DAAD;QAAkB,EAAE,2BAApB;QAA+C,cAAc;UAAA;UAAA;QAAA;MAA7D,EAAP;;IACF,KAAK,UAAL;MACE,oBAAO,wDAAC,4DAAD;QAAkB,EAAE,YAApB;QAAgC,cAAc;UAAA;UAAA;QAAA;MAA9C,EAAP;;IACF,KAAK,cAAL;MACE,OAAO4V,YAAY,gBACjB,wDAAC,4DAAD;QAAkB,EAAE,iBAApB;QAAqC,cAAc;UAAA;UAAA;QAAA;MAAnD,EADiB,gBAGjB,wDAAC,4DAAD;QAAkB,EAAE,qBAApB;QAAyC,cAAc;UAAA;UAAA;QAAA;MAAvD,EAHF;;IAKF;MACE,OAAO,IAAP;EAZJ;AAcD,CAfD;;AAiBA,IAAM6C,cAAc,GAAG,SAAjBA,cAAiB,CAACC,YAAD,EAAeC,QAAf,EAAyB3Y,MAAzB,EAAoC;EACzD,IAAIA,MAAM,KAAK,UAAf,EAA2B;IACzB,OAAO2Y,QAAP;EACD,CAFD,MAEO,IAAI3Y,MAAM,KAAK,cAAf,EAA+B;IACpC,OAAO0Y,YAAP;EACD,CAFM,MAEA;IACL,IAAME,UAAU,GAAGD,QAAQ,CAACnjB,GAAT,CAAa,UAAAiS,OAAO;MAAA,OAAIA,OAAO,CAAC1O,EAAZ;IAAA,CAApB,CAAnB;IACA,IAAM8f,kCAAkC,GAAGH,YAAY,CAAC1Y,MAAb,CACzC,UAAA8Y,WAAW;MAAA;;MAAA,OAAI,CAACF,UAAU,CAAChF,QAAX,yBAAoBkF,WAAW,CAACrR,OAAhC,yDAAoB,qBAAqB1O,EAAzC,CAAL;IAAA,CAD8B,CAA3C;IAGA,OAAO,0OAAY8f,kCAAZ,6KAAmDF,QAAnD,IAA8D,WAA9D,EAA2E,MAA3E,EAAmFlQ,KAAnF,CAAyF,CAAzF,EAA4F,CAA5F,CAAP;EACD;AACF,CAZD;;AAcA,IAAMsQ,WAAW,GAAG,SAAdA,WAAc,OAAwE;EAAA,IAArEvb,UAAqE,QAArEA,UAAqE;EAAA,IAAzDwC,MAAyD,QAAzDA,MAAyD;EAAA,IAAjDgZ,WAAiD,QAAjDA,WAAiD;EAAA,IAApCC,eAAoC,QAApCA,eAAoC;EAAA,IAAnBrD,YAAmB,QAAnBA,YAAmB;EAC1F,IAAMsD,WAAW,GAAGlZ,MAAM,KAAK,KAA/B;;EACA,IAAIA,MAAM,KAAK,UAAX,IAA0BkZ,WAAW,IAAIF,WAAf,IAA8B,CAACC,eAA7D,EAA+E;IAC7E,oBACE,wDAAC,uDAAD;MACE,IAAI,YAAKnH,mFAAsB,CAACtU,UAAD,CAA3B,cAA2CoY,YAAY,GAAG,oBAAH,GAA0B,UAAjF,CADN;MAEE,WAAQ,wBAFV;MAAA,uBAIE;QAAA,wBACE,wDAAC,4DAAD;UAAkB,EAAE,gDAApB;UAAoE,cAAc;YAAA;YAAA;UAAA;QAAlF,EADF;MAAA;IAJF,EADF;EAWD,CAZD,MAYO,IAAIsD,WAAW,IAAItD,YAAnB,EAAiC;IACtC,oBACE,yDAAC,uDAAD;MAAM,IAAI,YAAK9D,mFAAsB,CAACtU,UAAD,CAA3B,kBAAV;MAAkE,WAAQ,4BAA1E;MAAA,wBACE,wDAAC,4DAAD;QAAkB,EAAE,wBAApB;QAA4C,cAAc;UAAA;UAAA;QAAA;MAA1D,EADF;IAAA,EADF;EAMD,CAPM,MAOA,IAAIwC,MAAM,KAAK,cAAX,IAA8BkZ,WAAW,IAAID,eAAf,IAAkC,CAACD,WAArE,EAAmF;IACxF,OAAOpD,YAAY,gBACjB,yDAAC,uDAAD;MACE,IAAI,YAAK9D,mFAAsB,CAACtU,UAAD,CAA3B,6DADN;MAEE,WAAQ,4BAFV;MAAA,wBAIE,wDAAC,4DAAD;QACE,EAAE,qDADJ;QAEE,cAAc;UAAA;UAAA;QAAA;MAFhB,EAJF;IAAA,EADiB,gBAYjB,yDAAC,uDAAD;MAAM,IAAI,YAAKsU,mFAAsB,CAACtU,UAAD,CAA3B,kBAAV;MAAkE,WAAQ,4BAA1E;MAAA,wBACE,wDAAC,4DAAD;QAAkB,EAAE,wCAApB;QAA4D,cAAc;UAAA;UAAA;QAAA;MAA1E,EADF;IAAA,EAZF;EAgBD,CAjBM,MAiBA;IACL,OAAO,IAAP;EACD;AACF,CAzCD;;AAmDA;AACA;AACA;AACA;AACA,IAAM2b,aAAa,GAAG,SAAhBA,aAAgB,QAAkC;EAAA;;EAAA,IAA/B3b,UAA+B,SAA/BA,UAA+B;EAAA,IAAnB4b,YAAmB,SAAnBA,YAAmB;;EACtD,sBAA4B5mB,2CAAA,CAAe,KAAf,CAA5B;EAAA;EAAA,IAAOwN,MAAP;EAAA,IAAeqZ,SAAf;;EACA,IAAMzD,YAAY,GAAGlB,kFAAmB,CAAClX,UAAD,CAAnB,IAAmC,CAACA,UAAU,CAACqY,MAApE;EACA,IAAMyD,iBAAiB,GAAGvC,yDAAQ,CAACc,qBAAqB,CAAClb,OAAO,CAACa,UAAU,CAACZ,IAAZ,CAAR,EAA2BgZ,YAA3B,CAAtB,EAAgE;IAChGjY,SAAS,EAAEoa,8BAA8B,CAACva,UAAU,CAAC0a,IAAZ,sBAAkB1a,UAAU,CAACZ,IAA7B,qDAAkB,iBAAiBsb,IAAnC,EAAyCtC,YAAzC,CADuD;IAEhG3Y,OAAO,EAAEjC,yEAAcA;EAFyE,CAAhE,CAAlC;EAIA,IAAQue,IAAR,GAA0BD,iBAA1B,CAAQC,IAAR;EAAA,IAAcC,OAAd,GAA0BF,iBAA1B,CAAcE,OAAd;EAEA,IAAMd,YAAY,GAAG,kDAAIa,IAAJ,EAAU,oBAAV,KAAmCtC,sEAAxD;EACA,IAAM0B,QAAQ,GAAG,kDAAIY,IAAJ,EAAU,gBAAV,KAA+BtC,sEAAhD;EACA,IAAMwC,iBAAiB,GAAG,CAACf,YAAD,EAAeC,QAAf,EAAyB3Y,MAAzB,CAA1B;EACA,IAAM0Z,QAAQ,GAAGlnB,0CAAA,CAAc;IAAA,OAAMimB,cAAc,MAAd,SAAkBgB,iBAAlB,CAAN;EAAA,CAAd,EAA0DA,iBAA1D,CAAjB;EACA,IAAMrf,SAAS,GAAG,CAACsf,QAAQ,CAAC5kB,MAAV,IAAoBwkB,iBAAiB,CAAClc,OAAxD;EACA,IAAM4b,WAAW,GAAGrc,OAAO,CAACgc,QAAQ,CAAC7jB,MAAV,CAA3B;EACA,IAAMmkB,eAAe,GAAGtc,OAAO,CAAC+b,YAAY,CAAC5jB,MAAd,CAA/B,CAfsD,CAiBtD;;EACAtC,4CAAA,CAAgB,YAAM;IACpB,IAAI4mB,YAAJ,EAAkB;MAChBI,OAAO;IACR;EACF,CAJD,EAIG,CAACJ,YAAD,CAJH;EAMA,oBACE,yDAAC,0EAAD;IAAyB,EAAE,EAAE,CAA7B;IAAA,WACG,CAACJ,WAAW,IAAIC,eAAhB,kBACC,yDAAC,kDAAD;MACE,EAAE,EAAE,CADN;MAEE,QAAQ,EAAC,MAFX;MAGE,cAAc,EAAC,eAHjB;MAIE,UAAU,EAAC,QAJb;MAKE,QAAQ,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,kBAAf,CALZ;MAAA,wBAOE,wDAAC,gEAAD;QACE,OAAO,EAAEV,OADX;QAEE,QAAQ,EAAE,kBAAAvY,MAAM;UAAA,OAAIwY,aAAa,CAACxY,MAAD,EAAS4V,YAAT,CAAjB;QAAA,CAFlB;QAGE,QAAQ,EAAE5V,MAHZ;QAIE,QAAQ,EAAEqZ;MAJZ,EAPF,eAaE,wDAAC,WAAD;QACE,UAAU,EAAE7b,UADd;QAEE,MAAM,EAAEwC,MAFV;QAGE,WAAW,EAAEgZ,WAHf;QAIE,eAAe,EAAEC,eAJnB;QAKE,YAAY,EAAErD;MALhB,EAbF;IAAA,EAFJ,eAwBE,yDAAC,kDAAD;MAAM,aAAa,EAAE,CAAC,gBAAD,EAAmB,IAAnB,EAAyB,KAAzB,CAArB;MAAsD,cAAc,EAAC,eAArE;MAAqF,UAAU,EAAC,YAAhG;MAAA,wBACE,wDAAC,4DAAD;QAAW,IAAI,EAAC,IAAhB;QAAqB,EAAE,EAAE,CAAzB;QAA4B,KAAK,EAAC,MAAlC;QAAyC,QAAQ,EAAE,GAAnD;QAAA,uBACE,wDAAC,6DAAD;UAAA,UACGxb,SAAS,gBACR,wDAAC,qEAAD;YAAoB,MAAM,EAAE;UAA5B,EADQ,GAEN,CAACsf,QAAQ,CAAC5kB,MAAV,gBACF,yDAAC,4DAAD;YAAW,SAAS,EAAC,QAArB;YAA8B,EAAE,EAAE,EAAlC;YAAsC,EAAE,EAAE,CAA1C;YAAA,wBACE,wDAAC,wDAAD;cAAO,GAAG,EAAC,+BAAX;cAA2C,GAAG,EAAC,YAA/C;cAA4D,KAAK,EAAE,GAAnE;cAAwE,MAAM,EAAE;YAAhF,EADF,eAEE,wDAAC,qCAAD;cAAG,UAAU,EAAC,KAAd;cAAoB,QAAQ,EAAC,MAA7B;cAAoC,UAAU,EAAC,MAA/C;cAAA,uBACE,wDAAC,4DAAD;gBAAkB,EAAE,gBAApB;gBAAoC,cAAc;kBAAA;kBAAA;gBAAA;cAAlD;YADF,EAFF,eAKE,wDAAC,qCAAD;cAAG,EAAE,EAAE,CAAP;cAAU,QAAQ,EAAC,MAAnB;cAA0B,UAAU,EAAC,MAArC;cAA4C,KAAK,EAAC,WAAlD;cAAA,uBACE,wDAAC,4DAAD;gBACE,EAAE,6BADJ;gBAEE,cAAc;kBAAA;kBAAA;gBAAA;cAFhB;YADF,EALF;UAAA,EADE,GAcF4kB,QAAQ,CAAClkB,GAAT,CAAa,UAAC4Z,IAAD,EAAOuK,GAAP,EAAe;YAC1B,oBACE,wDAAC,mBAAD;cAEE,QAAQ,EAAE,CAACA,GAFb;cAGE,WAAQ,oBAHV;cAAA,UAKGvK,IAAI,CAACwK,UAAL,KAAoB,SAApB,gBACC,wDAAC,yEAAD;gBAAA,uBACE,wDAAC,2EAAD;kBAAmB,OAAO,EAAExK,IAA5B;kBAAkC,IAAI,EAAEmK,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE3c,IAA9C;kBAAoD,cAAc,MAAlE;kBAAmE,kBAAkB;gBAArF;cADF,EADD,gBAKC,wDAAC,+EAAD;gBACE,WAAW,EAAEwS,IADf;gBAEE,UAAU,EAAE5R,UAFd;gBAGE,cAAc,MAHhB;gBAIE,iBAAiB,EAAEgc;cAJrB;YAVJ,aACUpK,IAAI,CAACwK,UADf,cAC6B,CAAAxK,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAErW,EAAN,KAAY4gB,GADzC,EADF;UAoBD,CArBD;QAjBJ;MADF,EADF,eA6CE,wDAAC,iDAAD;QAAK,KAAK,EAAC,MAAX;QAAkB,IAAI,EAAC;MAAvB,EA7CF,EA+CGvf,SAAS,gBACR,wDAAC,qEAAD;QAAoB,MAAM,EAAE;MAA5B,EADQ,gBAGR,wDAAC,8DAAD;QAAa,UAAU,EAAEoD,UAAzB;QAAqC,KAAK,EAAE+b,IAAF,aAAEA,IAAF,wCAAEA,IAAI,CAAE3b,OAAR,kDAAE,cAAeuX;MAA3D,EAlDJ;IAAA,EAxBF;EAAA,EADF;AAgFD,CAxGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA,uEAAe3iB,uCAAA,CAAWglB,kEAAQ,CAAC2B,aAAD,CAAnB,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtZA;AACA;AAEA;;;AAEA,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAAAxiB,KAAK;EAAA,oBAAI,oBAAC,yBAAD,oBAAiBA,KAAjB,EAAJ;AAAA,CAA7B;;AAOAwiB,eAAe,CAACzjB,YAAhB,GAA+B;EAC7B;EACA0jB,MAAM,EAAE,gBAACtU,GAAD,EAAMnO,KAAN;IAAA,oBAAgB,oBAAC,2BAAD;MAAa,GAAG,EAAEmO;IAAlB,GAA2BnO,KAA3B,EAAhB;EAAA;AAFqB,CAA/B;;;;;;;;;;;;;;;;AAKA,+DAAewiB,eAAf;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAM5d,aAAa,GAAG;EACpBme,UAAU,EAAEhe,SADQ;EAEpBmB,UAAU,EAAEnB,SAFQ;EAGpBie,UAAU,EAAEje,SAHQ;EAIpBke,GAAG,EAAEle,SAJe;EAKpBme,QAAQ,EAAEne,SALU;EAMpBoe,QAAQ,EAAEpe,SANU;EAOpBqe,QAAQ,EAAEre;AAPU,CAAtB;AAUA,IAAMse,4BAA4B,GAAG9f,uBAAH,qYAAlC;AAeA,IAAM+f,sBAAsB,GAAG/f,uBAAH,8WAA5B;;AAmBA,IAAMggB,aAAa,GAAG,mBAAS,UAACC,UAAD,EAAand,SAAb,EAA2B;EACxD,OAAOmd,UAAU,CAAC;IAAEnd,SAAS,EAATA;EAAF,CAAD,CAAjB;AACD,CAFqB,EAEnB,GAFmB,CAAtB;;AAIA,IAAMod,sBAAsB,GAAG,SAAzBA,sBAAyB,OAA6D;EAAA;;EAAA,IAA1Dvd,UAA0D,QAA1DA,UAA0D;EAAA,IAA9CZ,IAA8C,QAA9CA,IAA8C;EAAA,IAAxCkB,SAAwC,QAAxCA,SAAwC;EAAA,IAA7BG,OAA6B,QAA7BA,OAA6B;EAAA,IAAjB+c,UAAiB;;EAC1F,iBAAqB/e,mCAAS,EAA9B;EAAA,IAAQe,QAAR,cAAQA,QAAR;;EACA,mBAAoDlC,sBAAW,CAAC6f,4BAAD,EAA+B;IAC5F1d,OAAO,EAAEjC,6BAAcA;EADqE,CAA/B,CAA/D;EAAA;EAAA,IAAOigB,oBAAP;EAAA,IAAwCC,MAAxC,oBAA+B9d,OAA/B;;EAGA,oBAAuE4c,uBAAY,CAACY,sBAAD,EAAyB;IAC1G3d,OAAO,EAAEjC,6BAAcA;EADmF,CAAzB,CAAnF;EAAA;EAAA,IAAOmgB,kBAAP;EAAA;EAAA,IAAsCC,cAAtC,mBAA6Bhe,OAA7B;EAAA,IAA4Die,KAA5D,mBAAsD9B,IAAtD;;EAIA,IAAMhc,MAAM,GAAGxC,gCAAS,CAAC;IACvBmB,aAAa,EAAE,4EACVA,aADQ;MAEXsB,UAAU,EAAVA;IAFW,EADU;IAKjBC,QALiB,oBAKRC,MALQ,EAKA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACbF,UADa,GACgCE,MADhC,CACbF,UADa,EACDgd,QADC,GACgC9c,MADhC,CACD8c,QADC,EACSC,QADT,GACgC/c,MADhC,CACS+c,QADT,EACmBC,QADnB,GACgChd,MADhC,CACmBgd,QADnB;gBAEfY,WAFe,GAED;kBAClBjB,UAAU,EAAE3c,MAAM,CAAC2c,UAAP,CAAkBkB,OAAlB,CAA0B,MAA1B,EAAkC,EAAlC,CADM;kBAElBhB,GAAG,EAAE7c,MAAM,CAAC6c,GAFM;kBAGlBD,UAAU,EAAE5c,MAAM,CAAC4c,UAHD;kBAIlB;kBACAkB,UAAU,EAAE9d,MAAM,CAAC4c;gBALD,CAFC;gBAAA;gBAAA;gBAAA,OAWbW,oBAAoB,CAAC;kBACzBtd,SAAS,EAAE;oBACT8d,WAAW,EAAE;sBACXH,WAAW,EAAXA,WADW;sBAEXb,QAAQ,EAARA,QAFW;sBAGXpK,IAAI,EAAEqK;oBAHK,CADJ;oBAMTF,QAAQ,EAAE;sBAAEzhB,EAAE,EAAEyhB,QAAQ,CAACzhB;oBAAf,CAND;oBAOT6E,OAAO,EAAE,OAAOJ,UAAU,CAACzE,EAAlB,KAAyB,QAAzB,GAAoC;sBAAEA,EAAE,EAAEyE,UAAU,CAACzE;oBAAjB,CAApC,GAA4D;sBAAE8E,QAAQ,EAAEL,UAAU,CAACzE;oBAAvB;kBAP5D;gBADc,CAAD,CAXP;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAuBnBiE,QAAQ,CAAC;kBACP3C,IAAI,EAAE2B,+CADC;kBAEPgC,OAAO,eACL,oBAAC,sBAAD;oBACE,EAAE,sCADJ;oBAEE,cAAc;sBAAA;sBAAA;oBAAA;sBAAA;sBAAA;oBAAA,EAFhB;oBAGE,MAAM,EAAE;sBACNV,KAAK,EAAE,YAAEU;oBADH;kBAHV;gBAHK,CAAD,CAAR;gBAvBmB;;cAAA;gBAqCrBF,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS;gBACTO,WAAW;;cAtCU;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAuCtB,CA5CsB;IA6CvBH,QA7CuB,oBA6CdR,MA7Cc,EA6CN;MACf,IAAMS,MAAM,GAAG,EAAf;;MACA,IAAI,CAACT,MAAM,CAAC2c,UAAZ,EAAwB;QACtBlc,MAAM,CAACkc,UAAP,GAAoB,UAApB;MACD,CAFD,MAEO,IAAI3c,MAAM,CAAC2c,UAAP,CAAkBvlB,MAAlB,GAA2B,KAAK,CAApC,EAAuC;QAC5CqJ,MAAM,CAACkc,UAAP,GAAoB,iCAApB;MACD;;MACD,IAAI,CAAC3c,MAAM,CAACF,UAAZ,EAAwB;QACtBW,MAAM,CAACX,UAAP,GAAoB,UAApB;MACD;;MACD,IAAI,CAACE,MAAM,CAAC+c,QAAZ,EAAsB;QACpBtc,MAAM,CAACsc,QAAP,GAAkB,UAAlB;MACD;;MACD,IAAI,CAAC/c,MAAM,CAACgd,QAAZ,EAAsB;QACpBvc,MAAM,CAACuc,QAAP,GAAkB,UAAlB;MACD;;MACD,IAAI,CAAChd,MAAM,CAAC8c,QAAZ,EAAsB;QACpBrc,MAAM,CAACqc,QAAP,GAAkB,UAAlB;MACD;;MACD,IAAI,CAAC9c,MAAM,CAAC4c,UAAZ,EAAwB;QACtBnc,MAAM,CAACmc,UAAP,GAAoB,UAApB;MACD;;MACD,IAAI,CAAC5c,MAAM,CAAC6c,GAAZ,EAAiB;QACfpc,MAAM,CAACoc,GAAP,GAAa,UAAb;MACD;;MACD,OAAOpc,MAAP;IACD;EAvEsB,CAAD,CAAxB;EA0EAgT,mBAAS,CAAC,YAAM;IAAA;;IACd,6BAAI5T,MAAM,CAACG,MAAP,CAAcF,UAAlB,kDAAI,sBAA0B0a,IAA9B,EAAoC;MAClC2C,aAAa,CAACM,kBAAD,EAAqB;QAAEjD,IAAI,EAAE3a,MAAM,CAACG,MAAP,CAAcF,UAAd,CAAyB0a;MAAjC,CAArB,CAAb;IACD;EACF,CAJQ,EAIN,CAAC3a,MAAM,CAACG,MAAP,CAAcF,UAAf,CAJM,CAAT;;EAMA,IAAMa,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxBd,MAAM,CAACme,SAAP,CAAiBxf,aAAjB;IACAqB,MAAM,CAACe,SAAP,CAAiB,EAAjB;IACAL,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;EACR,CAJD;;EAKA,IAAM0d,oBAAoB;IAAA,gFAAG,kBAAMC,MAAN;MAAA;QAAA;UAAA;YAAA;cAC3Bre,MAAM,CAACmB,aAAP,CAAqB,YAArB,EAAmCkd,MAAM,CAACnoB,KAA1C;cACA8J,MAAM,CAACmB,aAAP,CAAqB,UAArB,EAAiC,IAAjC;;YAF2B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAApBid,oBAAoB;MAAA;IAAA;EAAA,GAA1B;;EAKA,IAAME,eAAe,GAAGR,KAAH,aAAGA,KAAH,yCAAGA,KAAK,CAAEzd,OAAV,mDAAG,eAAgBke,OAAhB,CAAwBC,KAAxB,CAA8BvmB,GAA9B,CAAkC,UAAAwmB,IAAI;IAAA,OAAIA,IAAI,CAACpe,OAAT;EAAA,CAAtC,CAAxB;EAEA,oBACE,oBAAC,2BAAD;IAAa,KAAK,EAAC,OAAnB;IAA2B,OAAO,EAAES,WAApC;IAAiD,SAAS;EAA1D,GAA+D2c,UAA/D;IAAA,uBACE;MAAM,QAAQ,EAAEzd,MAAM,CAACgB,YAAvB;MAAA,wBACE,oBAAC,+BAAD;QAAa,OAAO,EAAEF,WAAtB;QAAA,uBACE,oBAAC,sBAAD;UAAkB,EAAE,gCAApB;UAAoD,cAAc;YAAA;YAAA;UAAA;QAAlE;MADF,EADF,eAIE,qBAAC,6BAAD;QAAW,EAAE,EAAE,CAAf;QAAA,wBACE,oBAAC,MAAD;UAAA,uBACE,oBAAC,sBAAD;YACE,EAAE,4CADJ;YAEE,cAAc;cAAA;cAAA;YAAA;UAFhB;QADF,EADF,eAOE,oBAAC,uBAAD;UAAU,WAAW,EAAC,WAAtB;UAAkC,EAAE,EAAE;QAAtC,EAPF,eAQE,qBAAC,iBAAD;UAAM,EAAE,EAAE,CAAV;UAAa,mBAAmB,EAAC,gBAAjC;UAAkD,OAAO,EAAC,UAA1D;UAAA,wBACE,oBAAC,+BAAD;YACE,UAAU,EAAC,KADb;YAEE,aAAa,EAAC,MAFhB;YAGE,KAAK,eAAE,oBAAC,sBAAD;cAAA;cAAkB,cAAc;gBAAA;gBAAA;cAAA;YAAhC,EAHT;YAIE,OAAO,EAAC,YAJV;YAKE,KAAK,EAAEd,MAAM,CAACiB,OAAP,CAAehB,UAAf,IAA6BD,MAAM,CAACY,MAAP,CAAcX,UALpD;YAAA,UAOG,kBAAAiB,UAAU;cAAA,oBACT,oBAAC,oCAAD,8EACMA,UADN;gBAEE,iBAAiB,EAAE,CAAC7B,IAAI,CAACiB,QAAN,CAFrB;gBAGE,IAAI,EAAC,YAHP;gBAIE,EAAE,EAAC,YAJL;gBAKE,UAAU,EAAEN,MAAM,CAACG,MAAP,CAAcF,UAL5B;gBAME,UAAU,EAAE,CAAC,CAACA,UAAF,IAAgB0d,MAN9B;gBAOE,aAAa,EAAE,CAAC;kBAEZznB,KAAK,EAAEmJ,IAFI;kBAGX6G,KAAK,EAAE7G,IAAI,CAACyT;gBAHD,GAIV6J,0DAJU,EAI0B,IAJ1B,EAPjB;gBAcE,QAAQ,EAAEyB,oBAdZ;gBAeE,aAAa,EAAE,uBAAAM,WAAW;kBAAA,OAAIA,WAAW,CAACjc,MAAZ,CAAmB,UAAAkc,CAAC;oBAAA,OAAIA,CAAC,CAACC,QAAN;kBAAA,CAApB,CAAJ;gBAAA;cAf5B,GADS;YAAA;UAPb,EADF,eA4BE,oBAAC,+BAAD;YACE,UAAU,EAAC,KADb;YAEE,aAAa,EAAC,MAFhB;YAGE,KAAK,eAAE,oBAAC,sBAAD;cAAA;cAAkB,cAAc;gBAAA;gBAAA;cAAA;YAAhC,EAHT;YAIE,OAAO,EAAC,UAJV;YAKE,KAAK,EAAE5e,MAAM,CAACiB,OAAP,CAAegc,QAAf,IAA2Bjd,MAAM,CAACY,MAAP,CAAcqc,QALlD;YAAA,UAOG,kBAAA/b,UAAU;cAAA,oBACT,oBAAC,gCAAD,8EACMA,UADN;gBAEE,IAAI,EAAC,UAFP;gBAGE,EAAE,EAAC,UAHL;gBAIE,WAAW,EAAE,KAJf;gBAKE,WAAW,EAAEod,eALf;gBAME,UAAU,EAAEte,MAAM,CAACG,MAAP,CAAc8c,QAN5B;gBAOE,UAAU,EAAEY,cAAc,IAAIF,MAPhC;gBAQE,QAAQ,EAAE,kBAAAU,MAAM;kBAAA,OAAIre,MAAM,CAACmB,aAAP,CAAqB,UAArB,EAAiCkd,MAAM,CAACnoB,KAAxC,CAAJ;gBAAA;cARlB,GADS;YAAA;UAPb,EA5BF,eAiDE,oBAAC,+BAAD;YACE,UAAU,EAAC,KADb;YAEE,aAAa,EAAC,MAFhB;YAGE,KAAK,EAAC,iDAHR;YAIE,OAAO,EAAC,UAJV;YAKE,KAAK,EAAE8J,MAAM,CAACiB,OAAP,CAAeic,QAAf,IAA2Bld,MAAM,CAACY,MAAP,CAAcsc,QALlD;YAAA,UAOG,kBAAAhc,UAAU;cAAA,oBACT,oBAAC,4BAAD,8EACMA,UADN;gBAEE,EAAE,EAAC,UAFL;gBAGE,OAAO,EAAC,UAHV;gBAIE,WAAW,EAAC,QAJd;gBAKE,OAAO,EAAE,CACP;kBAAEiH,GAAG,EAAE,SAAP;kBAAkBjS,KAAK,EAAE,SAAzB;kBAAoCgQ,KAAK,EAAE;gBAA3C,CADO,EAEP;kBAAEiC,GAAG,EAAE,QAAP;kBAAiBjS,KAAK,EAAE,QAAxB;kBAAkCgQ,KAAK,EAAE;gBAAzC,CAFO,CALX;gBASE,YAAY,EAAE,KAThB;gBAUE,QAAQ,EAAEyX,MAVZ;gBAWE,QAAQ,EAAE,kBAAAU,MAAM;kBAAA,OAAIre,MAAM,CAACmB,aAAP,CAAqB,UAArB,EAAiCkd,MAAM,CAACnoB,KAAxC,CAAJ;gBAAA;cAXlB,GADS;YAAA;UAPb,EAjDF,eAyEE,oBAAC,+BAAD;YACE,UAAU,EAAC,KADb;YAEE,aAAa,EAAC,MAFhB;YAGE,KAAK,eAAE,oBAAC,sBAAD;cAAA;cAAkB,cAAc;gBAAA;gBAAA;cAAA;YAAhC,EAHT;YAIE,OAAO,EAAC,UAJV;YAKE,KAAK,EAAE8J,MAAM,CAACiB,OAAP,CAAekc,QAAf,IAA2Bnd,MAAM,CAACY,MAAP,CAAcuc,QALlD;YAAA,UAOG,kBAAAjc,UAAU;cAAA,oBACT,oBAAC,2BAAD,8EACMA,UADN;gBAEE,IAAI,EAAC,UAFP;gBAGE,EAAE,EAAC,UAHL;gBAIE,QAAQ,EAAElB,MAAM,CAACoB,YAJnB;gBAKE,KAAK,EAAEpB,MAAM,CAACG,MAAP,CAAcgd,QALvB;gBAME,QAAQ,EAAEQ,MANZ;gBAOE,KAAK,EAAE;cAPT,GADS;YAAA;UAPb,EAzEF,eA6FE,oBAAC,+BAAD;YACE,UAAU,EAAC,KADb;YAEE,aAAa,EAAC,MAFhB;YAGE,KAAK,eAAE,oBAAC,sBAAD;cAAA;cAAkB,cAAc;gBAAA;gBAAA;cAAA;YAAhC,EAHT;YAIE,OAAO,EAAC,QAJV;YAKE,KAAK,EAAE3d,MAAM,CAACiB,OAAP,CAAe6b,UAAf,IAA6B9c,MAAM,CAACY,MAAP,CAAckc,UALpD;YAAA,UAOG,kBAAA5b,UAAU;cAAA,oBACT,oBAAC,0BAAD,8EACMA,UADN;gBAEE,IAAI,EAAC,YAFP;gBAGE,EAAE,EAAC,YAHL;gBAIE,QAAQ,EAAElB,MAAM,CAACoB,YAJnB;gBAKE,KAAK,EAAEpB,MAAM,CAACG,MAAP,CAAc2c,UALvB;gBAME,IAAI,EAAE,CACJ,IADI,EAEJ,IAFI,EAGJ,IAHI,EAIJ,IAJI,EAKJ,GALI,EAMJ,GANI,EAOJ,IAPI,EAQJ,IARI,EASJ,IATI,EAUJ,IAVI,EAWJ,GAXI,EAYJ,GAZI,EAaJ,IAbI,EAcJ,IAdI,EAeJ,IAfI,EAgBJ,IAhBI,EAiBJ,GAjBI,EAkBJ,GAlBI,EAmBJ,IAnBI,EAoBJ,IApBI,EAqBJ,IArBI,EAsBJ,IAtBI,CANR;gBA8BE,MAAM,EAAE,gBAAC5U,GAAD,EAAMnO,KAAN;kBAAA,oBACN,oBAAC,+BAAD;oBACE,OAAO,eAAE,oBAAC,yBAAD;sBAAY,MAAM,EAAC,MAAnB;sBAA0B,KAAK,EAAE;wBAAE8kB,SAAS,EAAE;sBAAb;oBAAjC,EADX;oBAEE,YAAY,EAAE;sBAAEC,EAAE,EAAE,aAAN;sBAAqBC,EAAE,EAAE;oBAAzB,CAFhB;oBAGE,QAAQ,EAAE7W;kBAHZ,GAIMnO,KAJN,EADM;gBAAA,CA9BV;gBAsCE,QAAQ,EAAE4jB,MAtCZ;gBAuCE,KAAK,EAAE;cAvCT,GADS;YAAA;UAPb,EA7FF,eAgJE,oBAAC,+BAAD;YACE,aAAa,EAAC,MADhB;YAEE,KAAK,eAAE,oBAAC,sBAAD;cAAA;cAAkB,cAAc;gBAAA;gBAAA;cAAA;YAAhC,EAFT;YAGE,OAAO,EAAC,YAHV;YAIE,KAAK,EAAE3d,MAAM,CAACiB,OAAP,CAAe8b,UAAf,IAA6B/c,MAAM,CAACY,MAAP,CAAcmc,UAJpD;YAAA,UAMG,kBAAA7b,UAAU;cAAA,oBACT,oBAAC,0BAAD,8EACMA,UADN;gBAEE,IAAI,EAAC,YAFP;gBAGE,EAAE,EAAC,YAHL;gBAIE,QAAQ,EAAElB,MAAM,CAACoB,YAJnB;gBAKE,KAAK,EAAEpB,MAAM,CAACG,MAAP,CAAc4c,UALvB;gBAME,IAAI,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,IAA9B,EAAoC,IAApC,CANR;gBAOE,WAAW,EAAC,SAPd;gBAQE,KAAK,EAAE,KART;gBASE,QAAQ,EAAEY;cATZ,GADS;YAAA;UANb,EAhJF,eAoKE,oBAAC,+BAAD;YACE,aAAa,EAAC,MADhB;YAEE,KAAK,eAAE,oBAAC,sBAAD;cAAA;cAAkB,cAAc;gBAAA;gBAAA;cAAA;YAAhC,EAFT;YAGE,OAAO,EAAC,KAHV;YAIE,KAAK,EAAE3d,MAAM,CAACiB,OAAP,CAAe+b,GAAf,IAAsBhd,MAAM,CAACY,MAAP,CAAcoc,GAJ7C;YAAA,UAMG,kBAAA9b,UAAU;cAAA,oBACT,oBAAC,0BAAD,8EACMA,UADN;gBAEE,EAAE,EAAC,KAFL;gBAGE,IAAI,EAAC,KAHP;gBAIE,QAAQ,EAAElB,MAAM,CAACoB,YAJnB;gBAKE,KAAK,EAAEpB,MAAM,CAACG,MAAP,CAAc6c,GALvB;gBAME,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CANR;gBAOE,KAAK,EAAE,KAPT;gBAQE,WAAW,EAAC,KARd;gBASE,QAAQ,EAAEW;cATZ,GADS;YAAA;UANb,EApKF;QAAA,EARF;MAAA,EAJF,eAsME,oBAAC,+BAAD;QAAa,WAAW,MAAxB;QAAA,uBACE,oBAAC,wBAAD;UAAW,OAAO,EAAC,MAAnB;UAA0B,cAAc,EAAE,CAAC,QAAD,EAAW,UAAX,CAA1C;UAAkE,QAAQ,EAAC,MAA3E;UAAA,uBACE,oBAAC,2BAAD;YACE,EAAE,EAAE,CADN;YAEE,QAAQ,EAAE,GAFZ;YAGE,WAAW,EAAC,SAHd;YAIE,WAAQ,6BAJV;YAKE,OAAO,EAAEA,MALX;YAME,IAAI,EAAC,QANP;YAOE,aAAa,EAAC,YAPhB;YAAA,uBASE,oBAAC,sBAAD;cAAkB,EAAE,YAApB;cAAgC,cAAc;gBAAA;gBAAA;cAAA;YAA9C;UATF;QADF;MADF,EAtMF;IAAA;EADF,GADF;AA0ND,CA/TD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqVA;AACA,2EAAeH,sBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/ZA;AAEA;AAEO,IAAMyB,wCAAwC,GAAG3kB,iCAAc,kEACnE0kB,0DADmE,EAC/B;EACnCxjB,EAAE,iDADiC;EAEnCnC,cAAc;IAAA;IAAA;EAAA;AAFqB,CAD+B,6CAKnE2lB,oDALmE,EAKlC;EAChCxjB,EAAE,8CAD8B;EAEhCnC,cAAc;IAAA;IAAA;EAAA;AAFkB,CALkC,6CASnE2lB,wDATmE,EAShC;EAClCxjB,EAAE,gDADgC;EAElCnC,cAAc;IAAA;IAAA;EAAA;AAFoB,CATgC,6CAanE2lB,4EAbmE,EAatB;EAC5CxjB,EAAE,0DAD0C;EAE5CnC,cAAc;IAAA;IAAA;EAAA;AAF8B,CAbsB,6CAiBnE2lB,sDAjBmE,EAiBjC;EACjCxjB,EAAE,+CAD+B;EAEjCnC,cAAc;IAAA;IAAA;EAAA;AAFmB,CAjBiC,6CAqBnE2lB,sDArBmE,EAqBjC;EACjCxjB,EAAE,+CAD+B;EAEjCnC,cAAc;IAAA;IAAA;EAAA;AAFmB,CArBiC,oBAA/D;AA2BA,IAAMmmB,4BAA4B,GAAGllB,iCAAc,oEACvD0kB,0DADuD,EACnB;EAAA;EACnC3lB,cAAc;IAAA;IAAA;EAAA;AADqB,CADmB,8CAIvD2lB,oDAJuD,EAItB;EAChCxjB,EAAE,mCAD8B;EAEhCnC,cAAc;IAAA;IAAA;EAAA;AAFkB,CAJsB,8CAQvD2lB,wDARuD,EAQpB;EAClCxjB,EAAE,qBADgC;EAElCnC,cAAc;IAAA;IAAA;EAAA;AAFoB,CARoB,8CAYvD2lB,4EAZuD,EAYV;EAC5CxjB,EAAE,+CAD0C;EAE5CnC,cAAc;IAAA;IAAA;EAAA;AAF8B,CAZU,8CAgBvD2lB,sDAhBuD,EAgBrB;EACjCxjB,EAAE,QAD+B;EAEjCnC,cAAc;IAAA;IAAA;EAAA;AAFmB,CAhBqB,8CAoBvD2lB,sDApBuD,EAoBrB;EACjCxjB,EAAE,oBAD+B;EAEjCnC,cAAc;IAAA;IAAA;EAAA;AAFmB,CApBqB,qBAAnD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BP;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMymB,uBAAuB,GAAGxiB,uBAAH,6oBAA7B;AA6BA,IAAMyiB,yBAAyB,GAAGziB,uBAAH,ihBAA/B,EAuBA;;AACA,IAAM+f,sBAAsB,GAAG/f,uBAAH,8WAA5B;AAmBA,IAAM0iB,wBAAwB,GAAG1iB,uBAAH,soBAA9B;;AA8BA,IAAMggB,aAAa,GAAG,mBAAS,UAACC,UAAD,EAAand,SAAb,EAA2B;EACxD,OAAOmd,UAAU,CAAC;IAAEnd,SAAS,EAATA;EAAF,CAAD,CAAjB;AACD,CAFqB,EAEnB,GAFmB,CAAtB;;AAae,SAAS6f,oBAAT,OAOe;EAAA;;EAAA,IAN5B5gB,IAM4B,QAN5BA,IAM4B;EAAA,IAL5BY,UAK4B,QAL5BA,UAK4B;EAAA,IAJ5Bie,WAI4B,QAJ5BA,WAI4B;EAAA,IAH5B3d,SAG4B,QAH5BA,SAG4B;EAAA,IAF5BG,OAE4B,QAF5BA,OAE4B;EAAA,IAD5B+c,UAC4B,QAD5BA,UAC4B;;EAC5B,iBAAqB/e,mCAAS,EAA9B;EAAA,IAAQe,QAAR,cAAQA,QAAR;;EAEA,gBAAuD+Z,mBAAQ,CAACwG,wBAAD,EAA2B;IACxFtgB,OAAO,EAAEjC,6BAD+E;IAExF2C,SAAS,EAAE;MACTua,IAAI,EAAEtb,IAAI,CAACsb;IADF;EAF6E,CAA3B,CAA/D;EAAA,IAAcuF,UAAd,aAAQlE,IAAR;EAAA,IAAmCmE,eAAnC,aAA0BtgB,OAA1B;;EAOA,IAAMugB,8CAA8C,GAClDF,UADkD,aAClDA,UADkD,8CAClDA,UAAU,CAAE7f,OADsC,iFAClD,oBAAqBggB,QAD6B,0DAClD,sBAA+BD,8CADjC;EAGA,IAAME,SAAS,GAAGpC,WAAW,SAAX,IAAAA,WAAW,WAAX,IAAAA,WAAW,CAAE1iB,EAAb,GAAkB,IAAlB,GAAyB,KAA3C;EACA,IAAM+kB,YAAY,GAAGD,SAAS,GAAGR,uBAAH,GAA6BC,yBAA3D;;EAEA,mBAA0CxiB,sBAAW,CAACgjB,YAAD,EAAe;IAClE7gB,OAAO,EAAEjC,6BAAcA;EAD2C,CAAf,CAArD;EAAA;EAAA,IAAO+iB,UAAP;EAAA,IAA8B7C,MAA9B,oBAAqB9d,OAArB;;EAGA,oBAAuE4c,uBAAY,CAACY,sBAAD,EAAyB;IAC1G3d,OAAO,EAAEjC,6BAAcA;EADmF,CAAzB,CAAnF;EAAA;EAAA,IAAOmgB,kBAAP;EAAA;EAAA,IAAsCC,cAAtC,mBAA6Bhe,OAA7B;EAAA,IAA4Die,KAA5D,mBAAsD9B,IAAtD;;EAIA,uBAAyB4D,kCAAe,EAAxC;EAAA,IAAQ/D,YAAR,oBAAQA,YAAR;;EACA,IAAM4E,WAAW,GAAG5E,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAE6E,OAAd,CAAsBhB,gCAAtB,EAAmCrgB,IAAnC,CAApB;EAEA,IAAMuhB,YAAY,GAAGH,WAAW,KAAK,CAACH,SAAD,IAAcpC,WAAW,CAAChB,QAAZ,KAAyB,QAA5C,CAAhC;EACA,IAAMvmB,QAAQ,qCAAGunB,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEvnB,QAAhB,yEAA4B0I,IAAI,CAAC1I,QAAjC,yCAA6C,KAA3D;EAEA,IAAMqJ,MAAM,GAAGxC,gCAAS,CAAC;IACvBmB,aAAa,EAAE;MACbsB,UAAU,EAAEqgB,SAAS,GAAGxhB,SAAH,GAAemB,UADvB;MAEbkd,QAAQ,EAAEe,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEpL,IAFV;MAGbmK,QAAQ,EAAEiB,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEjB,QAHV;MAIb4D,WAAW,EAAED,YAAY,GAAG1C,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAE4C,mBAAhB,GAAsChiB,SAJlD;MAKbiiB,aAAa,EAAEH,YAAY,4BAAG1C,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAE8C,qBAAhB,yEAAyChC,wDAAzC,GAA4ElgB;IAL1F,CADQ;IAQjBoB,QARiB,oBAQRC,MARQ,EAQA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBACb8c,QADa,GACkD9c,MADlD,CACb8c,QADa,EACHE,QADG,GACkDhd,MADlD,CACHgd,QADG,EACO0D,WADP,GACkD1gB,MADlD,CACO0gB,WADP,EACoBE,aADpB,GACkD5gB,MADlD,CACoB4gB,aADpB,EACmC9gB,UADnC,GACkDE,MADlD,CACmCF,UADnC;gBAAA;gBAIbG,SAJa,GAID;kBAChB8d,WAAW,EAAEoC,SAAS,GAAG;oBAAE9kB,EAAE,EAAE0iB,WAAW,CAAC1iB;kBAAlB,CAAH,GAA4BsD,SADlC;kBAEhBuB,OAAO,EAAEigB,SAAS,GACdxhB,SADc,GAEd,OAAOmB,UAAU,CAACzE,EAAlB,KAAyB,QAAzB,GACA;oBAAEA,EAAE,EAAEyE,UAAU,CAACzE;kBAAjB,CADA,GAEA;oBAAE8E,QAAQ,EAAEL,UAAU,CAACzE;kBAAvB,CANY;kBAOhBsX,IAAI,EAAEqK,QAPU;kBAQhBF,QAAQ,EAAE;oBAAEzhB,EAAE,EAAEyhB,QAAQ,CAACzhB;kBAAf,CARM;kBAShBqlB,WAAW,EAAE/hB,SATG;kBAUhBiiB,aAAa,EAAEjiB;gBAVC,CAJC;;gBAiBnB,IAAI8hB,YAAJ,EAAkB;kBAChBxgB,SAAS,CAACygB,WAAV,GAAwB;oBACtBlqB,QAAQ,EAARA,QADsB;oBAEtBC,YAAY,EAAEiqB,WAFQ;oBAGtB3qB,KAAK,EAAE2qB,WAAW,GAAG;kBAHC,CAAxB;kBAMAzgB,SAAS,CAAC2gB,aAAV,GAA0BA,aAA1B;gBACD;;gBAzBkB;gBAAA,OA2BbP,UAAU,CAAC;kBAAEpgB,SAAS,EAATA;gBAAF,CAAD,CA3BG;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBA6BnBX,QAAQ,CAAC;kBACP3C,IAAI,EAAE2B,+CADC;kBAEPgC,OAAO,eACL,oBAAC,sBAAD;oBAAA;oBACE,cAAc;sBAAA;sBAAA;oBAAA;sBAAA;sBAAA;oBAAA,EADhB;oBAEE,MAAM,EAAE;sBACNV,KAAK,EAAE,YAAEU;oBADH;kBAFV;gBAHK,CAAD,CAAR;gBA7BmB;;cAAA;gBA2CrBF,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,eAAG,oBAAC,sBAAD;kBAAA;kBAAkB,cAAc;oBAAA;oBAAA;kBAAA;gBAAhC,EAAH,CAAT;gBACAO,WAAW;;cA5CU;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IA6CtB,CArDsB;IAsDvBH,QAtDuB,oBAsDdR,MAtDc,EAsDD;MACpB,IAAMS,MAAW,GAAG,EAApB;;MACA,IAAI,CAAC0f,SAAD,IAAc,CAACngB,MAAM,CAACF,UAA1B,EAAsC;QACpCW,MAAM,CAACX,UAAP,GAAoB,UAApB;MACD;;MAED,IAAI,CAACE,MAAM,CAAC8c,QAAZ,EAAsB;QACpBrc,MAAM,CAACqc,QAAP,GAAkB,UAAlB;MACD;;MACD,IAAI,CAAC9c,MAAM,CAACgd,QAAZ,EAAsB;QACpBvc,MAAM,CAACuc,QAAP,GAAkB,UAAlB;MACD;;MACD,IAAIyD,YAAY,IAAI,CAACzgB,MAAM,CAAC0gB,WAA5B,EAAyC;QACvCjgB,MAAM,CAACigB,WAAP,GAAqB,UAArB;MACD;;MACD,IAAI1gB,MAAM,CAAC4gB,aAAX,EAA0B;QACxB,IAAME,uBAAuB,GAAGtB,oDAAyB,CACvDS,8CAA8C,CAACjgB,MAAM,CAAC4gB,aAAR,CADS,CAAzD;;QAGA,IAAI5gB,MAAM,CAAC0gB,WAAP,GAAqBI,uBAAuB,GAAG,GAAnD,EAAwD;UACtDrgB,MAAM,CAACigB,WAAP,uDAAkEI,uBAAlE,cAA6FtqB,QAA7F;QACD;MACF;;MACD,OAAOiK,MAAP;IACD;EA9EsB,CAAD,CAAxB;EAiFA,IAAMsgB,cAAc,GAAGZ,SAAS,GAAGpC,WAAW,CAAC7d,OAAf,GAAyBL,MAAM,CAACG,MAAP,CAAcF,UAAvE;EAEA2T,mBAAS,CAAC,YAAM;IACd,IAAIsN,cAAJ,aAAIA,cAAJ,eAAIA,cAAc,CAAEvG,IAApB,EAA0B;MACxB2C,aAAa,CAACM,kBAAD,EAAqB;QAAEjD,IAAI,EAAEuG,cAAc,CAACvG;MAAvB,CAArB,CAAb;IACD;EACF,CAJQ,EAIN,CAACuG,cAAD,CAJM,CAAT;EAMA,IAAMjrB,IAAI,GAAGb,0BAAO,EAApB;;EAEA,IAAM0L,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxBJ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO;EACR,CAFD;;EAIA,IAAMygB,uBAAuB,GAAGC,MAAM,CAACtQ,IAAP,CAAYkO,wCAAZ,EAAsC/mB,GAAtC,CAA0C,UAAAopB,QAAQ;IAAA,OAAK;MACrFnrB,KAAK,EAAEmrB,QAD8E;MAErFnb,KAAK,EAAEjQ,IAAI,CAACsD,aAAL,CAAmBimB,4BAA4B,CAAC6B,QAAD,CAA/C;IAF8E,CAAL;EAAA,CAAlD,CAAhC;EAKA,IAAM/C,eAAe,GAAGR,KAAH,aAAGA,KAAH,yCAAGA,KAAK,CAAEzd,OAAV,mDAAG,eAAgBke,OAAhB,CAAwBC,KAAxB,CAA8BvmB,GAA9B,CAAkC,UAAAwmB,IAAI;IAAA,OAAIA,IAAI,CAACpe,OAAT;EAAA,CAAtC,CAAxB;EAEA,oBACE,oBAAC,2BAAD;IAAa,KAAK,EAAC,OAAnB;IAA2B,OAAO,EAAES,WAApC;IAAiD,SAAS;EAA1D,GAA+D2c,UAA/D;IAAA,uBACE;MAAM,QAAQ,EAAEzd,MAAM,CAACgB,YAAvB;MAAA,wBACE,oBAAC,+BAAD;QAAa,OAAO,EAAEF,WAAtB;QAAmC,aAAa,EAAE,KAAlD;QAAA,UACGwf,SAAS,gBACR,oBAAC,sBAAD;UAAA;UAAkB,cAAc;YAAA;YAAA;UAAA;QAAhC,EADQ,gBAGR,oBAAC,sBAAD;UAAA;UAAkB,cAAc;YAAA;YAAA;UAAA;QAAhC;MAJJ,EADF,eAQE,qBAAC,6BAAD;QAAW,EAAE,EAAE,CAAf;QAAA,wBACE,oBAAC,MAAD;UAAA,UACGA,SAAS,gBACR,oBAAC,sBAAD;YAAA;YAAkB,cAAc;cAAA;cAAA;YAAA;UAAhC,EADQ,gBAGR,oBAAC,sBAAD;YAAA;YAAkB,cAAc;cAAA;cAAA;YAAA;UAAhC;QAJJ,EADF,eAQE,oBAAC,uBAAD;UAAU,WAAW,EAAC,WAAtB;UAAkC,EAAE,EAAE;QAAtC,EARF,eASE,qBAAC,iBAAD;UAAM,aAAa,EAAC,QAApB;UAA6B,EAAE,EAAE,CAAjC;UAAA,WACG,CAACA,SAAD,iBACC,oBAAC,+BAAD;YACE,EAAE,EAAE,CADN;YAEE,aAAa,EAAC,MAFhB;YAGE,eAAe,EAAC,MAHlB;YAIE,KAAK,eAAE,oBAAC,sBAAD;cAAA;cAAkB,cAAc;gBAAA;gBAAA;cAAA;YAAhC,EAJT;YAKE,OAAO,EAAC,YALV;YAME,KAAK,EAAEtgB,MAAM,CAACiB,OAAP,CAAehB,UAAf,IAA6BD,MAAM,CAACY,MAAP,CAAcX,UANpD;YAAA,UAQG,kBAAAiB,UAAU;cAAA,oBACT,oBAAC,oCAAD,kCACMA,UADN;gBAEE,iBAAiB,EAAE,CAAC7B,IAAI,CAACiB,QAAN,CAFrB;gBAGE,IAAI,EAAC,YAHP;gBAIE,EAAE,EAAC,YAJL;gBAKE,UAAU,EAAEN,MAAM,CAACG,MAAP,CAAcF,UAL5B;gBAME,UAAU,EAAE,CAAC,CAACA,UAAF,IAAgB0d,MAN9B;gBAOE,aAAa,EAAE,CAAC;kBAEZznB,KAAK,EAAEmJ,IAFI;kBAGX6G,KAAK,EAAE7G,IAAI,CAACyT;gBAHD,GAIV6J,0DAJU,EAI0B,IAJ1B,EAPjB;gBAcE,QAAQ,EAAE,kBAAA0B,MAAM,EAAI;kBAClBre,MAAM,CAACmB,aAAP,CAAqB,YAArB,EAAmCkd,MAAM,CAACnoB,KAA1C;kBACA8J,MAAM,CAACmB,aAAP,CAAqB,UAArB,EAAiC,IAAjC;gBACD,CAjBH;gBAkBE,aAAa,EAAE,uBAAAud,WAAW;kBAAA,OAAIA,WAAW,CAACjc,MAAZ,CAAmB,UAAAkc,CAAC;oBAAA,OAAIA,CAAC,CAACC,QAAN;kBAAA,CAApB,CAAJ;gBAAA;cAlB5B,GADS;YAAA;UARb,EAFJ,eAmCE,oBAAC,+BAAD;YACE,aAAa,EAAC,MADhB;YAEE,eAAe,EAAC,MAFlB;YAGE,KAAK,eAAE,oBAAC,sBAAD;cAAA;cAAkB,cAAc;gBAAA;gBAAA;cAAA;YAAhC,EAHT;YAIE,OAAO,EAAC,UAJV;YAKE,KAAK,EAAE5e,MAAM,CAACiB,OAAP,CAAegc,QAAf,IAA2Bjd,MAAM,CAACY,MAAP,CAAcqc,QALlD;YAAA,UAOG,kBAAA/b,UAAU;cAAA,oBACT,oBAAC,gCAAD,kCACMA,UADN;gBAEE,IAAI,EAAC,UAFP;gBAGE,EAAE,EAAC,UAHL;gBAIE,WAAW,EAAE,KAJf;gBAKE,WAAW,EAAEod,eALf;gBAME,UAAU,EAAEte,MAAM,CAACG,MAAP,CAAc8c,QAN5B;gBAOE,UAAU,EAAEY,cAAc,IAAIF,MAPhC;gBAQE,QAAQ,EAAE,kBAAAU,MAAM;kBAAA,OAAIre,MAAM,CAACmB,aAAP,CAAqB,UAArB,EAAiCkd,MAAM,CAACnoB,KAAxC,CAAJ;gBAAA;cARlB,GADS;YAAA;UAPb,EAnCF,eAwDE,oBAAC,+BAAD;YACE,EAAE,EAAE,CADN;YAEE,eAAe,EAAC,MAFlB;YAGE,aAAa,EAAC,MAHhB;YAIE,KAAK,eAAE,oBAAC,sBAAD;cAAA;cAAkB,cAAc;gBAAA;gBAAA;cAAA;YAAhC,EAJT;YAKE,OAAO,EAAC,UALV;YAME,KAAK,EAAE8J,MAAM,CAACiB,OAAP,CAAekc,QAAf,IAA2Bnd,MAAM,CAACY,MAAP,CAAcuc,QANlD;YAAA,UAQG,kBAAAjc,UAAU;cAAA,oBACT,oBAAC,2BAAD,kCACMA,UADN;gBAEE,IAAI,EAAC,UAFP;gBAGE,EAAE,EAAC,UAHL;gBAIE,WAAW,EAAEjL,IAAI,CAACsD,aAAL,CAAmB;kBAAA;kBAAEF,cAAc;oBAAA;oBAAA;kBAAA;gBAAhB,CAAnB,CAJf;gBAKE,QAAQ,EAAE2G,MAAM,CAACoB,YALnB;gBAME,KAAK,EAAEpB,MAAM,CAACG,MAAP,CAAcgd,QANvB;gBAOE,QAAQ,EAAEQ,MAPZ;gBAQE,KAAK,EAAE;cART,GADS;YAAA;UARb,EAxDF,EA8EGiD,YAAY,iBACX,qBAAC,cAAD;YAAA,wBACE,qBAAC,iBAAD;cAAM,EAAE,EAAE,CAAV;cAAa,KAAK,EAAC,MAAnB;cAA0B,UAAU,EAAC,YAArC;cAAkD,cAAc,EAAC,eAAjE;cAAA,wBACE,oBAAC,+BAAD;gBACE,QAAQ,EAAE,CADZ;gBAEE,aAAa,EAAC,MAFhB;gBAGE,eAAe,EAAC,MAHlB;gBAIE,KAAK,eACH,oBAAC,sBAAD;kBAAA;kBACE,cAAc;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;oBAAA;sBAAA;sBAAA;oBAAA;kBAAA,EADhB;kBAEE,MAAM,EAAE;oBACNU,IAAI,EAAEzB,sCAAW,CAAC;sBAChB0B,EAAE,EAAE3mB,mBADY;sBAEhBoR,YAAY,EAAE,IAFE;sBAGhBwV,IAAI,EAAE;oBAHU,CAAD;kBADX;gBAFV,EALJ;gBAgBE,OAAO,EAAC,eAhBV;gBAAA,UAkBG,kBAAAtgB,UAAU;kBAAA,oBACT,oBAAC,4BAAD,kCACMA,UADN;oBAEE,OAAO,EAAC,eAFV;oBAGE,WAAQ,eAHV;oBAIE,KAAK,EAAElB,MAAM,CAACiB,OAAP,CAAe4f,WAAf,IAA8BzhB,OAAO,CAACY,MAAM,CAACY,MAAP,CAAcigB,WAAf,CAJ9C;oBAKE,MAAM,EAAE;sBAAA,OAAM7gB,MAAM,CAACyhB,eAAP,CAAuB,eAAvB,EAAwC,IAAxC,CAAN;oBAAA,CALV;oBAME,QAAQ,EAAE;sBAAA,IAAGvrB,KAAH,SAAGA,KAAH;sBAAA,OAAe8J,MAAM,CAACmB,aAAP,CAAqB,eAArB,EAAsCjL,KAAtC,CAAf;oBAAA,CANZ;oBAOE,SAAS,EAAEynB,MAPb;oBAQE,OAAO,EAAEwD,uBARX;oBASE,KAAK,EAAEA,uBAAuB,CAACO,IAAxB,CAA6B,UAAArD,MAAM;sBAAA,OAAIA,MAAM,CAACnoB,KAAP,KAAiB8J,MAAM,CAACG,MAAP,CAAc4gB,aAAnC;oBAAA,CAAnC;kBATT,GADS;gBAAA;cAlBb,EADF,eAiCE,oBAAC,+BAAD;gBACE,EAAE,EAAE,CADN;gBAEE,aAAa,EAAC,MAFhB;gBAGE,eAAe,EAAC,MAHlB;gBAIE,KAAK,eAAE,oBAAC,sBAAD;kBAAA;kBAAkB,cAAc;oBAAA;oBAAA;kBAAA;gBAAhC,EAJT;gBAKE,OAAO,EAAC,aALV;gBAAA,UAOG,kBAAA7f,UAAU;kBAAA,oBACT,oBAAC,gCAAD,kCACMA,UADN;oBAEE,EAAE,EAAC,aAFL;oBAGE,WAAW,EAAC,MAHd;oBAIE,KAAK,EAAElB,MAAM,CAACiB,OAAP,CAAe4f,WAAf,IAA8BzhB,OAAO,CAACY,MAAM,CAACY,MAAP,CAAcigB,WAAf,CAJ9C;oBAKE,QAAQ,EAAElqB,QALZ;oBAME,OAAO,EAAEA,QANX;oBAOE,QAAQ,EAAE,kBAAAT,KAAK;sBAAA,OAAI8J,MAAM,CAACmB,aAAP,CAAqB,aAArB,EAAoCjL,KAApC,CAAJ;oBAAA,CAPjB;oBAQE,KAAK,EAAE8J,MAAM,CAACG,MAAP,CAAc0gB,WARvB;oBASE,QAAQ,EAAElD;kBATZ,GADS;gBAAA;cAPb,EAjCF;YAAA,EADF,eAwDE,oBAAC,gBAAD;cAAK,EAAE,EAAE,CAAT;cAAA,uBACE,oBAAC,iBAAD;gBAAM,EAAE,EAAE,CAAV;gBAAA,UACG1nB,IAAI,CAACsD,aAAL,CAAmB0lB,wCAAwC,CAACjf,MAAM,CAACG,MAAP,CAAc4gB,aAAf,CAA3D;cADH;YADF,EAxDF,EA6DG/gB,MAAM,CAACiB,OAAP,CAAe4f,WAAf,IAA8B7gB,MAAM,CAACY,MAAP,CAAcigB,WAA5C,iBACC,qBAAC,gBAAD;cAAK,EAAE,EAAE,CAAT;cAAA,wBACE,oBAAC,8CAAD;gBAAmB,KAAK,EAAC,SAAzB;gBAAmC,IAAI,EAAE;cAAzC,EADF,eAEE,oBAAC,iBAAD;gBAAM,EAAE,EAAE,CAAV;gBAAa,KAAK,EAAC,WAAnB;gBAA+B,QAAQ,EAAC,MAAxC;gBAAA,UACG7gB,MAAM,CAACY,MAAP,CAAcigB;cADjB,EAFF;YAAA,EA9DJ;UAAA,EA/EJ;QAAA,EATF;MAAA,EARF,eAyKE,oBAAC,+BAAD;QAAa,WAAW,MAAxB;QAAA,uBACE,oBAAC,iBAAD;UAAM,cAAc,EAAC,UAArB;UAAgC,QAAQ,EAAC,MAAzC;UAAA,uBACE,oBAAC,2BAAD;YACE,EAAE,EAAE,CADN;YAEE,QAAQ,EAAE,GAFZ;YAGE,WAAW,EAAC,SAHd;YAIE,WAAQ,6BAJV;YAKE,OAAO,EAAElD,MALX;YAME,QAAQ,EAAEwC,eANZ;YAOE,IAAI,EAAC,QAPP;YAQE,aAAa,EAAC,YARhB;YAAA,UAUGG,SAAS,gBACR,oBAAC,sBAAD;cAAkB,EAAE,kBAApB;cAAsC,cAAc;gBAAA;gBAAA;cAAA;YAApD,EADQ,gBAGR,oBAAC,sBAAD;cAAA;cAAkB,cAAc;gBAAA;gBAAA;cAAA;YAAhC;UAbJ;QADF;MADF,EAzKF;IAAA;EADF,GADF;AAkMD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/dD;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;;;AAEO,IAAMwB,cAAc,GAAG,SAAjBA,cAAiB,CAAC7rB,IAAD,EAAO8rB,GAAP,EAAe;EAC3C,IAAMnhB,MAAM,GAAG,EAAf;;EACA,IAAImhB,GAAG,CAACjlB,IAAJ,KAAa8kB,8DAAjB,EAA8B;IAC5B,OAAOhhB,MAAP;EACD,CAJ0C,CAM3C;EACA;;;EACA,IAAImhB,GAAG,CAACE,IAAJ,IAAY,CAACF,GAAG,CAACG,QAArB,EAA+B;IAC7BthB,MAAM,CAACshB,QAAP,GAAkBpiB,kEAAW,CAACwK,gGAAD,CAA7B;EACD;;EAED,OAAO1J,MAAP;AACD,CAbM;;AAeP,IAAMwhB,sBAAsB,GAAG,SAAzBA,sBAAyB,OAA4B;EAAA,IAAzBpiB,MAAyB,QAAzBA,MAAyB;EAAA,IAAjBqiB,UAAiB,QAAjBA,UAAiB;EACzD,IAAMpsB,IAAI,GAAGb,gEAAO,EAApB,CADyD,CAGzD;;EACAH,4CAAA,CAAgB,YAAM;IAAA;;IACpB,IAAI,0BAAC+K,MAAM,CAACG,MAAP,CAAcmiB,KAAf,0EAAC,qBAAsB,CAAtB,CAAD,kDAAC,sBAA0BxlB,IAA3B,MAAoC8kB,8DAAxC,EAAqD;MAAA;;MACnD5hB,MAAM,CAACmB,aAAP,CAAqB,SAArB,2DAAqCnB,MAAM,CAACG,MAAP,CAAcmiB,KAAnD,0DAAqC,sBAAsB,CAAtB,CAArC;QAA+DxlB,IAAI,EAAE8kB,8DAArE;QAAkFK,IAAI,EAAEN,mEAAgB,GAAG;MAA3G;IACD;EACF,CAJD,EAIG,EAJH;EAMA,oBACE,wDAAC,iDAAD;IAAM,mBAAmB,EAAC,yBAA1B;IAAoD,OAAO,EAAE,CAA7D;IAAA,wBACE,uDAAC,wEAAD;MACE,IAAI,EAAC,cADP;MAEE,OAAO,EAAC,UAFV;MAGE,KAAK,EAAE1rB,IAAI,CAACsD,aAAL,CAAmB;QAAA;QAAEF,cAAc;UAAA;UAAA;QAAA;MAAhB,CAAnB,CAHT;MAIE,SAAS,EAAC,QAJZ;MAKE,QAAQ,MALV;MAAA,UAOG;QAAA,IAAGkpB,KAAH,SAAGA,KAAH;QAAA,oBACC,uDAAC,kEAAD,kCACMA,KADN;UAEE,KAAK,EAAE,oDAAMA,KAAK,CAACrsB,KAAN,GAAc,GAApB,EAAyB,CAAzB,CAFT;UAGE,MAAM,EAAC,GAHT;UAIE,GAAG,EAAE,CAJP;UAKE,GAAG,EAAE,GALP;UAME,IAAI,EAAC,MANP;UAOE,QAAQ;QAPV,GADD;MAAA;IAPH,EADF,eAoBE,uDAAC,wEAAD;MACE,IAAI,EAAC,kBADP;MAEE,OAAO,EAAC,YAFV;MAGE,KAAK,EAAED,IAAI,CAACsD,aAAL,CAAmB;QAAEiC,EAAE,4BAAJ;QAAkCnC,cAAc;UAAA;UAAA;QAAA;MAAhD,CAAnB,CAHT;MAIE,QAAQ,EAAE,CAACgpB,UAJb;MAKE,EAAE,EAAE,CALN;MAAA,UAOG;QAAA,IAAGE,KAAH,SAAGA,KAAH;QAAA,oBACC,uDAAC,8DAAD,kCACMA,KADN;UAEE,WAAW,EAAEtsB,IAAI,CAACsD,aAAL,CACX;YAAEiC,EAAE,YAAJ;YAAkBnC,cAAc;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;UAAhC,CADW,EAEX;YAAEmpB,QAAQ,EAAE;UAAZ,CAFW;QAFf,GADD;MAAA;IAPH,EApBF;EAAA,EADF;AAwCD,CAlDD;;;;;;;;;;;;;;;;;;;;;;;AAyDA,yDAAeJ,sBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAAA1Y,OAAO,EAAI;EAC/B,IAAI,EAACA,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEwM,SAAV,CAAJ,EAAyB;IACvB,OAAO,EAAP;EACD;;EAED,IAAMmM,GAAG,GAAG,IAAIC,IAAJ,CAAS5Y,OAAO,CAACwM,SAAjB,EAA4Btc,WAA5B,EAAZ;EACA,kBAAWyoB,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAX;AACD,CAPD;;AASO,IAAMrQ,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACzS,UAAD,EAAaiK,OAAb,EAAyB;EAChE,IAAM8Y,UAAU,GAAGJ,aAAa,CAAC1Y,OAAD,CAAhC;EACA,yBAAkBA,OAAO,CAAC5J,QAA1B,cAAsCL,UAAtC,aAAsCA,UAAtC,uBAAsCA,UAAU,CAAE0a,IAAlD,qBAAiEqI,UAAjE;AACD,CAHM;AAKA,IAAMvQ,mBAAmB;EAAA,yWAAG,iBAAMvI,OAAN;IAAA;IAAA;MAAA;QAAA;UAAA;YAC3B+Y,UAD2B,GACdN,6EAAiB,CAACzY,OAAO,CAAC1O,EAAT,CADH;YAAA,iCAE1BinB,uEAAmB,CAACQ,UAAD,CAFO;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAnBxQ,mBAAmB;IAAA;EAAA;AAAA,GAAzB;AAKA,IAAMyQ,sBAAsB;EAAA,0WAAG,kBAAOjjB,UAAP,EAAmBiK,OAAnB;IAAA;IAAA;MAAA;QAAA;UAAA;YAA8B4H,UAA9B,SAA8BA,UAA9B,EAA0CjV,SAA1C,SAA0CA,SAA1C,EAAqDsmB,OAArD,SAAqDA,OAArD;;YAAA,KAChCtmB,SADgC;cAAA;cAAA;YAAA;;YAAA,kCAE3B,KAF2B;;UAAA;YAK9BumB,QAL8B,GAKnB1Q,yBAAyB,CAACzS,UAAD,EAAaiK,OAAb,CALN;YAMpC4H,UAAU,CAAC,IAAD,CAAV;YANoC;YAAA;YAAA,OAQfW,mBAAmB,CAACvI,OAAD,CARJ;;UAAA;YAQ5B4J,IAR4B;YAAA,kCAS3BxB,kDAAM,CAACwB,IAAD,EAAOsP,QAAP,CATqB;;UAAA;YAAA;YAAA;YAW5BrjB,KAX4B,GAWpB2iB,6EAAsB,cAXF;YAYlCS,OAAO,CAACpjB,KAAD,CAAP;;UAZkC;YAAA;YAclC+R,UAAU,CAAC,KAAD,CAAV;YAdkC;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAtBoR,sBAAsB;IAAA;EAAA;AAAA,GAA5B;AAkBA,IAAMG,+BAA+B,GAAG,SAAlCA,+BAAkC,QAAsD;EAAA,IAAnDnZ,OAAmD,SAAnDA,OAAmD;EAAA,IAA1CjK,UAA0C,SAA1CA,UAA0C;EAAA,IAA9BkjB,QAA8B,SAA9BA,OAA8B;EAAA,IAArBG,cAAqB,SAArBA,cAAqB;;EACnG,sBAAgCruB,2CAAA,CAAe,KAAf,CAAhC;EAAA;EAAA,IAAO4H,SAAP;EAAA,IAAkBiV,UAAlB;;EACA,uBAA0B7c,2CAAA,CAAe,IAAf,CAA1B;EAAA;EAAA,IAAO8K,KAAP;EAAA,IAAcwjB,QAAd;;EACA,iBAAqB7kB,mEAAS,EAA9B;EAAA,IAAQe,QAAR,cAAQA,QAAR;;EAEA,IAAI,CAAC,CAAC8S,4FAAD,EAAuBA,kGAAvB,EAAgD8D,QAAhD,CAAyDnM,OAAO,CAACpN,IAAjE,CAAL,EAA6E;IAC3E,OAAO;MAAEiD,KAAK,EAAE,IAAT;MAAelD,SAAS,EAAE,KAA1B;MAAiCumB,QAAQ,EAAE,EAA3C;MAA+ClP,eAAe,EAAE;IAAhE,CAAP;EACD;;EAED,OAAO;IACLnU,KAAK,EAALA,KADK;IAELlD,SAAS,EAATA,SAFK;IAGLumB,QAAQ,EAAE1Q,yBAAyB,CAACzS,UAAD,EAAaiK,OAAb,CAH9B;IAILgK,eAAe,EAAE,2BAAM;MACrB,OAAOgP,sBAAsB,CAACjjB,UAAD,EAAaiK,OAAb,EAAsB;QACjD4H,UAAU,EAAVA,UADiD;QAEjDjV,SAAS,EAATA,SAFiD;QAGjDymB,cAAc,EAAdA,cAHiD;QAIjDH,OAAO,EAAE,iBAAApjB,KAAK,EAAI;UAChBwjB,QAAQ,CAACxjB,KAAD,CAAR;;UACA,IAAIojB,QAAJ,EAAa;YACXA,QAAO,CAACpjB,KAAD,CAAP;UACD,CAFD,MAEO;YACLN,QAAQ,CAAC;cAAE3C,IAAI,EAAE2B,+EAAR;cAA0BoG,OAAO,EAAE,OAAnC;cAA4CpE,OAAO,EAAE;YAArD,CAAD,CAAR;UACD;QACF;MAXgD,CAAtB,CAA7B;IAaD;EAlBI,CAAP;AAoBD,CA7BM;AA+BP;AACA;AACA;;AACA,IAAM+R,4BAA4B,GAAG,SAA/BA,4BAA+B,QAAgE;EAAA,IAA7Dpa,QAA6D,SAA7DA,QAA6D;EAAA,IAAnD8R,OAAmD,SAAnDA,OAAmD;EAAA,IAA1CjK,UAA0C,SAA1CA,UAA0C;EAAA,IAA9BkjB,OAA8B,SAA9BA,OAA8B;EAAA,IAArBG,cAAqB,SAArBA,cAAqB;EACnG,IAAMha,KAAK,GAAG+Z,+BAA+B,CAAC;IAAEnZ,OAAO,EAAPA,OAAF;IAAWjK,UAAU,EAAVA,UAAX;IAAuBkjB,OAAO,EAAPA,OAAvB;IAAgCG,cAAc,EAAdA;EAAhC,CAAD,CAA7C;EACA,OAAOlrB,QAAQ,CAACkR,KAAD,CAAf;AACD,CAHD;;AAKAkJ,4BAA4B,CAACha,SAA7B,GAAyC;EACvC;EACAJ,QAAQ,EAAEpB,oEAF6B;;EAGvC;EACAkT,OAAO,EAAElT,wDAAA,CAAgB;IACvBwE,EAAE,EAAExE,sEADmB;IAEvBsJ,QAAQ,EAAEtJ,sEAA2B2B;EAFd,CAAhB,EAGNA,UAPoC;;EAQvC;EACAsH,UAAU,EAAEjJ,wDAAA,CAAgB;IAC1B2jB,IAAI,EAAE3jB,sEAA2B2B;EADP,CAAhB,CAT2B;;EAYvC;EACAwqB,OAAO,EAAEnsB,yDAAc4B;AAbgB,CAAzC;AAgBA,0DAAe4Z,4BAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AAEO,IAAM5D,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAgB,MAAM,EAAI;EAC/C,QAAQA,MAAR;IACE,KAAKlB,gGAAL;IACA,KAAKA,wFAAL;IACA,KAAKA,0FAAL;MACE,OAAO,OAAP;;IACF,KAAKA,8FAAL;IACA,KAAKA,oGAAL;MACE,OAAO,SAAP;;IACF,KAAKA,0HAAL;IACA,KAAKA,gGAAL;MACE,OAAO,MAAP;;IACF,KAAKA,wFAAL;IACA,KAAK,WAAL;MACE,OAAO,SAAP;EAbJ;AAeD,CAhBM;;AAkBP,IAAMqV,WAAW,GAAG,SAAdA,WAAc;EAAA,IAAG3rB,QAAH,QAAGA,QAAH;EAAA,IAAgB2B,KAAhB;;EAAA,oBAClB,uDAAC,2DAAD,kCACMA,KADN;IAEE,UAAU,EAAC,OAFb;IAGE,MAAM,EAAC,WAHT;IAIE,WAAW,EAAC,YAJd;IAKE,KAAK,EAAC,WALR;IAME,YAAY,EAAC,iBANf;IAOE,EAAE,EAAC,MAPL;IAQE,UAAU,EAAC,MARb;IAAA,UAUG3B;EAVH,GADkB;AAAA,CAApB;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA,IAAM4W,gBAAgB,GAAG,SAAnBA,gBAAmB,QAA0D;EAAA,IAAvDY,MAAuD,SAAvDA,MAAuD;EAAA,IAA/CoU,cAA+C,SAA/CA,cAA+C;EAAA,IAA/BC,cAA+B,SAA/BA,cAA+B;EAAA,IAAZlqB,KAAY;;EACjF,IAAM9D,IAAI,GAAGb,gEAAO,EAApB;;EACA,IAAM8uB,QAAQ;IACZxa,UAAU,EAAE,KADA;IAEZnR,QAAQ,EAAE,MAFE;IAGZ4rB,aAAa,EAAE,OAHH;IAIZxpB,aAAa,EAAE;EAJH,GAKTZ,KALS,CAAd;;EAQA,IAAMkM,GAAG,gBACP,uDAAC,2DAAD;IAAW,IAAI,EAAE2I,uBAAuB,CAACgB,MAAD,CAAxC;IAAkD,WAAQ;EAA1D,GAAmFsU,QAAnF,GAAiGnqB,KAAjG;IAAA,UACG4U,8EAAiB,CAAC1Y,IAAD,EAAO2Z,MAAP;EADpB,GADF;;EAMA,IAAIA,MAAM,KAAKlB,oGAAf,EAAyC;IACvC,oBACE,wDAAC,iDAAD;MAAM,UAAU,EAAC,QAAjB;MAAA,WACGzI,GADH,eAEE,uDAAC,WAAD,kCAAiBie,QAAjB;QAAA,uBACE,uDAAC,4DAAD;UAAkB,EAAE,cAApB;UAAkC,cAAc;YAAA;YAAA;UAAA;QAAhD;MADF,GAFF;IAAA,EADF;EAQD,CATD,MASO,IAAI,CAACF,cAAL,EAAqB;IAC1B,OAAO/d,GAAP;EACD,CAFM,MAEA,IAAI,CAACge,cAAL,EAAqB;IAC1B,oBACE,wDAAC,iDAAD;MAAM,UAAU,EAAC,QAAjB;MAAA,WACGhe,GADH,eAEE,uDAAC,WAAD;QAAA,uBACE,uDAAC,4DAAD;UAAkB,EAAE,WAApB;UAA+B,cAAc;YAAA;YAAA;UAAA;QAA7C;MADF,EAFF;IAAA,EADF;EAQD,CATM,MASA;IACL,oBACE,wDAAC,iDAAD;MAAM,UAAU,EAAC,QAAjB;MAAA,WACGA,GADH,eAEE,uDAAC,+DAAD;QACE,OAAO,EAAE;UAAA,oBACP,uDAAC,4DAAD;YACE,EAAE,6BADJ;YAEE,cAAc;cAAA;cAAA;YAAA;cAAA;cAAA;cAAA;gBAAA;gBAAA;cAAA;YAAA,EAFhB;YAGE,MAAM,EAAEyd,iEAAcA;UAHxB,EADO;QAAA,CADX;QAAA,uBASE,uDAAC,WAAD;UAAA,uBACE,uDAAC,4DAAD;YAAkB,EAAE,WAApB;YAA+B,cAAc;cAAA;cAAA;YAAA;UAA7C;QADF;MATF,EAFF;IAAA,EADF;EAkBD;AACF,CAxDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA,yDAAe1U,gBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;ACvHA;AAEA;AAEA;AACA;AAEA;AACA;;;AAEA,IAAMjF,cAAc,GAAG,SAAjBA,cAAiB,OAA6C;EAAA,IAA1CjN,IAA0C,QAA1CA,IAA0C;EAAA,IAApCwD,QAAoC,QAApCA,QAAoC;EAAA,IAA1BzD,SAA0B,QAA1BA,SAA0B;EAAA,IAAZ9C,KAAY;;EAClE,IAAM9D,IAAI,GAAGb,+DAAO,EAApB;EACA,OAAOyH,SAAS,gBACd,uDAAC,oEAAD;IAAoB,MAAM,EAAE,EAA5B;IAAgC,KAAK,EAAE,EAAvC;IAA2C,YAAY,EAAC;EAAxD,EADc,gBAGd,uDAAC,2DAAD;IACE,OAAO,EAAC,cADV;IAEE,IAAI,EAAC,MAFP;IAGE,EAAE,EAAC,KAHL;IAIE,EAAE,EAAC,MAJL;IAKE,aAAa,EAAC,WALhB;IAME,QAAQ,EAAC,MANX;IAOE,UAAU,EAAC;EAPb,GAQM9C,KARN;IAAA,UAUGqqB,4EAAe,CAACnuB,IAAD,EAAO6G,IAAP,EAAawD,QAAb;EAVlB,GAHF;AAgBD,CAlBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,yDAAeyJ,cAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AAEO,IAAMwa,cAAc,GAAG,SAAjBA,cAAiB,CAACtuB,IAAD,EAAO8rB,GAAP,EAAe;EAC3C,IAAMnhB,MAAM,GAAG,EAAf;;EACA,IAAImhB,GAAG,CAACjlB,IAAJ,KAAa8kB,8DAAjB,EAA8B;IAC5B,OAAOhhB,MAAP;EACD;;EAED,IAAI+C,KAAK,CAACoe,GAAG,CAACE,IAAL,CAAL,IAAmB,oDAAMF,GAAG,CAACE,IAAV,CAAvB,EAAwC;IACtCrhB,MAAM,CAACqhB,IAAP,GAAcniB,kEAAW,CAACwK,gGAAD,CAAzB;EACD,CAFD,MAEO;IACLga,6EAAkB,CAACruB,IAAD,EAAO2K,MAAP,EAAemhB,GAAf,EAAoB,MAApB,EAA4B,CAA5B,EAA+B,CAA/B,CAAlB;EACD,CAV0C,CAY3C;;;EACA,IAAIA,GAAG,CAACE,IAAR,EAAc;IACZ,IAAI,CAACF,GAAG,CAACG,QAAT,EAAmB;MACjBthB,MAAM,CAACshB,QAAP,GAAkBpiB,kEAAW,CAACwK,gGAAD,CAA7B;IACD,CAFD,MAEO,IAAI,CAAC+Z,2EAAoB,CAACtC,GAAG,CAACG,QAAL,CAApB,CAAmC5gB,OAAxC,EAAiD;MACtDV,MAAM,CAACshB,QAAP,GAAkBpiB,kEAAW,CAACwK,8FAAD,CAA7B;IACD;EACF;;EAED,OAAO1J,MAAP;AACD,CAtBM;;AAwBP,IAAM8jB,sBAAsB,GAAG,SAAzBA,sBAAyB,OAA4B;EAAA;;EAAA,IAAzB1kB,MAAyB,QAAzBA,MAAyB;EAAA,IAAjBqiB,UAAiB,QAAjBA,UAAiB;EACzD,IAAMpsB,IAAI,GAAGb,gEAAO,EAApB,CADyD,CAGzD;;EACAH,4CAAA,CAAgB,YAAM;IAAA;;IACpB,IAAI,0BAAC+K,MAAM,CAACG,MAAP,CAAcmiB,KAAf,0EAAC,qBAAsB,CAAtB,CAAD,kDAAC,sBAA0BxlB,IAA3B,MAAoC8kB,8DAAxC,EAAqD;MACnD5hB,MAAM,CAACmB,aAAP,CAAqB,cAArB,EAAqCygB,8DAArC;IACD;EACF,CAJD,EAIG,EAJH;EAMA,oBACE,yDAAC,iDAAD;IAAM,mBAAmB,EAAC,0BAA1B;IAAqD,OAAO,EAAE,CAA9D;IAAA,wBACE,wDAAC,wEAAD;MACE,IAAI,EAAC,cADP;MAEE,OAAO,EAAC,UAFV;MAGE,KAAK,EAAE3rB,IAAI,CAACsD,aAAL,CAAmB;QAAA;QAAEF,cAAc;UAAA;UAAA;QAAA;MAAhB,CAAnB,CAHT;MAIE,SAAS,EAAC,QAJZ;MAKE,QAAQ,EAAE,CAACgpB,UALb;MAAA,UAOG;QAAA,IAAGE,KAAH,SAAGA,KAAH;QAAA,oBACC,wDAAC,mEAAD,kCACMA,KADN;UAEE,KAAK,EAAE,oDAAMA,KAAK,CAACrsB,KAAN,GAAc,GAApB,EAAyB,CAAzB,CAFT;UAGE,QAAQ,EAAE,kBAAA0N,CAAC;YAAA,OAAI5D,MAAM,CAACmB,aAAP,CAAqByC,CAAC,CAACE,MAAF,CAASgP,IAA9B,EAAoC,oDAAMlP,CAAC,CAACE,MAAF,CAAS5N,KAAT,GAAiB,GAAvB,EAA4B,CAA5B,CAApC,CAAJ;UAAA,CAHb;UAIE,MAAM,EAAC,GAJT;UAKE,GAAG,EAAE,CALP;UAME,GAAG,EAAE,GANP;UAOE,IAAI,EAAC;QAPP,GADD;MAAA;IAPH,EADF,eAoBE,wDAAC,wEAAD;MACE,IAAI,EAAC,kBADP;MAEE,OAAO,EAAC,YAFV;MAGE,KAAK,EAAED,IAAI,CAACsD,aAAL,CAAmB;QAAA;QAAEF,cAAc;UAAA;UAAA;QAAA;MAAhB,CAAnB,CAHT;MAIE,QAAQ,EAAE,CAACgpB,UAAD,IAAejjB,OAAO,0BAACY,MAAM,CAACG,MAAP,CAAcmiB,KAAf,mFAAC,sBAAsB,CAAtB,CAAD,0DAAC,sBAA0BL,IAA3B,CAJlC;MAKE,EAAE,EAAE,CALN;MAAA,UAOG;QAAA,IAAGM,KAAH,SAAGA,KAAH;QAAA,oBACC,wDAAC,8DAAD,kCACMA,KADN;UAEE,WAAW,EAAEtsB,IAAI,CAACsD,aAAL,CACX;YAAEiC,EAAE,YAAJ;YAAkBnC,cAAc;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;UAAhC,CADW,EAEX;YAAEmpB,QAAQ,EAAE;UAAZ,CAFW;QAFf,GADD;MAAA;IAPH,EApBF;EAAA,EADF;AAwCD,CAlDD;;;;;;;;;;;;;;;;;;;;;;;AAyDA,yDAAekC,sBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,IAAM/e,QAAQ,GAAGrL,2DAAc,CAAC;EAC9BsqB,iBAAiB,EAAE;IAAA;IACjBvrB,cAAc;MAAA;MAAA;IAAA;EADG;AADW,CAAD,CAA/B;AAMA,IAAMwrB,sBAAsB,GAAGvnB,qEAAH,mfAQxBqnB,2FARwB,CAA5B;;AAWA,IAAM9V,4BAA4B,GAAG,SAA/BA,4BAA+B,OAA0B;EAAA,IAAvB3E,OAAuB,QAAvBA,OAAuB;EAAA,IAAdxJ,OAAc,QAAdA,OAAc;EAC7D,IAAMzK,IAAI,GAAGb,gEAAO,EAApB;;EACA,sBAA8BH,2CAAA,EAA9B;EAAA;EAAA,IAAOwL,OAAP;EAAA,IAAgBqkB,UAAhB;;EACA,IAAMC,eAAe,GAAG;IAAErlB,OAAO,EAAEjC,yEAAcA;EAAzB,CAAxB;;EACA,mBAAsCF,4DAAW,CAACsnB,sBAAD,EAAyBE,eAAzB,CAAjD;EAAA;EAAA,IAAOC,cAAP;EAAA,IAAyBnlB,OAAzB,oBAAyBA,OAAzB;;EACA,iBAAqBnB,oEAAS,EAA9B;EAAA,IAAQe,QAAR,cAAQA,QAAR;;EAEA,IAAMwlB,SAAS;IAAA,0WAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAER7kB,SAFQ,GAEI;gBAAE5E,EAAE,EAAE0O,OAAO,CAAC1O,EAAd;gBAAkB8E,QAAQ,EAAE4J,OAAO,CAAC5J,QAApC;gBAA8C4kB,MAAM,EAAE,oBAAtD;gBAA4EzkB,OAAO,EAAPA;cAA5E,CAFJ;cAAA;cAAA,OAGRukB,cAAc,CAAC;gBAAE5kB,SAAS,EAATA;cAAF,CAAD,CAHN;;YAAA;cAIdM,OAAO;cAJO;cAAA;;YAAA;cAAA;cAAA;cAMd;cACAjB,QAAQ,CAAC;gBAAE3C,IAAI,EAAE2B,gFAAR;gBAA0BoG,OAAO,EAAE,OAAnC;gBAA4CpE,OAAO,EAAEqJ,2EAAoB,CAAC7T,IAAD;cAAzE,CAAD,CAAR;;YAPc;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAATgvB,SAAS;MAAA;IAAA;EAAA,GAAf;;EAWA,oBACE,yDAAC,+DAAD;IAAa,IAAI,EAAC,aAAlB;IAAgC,KAAK,EAAC,OAAtC;IAA8C,OAAO,EAAEvkB,OAAvD;IAAA,wBACE,wDAAC,gEAAD;MAAA,uBACE,wDAAC,4DAAD;QAAA;QAAkB,cAAc;UAAA;UAAA;QAAA;MAAhC;IADF,EADF,eAIE,yDAAC,8DAAD;MAAW,EAAE,EAAE,CAAf;MAAA,wBACE,wDAAC,qCAAD;QAAG,KAAK,EAAC,WAAT;QAAqB,UAAU,EAAC,MAAhC;QAAA,uBACE,wDAAC,4DAAD;UAAA;UAAkB,cAAc;YAAA;YAAA;UAAA;QAAhC;MADF,EADF,eAIE,wDAAC,gDAAD;QAAA,uBACE,wDAAC,mEAAD;UACE,IAAI,EAAC,QADP;UAEE,KAAK,eAAE,wDAAC,4DAAD;YAAA;YAAkB,cAAc;cAAA;cAAA;YAAA;UAAhC,EAFT;UAGE,aAAa,EAAC,MAHhB;UAIE,eAAe,EAAE,GAJnB;UAKE,UAAU,EAAC,WALb;UAME,QAAQ,MANV;UAOE,EAAE,EAAE,CAPN;UAAA,UASG,kBAAAQ,UAAU;YAAA,oBACT,wDAAC,iEAAD,kCACMA,UADN;cAEE,SAAS,EAAE,GAFb;cAGE,WAAW,EAAEjL,IAAI,CAACsD,aAAL,CAAmBoM,QAAQ,CAACif,iBAA5B,CAHf;cAIE,QAAQ,EAAE,kBAAAhhB,CAAC;gBAAA,OAAIkhB,UAAU,CAAClhB,CAAC,CAACE,MAAF,CAAS5N,KAAV,CAAd;cAAA;YAJb,GADS;UAAA;QATb;MADF,EAJF;IAAA,EAJF,eA6BE,wDAAC,gEAAD;MAAA,uBACE,yDAAC,iDAAD;QAAM,GAAG,EAAC,MAAV;QAAiB,cAAc,EAAC,UAAhC;QAAA,wBACE,wDAAC,8DAAD;UAAc,WAAW,EAAC,WAA1B;UAAsC,UAAU,EAAC,OAAjD;UAAyD,OAAO,EAAE+uB,SAAlE;UAA6E,QAAQ,EAAE,GAAvF;UAA4F,OAAO,EAAEplB,OAArG;UAAA,uBACE,wDAAC,4DAAD;YAAA;YAAkB,cAAc;cAAA;cAAA;YAAA;UAAhC;QADF,EADF,eAIE,wDAAC,8DAAD;UAAc,WAAW,EAAC,UAA1B;UAAqC,UAAU,EAAC,OAAhD;UAAwD,OAAO,EAAEa,OAAjE;UAAA,uBACE,wDAAC,4DAAD;YAAkB,EAAE,kBAApB;YAAsC,cAAc;cAAA;cAAA;YAAA;UAApD;QADF,EAJF;MAAA;IADF,EA7BF;EAAA,EADF;AA0CD,CA5DD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA,yDAAemO,4BAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1GA;AAGA;AAEA;AAEA;AACA;AACA;AACA;;;;AAEA,IAAMuW,YAAY,GAAG,SAAfA,YAAe,CAAAC,MAAM;EAAA,OACzBjE,MAAM,CAACkE,OAAP,CAAeD,MAAf,EAAuBE,MAAvB,CAA8B,UAACC,GAAD,QAAuB;IAAA;IAAA,IAAhBrd,GAAgB;IAAA,IAAXjS,KAAW;;IACnD,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7B,2LAAWsvB,GAAX,6KAAmBJ,YAAY,CAAClvB,KAAD,CAA/B;IACD;;IACD,2LACKsvB,GADL,iBAEE,yDAAC,qCAAD;MAAa,QAAQ,EAAC,MAAtB;MAA6B,UAAU,EAAC,MAAxC;MAAA,wBACE,wDAAC,4DAAD;QAAkB,EAAE,aAApB;QAAiC,cAAc;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA,EAA/C;QAA0D,MAAM,EAAE;UAAE3T,IAAI,EAAE,wDAAU1J,GAAV;QAAR;MAAlE,EADF,OACkGjS,KADlG;IAAA,GAAQiS,GAAR,CAFF;EAMD,CAVD,EAUG,EAVH,CADyB;AAAA,CAA3B;AAaA;AACA;AACA;;;AACO,IAAMsd,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA3O,YAAY,EAAI;EACjD,QAAQA,YAAR,aAAQA,YAAR,uBAAQA,YAAY,CAAEha,IAAtB;IACE,KAAKqoB,gBAAgB,CAACtvB,MAAtB;MACE,OAAOuJ,OAAO,CAAC,KAAI0X,YAAJ,EAAkB,YAAlB,CAAD,CAAd;;IACF,KAAKqO,gBAAgB,CAACO,KAAtB;MACE,OAAOtmB,OAAO,CAAC,KAAI0X,YAAJ,EAAkB,cAAlB,CAAD,CAAd;;IACF,KAAKqO,gBAAgB,CAACQ,YAAtB;MACE,OAAOvmB,OAAO,CAAC,KAAI0X,YAAJ,EAAkB,cAAlB,CAAD,CAAd;;IACF;MACE,OAAO,KAAP;EARJ;AAUD,CAXM;AAaP,IAAM8O,wBAAwB,GAAG,UAAjC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAC/O,YAAD,EAAeyL,KAAf,EAAsB1lB,SAAtB,EAAoC;EACpD,IAAIA,SAAJ,EAAe;IACb,oBAAO,wDAAC,oEAAD;MAAoB,MAAM,EAAE;IAA5B,EAAP;EACD,CAFD,MAEO;IACL,OAAO,kDAAIia,YAAJ,iBAA0ByL,KAA1B,GAAmCqD,wBAAnC,CAAP;EACD;AACF,CAND;AAQA;AACA;AACA;;;AACA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,QAA4C;EAAA,IAAzChP,YAAyC,SAAzCA,YAAyC;EAAA,IAA3BiP,SAA2B,SAA3BA,SAA2B;EAAA,IAAhBlpB,SAAgB,SAAhBA,SAAgB;;EACnE,IAAIA,SAAS,IAAI,CAACia,YAAlB,EAAgC;IAC9B,oBAAO,wDAAC,oEAAD;MAAoB,MAAM,EAAE,EAA5B;MAAgC,EAAE,EAAE;IAApC,EAAP;EACD,CAFD,MAEO,IAAI,CAACA,YAAL,EAAmB;IACxB,OAAO,IAAP;EACD;;EAED,QAAQA,YAAY,CAACha,IAArB;IACE,KAAKqoB,kGAAL;MACE,oBACE;QAAA,WACGY,SAAS,iBACR,yDAAC,2DAAD;UAAW,QAAQ,EAAC,MAApB;UAA2B,UAAU,EAAC,KAAtC;UAA4C,EAAE,EAAE,CAAhD;UAAA,wBACE,wDAAC,4DAAD;YAAkB,EAAE,qBAApB;YAAyC,cAAc;cAAA;cAAA;YAAA;UAAvD,EADF,2BAGE,wDAAC,uEAAD;YAAiB,KAAK,EAAC;UAAvB,EAHF;QAAA,EAFJ,eAQE,wDAAC,2DAAD;UAAW,QAAQ,EAAC,MAApB;UAA2B,KAAK,EAAC,WAAjC;UAAA,UACGF,SAAS,CAAC/O,YAAD,EAAe,OAAf,EAAwBja,SAAxB;QADZ,EARF;MAAA,EADF;;IAcF,KAAKsoB,gGAAL;MACE,oBACE;QAAA,WACGY,SAAS,iBACR,yDAAC,2DAAD;UAAW,QAAQ,EAAC,MAApB;UAA2B,UAAU,EAAC,KAAtC;UAA4C,EAAE,EAAE,CAAhD;UAAA,wBACE,wDAAC,4DAAD;YAAkB,EAAE,WAApB;YAA+B,cAAc;cAAA;cAAA;YAAA;UAA7C,EADF,2BAGE,wDAAC,uEAAD;YAAiB,KAAK,EAAC;UAAvB,EAHF;QAAA,EAFJ,eAQE,wDAAC,2DAAD;UAAW,QAAQ,EAAC,MAApB;UAA2B,KAAK,EAAC,WAAjC;UAAA,UACGF,SAAS,CAAC/O,YAAD,EAAe,SAAf,EAA0Bja,SAA1B;QADZ,EARF;MAAA,EADF;;IAcF,KAAKsoB,8GAAL;MACE,oBACE;QAAA,WACGY,SAAS,iBACR,yDAAC,2DAAD;UAAW,QAAQ,EAAC,MAApB;UAA2B,UAAU,EAAC,KAAtC;UAA4C,EAAE,EAAE,CAAhD;UAAA,wBACE,wDAAC,4DAAD;YAAkB,EAAE,WAApB;YAA+B,cAAc;cAAA;cAAA;YAAA;UAA7C,EADF,2BAGE,wDAAC,uEAAD;YAAiB,KAAK,EAAC;UAAvB,EAHF;QAAA,EAFJ,EAQGjP,YAAY,CAACkF,IAAb,gBACC,yDAAC,2DAAD;UAAW,QAAQ,EAAC,MAApB;UAA2B,KAAK,EAAC,WAAjC;UAAA,wBACE,wDAAC,4DAAD;YACE,EAAE,iBADJ;YAEE,cAAc;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA,EAFhB;YAGE,MAAM,EAAE;cAAElf,IAAI,EAAE,wDAAUga,YAAY,CAACkF,IAAb,CAAkBlf,IAA5B;YAAR;UAHV,EADF,EAMGga,YAAY,CAACkF,IAAb,CAAkBgK,iBAAlB,iBACC,yDAAC,2CAAD;YAAA,wBACE,iEADF,eAEE,wDAAC,4DAAD;cACE,EAAE,0BADJ;cAEE,cAAc;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;cAAA,EAFhB;cAGE,MAAM,EAAE;gBAAElT,IAAI,EAAEgE,YAAY,CAACkF,IAAb,CAAkBgK;cAA1B;YAHV,EAFF;UAAA,EAPJ,EAgBGlP,YAAY,CAACkF,IAAb,CAAkBiK,OAAlB,IAA6Bb,YAAY,CAACtO,YAAY,CAACkF,IAAb,CAAkBiK,OAAnB,CAhB5C;QAAA,EADD,GAmBGppB,SAAS,gBACX,wDAAC,oEAAD;UAAoB,MAAM,EAAC;QAA3B,EADW,GAGX+oB,wBA9BJ;MAAA,EADF;;IAmCF;MACE,OAAO,IAAP;EApEJ;AAsED,CA7ED;;AA0FAE,gBAAgB,CAAChtB,YAAjB,GAAgC;EAC9BitB,SAAS,EAAE;AADmB,CAAhC,EAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,yDAAeD,gBAAf;;;;;;;;;;;;;;;;;;;ACrJA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA,IAAMtR,wBAAwB,GAAG,SAA3BA,wBAA2B,OAAsE;EAAA,IAAnE3X,SAAmE,QAAnEA,SAAmE;EAAA,IAAxDC,IAAwD,QAAxDA,IAAwD;EAAA,IAAlDvE,QAAkD,QAAlDA,QAAkD;EAAA,IAAxCmR,UAAwC,QAAxCA,UAAwC;EAAA,IAA5BjP,KAA4B,QAA5BA,KAA4B;EAAA,IAArBsC,QAAqB,QAArBA,QAAqB;EAAA,IAAX+V,IAAW,QAAXA,IAAW;;EACrG,IAAIjW,SAAJ,EAAe;IACb,oBAAO,uDAAC,oEAAD;MAAoB,MAAM,EAAE,EAA5B;MAAgC,KAAK,EAAE;IAAvC,EAAP;EACD;;EAED,QAAQC,IAAR;IACE,KAAKqoB,kGAAL;MACE,oBACE,wDAAC,iDAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,wBACE,uDAAC,2EAAD;UAAY,IAAI,EAAEpoB,QAAlB;UAA4B,KAAK,EAAC;QAAlC,EADF,eAEE,uDAAC,iDAAD;UAAM,EAAE,EAAE,CAAV;UAAa,UAAU,EAAE2M,UAAzB;UAAqC,QAAQ,EAAEnR,QAA/C;UAAyD,KAAK,EAAEkC,KAAhE;UAAA;QAAA,EAFF;MAAA,EADF;;IAQF,KAAK0qB,8GAAL;MACE,oBACE,wDAAC,iDAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,wBACE,uDAAC,kFAAD;UAAU,IAAI,EAAEpoB,QAAhB;UAA0B,KAAK,EAAC;QAAhC,EADF,eAEE,uDAAC,iDAAD;UAAM,EAAE,EAAE,CAAV;UAAa,UAAU,EAAE2M,UAAzB;UAAqC,QAAQ,EAAEnR,QAA/C;UAAyD,KAAK,EAAEkC,KAAhE;UAAA,uBACE,uDAAC,2DAAD;YAAkB,EAAE,eAApB;YAAmC,cAAc;cAAA;cAAA;YAAA;UAAjD;QADF,EAFF;MAAA,EADF;;IAQF,KAAK0qB,oHAAL;MACE,oBACE,wDAAC,iDAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,wBACE,uDAAC,qFAAD;UAAW,IAAI,EAAEpoB,QAAjB;UAA2B,KAAK,EAAC;QAAjC,EADF,eAEE,uDAAC,iDAAD;UAAM,EAAE,EAAE,CAAV;UAAa,UAAU,EAAE2M,UAAzB;UAAqC,QAAQ,EAAEnR,QAA/C;UAAyD,KAAK,EAAEkC,KAAhE;UAAA;QAAA,EAFF;MAAA,EADF;;IAQF,KAAK2rB,0EAAL;MACE,oBACE,wDAAC,iDAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,wBACE,uDAAC,yDAAD;UAAQ,IAAI,EAAC,GAAb;UAAiB,IAAI,EAAErpB,QAAvB;UAAiC,eAAe,EAAC,UAAjD;UAA4D,KAAK,EAAC,UAAlE;UAA6E,UAAU,EAAC;QAAxF,EADF,eAEE,uDAAC,iDAAD;UAAM,EAAE,EAAE,CAAV;UAAa,UAAU,EAAE2M,UAAzB;UAAqC,QAAQ,EAAEnR,QAA/C;UAAyD,KAAK,EAAEkC,KAAhE;UAAA,uBACE,uDAAC,2DAAD;YAAkB,EAAE,iCAApB;YAAqD,cAAc;cAAA;cAAA;YAAA;UAAnE;QADF,EAFF;MAAA,EADF;;IAQF,KAAK4rB,gFAAL;MACE,oBACE,wDAAC,iDAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,wBACE,uDAAC,mFAAD;UAAY,IAAI,EAAEtpB,QAAlB;UAA4B,KAAK,EAAC;QAAlC,EADF,eAEE,uDAAC,iDAAD;UAAM,EAAE,EAAE,CAAV;UAAa,UAAU,EAAE2M,UAAzB;UAAqC,QAAQ,EAAEnR,QAA/C;UAAyD,KAAK,EAAEkC,KAAhE;UAAA,UACGqY,IAAI,iBAAI,uDAAC,2DAAD;YAAkB,EAAE,iCAApB;YAAqD,cAAc;cAAA;cAAA;YAAA;UAAnE;QADX,EAFF;MAAA,EADF;;IAQF,KAAKqS,gGAAL;IACA;MACE,oBACE,wDAAC,iDAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,wBACE,uDAAC,qFAAD;UAAW,IAAI,EAAEpoB,QAAjB;UAA2B,KAAK,EAAC;QAAjC,EADF,eAEE,uDAAC,iDAAD;UAAM,EAAE,EAAE,CAAV;UAAa,UAAU,EAAE2M,UAAzB;UAAqC,QAAQ,EAAEnR,QAA/C;UAAyD,KAAK,EAAEkC,KAAhE;UAAA,uBACE,uDAAC,2DAAD;YAAkB,EAAE,2BAApB;YAA+C,cAAc;cAAA;cAAA;YAAA;UAA7D;QADF,EAFF;MAAA,EADF;EAhDJ;AAyDD,CA9DD;;AA0EA+Z,wBAAwB,CAAC1b,YAAzB,GAAwC;EACtCP,QAAQ,EAAE,MAD4B;EAEtCmR,UAAU,EAAE,MAF0B;EAGtCjP,KAAK,EAAE,WAH+B;EAItCsC,QAAQ,EAAE;AAJ4B,CAAxC,EAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,yDAAeyX,wBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AAEA,IAAM+R,YAAY,GAAG;EACnBC,kBAAkB,EAAE,oBADD;EAEnBC,wBAAwB,EAAE,0BAFP;EAGnBC,yBAAyB,EAAE,2BAHR;EAInBC,qBAAqB,EAAE;AAJJ,CAArB;AAOO,IAAMC,aAAa,GAAGtsB,iCAAc,CAAC,6BACzCisB,YAAY,CAACI,qBAD2B,EACH;EACpCnrB,EAAE,iDADkC;EAEpCnC,cAAc;IAAA;IAAA;EAAA;IAAA;IAAA;IAAA;MAAA;QAAA;UAAA;UAAA;QAAA;MAAA;MAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;MAAA;IAAA;EAAA;AAFsB,CADG,EAApC;AAQP,0DAAektB,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,IAAMU,qBAAqB,GAAG3pB,uBAAH,2LAA3B;;AAQA,IAAM4pB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,QAAwC;EAAA,IAAtBC,aAAsB,QAA9BpL,IAA8B,CAAtBoL,aAAsB;EACrED,KAAK,CAACE,MAAN,CAAa;IACXC,MAAM,EAAE;MACNlM,QADM,oBACGmM,gBADH,SACoC;QAAA,IAAbC,SAAa,SAAbA,SAAa;;QACxC,IAAI,EAACD,gBAAD,aAACA,gBAAD,eAACA,gBAAgB,CAAE/I,KAAnB,CAAJ,EAA8B;UAC5B,OAAO+I,gBAAP;QACD,CAFD,MAEO;UACL,uCACKA,gBADL;YAEEE,UAAU,EAAEF,gBAAgB,CAACE,UAAjB,GAA8B,CAF5C;YAGEjJ,KAAK,EAAE+I,gBAAgB,CAAC/I,KAAjB,CAAuB/b,MAAvB,CAA8B,UAAAyH,OAAO;cAAA,OAAIkd,aAAa,CAAC5rB,EAAd,KAAqBgsB,SAAS,CAAC,IAAD,EAAOtd,OAAP,CAAlC;YAAA,CAArC;UAHT;QAKD;MACF;IAXK;EADG,CAAb;AAeD,CAhBD;;AAkBA,IAAMwd,mBAAmB,GAAG,SAAtBA,mBAAsB,QAAmE;EAAA,IAAhExd,OAAgE,SAAhEA,OAAgE;EAAA,IAAvDyd,QAAuD,SAAvDA,QAAuD;EAAA,IAA7C7X,WAA6C,SAA7CA,WAA6C;EAAA,IAAhC8X,UAAgC,SAAhCA,UAAgC;EAAA,IAApBC,aAAoB,SAApBA,aAAoB;;EAC7F,sBAA6C5yB,cAAA,CAAe,KAAf,CAA7C;EAAA;EAAA,IAAO6yB,gBAAP;EAAA,IAAyBC,gBAAzB;;EACA,iBAAqBrpB,mCAAS,EAA9B;EAAA,IAAQe,QAAR,cAAQA,QAAR;;EACA,IAAMxJ,IAAI,GAAGb,0BAAO,EAApB;;EACA,IAAM4yB,iBAAiB,GAAG,SAApBA,iBAAoB,CAAArhB,MAAM,EAAI;IAClCohB,gBAAgB,CAACphB,MAAD,CAAhB;IACAkhB,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAGlhB,MAAH,CAAb;EACD,CAHD;;EAKA,oBACE,qBAAC,cAAD;IAAA,wBACE,qBAAC,2BAAD;MACE,WAAW,EAAC,iBADd;MAEE,WAAQ,uBAFV;MAGE,QAAQ,EAAEihB;IAHZ,GAIM9X,WAJN;MAKE,OAAO,EAAE;QAAA,OAAMkY,iBAAiB,CAAC,IAAD,CAAvB;MAAA,CALX;MAAA,wBAOE,oBAAC,wBAAD;QAAW,IAAI,EAAC;MAAhB,EAPF,eAQE,oBAAC,iBAAD;QAAM,EAAE,EAAC,KAAT;QAAA,uBACE,oBAAC,iCAAD;UAAkB,EAAE,kBAApB;UAAsC,cAAc;YAAA;YAAA;UAAA;QAApD;MADF,EARF;IAAA,GADF,EAaGF,gBAAgB,iBACf,oBAAC,wBAAD;MAAU,QAAQ,EAAEb,qBAApB;MAA2C,OAAO,EAAExpB,6BAApD;MAAoE,MAAM,EAAEypB,sBAA5E;MAAA,UACG,kBAAAE,aAAa;QAAA,oBACZ,oBAAC,gCAAD;UACE,QAAQ,MADV;UAEE,IAAI,EAAC,QAFP;UAGE,OAAO,EAAE;YAAA,OAAMY,iBAAiB,CAAC,KAAD,CAAvB;UAAA,CAHX;UAIE,MAAM,eAAE,oBAAC,iCAAD;YAAkB,EAAE,kBAApB;YAAsC,cAAc;cAAA;cAAA;YAAA;UAApD,EAJV;UAKE,eAAe,mFAAE;YAAA;cAAA;gBAAA;kBAAA;oBAAA;oBAAA;oBAAA,OAEPZ,aAAa,CAAC;sBAAEhnB,SAAS,EAAE;wBAAE5E,EAAE,EAAE0O,OAAO,CAAC1O;sBAAd;oBAAb,CAAD,CAFN;;kBAAA;oBAAA;oBAAA;;kBAAA;oBAAA;oBAAA;oBAIbiE,QAAQ,CAAC;sBAAE3C,IAAI,EAAE2B,+CAAR;sBAA0BgC,OAAO,EAAEqJ,2CAAoB,CAAC7T,IAAD;oBAAvD,CAAD,CAAR;;kBAJa;oBAAA,KAOX0xB,QAPW;sBAAA;sBAAA;oBAAA;;oBAAA;oBAAA,OAQPA,QAAQ,CAACzd,OAAD,CARD;;kBAAA;oBAUf8d,iBAAiB,CAAC,KAAD,CAAjB;;kBAVe;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA,CAAF,EALjB;UAAA,uBAkBE,oBAAC,iCAAD;YACE,EAAE,yBADJ;YAEE,cAAc;cAAA;cAAA;YAAA;UAFhB;QAlBF,EADY;MAAA;IADhB,EAdJ;EAAA,EADF;AA6CD,CAtDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA,iEAAeN,mBAAf;;;;;;;;;;;;;;;AC7GA;AAEA;AAEA;AACA;AACA;AACA;;;;AAEA,IAAMO,yBAAyB,GAAG,SAA5BA,yBAA4B,OAA6B;EAAA,IAA1BhD,SAA0B,QAA1BA,SAA0B;EAAA,IAAZlrB,KAAY;;EAC7D,sBAAgC9E,cAAA,CAAe,KAAf,CAAhC;EAAA;EAAA,IAAOizB,QAAP;EAAA,IAAiBC,WAAjB;;EACA,uBAAkElzB,cAAA,CAAe,IAAf,CAAlE;EAAA;EAAA,IAAOmzB,yBAAP;EAAA,IAAkCC,4BAAlC;;EAEA,IAAM7iB,MAAM,gBACV,oBAAC,2BAAD,oFAAkBzL,KAAlB;IAAyB,WAAW,EAAC,iBAArC;IAAuD,OAAO,EAAE;MAAA,OAAMouB,WAAW,CAAC,IAAD,CAAjB;IAAA,CAAhE;IAAA,uBACE,oBAAC,iCAAD;MAAkB,EAAE,4BAApB;MAAgD,cAAc;QAAA;QAAA;MAAA;IAA9D;EADF,GADF;;EAMA,IAAI,CAACD,QAAL,EAAe;IACb,OAAO1iB,MAAP;EACD;;EAED,oBACE,qBAAC,cAAD;IAAA,WACGA,MADH,eAEE,qBAAC,gCAAD;MACE,EAAE,EAAC,8BADL;MAEE,MAAM,eAAE,oBAAC,iCAAD;QAAkB,EAAE,wBAApB;QAA4C,cAAc;UAAA;UAAA;QAAA;MAA1D,EAFV;MAGE,KAAK,EAAC,MAHR;MAIE,QAAQ,EAAE,GAJZ;MAKE,QAAQ,EAAE,GALZ;MAME,QAAQ,MANV;MAOE,OAAO,EAAE;QAAA,OAAM2iB,WAAW,CAAC,KAAD,CAAjB;MAAA,CAPX;MAQE,WAAQ,8BARV;MASE,eAAe,mFAAE;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAEPlD,SAAS,CAACmD,yBAAD,CAFF;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;gBAIbD,WAAW,CAAC,KAAD,CAAX;gBAJa;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAAF,EATjB;MAAA,wBAkBE,oBAAC,MAAD;QAAG,EAAE,EAAE,CAAP;QAAA,uBACE,oBAAC,iCAAD;UACE,EAAE,gCADJ;UAEE,cAAc;YAAA;YAAA;UAAA;QAFhB;MADF,EAlBF,eAwBE,oBAAC,6BAAD;QACE,IAAI,EAAC,sBADP;QAEE,OAAO,EAAEC,yBAFX;QAGE,QAAQ,EAAE;UAAA,IAAG/mB,OAAH,SAAGA,OAAH;UAAA,OAAiBgnB,4BAA4B,CAAChnB,OAAD,CAA7C;QAAA,CAHZ;QAIE,KAAK,eACH,oBAAC,iCAAD;UACE,EAAE,uCADJ;UAEE,cAAc;YAAA;YAAA;UAAA;QAFhB;MALJ,EAxBF;IAAA,EAFF;EAAA,EADF;AAyCD,CAvDD;;;;;;;;;;;;;;;;AA6DA,uEAAe4mB,yBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,IAAMgB,iBAAiB,GAAG3rB,uBAAH,+jBAAvB;;AAyBA,IAAM4rB,cAAc,GAAG,SAAjBA,cAAiB,CAACjzB,IAAD,EAAO6G,IAAP,EAAgB;EACrC,OAAO6rB,qCAAoB,CAAC1yB,IAAD,EAAO6G,IAAP,EAAa;IAAEqsB,8BAA8B,EAAE;EAAlC,CAAb,CAA3B;AACD,CAFD;;AAIA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,gBAAD,EAAmBC,MAAnB,EAA2BjqB,IAA3B,EAAoC;EAC/D,IAAIgqB,gBAAgB,KAAKlE,kDAAzB,EAAiD;IAC/C,OAAO;MAAEoE,WAAW,EAAE,IAAf;MAAqBrE,MAAM,EAAE;IAA7B,CAAP;EACD,CAFD,MAEO,IAAImE,gBAAgB,KAAKlE,gEAArB,IAAsD,CAAC9lB,IAAI,CAACmqB,YAAhE,EAA8E;IACnF,OAAO;MAAED,WAAW,EAAE,IAAf;MAAqBrE,MAAM,EAAE;IAA7B,CAAP;EACD,CAFM,MAEA,IAAI,CAACoE,MAAL,EAAa;IAClB,OAAO;MAAEC,WAAW,EAAE,IAAf;MAAqBrE,MAAM,EAAE;IAA7B,CAAP;EACD,CAFM,MAEA;IAAA;;IACL,IAAMuE,eAAe,GACnBpqB,IAAI,CAACqqB,QAAL,CAAchB,+DAAd,MAA2C,QAA3C,IACAW,gBAAgB,KAAKlE,oDADrB,8BAEA9lB,IAAI,CAACuqB,sBAFL,0DAEA,sBAA6BvT,QAA7B,CAAsC8O,oDAAtC,CAFA,CADF;IAIA,IAAM0E,SAAS,GACbR,gBAAgB,KAAKlE,gEAArB,+BACA9lB,IAAI,CAACuqB,sBADL,2DACA,uBAA6BvT,QAA7B,CAAsC8O,gEAAtC,CADA,KAEAsD,oCAAU,CAACppB,IAAD,EAAOqpB,mEAAP,CAHZ;IAIA,OAAO;MACLa,WAAW,EAAE,KADR;MAELrE,MAAM,EAAEuE,eAAe,IAAII,SAAnB,GAA+B,sBAA/B,GAAwD;IAF3D,CAAP;EAID;AACF,CArBD;;AAuBA,IAAME,cAAc,GAAG3I,MAAM,CAAC4I,MAAP,CAAc;EACnCC,iCAAiC,EAAE,IADA;EAEnCC,6BAA6B,EAAE,IAFI;EAGnCC,SAAS,EAAE;AAHwB,CAAd,CAAvB;;AAMA,IAAMxpB,QAAQ,GAAG,SAAXA,QAAW,CAAAR,MAAM,EAAI;EACzB,IAAMS,MAAM,GAAG,EAAf;;EACA,IAAI+C,KAAK,CAACxD,MAAM,CAAC8pB,iCAAR,CAAT,EAAqD;IACnDrpB,MAAM,CAACqpB,iCAAP,GAA2CnqB,kCAAW,CAACwK,8DAAD,CAAtD;EACD;;EACD,IAAI3G,KAAK,CAACxD,MAAM,CAAC+pB,6BAAR,CAAT,EAAiD;IAC/CtpB,MAAM,CAACspB,6BAAP,GAAuCpqB,kCAAW,CAACwK,8DAAD,CAAlD;EACD;;EACD,OAAO1J,MAAP;AACD,CATD;;AAWA,IAAMwpB,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAClgB,OAAD,EAAUjK,UAAV,EAAsBoqB,eAAtB,EAAuCC,SAAvC,EAAkDC,MAAlD,EAA6D;EAAA;;EAC5F,IAAMX,sBAAsB,GAAG,CAACzE,gEAAD,EAAgCA,kDAAhC,CAA/B;EACA,IAAMqF,uBAAuB,GAAGZ,sBAAsB,CAACvT,QAAvB,0BAAgCnM,OAAO,CAAC4M,YAAxC,0DAAgC,sBAAsBha,IAAtD,CAAhC;;EACA,IAAM2tB,aAAa,GAAGvgB,OAAO,CAACzT,MAAR,KAAmB,cAAIwJ,UAAJ,EAAgB,4CAAhB,CAAzC;;EACA,IAAMyqB,cAAc,GAAGxgB,OAAO,CAACvT,QAAR,MAAqBsJ,UAArB,aAAqBA,UAArB,uBAAqBA,UAAU,CAAEtJ,QAAjC,CAAvB,CAJ4F,CAM5F;EACA;EACA;EACA;;EACA,IAAI,EAAE6zB,uBAAuB,IAAIE,cAA3B,KAA8CD,aAAa,IAAIF,MAA/D,CAAF,CAAJ,EAA+E;IAC7E,OAAO,KAAP;EACD,CAZ2F,CAc5F;EACA;EACA;;;EACA,OAAO,CAACF,eAAD,IAAoBjrB,OAAO,CAACkrB,SAAD,CAAlC;AACD,CAlBD;;AAoBA,IAAMK,UAAU,GAAGt1B,2EAAH;EAAA;EAAA;AAAA,+IASZ+X,wBATY,EAUZmb,uBAVY,CAAhB;AAaA,IAAMqC,KAAK,GAAGv1B,iDAAM,CAAC4B,iBAAD,CAAT;EAAA;EAAA;AAAA,sIAOPwD,uBAPO,EAQPC,4BARO,CAAX;AAYA,IAAMmwB,MAAM,GAAGx1B,6EAAH;EAAA;EAAA;AAAA,uIAAZ;AAYA,IAAMy1B,YAAY,GAAGz1B,uEAAH;EAAA;EAAA;AAAA,0FAAlB;;AAQA,IAAM21B,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC9gB,OAAD,EAAU7K,IAAV,EAAgBgqB,gBAAhB,EAAqC;EAC5D,OAAO,2FACFU,cADL,GAEKX,oBAAoB,CAACC,gBAAD,EAAmB,IAAnB,EAAyBhqB,IAAzB,CAFzB;IAGE8qB,SAAS,EAAEjgB,OAAO,CAACigB,SAAR,IAAqBJ,cAAc,CAACI;EAHjD;AAKD,CAND;;AAQA,IAAMc,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAiD;EAAA,IAA9CjrB,MAA8C,QAA9CA,MAA8C;EAAA,IAAtCkK,OAAsC,QAAtCA,OAAsC;EAAA,IAA7BghB,KAA6B,QAA7BA,KAA6B;EAAA,IAAtB7rB,IAAsB,QAAtBA,IAAsB;EAAA,IAAhB8qB,SAAgB,QAAhBA,SAAgB;;EACxE,IAAInqB,MAAM,CAACG,MAAP,CAAcopB,WAAlB,EAA+B;IAC7B,IAAM4B,WAAW,GAAG;MAAEv0B,YAAY,EAAEoJ,MAAM,CAACG,MAAP,CAAc+pB,6BAA9B;MAA6DvzB,QAAQ,EAAE0I,IAAI,CAAC1I;IAA5E,CAApB;IACA,IAAMy0B,mBAAmB,GAAG;MAC1Bx0B,YAAY,EAAEoJ,MAAM,CAACG,MAAP,CAAc8pB,iCADF;MAE1BtzB,QAAQ,EAAE0I,IAAI,CAAC1I;IAFW,CAA5B;IAIA,IAAM00B,aAAa,GAAGnhB,OAAO,CAACvT,QAAR,KAAqB0I,IAAI,CAAC1I,QAA1B,IAAsCw0B,WAAW,CAACv0B,YAAZ,GAA2BsT,OAAO,CAACzT,MAA/F;IACA,OAAO;MAAE20B,mBAAmB,EAAnBA,mBAAF;MAAuBD,WAAW,EAAXA,WAAvB;MAAoCE,aAAa,EAAbA;IAApC,CAAP;EACD,CARD,MAQO,IAAIH,KAAJ,EAAW;IAChB,IAAMG,cAAa,GAAGnhB,OAAO,CAACvT,QAAR,KAAqB0I,IAAI,CAAC1I,QAA1B,IAAsCu0B,KAAK,CAACI,YAAN,CAAmB10B,YAAnB,GAAkCsT,OAAO,CAACzT,MAAtG;;IACA,IAAM00B,YAAW,GAAG,oBAAUD,KAAK,CAACI,YAAhB,CAApB;;IACA,IAAInB,SAAS,KAAK,OAAlB,EAA2B;MACzBgB,YAAW,CAACv0B,YAAZ,IAA4Bs0B,KAAK,CAACK,yBAAN,CAAgC30B,YAA5D;IACD;;IACD,OAAO;MAAEw0B,mBAAmB,EAAEF,KAAK,CAACK,yBAA7B;MAAwDJ,WAAW,EAAXA,YAAxD;MAAqEE,aAAa,EAAbA;IAArE,CAAP;EACD,CAPM,MAOA;IACL,OAAO,EAAP;EACD;AACF,CAnBD;AAqBA;AACA;AACA;;;AACA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,QAA2E;EAAA;;EAAA,IAAxE9qB,OAAwE,SAAxEA,OAAwE;EAAA,IAA/DR,QAA+D,SAA/DA,QAA+D;EAAA,IAArDgK,OAAqD,SAArDA,OAAqD;EAAA,IAA5CjK,UAA4C,SAA5CA,UAA4C;EAAA,IAAhCZ,IAAgC,SAAhCA,IAAgC;EAAA,IAA1BU,KAA0B,SAA1BA,KAA0B;EAAA,IAAnB8b,YAAmB,SAAnBA,YAAmB;EACjG,IAAM5lB,IAAI,GAAGb,0BAAO,EAApB;EACA,IAAMi0B,gBAAgB,GAAG,2BAAAnf,OAAO,CAAC4M,YAAR,kFAAsBha,IAAtB,KAA8BqoB,kDAAvD;EACA,IAAMxmB,aAAa,GAAGqsB,gBAAgB,CAAC9gB,OAAD,EAAU7K,IAAV,EAAgBgqB,gBAAhB,CAAtC;EACA,IAAMrpB,MAAM,GAAGxC,gCAAS,CAAC;IAAEmB,aAAa,EAAbA,aAAF;IAAiBgC,QAAQ,EAARA,QAAjB;IAA2BT,QAAQ,EAARA;EAA3B,CAAD,CAAxB;EACA,IAAMurB,gBAAgB,GAAGpC,gBAAgB,KAAKlE,kDAArB,IAA+CnlB,MAAM,CAACG,MAAP,CAAcopB,WAAtF;EACA,IAAMmC,iBAAiB,GAAGxC,cAAc,CAACjzB,IAAD,EAAOozB,gBAAP,CAAxC;EACA,IAAMsC,sBAAsB,GAAGtC,gBAAgB,KAAKlE,gEAArB,IAAsD9lB,IAAI,CAACmqB,YAAL,KAAsB,IAA3G;EACA,IAAMoC,YAAY,GAAG5rB,MAAM,CAACG,MAAP,CAAc+kB,MAAd,KAAyB,sBAA9C;EACA,IAAM2G,wBAAwB,GAAG,CAAC,CAAC1G,kDAAD,EAAyBA,sEAAzB,EAA2D9O,QAA3D,CAChCgT,gBADgC,CAAlC;EAGA,IAAMyC,QAAQ,GAAGzsB,IAAI,CAACmqB,YAAL,IAAqBH,gBAAgB,KAAKlE,gEAA3D;EACA,IAAM4G,UAAU,GAAGvS,mBAAQ,CAACyP,iBAAD,EAAoB;IAC7C7oB,SAAS,EAAE;MAAE5E,EAAE,EAAE0O,OAAO,CAAC1O;IAAd,CADkC;IAE7CkE,OAAO,EAAEjC,6BAFoC;IAG7CuuB,IAAI,EAAE,CAACF;EAHsC,CAApB,CAA3B;EAMA,IAAMG,kBAAkB,GAAGpD,uCAAqB,CAAC3e,OAAO,CAACzT,MAAT,EAAiByT,OAAO,CAACoY,KAAzB,CAAhD;EAEA,IAAM4J,OAAO,GAAGjB,gBAAgB,CAAC;IAC/BjrB,MAAM,EAANA,MAD+B;IAE/BkK,OAAO,EAAPA,OAF+B;IAG/BghB,KAAK,EAAEa,UAAF,aAAEA,UAAF,2CAAEA,UAAU,CAAE/P,IAAd,8EAAE,iBAAkB9R,OAApB,0DAAE,sBAA2BghB,KAHH;IAI/BjrB,UAAU,EAAVA,UAJ+B;IAK/BZ,IAAI,EAAJA,IAL+B;IAM/B8qB,SAAS,EAAEnqB,MAAM,CAACG,MAAP,CAAcgqB;EANM,CAAD,CAAhC;EASA,oBACE,qBAAC,2BAAD;IAAa,OAAO,EAAEzpB,OAAtB;IAA+B,KAAK,EAAC,MAArC;IAA4C,QAAQ,EAAE,GAAtD;IAA2D,QAAQ,EAAE,GAArE;IAA0E,WAAQ,mBAAlF;IAAsG,SAAS,MAA/G;IAAA,wBACE,oBAAC,+BAAD;MAAA,uBACE,oBAAC,OAAD;QAAI,QAAQ,EAAC,MAAb;QAAoB,UAAU,EAAC,KAA/B;QAAA,uBACE,oBAAC,iCAAD;UAAkB,EAAE,mBAApB;UAAuC,cAAc;YAAA;YAAA;UAAA;QAArD;MADF;IADF,EADF,eAME,qBAAC,6BAAD;MAAW,EAAE,EAAC,MAAd;MAAqB,EAAE,EAAE,CAAzB;MAA4B,QAAQ,EAAEV,MAAM,CAACgB,YAA7C;MAAA,wBACE,oBAAC,YAAD;QAAA,uBACE,oBAAC,iCAAD;UAAkB,EAAE,iCAApB;UAAqD,cAAc;YAAA;YAAA;UAAA;QAAnE;MADF,EADF,eAIE,oBAAC,gBAAD;QAAK,EAAE,EAAE,CAAT;QAAA,uBACE,oBAAC,uCAAD;UAA0B,IAAI,EAAEqoB;QAAhC;MADF,EAJF,eAOE,oBAAC,+BAAD;QAAkB,YAAY,EAAEnf,OAAO,CAAC4M,YAAxC;QAAsD,SAAS,EAAE;MAAjE,EAPF,EAQG+U,wBAAwB,IAAI,CAACF,sBAA7B,iBACC,oBAAC,8BAAD;QACE,KAAK,EAAE,CAAC,MAAD,EAAS,QAAT,CADT;QAEE,WAAW,EAAE;UAAEle,KAAK,EAAE;QAAT,CAFf;QAGE,kBAAkB,EAAE;UAAA,IAAGoE,IAAH,SAAGA,IAAH;UAAA,OAAe;YAAE,8BAAuBA,IAAvB;UAAF,CAAf;QAAA,CAHtB;QAIE,EAAE,EAAE,CAJN;QAKE,QAAQ,EAAE7R,MAAM,CAACG,MAAP,CAAcopB,WAAd,GAA4B,QAA5B,GAAuC,MALnD;QAME,kBAAkB,EAAC,KANrB;QAOE,QAAQ,EAAE,kBAAA1X,IAAI,EAAI;UAChB7R,MAAM,CAACmsB,SAAP,4FACKnsB,MAAM,CAACG,MADZ,GAEKipB,oBAAoB,CAACC,gBAAD,EAAmBxX,IAAI,KAAK,MAA5B,EAAoCxS,IAApC,CAFzB;YAGE4qB,iCAAiC,EAAE,IAHrC;YAIEC,6BAA6B,EAAE,IAJjC;YAKEC,SAAS,EAAE,CAACC,wBAAwB,CAAClgB,OAAD,EAAUjK,UAAV,EAAsBwrB,gBAAtB,EAAwC,IAAxC,EAA8C5P,YAAY,CAAC0O,MAA3D,CAAzB,GACPR,cAAc,CAACI,SADR,CACkB;YADlB,EAEPnqB,MAAM,CAACG,MAAP,CAAcgqB;UAPpB;QASD,CAjBH;QAAA,UAmBG;UAAA,IAAGtY,IAAH,SAAGA,IAAH;UAAA,OACCA,IAAI,KAAK,MAAT,gBACE,oBAAC,iCAAD;YAAkB,EAAE,oBAApB;YAAwC,cAAc;cAAA;cAAA;YAAA;UAAtD,EADF,gBAGE,oBAAC,iCAAD;YAAkB,EAAE,iBAApB;YAAqC,cAAc;cAAA;cAAA;YAAA;UAAnD,EAJH;QAAA;MAnBH,EATJ,EAqCG4Z,gBAAgB,iBACf,qBAAC,cAAD;QAAA,wBACE,oBAAC,+BAAD;UACE,IAAI,EAAC,+BADP;UAEE,OAAO,EAAC,+BAFV;UAGE,SAAS,EAAC,QAHZ;UAIE,KAAK,EAAEzrB,MAAM,CAACY,MAAP,CAAcspB,6BAJvB;UAKE,QAAQ,MALV;UAME,EAAE,EAAE,CANN;UAOE,KAAK,eACH,oBAAC,iCAAD;YACE,EAAE,kDADJ;YAEE,cAAc;cAAA;cAAA;YAAA;UAFhB,EARJ;UAaE,IAAI,eACF,oBAAC,iCAAD;YACE,EAAE,iDADJ;YAEE,cAAc;cAAA;cAAA;YAAA;UAFhB,EAdJ;UAAA,UAoBG,kBAAAhpB,UAAU;YAAA,oBACT,oBAAC,gCAAD,gEACMA,UADN;cAEE,QAAQ,EAAE7B,IAAI,CAAC1I,QAFjB;cAGE,eAAe,EAAC,MAHlB;cAIE,KAAK,EAAEqJ,MAAM,CAACG,MAAP,CAAc+pB,6BAJvB;cAKE,WAAQ,mBALV;cAME,WAAW,EAAC,MANd;cAOE,QAAQ,EAAC,MAPX;cAQE,GAAG,EAAE,CARP;cASE,QAAQ,EAAE,kBAAAh0B,KAAK;gBAAA,OAAI8J,MAAM,CAACmB,aAAP,CAAqB,+BAArB,EAAsDjL,KAAtD,CAAJ;cAAA;YATjB,GADS;UAAA;QApBb,EADF,eAmCE,oBAAC,+BAAD;UACE,IAAI,EAAC,mCADP;UAEE,OAAO,EAAC,mCAFV;UAGE,SAAS,EAAC,QAHZ;UAIE,KAAK,EAAE8J,MAAM,CAACY,MAAP,CAAcqpB,iCAJvB;UAKE,QAAQ,EAAE,KALZ;UAME,EAAE,EAAE,CANN;UAOE,KAAK,eAAE,oBAAC,iCAAD;YAAkB,EAAE,iCAApB;YAAqD,cAAc;cAAA;cAAA;YAAA;UAAnE,EAPT;UAQE,IAAI,eACF,oBAAC,iCAAD;YACE,EAAE,qDADJ;YAEE,cAAc;cAAA;cAAA;YAAA;UAFhB,EATJ;UAAA,UAeG,kBAAA/oB,UAAU;YAAA,oBACT,oBAAC,gCAAD,gEACMA,UADN;cAEE,QAAQ,EAAE7B,IAAI,CAAC1I,QAFjB;cAGE,eAAe,EAAC,MAHlB;cAIE,KAAK,EAAEqJ,MAAM,CAACG,MAAP,CAAc8pB,iCAJvB;cAKE,WAAW,EAAC,MALd;cAME,QAAQ,EAAC,MANX;cAOE,GAAG,EAAE,CAPP;cAQE,GAAG,EAAE,SARP;cASE,QAAQ,EAAE,kBAAA/zB,KAAK;gBAAA,OAAI8J,MAAM,CAACmB,aAAP,CAAqB,mCAArB,EAA0DjL,KAA1D,CAAJ;cAAA;YATjB,GADS;UAAA;QAfb,EAnCF;MAAA,EAtCJ,EAwGGk0B,wBAAwB,CACvBlgB,OADuB,EAEvBjK,UAFuB,EAGvBwrB,gBAHuB,EAIvBzrB,MAAM,CAACG,MAAP,CAAc8pB,iCAJS,EAKvBpO,YAAY,CAAC0O,MALU,CAAxB,iBAOC,oBAAC,iBAAD;QAAM,EAAE,EAAE,EAAV;QAAA,uBACE,oBAAC,4BAAD;UACE,OAAO,eACL,oBAAC,iCAAD;YAAA;YAAkB,cAAc;cAAA;cAAA;YAAA;UAAhC,EAFJ;UAAA,uBAKE,oBAAC,6BAAD;YACE,IAAI,EAAC,WADP;YAEE,OAAO,EAAEvqB,MAAM,CAACG,MAAP,CAAcgqB,SAAd,KAA4B,OAFvC;YAGE,QAAQ,EAAE;cAAA,IAAG9oB,OAAH,SAAGA,OAAH;cAAA,OAAiBrB,MAAM,CAACmB,aAAP,CAAqB,WAArB,EAAkCE,OAAO,GAAG,OAAH,GAAa,YAAtD,CAAjB;YAAA,CAHZ;YAIE,KAAK,eACH,oBAAC,iBAAD;cAAM,QAAQ,EAAC,MAAf;cAAA,uBACE,oBAAC,iCAAD;gBAAA;gBAAkB,cAAc;kBAAA;kBAAA;gBAAA;cAAhC;YADF;UALJ;QALF;MADF,EA/GJ,eAkIE,qBAAC,gBAAD;QAAK,EAAE,EAAE,EAAT;QAAa,EAAE,EAAE,CAAjB;QAAA,wBACE,oBAAC,YAAD;UAAA,uBACE,oBAAC,iCAAD;YAAkB,EAAE,oBAApB;YAAwC,cAAc;cAAA;cAAA;YAAA;UAAtD;QADF,EADF,eAIE,qBAAC,UAAD;UAAA,wBACE,oBAAC,KAAD;YAAA,uBACE,oBAAC,iCAAD;cAAkB,EAAE,iBAApB;cAAqC,cAAc;gBAAA;gBAAA;cAAA;YAAnD;UADF,EADF,eAIE,oBAAC,MAAD;YAAA,uBACE,oBAAC,mCAAD;cACE,YAAY,EAAE;gBAAEqI,UAAU,EAAE;cAAd,CADhB;cAEE,MAAM,EAAEuiB,kBAFV;cAGE,QAAQ,EAAE/hB,OAAO,CAACvT,QAHpB;cAIE,kBAAkB,EAAE;gBAAE8D,KAAK,EAAE;cAAT;YAJtB;UADF,EAJF;QAAA,EAJF,oBAiBGyP,OAAO,CAACoY,KAjBX,mDAiBG,eAAerqB,GAAf,CAAmB,UAAA8pB,GAAG;UAAA,oBACrB,qBAAC,UAAD;YAA2B,yBAAgBA,GAAG,CAACjlB,IAApB,yBAA3B;YAA2E,EAAE,EAAE,CAA/E;YAAA,wBACE,qBAAC,KAAD;cAAA,WACG8rB,4BAAW,CAAC3yB,IAAD,EAAO8rB,GAAG,CAACjlB,IAAX,EAAiB,OAAjB,CADd,QAC2C,gBAAMilB,GAAG,CAACE,IAAJ,GAAW,GAAjB,EAAsB,CAAtB,KAA4B,CADvE;YAAA,EADF,uBAKE,oBAAC,MAAD;cAAA,uBACE,oBAAC,mCAAD;gBACE,MAAM,EAAE6G,8BAAY,CAACmD,kBAAD,EAAqBlK,GAArB,CADtB;gBAEE,SAAS,EAAE,CAFb;gBAGE,QAAQ,EAAE7X,OAAO,CAACvT,QAHpB;gBAIE,YAAY,EAAE;kBAAE+S,UAAU,EAAE;gBAAd,CAJhB;gBAKE,gBAAgB,EAAE;cALpB;YADF,EALF;UAAA,GAAiBqY,GAAG,CAACjlB,IAArB,CADqB;QAAA,CAAtB,CAjBH,EAkCGovB,OAAO,CAACd,mBAAR,iBACC,qBAAC,UAAD;UAAY,SAAS,EAAC,sBAAtB;UAAA,wBACE,oBAAC,KAAD;YAAA,uBACE,oBAAC,iCAAD;cAAkB,EAAE,iCAApB;cAAqD,cAAc;gBAAA;gBAAA;cAAA;YAAnE;UADF,EADF,eAIE,oBAAC,MAAD;YAAA,UACGW,UAAU,CAAClsB,OAAX,gBACC,oBAAC,iCAAD;cAAoB,MAAM,EAAC;YAA3B,EADD,gBAGC,oBAAC,mCAAD;cACE,MAAM,2BAAEqsB,OAAO,CAACd,mBAAV,0DAAE,sBAA6Bx0B,YADvC;cAEE,QAAQ,4BAAEs1B,OAAO,CAACd,mBAAV,2DAAE,uBAA6Bz0B,QAFzC;cAGE,kBAAkB,EAAE;gBAAE8D,KAAK,EAAE;cAAT,CAHtB;cAIE,YAAY,EAAE;gBACZiP,UAAU,EAAEwiB,OAAO,CAACd,mBAAR,GAA8B,GAA9B,GAAoC,GADpC;gBAEZ3wB,KAAK,EAAEyxB,OAAO,CAACd,mBAAR,GAA8B,WAA9B,GAA4C;cAFvC;YAJhB;UAJJ,EAJF;QAAA,EAnCJ,eAwDE,qBAAC,UAAD;UAAY,SAAS,EAAC,mBAAtB;UAA0C,EAAE,EAAE,EAA9C;UAAA,wBACE,oBAAC,KAAD;YAAO,KAAK,EAAC,WAAb;YAAyB,UAAU,EAAC,KAApC;YAAA,UACGc,OAAO,CAACd,mBAAR,KAAgC,IAAhC,gBACC,oBAAC,iCAAD;cAAkB,EAAE,eAApB;cAAmC,cAAc;gBAAA;gBAAA;cAAA;YAAjD,EADD,gBAGC,oBAAC,iCAAD;cAAkB,EAAE,yBAApB;cAA6C,cAAc;gBAAA;gBAAA;cAAA;YAA3D;UAJJ,EADF,eAQE,oBAAC,MAAD;YAAA,UACGW,UAAU,CAAClsB,OAAX,gBACC,oBAAC,iCAAD;cAAoB,MAAM,EAAC;YAA3B,EADD,gBAGC,oBAAC,mCAAD;cACE,MAAM,0BAAEqsB,OAAO,CAACf,WAAV,yDAAE,qBAAqBv0B,YAD/B;cAEE,QAAQ,2BAAEs1B,OAAO,CAACf,WAAV,0DAAE,sBAAqBx0B,QAFjC;cAGE,kBAAkB,EAAE;gBAAE8D,KAAK,EAAE;cAAT;YAHtB;UAJJ,EARF;QAAA,EAxDF,EA4EGyxB,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEb,aAAT,gBACC,qBAAC,UAAD;UAAY,EAAE,EAAE,CAAhB;UAAA,wBACE,oBAAC,KAAD;YAAO,KAAK,EAAC,WAAb;YAAyB,UAAU,EAAC,KAApC;YAAA,uBACE,oBAAC,iCAAD;cAAkB,EAAE,iBAApB;cAAqC,cAAc;gBAAA;gBAAA;cAAA;YAAnD;UADF,EADF,eAIE,oBAAC,iBAAD;YAAA,uBACE,qBAAC,wBAAD;cAAW,KAAK,EAAC,WAAjB;cAAA,iBAAgC,gBAAMa,OAAO,CAACb,aAAd,EAA6B,CAA7B,CAAhC;YAAA;UADF,EAJF;QAAA,EADD,GASG,IArFN;MAAA,EAlIF,EAyNG,CAACtrB,KAAD,IAAUC,MAAM,CAACG,MAAP,CAAcopB,WAAxB,IAAuCF,gBAAgB,KAAKlE,kDAA5D,iBACC,qBAAC,yBAAD;QAAY,IAAI,EAAC,SAAjB;QAA2B,QAAQ,MAAnC;QAAoC,EAAE,EAAE,CAAxC;QAA2C,QAAQ,EAAC,MAApD;QAAA,wBACE;UAAA,uBACE,oBAAC,iCAAD;YAAkB,EAAE,qBAApB;YAAyC,cAAc;cAAA;cAAA;YAAA;UAAvD;QADF,EADF,eAIE,6BAJF,eAKE,oBAAC,MAAD;UAAG,EAAE,EAAE,CAAP;UAAU,QAAQ,EAAC,MAAnB;UAA0B,UAAU,EAAC,MAArC;UAAA,uBACE,oBAAC,iCAAD;YACE,EAAE,uCADJ;YAEE,cAAc;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA,EAFhB;YAGE,MAAM,EAAE;cAAErO,YAAY,EAAE6U,sBAAsB,GAAG,UAAH,iBAAuBD,iBAAvB;YAAtC;UAHV;QADF,EALF;MAAA,EA1NJ,eAwOE,oBAAC,iBAAD;QAAM,QAAQ,EAAC,MAAf;QAAsB,cAAc,EAAC,cAArC;QAAA,uBACE,oBAAC,2BAAD;UACE,WAAW,EAAC,SADd;UAEE,KAAK,EAAC,MAFR;UAGE,CAAC,EAAE,CAHL;UAIE,IAAI,EAAC,QAJP;UAKE,OAAO,EAAE1rB,MAAM,CAACosB,YALlB;UAME,WAAQ,qBANV;UAOE,QAAQ,EAAEL,UAAU,CAAClsB,OAPvB;UAAA,UASG4rB,gBAAgB,gBACf,qBAAC,cAAD;YAAA,wBACE,oBAAC,4BAAD;cAAO,IAAI,EAAC;YAAZ,EADF,eAEE;cAAwC,EAAE,EAAE,CAA5C;cAAA,uBACE,oBAAC,iCAAD;gBAAkB,EAAE,sBAApB;gBAA0C,cAAc;kBAAA;kBAAA;gBAAA;cAAxD;YADF,EAFF;UAAA,EADe,GAObG,YAAY,gBACd,oBAAC,iCAAD;YACE,EAAE,wBADJ;YAEE,cAAc;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA,EAFhB;YAGE,MAAM,EAAE;cAAES,aAAa,EAAEX;YAAjB;UAHV,EADc,gBAOd,oBAAC,iCAAD;YACE,EAAE,mBADJ;YAEE,cAAc;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA,EAFhB;YAGE,MAAM,EAAE;cAAEW,aAAa,EAAEX;YAAjB;UAHV;QAvBJ;MADF,EAxOF;IAAA,EANF;EAAA,EADF;AAkRD,CAhTD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkVA,6DAAezR,iCAAQ,CAACuR,eAAD,CAAvB;;;;;GAxD2B;EAAEjgB,aAAa,EAAE;AAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACre3B;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMohB,iBAAiB,GAAGt3B,iDAAM,CAACK,iBAAD,CAAT;EAAA;EAAA;AAAA,yHAKQ2E,kCAAQ,CAAC,kBAAD,CALhB,CAAvB;AASA,IAAMuyB,eAAe,GAAG;EAAEC,IAAI,EAAE,SAAR;EAAmBC,IAAI,EAAE,OAAzB;EAAkCC,MAAM,EAAE,SAA1C;EAAqDC,GAAG,EAAE;AAA1D,CAAxB;AACA,IAAMC,WAAW,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB,EAA0B,MAA1B,CAApB;AACA,IAAMC,KAAK,GAAG;EACZC,IAAI,EAAE,MADM;EAEZC,UAAU,EAAE,YAFA;EAGZC,KAAK,EAAE,OAHK;EAIZC,aAAa,EAAE;AAJH,CAAd;AAOO,IAAMC,mCAAmC,GAAG,SAAtCA,mCAAsC,CAAArjB,OAAO;EAAA;;EAAA,OACxD,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,qCAAAA,OAAO,CAAEsjB,cAAT,gFAAyB/qB,MAAzB,CAAgC,UAAAgrB,KAAK;IAAA,OAAIA,KAAK,CAACC,KAAN,KAAgB,MAApB;EAAA,CAArC,EAAiEn2B,MAAjE,IAA0E,CADlB;AAAA,CAAnD;;AAGP,IAAMo2B,aAAa,GAAG,SAAhBA,aAAgB,CAAAF,KAAK,EAAI;EAC7B,sBAAkCx4B,cAAA,CAAe,KAAf,CAAlC;EAAA;EAAA,IAAO24B,UAAP;EAAA,IAAmBC,WAAnB;;EAEA,oBACE,qBAAC,iBAAD;IAAA,wBACE,qBAAC,iBAAD;MAAM,aAAa,EAAC,QAApB;MAA6B,UAAU,EAAC,OAAxC;MAAA,wBACE,oBAAC,gBAAD;QAAA,uBACE,oBAAC,wBAAD;UACE,IAAI,EAAEjB,eAAe,CAACa,KAAK,CAACC,KAAP,CADvB;UAEE,UAAU,EAAC,KAFb;UAGE,QAAQ,EAAC,MAHX;UAIE,UAAU,EAAC,MAJb;UAKE,CAAC,EAAC,SALJ;UAME,EAAE,EAAE,CANN;UAAA,UAQG,oBAAUD,KAAK,CAACK,KAAhB;QARH;MADF,EADF,eAaE,oBAAC,MAAD;QAAG,UAAU,EAAC,KAAd;QAAoB,QAAQ,EAAC,MAA7B;QAAoC,UAAU,EAAC,MAA/C;QAAA,UACGL,KAAK,CAAChtB;MADT,EAbF,EAiBGmtB,UAAU,iBACT,oBAAC,MAAD;QAAG,EAAE,EAAE,CAAP;QAAU,UAAU,EAAC,KAArB;QAA2B,QAAQ,EAAC,MAApC;QAA2C,UAAU,EAAC,MAAtD;QAAA,UACGH,KAAK,CAACxH;MADT,EAlBJ;IAAA,EADF,EAwBGwH,KAAK,CAACxH,OAAN,iBACC,oBAAC,iBAAD;MAAM,UAAU,EAAC,QAAjB;MAAA,uBACE,qBAAC,yBAAD;QACE,UAAU,EAAC,KADb;QAEE,QAAQ,EAAC,MAFX;QAGE,UAAU,EAAC,MAHb;QAIE,EAAE,EAAE,CAJN;QAKE,KAAK,EAAC,UALR;QAME,OAAO,EAAE;UAAA,OAAM4H,WAAW,CAAC,CAACD,UAAF,CAAjB;QAAA,CANX;QAOE,QAAQ,EAAC,aAPX;QAAA,WASGA,UAAU,gBACT,oBAAC,iCAAD;UAAA;UAAkB,cAAc;YAAA;YAAA;UAAA;QAAhC,EADS,gBAGT,oBAAC,iCAAD;UAAA;UAAkB,cAAc;YAAA;YAAA;UAAA;QAAhC,EAZJ,EAcGA,UAAU,gBAAG,oBAAC,8BAAD;UAAW,IAAI,EAAC;QAAhB,EAAH,gBAA8B,oBAAC,kCAAD;UAAa,IAAI,EAAC;QAAlB,EAd3C;MAAA;IADF,EAzBJ;EAAA,GAAwBH,KAAK,CAAChtB,OAA9B,CADF;AA+CD,CAlDD;;AAoDA,IAAMstB,UAAU,GAAGzzB,iCAAc;EAC/B0zB,GAAG,EAAE;IACHxyB,EAAE,qBADC;IAEHnC,cAAc;MAAA;MAAA;IAAA;EAFX;AAD0B,6CAK9B6zB,KAAK,CAACG,KALwB,EAKhB;EACb7xB,EAAE,uBADW;EAEbnC,cAAc;IAAA;IAAA;EAAA;AAFD,CALgB,6CAS9B6zB,KAAK,CAACC,IATwB,EASjB;EACZ3xB,EAAE,aADU;EAEZnC,cAAc;IAAA;IAAA;EAAA;AAFF,CATiB,6CAa9B6zB,KAAK,CAACE,UAbwB,EAaX;EAClB5xB,EAAE,cADgB;EAElBnC,cAAc;IAAA;IAAA;EAAA;AAFI,CAbW,6CAiB9B6zB,KAAK,CAACI,aAjBwB,EAiBR;EACrB9xB,EAAE,8BADmB;EAErBnC,cAAc;IAAA;IAAA;EAAA;AAFO,CAjBQ,oBAAjC;;AAsBA,IAAM40B,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAoD;EAAA;;EAAA,IAAjD/jB,OAAiD,QAAjDA,OAAiD;EAAA,IAAxCxJ,OAAwC,QAAxCA,OAAwC;EAAA,IAA/BukB,SAA+B,QAA/BA,SAA+B;EAAA,IAAjBxH,UAAiB;;EAC9E,IAAMxnB,IAAI,GAAGb,0BAAO,EAApB;;EACA,uBAA0BH,cAAA,EAA1B;EAAA;EAAA,IAAO64B,KAAP;EAAA,IAAcI,QAAd;;EAEA,oBACE,qBAAC,2BAAD;IAAa,OAAO,EAAExtB,OAAtB;IAA+B,KAAK,EAAC,OAArC;IAA6C,WAAQ;EAArD,GAAgF+c,UAAhF;IAAA,wBACE,oBAAC,+BAAD;MAAa,OAAO,EAAE/c,OAAtB;MAAA,uBACE,qBAAC,gBAAD;QAAA,wBACE,oBAAC,OAAD;UAAI,KAAK,EAAC,WAAV;UAAsB,QAAQ,EAAC,MAA/B;UAAsC,UAAU,EAAC,MAAjD;UAAA,UACGukB,SAAS,gBACR,oBAAC,iCAAD;YAAkB,EAAE,qCAApB;YAAyD,cAAc;cAAA;cAAA;YAAA;UAAvE,EADQ,gBAGR,oBAAC,iCAAD;YAAkB,EAAE,6BAApB;YAAiD,cAAc;cAAA;cAAA;YAAA;UAA/D;QAJJ,EADF,eAQE,oBAAC,MAAD;UAAG,EAAE,EAAE,CAAP;UAAU,KAAK,EAAC,WAAhB;UAA4B,UAAU,EAAC,KAAvC;UAA6C,QAAQ,EAAC,MAAtD;UAA6D,UAAU,EAAC,MAAxE;UAAA,uBACE,oBAAC,iCAAD;YACE,EAAE,gCADJ;YAEE,cAAc;cAAA;cAAA;YAAA;UAFhB;QADF,EARF;MAAA;IADF,EADF,eAkBE,qBAAC,6BAAD;MAAW,EAAE,EAAE,CAAf;MAAkB,EAAE,EAAC,MAArB;MAAA,wBACE,oBAAC,4BAAD;QACE,CAAC,EAAE,CADL;QAEE,OAAO,GAAG,KAAH,qCAAa,eAAK/a,OAAL,aAAKA,OAAL,iDAAKA,OAAO,CAAEsjB,cAAd,2DAAK,uBAAyBv1B,GAAzB,CAA6B,UAAAw1B,KAAK;UAAA,OAAIA,KAAK,CAACK,KAAV;QAAA,CAAlC,CAAL,CAAb,EAFT;QAGE,QAAQ,EAAE,kBAAA3lB,GAAG;UAAA,OAAIlS,IAAI,CAACsD,aAAL,CAAmBw0B,UAAU,CAAC5lB,GAAD,CAA7B,CAAJ;QAAA,CAHf;QAIE,QAAQ,EAAE,kBAAA1F,MAAM;UAAA,OAAKA,MAAM,KAAK,KAAX,GAAmByrB,QAAQ,EAA3B,GAAgCA,QAAQ,CAACzrB,MAAD,CAA7C;QAAA,CAJlB;QAKE,QAAQ,EAAEqrB;MALZ,EADF,eAQE,oBAAC,yBAAD;QAAY,EAAE,EAAE,CAAhB;QAAA,UACG5jB,OAAO,CAACsjB,cAAR,CACE/qB,MADF,CACS,UAAAgrB,KAAK;UAAA,OAAKK,KAAK,GAAGL,KAAK,CAACK,KAAN,KAAgBA,KAAnB,GAA2B,IAArC;QAAA,CADd,EAEE71B,GAFF,CAEM,UAAAw1B,KAAK;UAAA,oBACR,oBAAC,aAAD,uCAAuCA,KAAvC,GAAoBA,KAAK,CAAChtB,OAA1B,CADQ;QAAA,CAFX;MADH,EARF;IAAA,EAlBF,EAkCGwkB,SAAS,iBACR,oBAAC,+BAAD;MAAa,WAAW,MAAxB;MAAA,uBACE,qBAAC,iBAAD;QAAM,cAAc,EAAC,eAArB;QAAA,wBACE,oBAAC,2BAAD;UAAc,OAAO,EAAEvkB,OAAvB;UAAA,uBACE,oBAAC,iCAAD;YAAkB,EAAE,kBAApB;YAAsC,cAAc;cAAA;cAAA;YAAA;UAApD;QADF,EADF,eAIE,oBAAC,2BAAD;UAAc,WAAW,EAAC,SAA1B;UAAoC,OAAO,EAAEukB,SAA7C;UAAwD,WAAQ,YAAhE;UAAA,uBACE,oBAAC,iCAAD;YAAkB,EAAE,sCAApB;YAA0D,cAAc;cAAA;cAAA;YAAA;UAAxE;QADF,EAJF;MAAA;IADF,EAnCJ;EAAA,GADF;AAiDD,CArDD;;AAoEA,IAAMkJ,SAAS,GAAG94B,2EAAH;EAAA;EAAA;AAAA,4OAaOgF,kCAAQ,CAAC,gBAAD,CAbf,CAAf;AAkBA,IAAM+zB,WAAW,GAAG/4B,iDAAM,CAACo3B,gCAAD,CAAT;EAAA;EAAA;AAAA,0BAAjB;AAIA,IAAM4B,kBAAkB,GAAG;EACzBxB,IAAI,EAAE,kBADmB;EAEzBC,IAAI,EAAE,iBAFmB;EAGzBC,MAAM,EAAE,kBAHiB;EAIzBC,GAAG,EAAE;AAJoB,CAA3B;AAOO,IAAMsB,oBAAoB,GAAG,SAAvBA,oBAAuB,QAAiC;EAAA;;EAAA,IAA9BpkB,OAA8B,SAA9BA,OAA8B;EAAA,IAAlB4F,WAAkB;;EACnE,uBAAgC7a,cAAA,CAAe,KAAf,CAAhC;EAAA;EAAA,IAAOizB,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAMoG,cAAc,GAAG,CAAArkB,OAAO,SAAP,IAAAA,OAAO,WAAP,sCAAAA,OAAO,CAAEsjB,cAAT,kFAAyB/qB,MAAzB,CAAgC,UAAAgrB,KAAK;IAAA,OAAIA,KAAK,CAACC,KAAN,KAAgB,MAApB;EAAA,CAArC,EAAiEn2B,MAAjE,KAA2E,CAAlG;;EACA,IAAMi3B,UAAU,GAAG,gBAAM,kBAAQvB,WAAW,CAACh1B,GAAZ,CAAgB,UAAAy1B,KAAK;IAAA,OAAI,eAAKxjB,OAAL,aAAKA,OAAL,uBAAKA,OAAO,CAAEsjB,cAAd,EAA8B;MAAEE,KAAK,EAALA;IAAF,CAA9B,CAAJ;EAAA,CAArB,CAAR,CAAN,CAAnB;;EACA,IAAMe,UAAU,GAAGF,cAAc,GAAGhC,sDAAH,GAA2BD,0CAA5D;EAEA,oBACE,qBAAC,cAAD;IAAA,wBACE,qBAAC,WAAD,wEACMxc,WADN;MAEE,WAAW,EAAEue,kBAAkB,CAACG,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEd,KAAb,CAAlB,IAAyC,WAFxD;MAGE,OAAO,EAAE;QAAA,OAAMvF,WAAW,CAAC,IAAD,CAAjB;MAAA,CAHX;MAAA,WAKGoG,cAAc,gBAAG,oBAAC,SAAD;QAAA,UAAYA;MAAZ,EAAH,GAA6C,IAL9D,eAME,oBAAC,UAAD;QAAY,IAAI,EAAE;MAAlB,EANF;IAAA,GADF,EASGrG,QAAQ,iBAAI,oBAAC,mBAAD;MAAqB,OAAO,EAAEhe,OAA9B;MAAuC,OAAO,EAAE;QAAA,OAAMie,WAAW,CAAC,KAAD,CAAjB;MAAA;IAAhD,EATf;EAAA,EADF;AAaD,CAnBM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BP,iEAAe8F,mBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChPA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;AAEA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAC1kB,OAAD,EAAUjK,UAAV,EAAsBZ,IAAtB,EAA4ByX,YAA5B,EAA6C;EACtE;EACA,IAAM+X,8BAA8B,GAAGH,2CAAgB,CAACxkB,OAAO,CAACsM,uBAAT,CAAvD;;EACA,IAAMG,OAAO,GAAG,cACd1W,UADc,EAEd,4CAFc,EAGd,cAAIA,UAAJ,EAAgB,+BAAhB,EAAiD,CAAjD,CAHc,CAAhB;;EAKA,IAAI,CAACZ,IAAL,EAAW;IACT,oBACE,oBAAC,iCAAD;MAAkB,EAAE,4BAApB;MAAgD,cAAc;QAAA;QAAA;MAAA;IAA9D,EADF;EAGD,CAJD,MAIO,IAAIsX,OAAO,GAAGkY,8BAAd,EAA8C;IACnD,oBAAO,oBAAC,iCAAD;MAAkB,EAAE,yCAApB;MAA6D,cAAc;QAAA;QAAA;MAAA;IAA3E,EAAP;EACD,CAFM,MAEA,IAAI,mBAAS3kB,OAAO,CAAC0M,sBAAjB,EAAyC,aAAzC,CAAJ,EAA6D;IAClE,oBACE,oBAAC,iCAAD;MACE,EAAE,2BADJ;MAEE,cAAc;QAAA;QAAA;MAAA;IAFhB,EADF;EAMD,CAPM,MAOA,IAAI,CAACE,YAAL,EAAmB;IACxB,OAAO,IAAP;EACD,CAFM,MAEA,IAAIA,YAAY,CAACha,IAAb,KAAsBqoB,gEAA1B,EAAyD;IAC9D,OAAO,IAAP;EACD,CAFM,MAEA,IAAIrO,YAAY,CAACha,IAAb,KAAsBqoB,sEAA1B,EAA4D;IACjE,IAAI,CAACjb,OAAO,CAACuL,KAAR,CAAcpW,IAAnB,EAAyB;MACvB,oBACE,oBAAC,iCAAD;QACE,EAAE,kCADJ;QAEE,cAAc;UAAA;UAAA;QAAA;MAFhB,EADF;IAMD;;IACD,IAAI6K,OAAO,CAACuL,KAAR,CAAcpW,IAAd,CAAmB7D,EAAnB,KAA0B6D,IAAI,CAAC7D,EAAnC,EAAuC;MACrC,oBACE,oBAAC,iCAAD;QACE,EAAE,oCADJ;QAEE,cAAc;UAAA;UAAA;QAAA;MAFhB,EADF;IAMD;EACF;AACF,CA3CD;;AA6CA,IAAMszB,oBAAoB,GAAG,SAAvBA,oBAAuB,OAA8B;EAAA,IAA3BhyB,IAA2B,QAA3BA,IAA2B;EAAA,IAArBuC,IAAqB,QAArBA,IAAqB;EAAA,IAAZtF,KAAY;;EACzD,IAAI+C,IAAI,KAAKqoB,oDAAb,EAAsC;IACpC,oBAAO,oBAAC,wBAAD,oCAAgBprB,KAAhB,EAAP;EACD,CAFD,MAEO,IAAI+C,IAAI,KAAKqoB,gEAAT,IAA0C9lB,IAA1C,aAA0CA,IAA1C,eAA0CA,IAAI,CAAEmqB,YAApD,EAAkE;IACvE,oBAAO,oBAAC,+BAAD,oCAAsBzvB,KAAtB,EAAP;EACD,CAFM,MAEA;IACL,oBAAO,oBAAC,gCAAD,oCAAeA,KAAf,EAAP;EACD;AACF,CARD;;AAkBA,IAAMg1B,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAwE;EAAA;;EAAA,IAArE7kB,OAAqE,SAArEA,OAAqE;EAAA,IAA5DjK,UAA4D,SAA5DA,UAA4D;EAAA,IAAhDZ,IAAgD,SAAhDA,IAAgD;EAAA,IAA1CwD,QAA0C,SAA1CA,QAA0C;EAAA,IAAhC3C,QAAgC,SAAhCA,QAAgC;EAAA,IAAtBH,KAAsB,SAAtBA,KAAsB;EAAA,IAAZhG,KAAY;;EAC/F,sBAA8B9E,cAAA,CAAe,KAAf,CAA9B;EAAA;EAAA,IAAOizB,QAAP;EAAA,IAAiB1mB,SAAjB;;EACA,uBAA8CvM,cAAA,CAAe,KAAf,CAA9C;EAAA;EAAA,IAAO+5B,gBAAP;EAAA,IAAyBC,iBAAzB;;EACA,IAAMC,eAAe,GAAGN,kBAAkB,CAAC1kB,OAAD,EAAUjK,UAAV,EAAsBZ,IAAtB,EAA4B6K,OAAO,CAAC4M,YAApC,CAA1C;EACA,IAAM8Q,UAAU,GAAGxoB,OAAO,CAACyD,QAAQ,IAAIqsB,eAAb,CAA1B;EACA,IAAMC,qBAAqB,GAAG5B,mCAAmC,CAACrjB,OAAD,CAAjE;;EAEA,IAAMklB,WAAW,GAAG,SAAdA,WAAc;IAAA,OAAOD,qBAAqB,GAAGF,iBAAiB,CAAC,IAAD,CAApB,GAA6BztB,SAAS,CAAC,IAAD,CAAlE;EAAA,CAApB;;EAEA,IAAMgE,MAAM,gBACV,qBAAC,2BAAD;IACE,WAAW,EAAC,kBADd;IAEE,WAAQ;EAFV,GAGMzL,KAHN;IAIE,QAAQ,EAAE6tB,UAJZ;IAKE,OAAO,EAAEwH,WALX;IAAA,wBAOE,oBAAC,oBAAD;MAAsB,IAAI,2BAAEllB,OAAO,CAAC4M,YAAV,0DAAE,sBAAsBha,IAAlD;MAAwD,IAAI,EAAEuC,IAA9D;MAAoE,IAAI,EAAE;IAA1E,EAPF,eAQE,oBAAC,iBAAD;MAAM,EAAE,EAAC,KAAT;MAAA,uBACE,oBAAC,iCAAD;QAAkB,EAAE,mBAApB;QAAuC,cAAc;UAAA;UAAA;QAAA;MAArD;IADF,EARF;EAAA,GADF;;EAeA,IAAI6vB,eAAJ,EAAqB;IACnB,oBAAO,oBAAC,4BAAD;MAAe,OAAO,EAAEA,eAAxB;MAAA,UAA0C1pB;IAA1C,EAAP;EACD,CAFD,MAEO,IAAI0iB,QAAJ,EAAc;IACnB,oBACE,qBAAC,cAAD;MAAA,WACG1iB,MADH,eAEE,oBAAC,wBAAD;QACE,OAAO,EAAE0E,OADX;QAEE,UAAU,EAAEjK,UAFd;QAGE,IAAI,EAAEZ,IAHR;QAIE,OAAO,EAAE;UAAA,OAAMmC,SAAS,CAAC,KAAD,CAAf;QAAA,CAJX;QAKE,KAAK,EAAEzB,KALT;QAME,QAAQ;UAAA,gFAAE,iBAAMI,MAAN;YAAA;YAAA;cAAA;gBAAA;kBAAA;oBACA+kB,MADA,GACoB/kB,MADpB,CACA+kB,MADA,EACWlJ,IADX,qCACoB7b,MADpB;oBAAA;oBAAA,OAEcD,QAAQ,CAACglB,MAAD,EAASlJ,IAAT,CAFtB;;kBAAA;oBAEFqT,OAFE;;oBAGR,IAAIA,OAAJ,EAAa;sBACX7tB,SAAS,CAAC,KAAD,CAAT;oBACD;;kBALO;kBAAA;oBAAA;gBAAA;cAAA;YAAA;UAAA,CAAF;;UAAA;YAAA;UAAA;QAAA;MANV,EAFF;IAAA,EADF;EAmBD,CApBM,MAoBA,IAAIwtB,gBAAJ,EAAsB;IAC3B,oBACE,qBAAC,cAAD;MAAA,WACGxpB,MADH,eAEE,oBAAC,4BAAD;QACE,OAAO,EAAE0E,OADX;QAEE,SAAS,EAAE,qBAAM;UACf1I,SAAS,CAAC,IAAD,CAAT;UACAytB,iBAAiB,CAAC,KAAD,CAAjB;QACD,CALH;QAME,OAAO,EAAE;UAAA,OAAMA,iBAAiB,CAAC,KAAD,CAAvB;QAAA;MANX,EAFF;IAAA,EADF;EAaD,CAdM,MAcA;IACL,OAAOzpB,MAAP;EACD;AACF,CA/DD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA,8DAAeupB,gBAAf;;;;;;;;;;;;;;;;;AC3LA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAMlK,sBAAsB,GAAGvnB,uBAAH,4cAaxBqnB,kDAbwB,CAA5B;AAgBO,IAAM5V,WAAW,GAAG1Z,6EAAH;EAAA;EAAA;AAAA,GAAe;EAAEs6B,UAAU,EAAE;AAAd,CAAf,CAAjB;AAEP;AACA;AACA;;AACO,IAAMjb,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAnE,WAAW,EAAI;EAC9C,IAAI,CAACA,WAAL,EAAkB;IAChB,OAAO,KAAP;EACD;;EAED,OACEA,WAAW,CAACqf,UAAZ,IACArf,WAAW,CAACsf,YADZ,IAEAtf,WAAW,CAACuf,SAFZ,IAGAvf,WAAW,CAACwf,MAHZ,IAIAxf,WAAW,CAACyf,eAJZ,IAKAzf,WAAW,CAAC0f,aALZ,IAMA1f,WAAW,CAAC2f,SAPd;AASD,CAdM;AAgBP,IAAMvqB,QAAQ,GAAGrL,iCAAc,CAAC;EAC9B61B,iBAAiB,EAAE;IACjB30B,EAAE,6BADe;IAEjBnC,cAAc;MAAA;MAAA;IAAA;EAFG;AADW,CAAD,CAA/B;;AAOA,IAAM+2B,eAAe,GAAG,SAAlBA,eAAkB,CAACn6B,IAAD,EAAO8J,KAAP,EAAcV,IAAd,EAAuB;EAC7C;EACA,IAAMoB,OAAO,GAAGV,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEU,OAAvB;;EACA,IAAIA,OAAJ,EAAa;IACX,IAAIA,OAAO,CAAC4vB,UAAR,CAAmB,6BAAnB,CAAJ,EAAuD;MACrD,OAAO;QACLp2B,KAAK,EAAEhE,IAAI,CAACsD,aAAL,CAAmB;UAAA;UAAEF,cAAc;YAAA;YAAA;UAAA;QAAhB,CAAnB,CADF;QAELoH,OAAO,eACL,oBAAC,cAAD;UAAA,uBACE,oBAAC,mBAAD;YAAM,IAAI,aAAMpB,IAAI,CAACsb,IAAX,WAAV;YAAA,uBACE,oBAAC,iCAAD;cACE,EAAE,sCADJ;cAEE,cAAc;gBAAA;gBAAA;cAAA;YAFhB;UADF;QADF;MAHG,CAAP;IAaD;EACF;;EAED,OAAO;IAAEla,OAAO,EAAEqJ,2CAAoB,CAAC7T,IAAD,EAAO8J,KAAP;EAA/B,CAAP;AACD,CAtBD;;AAwBA,IAAMuwB,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA2C;EAAA,IAAxCC,IAAwC,QAAxCA,IAAwC;EAAA,IAAlCrqB,KAAkC,QAAlCA,KAAkC;EAAA,IAA3BsqB,UAA2B,QAA3BA,UAA2B;EAAA,IAAZz2B,KAAY;;EAClE,IAAM9D,IAAI,GAAGb,0BAAO,EAApB;;EACA,IAAIoQ,MAAM,gBACR,qBAAC,2BAAD,4EAAkBzL,KAAlB;IAAyB,QAAQ,EAAE,CAACy2B,UAAU,CAACC,OAA/C;IAAA,WACGD,UAAU,CAACE,MAAX,gBAAoB,oBAAC,gCAAD;MAAY,IAAI,EAAE;IAAlB,EAApB,GAA+CH,IADlD,EAEGrqB,KAFH;EAAA,GADF;;EAMA,IAAMzF,OAAO,GAAG+vB,UAAU,CAACE,MAAX,IAAqBz6B,IAAI,CAACsD,aAAL,CAAmBqtB,aAAa,CAAC4J,UAAU,CAACE,MAAZ,CAAhC,EAAqDF,UAAU,CAACG,aAAhE,CAArC;;EACA,IAAIlwB,OAAJ,EAAa;IACX+E,MAAM,gBAAG,oBAAC,4BAAD;MAAe,OAAO,EAAE/E,OAAxB;MAAA,UAAkC+E;IAAlC,EAAT;EACD;;EAED,OAAOA,MAAP;AACD,CAdD;;AA0BA;AACA;AACA;AACA;AACA,IAAMsJ,qBAAqB,GAAG,SAAxBA,qBAAwB,QASxB;EAAA;;EAAA,IARJ5E,OAQI,SARJA,OAQI;EAAA,IAPJjK,UAOI,SAPJA,UAOI;EAAA,IANJZ,IAMI,SANJA,IAMI;EAAA,IALJkR,WAKI,SALJA,WAKI;EAAA,IAJJT,WAII,SAJJA,WAII;EAAA,IAHJvP,SAGI,SAHJA,SAGI;EAAA,IAFJsnB,aAEI,SAFJA,aAEI;EAAA,IADJF,QACI,SADJA,QACI;;EACJ,sBAA4C1yB,cAAA,CAAe,IAAf,CAA5C;EAAA;EAAA,IAAO27B,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAC3J,KAAD,EAAQ4J,QAAR;IAAA,OAAqBxwB,SAArB,aAAqBA,SAArB,uBAAqBA,SAAS,CAAGwwB,QAAQ,CAAC/U,IAAT,CAAcgJ,cAAjB,EAAiCmC,KAAjC,EAAwCyJ,cAAxC,CAA9B;EAAA,CAAjB;;EACA,IAAM7L,eAAe,GAAG;IAAErlB,OAAO,EAAEjC,6BAAX;IAA2BmK,MAAM,EAAEkpB;EAAnC,CAAxB;;EACA,mBAA6CvzB,sBAAW,CAACsnB,sBAAD,EAAyBE,eAAzB,CAAxD;EAAA;EAAA,IAAOC,cAAP;EAAA;EAAA,IAAyBnlB,OAAzB,kBAAyBA,OAAzB;EAAA,IAAkCE,KAAlC,kBAAkCA,KAAlC;;EACA,IAAM9J,IAAI,GAAGb,0BAAO,EAApB;;EACA,iBAAqBsJ,mCAAS,EAA9B;EAAA,IAAQe,QAAR,cAAQA,QAAR;;EAEA,IAAMuxB,aAAa;IAAA,gFAAG,iBAAO9L,MAAP,EAAe+L,aAAf;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,KAEhBpxB,OAFgB;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAMpBgxB,iBAAiB,CAAC3L,MAAD,CAAjB;cANoB;cASZ9kB,SATY,GASA;gBAAE5E,EAAE,EAAE0O,OAAO,CAAC1O,EAAd;gBAAkB8E,QAAQ,EAAE4J,OAAO,CAAC5J,QAApC;gBAA8C4kB,MAAM,EAANA,MAA9C;gBAAsD+L,aAAa,EAAbA;cAAtD,CATA;cAAA;cAAA,OAUZjM,cAAc,CAAC;gBAAE5kB,SAAS,EAATA;cAAF,CAAD,CAVF;;YAAA;cAAA,iCAWX,IAXW;;YAAA;cAAA;cAAA;cAalB;cACAX,QAAQ,CAAC;gBAAE3C,IAAI,EAAE2B,+CAAT;gBAA2BoG,OAAO,EAAE;cAApC,GAAgDurB,eAAe,CAACn6B,IAAD,eAAUoJ,IAAV,CAA/D,EAAR;cAdkB,iCAeX,KAfW;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAb2xB,aAAa;MAAA;IAAA;EAAA,GAAnB;;EAmBA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAhM,MAAM,EAAI;IAC/B,IAAMiM,gBAAgB,GAAGP,cAAc,KAAK1L,MAA5C;IACA,OAAO,0EACFpV,WADL;MAEEjN,QAAQ,EAAEhD,OAAO,IAAI,CAACsxB,gBAFxB;MAGEtxB,OAAO,EAAEA,OAAO,IAAIsxB,gBAHtB;MAIEzvB,OAAO,EAAE;QAAA,OAAMsvB,aAAa,CAAC9L,MAAD,CAAnB;MAAA;IAJX;EAMD,CARD;;EAUA,oBACE,qBAAC,cAAD;IAAA,WACG,CAAC3U,WAAW,CAAC6gB,OAAZ,CAAoBX,OAApB,IAA+BlgB,WAAW,CAAC6gB,OAAZ,CAAoBV,MAApB,KAA+BhB,2CAA/D,kBACC,oBAAC,gBAAD,4EACMwB,cAAc,CAAC,SAAD,CADpB;MAEE,WAAW,EAAC,WAFd;MAGE,WAAQ,gBAHV;MAIE,IAAI,eAAE,oBAAC,sBAAD;QAAa,IAAI,EAAE;MAAnB,EAJR;MAKE,UAAU,EAAE3gB,WAAW,CAAC6gB,OAL1B;MAME,KAAK,eACH,oBAAC,WAAD;QAAA,uBACE,oBAAC,iCAAD;UAAkB,EAAE,mBAApB;UAAuC,cAAc;YAAA;YAAA;UAAA;QAArD;MADF;IAPJ,GAFJ,EAeG7gB,WAAW,CAACwf,MAAZ,iBACC,oBAAC,yBAAD,4EACMmB,cAAc,CAAC,KAAD,CADpB;MAEE,OAAO,EAAE,IAFX;MAGE,QAAQ,EAAEF,aAHZ;MAIE,OAAO,EAAE9mB,OAJX;MAKE,UAAU,EAAEjK,UALd;MAME,IAAI,EAAEZ,IANR;MAOE,KAAK,EAAEU;IAPT,GAhBJ,EA0BGwQ,WAAW,CAACuf,SAAZ,iBACC,qBAAC,2BAAD,4EAAkBoB,cAAc,CAAC,QAAD,CAAhC;MAA4C,WAAW,EAAC,iBAAxD;MAA0E,WAAQ,eAAlF;MAAA,wBACE,oBAAC,sBAAD;QAAY,IAAI,EAAE;MAAlB,EADF,eAEE,oBAAC,WAAD;QAAA,uBACE,oBAAC,iCAAD;UAAkB,EAAE,kBAApB;UAAsC,cAAc;YAAA;YAAA;UAAA;QAApD;MADF,EAFF;IAAA,GA3BJ,EAkCG3gB,WAAW,CAAC0f,aAAZ,iBACC,qBAAC,2BAAD,4EACMiB,cAAc,CAAC,cAAD,CADpB;MAEE,WAAW,EAAC,iBAFd;MAGE,WAAQ,aAHV;MAIE,OAAO,EAAE,mBAAM;QACb,IAAIG,OAAO,CAACp7B,IAAI,CAACsD,aAAL,CAAmBoM,QAAQ,CAACwqB,iBAA5B,CAAD,CAAX,EAA6D;UAC3Da,aAAa,CAAC,cAAD,CAAb;QACD;MACF,CARH;MAAA,wBAUE,oBAAC,sBAAD;QAAY,IAAI,EAAE;MAAlB,EAVF,eAWE,oBAAC,WAAD;QAAA,uBACE,oBAAC,iCAAD;UAAkB,EAAE,gBAApB;UAAoC,cAAc;YAAA;YAAA;UAAA;QAAlD;MADF,EAXF;IAAA,GAnCJ,EAoDGzgB,WAAW,CAACsf,YAAZ,iBACC,qBAAC,2BAAD,4EAAkBqB,cAAc,CAAC,WAAD,CAAhC;MAA+C,WAAW,EAAC,iBAA3D;MAA6E,WAAQ,kBAArF;MAAA,wBACE,oBAAC,kBAAD;QAAe,IAAI,EAAE;MAArB,EADF,eAEE,oBAAC,WAAD;QAAA,uBACE,oBAAC,iCAAD;UAAkB,EAAE,yBAApB;UAA6C,cAAc;YAAA;YAAA;UAAA;QAA3D;MADF,EAFF;IAAA,GArDJ,EA4DG3gB,WAAW,CAAC+gB,oBAAZ,iBACC,qBAAC,2BAAD,4EACMJ,cAAc,CAAC,oBAAD,CADpB;MAEE,WAAW,EAAC,iBAFd;MAGE,WAAQ,kBAHV;MAAA,wBAKE,oBAAC,kBAAD;QAAe,IAAI,EAAE;MAArB,EALF,eAME,oBAAC,WAAD;QAAA,uBACE,oBAAC,iCAAD;UAAkB,EAAE,iCAApB;UAAqD,cAAc;YAAA;YAAA;UAAA;QAAnE;MADF,EANF;IAAA,GA7DJ,EAwEG3gB,WAAW,CAACyf,eAAZ,iBACC,oBAAC,kCAAD;MACE,WAAQ;IADV,GAEMkB,cAAc,CAAC,gBAAD,CAFpB;MAGE,OAAO,EAAE,IAHX;MAIE,SAAS,EAAE,mBAAAK,+BAA+B;QAAA,OACxCP,aAAa,CAAC,gBAAD,EAAmB;UAAEO,+BAA+B,EAA/BA;QAAF,CAAnB,CAD2B;MAAA;IAJ5C,GAzEJ,EAkFGhhB,WAAW,CAAC2f,SAAZ,iBACC,oBAAC,4BAAD;MACE,WAAW,EAAEgB,cAAc,EAD7B;MAEE,OAAO,EAAEhnB,OAFX;MAGE,aAAa,EAAE2d,aAHjB;MAIE,QAAQ,EAAEF;IAJZ,EAnFJ,EA0FG,CAAAzd,OAAO,SAAP,IAAAA,OAAO,WAAP,qCAAAA,OAAO,CAAEsjB,cAAT,gFAAyBj2B,MAAzB,kBAAmC,oBAAC,oBAAD,4EAA0BuY,WAA1B;MAAuC,QAAQ,EAAE,CAAjD;MAAoD,OAAO,EAAE5F;IAA7D,GA1FtC;EAAA,EADF;AA8FD,CA5ID;;AAwLO,IAAMuK,iCAAiC,GAAG;EAC/C3S,UAAU,EAAE,OADmC;EAE/CiH,QAAQ,EAAE,GAFqC;EAG/CgO,EAAE,EAAE,CAH2C;EAI/Cya,EAAE,EAAE;AAJ2C,CAA1C;AAOP1iB,qBAAqB,CAAChW,YAAtB,GAAqC;EACnCgX,WAAW,EAAE2E;AADsB,CAArC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,mEAAe3F,qBAAf;;;;;;;;;;;;;;;;;;;;;;AC9TA;AAEA;AAEO,IAAM4iB,0CAA0C,GAAGp0B,oEAAH,kkEAAhD;AAkGA,IAAMqc,iBAAiB,GAAGrc,oEAAH,q0BAAvB;AA2CA,IAAMqnB,gCAAgC,GAAGrnB,oEAAH,ggJAsRzCqc,iBAtRyC,EAuRzC8X,wGAvRyC,CAAtC;AA0RA,IAAM7X,0BAA0B,GAAGtc,oEAAH,szDAAhC;AAqGA,IAAMq0B,+BAA+B,GAAGr0B,oEAAH,uoBAArC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChhBP;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEO,IAAMy0B,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA5xB,MAAM,EAAI;EAAA;;EAC5C,IAAM6xB,+BAA+B,GAAG,CAAC5a,sGAAD,EAA4BA,0FAA5B,EAAiDA,0GAAjD,CAAxC;EACA,IAAM+a,4BAA4B,GAAG,CAAC5f,4FAAD,EAAuBA,wFAAvB,CAArC;EAEA,OACE4f,4BAA4B,CAAC9b,QAA7B,CAAsClW,MAAM,CAACrD,IAA7C,MACC,kBAAAqD,MAAM,CAACsV,KAAP,gEAAc4c,SAAd,KACElyB,MAAM,CAACsV,KAAP,IACC,CAACtV,MAAM,CAACsV,KAAP,CAAa6c,QADf,KAEEN,+BAA+B,CAAC3b,QAAhC,CAAyClW,MAAM,CAACsV,KAAP,CAAa3Y,IAAtD,KAA+DqD,MAAM,CAACsV,KAAP,CAAa6C,MAF9E,CAFH,CADF;AAOD,CAXM;AAaA,IAAMia,cAAc,GAAG,SAAjBA,cAAiB,CAAAtQ,IAAI;EAAA,OAAI,CAAC,oDAAMA,IAAN,CAAD,IAAgBA,IAAI,IAAI,CAAxB,IAA6BA,IAAI,IAAI,CAAzC;AAAA,CAA3B;AAEA,IAAM6G,YAAY,GAAG,SAAfA,YAAe,CAAC0J,UAAD,EAAazQ,GAAb,EAAqB;EAC/C,OAAOjrB,IAAI,CAACC,KAAL,CAAWy7B,UAAU,GAAGzQ,GAAG,CAACE,IAA5B,CAAP;AACD,CAFM;AAIA,IAAMwQ,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACtf,KAAD,EAAQmP,KAAR,EAAkB;EACrD,IAAMoQ,gBAAgB,GAAGvf,KAAK,CAAC4C,KAAN,CAAY,UAAAlE,IAAI;IAAA,OAAI,CAAC,oDAAMA,IAAI,CAACpb,MAAX,CAAL;EAAA,CAAhB,CAAzB;EACA,IAAMk8B,WAAW,GAAG,CAAArQ,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAE7f,MAAP,CAAc,UAAAsf,GAAG;IAAA,OAAI,CAACA,GAAG,CAAC6F,UAAT;EAAA,CAAjB,MAAyC,EAA7D;EACA,IAAMgL,QAAQ,GAAGxzB,OAAO,CAACuzB,WAAW,CAACp7B,MAAb,CAAxB;EACA,IAAMs7B,gBAAgB,GAAG,CAACD,QAAD,IAAaD,WAAW,CAAC5c,KAAZ,CAAkB,UAAAgM,GAAG;IAAA,OAAIwQ,cAAc,CAACxQ,GAAG,CAACE,IAAL,CAAlB;EAAA,CAArB,CAAtC;EACA,IAAM6Q,aAAa,GAAGJ,gBAAgB,GAAG,oDAAMvf,KAAN,EAAa,QAAb,CAAH,GAA4B,IAAlE;EACA,IAAMgY,WAAW,GACfuH,gBAAgB,IAAIG,gBAApB,GACIC,aAAa,GAAG,oDAAMH,WAAW,IAAI,EAArB,EAAyB,UAAA5Q,GAAG;IAAA,OAAI+G,YAAY,CAACgK,aAAD,EAAgB/Q,GAAhB,CAAhB;EAAA,CAA5B,CADpB,GAEI,IAHN;EAKA,OAAO;IAAE6Q,QAAQ,EAARA,QAAF;IAAYE,aAAa,EAAbA,aAAZ;IAA2B3H,WAAW,EAAXA;EAA3B,CAAP;AACD,CAZM;AAcA,IAAMtC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACsC,WAAD,EAAc7I,KAAd,EAAwB;EAC3D,OAAO6I,WAAW,IAAI,IAAI,oDAAM7I,KAAN,EAAa,MAAb,CAAR,CAAlB;AACD,CAFM;AAIA,IAAMyQ,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAC98B,IAAD,EAAOqsB,KAAP,EAAiB;EACnD,IAAM0Q,YAAY,GAAG,CAAA1Q,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAE7f,MAAP,CAAc,UAAAsf,GAAG;IAAA,OAAI,CAACA,GAAG,CAAC6F,UAAT;EAAA,CAAjB,MAAyC,EAA9D;;EACA,IAAI,CAACoL,YAAY,CAACz7B,MAAlB,EAA0B;IACxB,OAAO,IAAP;EACD,CAFD,MAEO;IACL,IAAM07B,WAAW,GAAGD,YAAY,CAAC/6B,GAAb,CAAiB,UAAA8pB,GAAG,EAAI;MAC1C,QAAQA,GAAG,CAACjlB,IAAZ;QACE,KAAK8kB,8DAAL;UACE,OAAOE,iFAAc,CAAC7rB,IAAD,EAAO8rB,GAAP,CAArB;;QACF,KAAKH,8DAAL;UACE,OAAO2C,iFAAc,CAACtuB,IAAD,EAAO8rB,GAAP,CAArB;;QACF;UACE,0BAAmBA,GAAG,CAACjlB,IAAvB;QAAgD;MANpD;IAQD,CATmB,CAApB;IAWA,IAAMo2B,SAAS,GAAGD,WAAW,CAAC/rB,IAAZ,CAAiB,UAAAtG,MAAM;MAAA,OAAI,CAAC,sDAAQA,MAAR,CAAL;IAAA,CAAvB,CAAlB;IACA,OAAOsyB,SAAS,GAAGD,WAAH,GAAiB,IAAjC;EACD;AACF,CAnBM;AAqBP;AACA;AACA;AACA;;AACO,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAClzB,UAAD,EAAa6W,YAAb,EAA8B;EAClE,IACE,CAAC8a,iFAAgB,CAAC3xB,UAAD,EAAayoB,qHAAb,CAAjB,IACA,CAACkJ,iFAAgB,CAAC3xB,UAAU,CAACZ,IAAZ,EAAkBqpB,qHAAlB,CADjB,IAEA,CAAA5R,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEha,IAAd,MAAuBqoB,oHAHzB,EAIE;IACA,OAAO,CAACllB,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEtJ,QAAb,CAAP;EACD;;EAED,IAAM08B,QAAQ,GAAG,CAAAvc,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEha,IAAd,MAAuBqoB,kGAAxC;;EACA,IAAIkO,QAAJ,EAAc;IACZ,IAAMC,eAAe,GAAGxB,0GAAA,CAAmC7xB,UAAnC,aAAmCA,UAAnC,uBAAmCA,UAAU,CAAEtJ,QAA/C,IAA2DsJ,UAAU,CAACtJ,QAAtE,GAAiF,KAAzG;IACA,OAAO,oDAAM28B,eAAN,mLAA0BxB,wFAA1B,GAAP;EACD,CAHD,MAGO,IAAI,CAAAhb,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEha,IAAd,MAAuBqoB,gGAA3B,EAAmD;IACxD,OAAO0M,yFAAA,CAAkB5xB,UAAlB,aAAkBA,UAAlB,uBAAkBA,UAAU,CAAEtJ,QAA9B,IAA0C,oDAAMsJ,UAAN,aAAMA,UAAN,uBAAMA,UAAU,CAAEtJ,QAAlB,mLAA+Bk7B,uEAA/B,GAA1C,GAAsFA,uEAA7F;EACD,CAFM,MAEA;IAAA;;IACL,OAAO,mDACL,CAAC5xB,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEtJ,QAAb,EAAuBsJ,UAAvB,aAAuBA,UAAvB,2CAAuBA,UAAU,CAAEZ,IAAnC,qDAAuB,iBAAkB1I,QAAzC,EAAmDmgB,YAAnD,aAAmDA,YAAnD,uBAAmDA,YAAY,CAAEngB,QAAjE,EAA2EmgB,YAA3E,aAA2EA,YAA3E,6CAA2EA,YAAY,CAAEkF,IAAzF,uDAA2E,mBAAoBrlB,QAA/F,EAAyG8L,MAAzG,CACErD,OADF,CADK,CAAP;EAKD;AACF,CAtBM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EP;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,IAAM+0B,YAAY,GAAG9+B,wFAAA,CAAiB;EAAEg/B,GAAG,EAAEH,iGAAYA;AAAnB,CAAjB,CAAH;EAAA;EAAA;AAAA,+BAAlB;AAKA,IAAMI,sBAAsB,GAAGj/B,wEAAM,CAAC8I,+DAAD,CAAT;EAAA;EAAA;AAAA,0DAIxB,UAAApE,KAAK;EAAA,OACLA,KAAK,CAACw6B,oBAAN,IACA5yB,iEADA,2HADK;AAAA,CAJmB,CAA5B;;AAaA,IAAM6yB,iBAAiB,GAAG,SAApBA,iBAAoB;EAAA,IAAGtuB,KAAH,QAAGA,KAAH;EAAA,IAAUhQ,KAAV,QAAUA,KAAV;EAAA,IAAiBS,QAAjB,QAAiBA,QAAjB;EAAA,IAA2B89B,aAA3B,QAA2BA,aAA3B;EAAA,oBACxB,yDAAC,kDAAD;IAAM,cAAc,EAAC,eAArB;IAAqC,UAAU,EAAC,QAAhD;IAAA,wBACE,wDAAC,kDAAD;MAAM,QAAQ,EAAC,MAAf;MAAsB,UAAU,EAAC,MAAjC;MAAwC,UAAU,EAAC,KAAnD;MAAA,uBACE,wDAAC,4DAAD;QAAkB,EAAE,aAApB;QAAiC,cAAc;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA,EAA/C;QAA0D,MAAM,EAAE;UAAE5iB,IAAI,EAAE3L;QAAR;MAAlE;IADF,EADF,eAIE,wDAAC,kDAAD;MAAM,QAAQ,EAAEuuB,aAAa,GAAG,MAAH,GAAY,MAAzC;MAAiD,UAAU,EAAEA,aAAa,GAAG,MAAH,GAAY,MAAtF;MAA8F,UAAU,EAAC,KAAzG;MAAA,uBACE,wDAAC,uEAAD;QAAsB,MAAM,EAAEv+B,KAA9B;QAAqC,QAAQ,EAAES;MAA/C;IADF,EAJF;EAAA,EADwB;AAAA,CAA1B;;AAkBA,IAAM+9B,gBAAgB,GAAGp3B,qEAAH,6uCAAtB;AAyDA,IAAMq3B,0BAA0B,GAAGr3B,qEAAH,wTAAhC;AASA,IAAMs3B,oBAAoB,GAAGt3B,qEAAH,izCA2DtBq3B,0BA3DsB,CAA1B;AA8DA,IAAME,sBAAsB,GAAGv3B,qEAAH,maAA5B;;AAQA,IAAM0tB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA7qB,MAAM;EAAA;IAC7B1J,MAAM,EAAE,IADqB;IAE7Bq+B,cAAc,EAAE,IAFa;IAG7BjiB,WAAW,EAAE,EAHgB;IAI7B7J,IAAI,EAAE,IAJuB;IAK7B+rB,WAAW,EAAEpB,0EAAmB,EALH;IAM7BqB,WAAW,EAAE,IANgB;IAO7BC,IAAI,EAAE;EAPuB,GAQ1B90B,MAR0B;AAAA,CAA/B;;AAWA,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAAAR,MAAM,EAAI;EACzB,OAAOszB,yEAAa,CAACtzB,MAAD,EAAS,CAAC,QAAD,EAAW,aAAX,EAA0B,aAA1B,EAAyC,aAAzC,CAAT,CAApB;AACD,CAFD,EAIA;;;AACA,IAAM+0B,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA9vB,KAAK,EAAI;EACrC,OAAO,OAAOA,KAAK,CAAC5J,EAAb,KAAoB,QAApB,GAA+B;IAAEA,EAAE,EAAE4J,KAAK,CAAC5J;EAAZ,CAA/B,GAAkD;IAAE8E,QAAQ,EAAE8E,KAAK,CAAC5J;EAAlB,CAAzD;AACD,CAFD;;AAIA,IAAMG,GAAG,GAAGrB,2DAAc,CAAC;EACzB66B,UAAU,EAAE;IACV35B,EAAE,cADQ;IAEVnC,cAAc;MAAA;MAAA;IAAA;EAFJ,CADa;EAKzB+7B,KAAK,EAAE;IACL55B,EAAE,qBADG;IAELnC,cAAc;MAAA;MAAA;IAAA;EAFT;AALkB,CAAD,CAA1B;AAWA,IAAMg8B,gCAAgC,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,CAAzC;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAC7+B,MAAD,EAASE,QAAT,EAAmB4+B,UAAnB,EAAkC;EAChE,IAAMjL,SAAS,GAAG3mB,KAAK,CAAClN,MAAD,CAAL,GAAgB,CAAhB,GAAoBK,IAAI,CAACC,KAAL,CAAWN,MAAM,GAAG8+B,UAApB,CAAtC;EACA,OAAO;IACL;IACAr/B,KAAK,EAAEo0B,SAAS,cAAOiL,UAAP,MAFX;IAGLjL,SAAS,EAATA,SAHK;IAILiL,UAAU,EAAVA,UAJK;IAKL5+B,QAAQ,EAARA,QALK;IAMLuP,KAAK,YAAKokB,SAAS,GAAG,GAAjB,cAAwB3zB,QAAxB,eAAqC4+B,UAAU,GAAG,GAAlD;EANA,CAAP;AAQD,CAVD;;AAYA,IAAMxvB,UAAU,GAAG,SAAbA,UAAa,CAACtP,MAAD,EAASE,QAAT,EAAmBV,IAAnB,EAA4B;EAC7C,2LACKo/B,gCAAgC,CAACp9B,GAAjC,CAAqC,UAAAs9B,UAAU,EAAI;IACpD,OAAOD,uBAAuB,CAAC7+B,MAAD,EAASE,QAAT,EAAmB4+B,UAAnB,CAA9B;EACD,CAFE,CADL,IAIE;IACErvB,KAAK,EAAEjQ,IAAI,CAACsD,aAAL,CAAmBoC,GAAG,CAACw5B,UAAvB,CADT;IAEEj/B,KAAK,EAAE;EAFT,CAJF,EAQE;IACEgQ,KAAK,EAAEjQ,IAAI,CAACsD,aAAL,CAAmBoC,GAAG,CAACy5B,KAAvB,CADT;IAEEl/B,KAAK,EAAE;EAFT,CARF;AAaD,CAdD;;AAgBA,IAAMs/B,eAAe,GAAG,SAAlBA,eAAkB,CAACv/B,IAAD,EAAOw/B,KAAP,EAAiB;EACvC,IAAI,CAACA,KAAL,EAAY;IACV,OAAO,EAAP;EACD;;EAED,QACE;IACEv/B,KAAK,EAAE,IADT;IAEEgQ,KAAK,EAAEjQ,IAAI,CAACsD,aAAL,CAAmB;MAAA;MAAEF,cAAc;QAAA;QAAA;MAAA;IAAhB,CAAnB;EAFT,CADF,mLAKKo8B,KAAK,CAACx9B,GAAN,CAAU,UAAAg9B,IAAI;IAAA,OAAK;MACpB/+B,KAAK,EAAE++B,IADa;MAEpB/uB,KAAK,aAAM+uB,IAAI,CAAC30B,QAAX,gBAAyB20B,IAAI,CAACniB,IAA9B;IAFe,CAAL;EAAA,CAAd,CALL;AAUD,CAfD;;AAiBA,IAAM4iB,KAAK,GAAGrgC,wEAAM,CAACwsB,yEAAD,CAAN,CAA+BhgB,KAA/B,CAAqC;EACjD8zB,aAAa,EAAE,MADkC;EAEjDC,eAAe,EAAE;AAFgC,CAArC,CAAH;EAAA;EAAA;AAAA,QAAX;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,QAA8B;EAAA;;EAAA,IAA3B51B,UAA2B,SAA3BA,UAA2B;EAAA,IAAZlG,KAAY;;EAClD,uBAAyB6lB,gFAAe,EAAxC;EAAA,IAAQ/D,YAAR,oBAAQA,YAAR;;EACA,gBAAsC7hB,+CAAQ,CAAC,EAAD,CAA9C;EAAA,IAAO87B,WAAP;EAAA,IAAoBC,cAApB;;EACA,iBAAqBr3B,oEAAS,EAA9B;EAAA,IAAQe,QAAR,cAAQA,QAAR;;EACA,IAAMxJ,IAAI,GAAGb,gEAAO,EAApB;;EACA,IAAM4gC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA3X,MAAM,EAAI;IAClC,IAAIA,MAAM,CAAC1nB,QAAX,EAAqB;MACnB,oBACE;QAAA,WACG0gB,8EAAc,CAACgH,MAAM,CAACiM,SAAR,EAAmBjM,MAAM,CAAC1nB,QAA1B,EAAoC;UAAEmhB,MAAM,EAAE7hB,IAAI,CAAC6hB;QAAf,CAApC,CADjB,EAC+E,GAD/E,eAEE,yDAAC,kDAAD;UAAM,KAAK,EAAC,WAAZ;UAAA,gBAA0BuG,MAAM,CAACkX,UAAP,GAAoB,GAA9C;QAAA,EAFF;MAAA,EADF;IAMD,CAPD,MAOO;MACL,OAAOlX,MAAM,CAACnY,KAAd;IACD;EACF,CAXD;;EAYA,iBAAwClM,+CAAQ,CAAC,CAAD,CAAhD;EAAA,IAAOi8B,YAAP;EAAA,IAAqBC,eAArB;;EACA,gBAA0B1c,yDAAQ,CAACob,oBAAD,EAAuB;IACvDl1B,OAAO,EAAEjC,0EAD8C;IAEvD2C,SAAS,EAAE;MAAEua,IAAI,EAAE1a,UAAU,CAAC0a;IAAnB;EAF4C,CAAvB,CAAlC;EAAA,IAAQqB,IAAR,aAAQA,IAAR;EAAA,IAAcnc,OAAd,aAAcA,OAAd;;EAIA,IAAMQ,OAAO,GAAG2b,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAE3b,OAAtB;EACA,IAAM1J,QAAQ,GAAG0J,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAE1J,QAA1B;EACA,IAAM0I,IAAI,GAAGgB,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEiY,MAAT,GAAkBjY,OAAlB,GAA4BA,OAA5B,aAA4BA,OAA5B,uBAA4BA,OAAO,CAAEhB,IAAlD;EAEA,IAAM82B,OAAO,GAAGlhC,0CAAA,CACd;IAAA,OAAM8Q,UAAU,CAAC+vB,WAAW,CAACM,UAAb,EAAyBz/B,QAAzB,EAAmCV,IAAnC,CAAhB;EAAA,CADc,EAEd,CAAC6/B,WAAW,CAACM,UAAb,EAAyBz/B,QAAzB,CAFc,CAAhB;;EAIA,iBAA4CqD,+CAAQ,CAACm8B,OAAO,CAAC,CAAD,CAAR,CAApD;EAAA,IAAOE,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,mBAAuE/4B,4DAAW,CAACm3B,gBAAD,EAAmB;IACnGh1B,OAAO,EAAEjC,0EAD0F;IAEnG84B,cAAc,EAAE,CACd;MACE72B,OAAO,EAAEjC,0EADX;MAEE+4B,KAAK,EAAElc,kGAAqB,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,CAF9B;MAGEla,SAAS,EAAEoa,2GAA8B,CAACva,UAAU,CAAC0a,IAAZ,EAAkBtb,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEsb,IAAxB,EAA8B,KAA9B;IAH3C,CADc,EAMd;MAAE6b,KAAK,EAAE5C,2FAAT;MAA8BxzB,SAAS,EAAEyzB,2GAA+B,CAAC5zB,UAAU,CAAC0a,IAAZ;IAAxE,CANc,CAFmF;IAUnG8b,mBAAmB,EAAE;EAV8E,CAAnB,CAAlF;EAAA;EAAA,IAAOC,cAAP;EAAA;EAAA,IAA+BC,gBAA/B,kBAAyB3a,IAAzB;EAAA,IAAwD4a,SAAxD,kBAAiD72B,KAAjD;;EAaA,oBAAsDxC,4DAAW,CAACs3B,sBAAD,EAAyB;IACxFn1B,OAAO,EAAEjC,0EAAcA;EADiE,CAAzB,CAAjE;EAAA;EAAA,IAAOo5B,cAAP;EAAA,IAAgCC,gBAAhC,oBAAyB/2B,KAAzB;;EAIA,IAAMg3B,UAAU,GAAG,kDAAI/a,IAAJ,EAAU,qBAAV,CAAnB;;EACA,IAAMgb,eAAe,GAAG,kDAAIhb,IAAJ,EAAU,kBAAV,CAAxB;;EACA,IAAMib,YAAY,GAAGhiC,0CAAA,CACnB;IAAA,OAAMugC,eAAe,CAACv/B,IAAD,EAAO8gC,UAAP,EAAmBC,eAAnB,CAArB;EAAA,CADmB,EAEnB,CAACD,UAAD,EAAaC,eAAb,CAFmB,CAArB,CAlDkD,CAuDlD;;EACA,IAAI,CAACnb,YAAL,EAAmB;IACjB,OAAO,IAAP;EACD,CA1DiD,CA4DlD;EACA;;;EACA,IAAMqb,aAAa,GAAG,CAAA73B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,0BAAAA,IAAI,CAAE83B,IAAN,0DAAYC,QAAZ,KAAwBn3B,UAAU,CAACzE,EAAX,MAAkB6D,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAE7D,EAAxB,CAA9C;EACA,IAAMs5B,cAAc,GAAG,CAAAz0B,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEg3B,wBAAT,KAAqCp3B,UAAU,CAAC60B,cAAvE;EACA,IAAMwC,qBAAqB,GAAGJ,aAAa,GAAGpC,cAAH,GAAoB,CAA/D;EACA,IAAMyC,iBAAiB,GAAGl4B,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEm4B,aAAhC;EACA,IAAMC,gBAAgB,GAAGp4B,IAAH,aAAGA,IAAH,yCAAGA,IAAI,CAAEC,QAAT,4EAAG,eAAgBo4B,OAAnB,0DAAG,sBAAyBC,SAAlD;EAEA,IAAMC,qBAAqB,GAAG,EAA9B;;EACA,IAAI,CAAAH,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,qCAAAA,gBAAgB,WAAhB,0GAA2Bx9B,KAA3B,kFAAkC1C,MAAlC,IAA2C,CAA/C,EAAkD;IAAA;;IAChDqgC,qBAAqB,CAACC,IAAtB,CAA2B;MACzB3hC,KAAK,EAAE,SADkB;MAEzBgQ,KAAK,EAAEuxB,gBAAF,aAAEA,gBAAF,iDAAEA,gBAAgB,WAAlB,2DAAE,uBAA2Bx9B;IAFT,CAA3B;EAID;;EACD,IAAI,CAAAw9B,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,qCAAAA,gBAAgB,CAAEK,WAAlB,0GAA+B79B,KAA/B,kFAAsC1C,MAAtC,IAA+C,CAAnD,EAAsD;IAAA;;IACpDqgC,qBAAqB,CAACC,IAAtB,CAA2B;MAAE3hC,KAAK,EAAE,aAAT;MAAwBgQ,KAAK,EAAEuxB,gBAAF,aAAEA,gBAAF,iDAAEA,gBAAgB,CAAEK,WAApB,2DAAE,uBAA+B79B;IAA9D,CAA3B;EACD;;EAED,IAAM6G,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxBi1B,cAAc,CAAC;MAAExB,oBAAoB,EAAE;IAAxB,CAAD,CAAd;IACA+B,iBAAiB,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;IACAD,eAAe,CAAC,CAAD,CAAf;IACAn8B,KAAK,CAAC2G,OAAN;EACD,CALD;;EAOA,oBACE,yDAAC,sBAAD,kCACM3G,KADN;IAEE,SAAS,MAFX;IAGE,oBAAoB,EAAE+7B,WAAW,CAACvB,oBAHpC;IAIE,OAAO,EAAEzzB,WAJX;IAAA,wBAME,wDAAC,0EAAD;MAAuB,UAAU,EAAEb,UAAnC;MAA+C,OAAO,EAAEa;IAAxD,EANF,EAOGjB,OAAO,gBACN,wDAAC,qEAAD;MAAoB,EAAE,EAAE,CAAxB;MAA2B,MAAM,EAAE;IAAnC,EADM,GAEJ6zB,4EAAmB,CAACr0B,IAAD,CAAnB,IAA6B,CAACwc,YAAY,CAACkc,gBAA3C,gBACF,wDAAC,iGAAD;MAA8B,WAAW,EAAE,CAA3C;MAA8C,OAAO;IAArD,EADE,gBAGF,wDAAC,oDAAD;MACE,aAAa,EAAE/M,gBAAgB,CAAC;QAAE8J,cAAc,EAAEwC,qBAAlB;QAAyCj3B,OAAO,EAAEJ;MAAlD,CAAD,CADjC;MAEE,kBAAkB,EAAE,IAFtB;MAGE,QAAQ,EAAEU,QAHZ;MAIE,QAAQ;QAAA,0WAAE,iBAAOR,MAAP,EAAeH,MAAf;UAAA;;UAAA;YAAA;cAAA;gBAAA;kBAAA,IACH81B,WAAW,CAACvB,oBADT;oBAAA;oBAAA;kBAAA;;kBAEAyD,sBAFA,GAEyBJ,qBAAqB,CAACrgC,MAAtB,GAA+B,CAA/B,GAAmCqgC,qBAAqB,CAAC,CAAD,CAArB,CAAyB1hC,KAA5D,GAAoE,IAF7F;kBAAA;kBAAA,OAGewgC,cAAc,CAAC;oBAClCt2B,SAAS,kCACJD,MADI;sBAEP1J,MAAM,EAAE;wBAAEG,YAAY,EAAEuJ,MAAM,CAAC1J;sBAAvB,CAFD;sBAGPwhC,WAAW,EAAE;wBAAErhC,YAAY,EAAE;sBAAhB,CAHN;sBAIPo+B,WAAW,EAAEE,qBAAqB,CAAC/0B,MAAM,CAAC60B,WAAR,CAJ3B;sBAKP30B,OAAO,EAAE60B,qBAAqB,CAAC/0B,MAAM,CAACE,OAAR,CALvB;sBAMP40B,IAAI,EAAE,CAAC90B,MAAM,CAAC80B,IAAR,GAAe,IAAf,GAAsB;wBAAEz5B,EAAE,EAAE2E,MAAM,CAAC80B,IAAP,CAAYz5B;sBAAlB,CANrB;sBAOP08B,eAAe,EAAE,0BAAA/3B,MAAM,CAAC+3B,eAAP,gFAAwBhiC,KAAxB,KAAiC8hC,sBAP3C;sBAQPjD,WAAW,EAAE50B,MAAM,CAAC40B,WAAP,GAAqB,IAAIjS,IAAJ,CAAS3iB,MAAM,CAAC40B,WAAhB,CAArB,GAAoD;oBAR1D;kBADyB,CAAD,CAH7B;;gBAAA;kBAGAl9B,MAHA;kBAgBAsgC,WAhBA,GAgBctgC,MAAM,CAACmkB,IAAP,CAAYoc,QAhB1B;kBAiBNrC,cAAc,CAAC;oBACbxB,oBAAoB,EAAE,IADT;oBAEb6B,UAAU,EAAEj2B,MAAM,CAAC1J,MAFN;oBAGboc,WAAW,EAAEslB,WAAW,CAACtlB,WAHZ;oBAIb7J,IAAI,EAAEmvB,WAAW,CAACnvB,IAJL;oBAKb+rB,WAAW,EAAEoD,WAAW,CAACpD,WALZ;oBAMb3+B,MAAM,EAAE+hC,WAAW,CAACnD,WANP;oBAObC,IAAI,EAAEkD,WAAW,CAAClD;kBAPL,CAAD,CAAd;kBASA;AACd;AACA;AACA;AACA;AACA;;kBACcj1B,MAAM,CAACmsB,SAAP,CAAiB;oBACf11B,MAAM,EAAE0J,MAAM,CAAC1J,MADA;oBAEfu+B,WAAW,EAAEmD,WAAW,CAACnD,WAFV;oBAGfniB,WAAW,EAAEslB,WAAW,CAACtlB,WAHV;oBAIfkiB,WAAW,EAAEoD,WAAW,CAACpD;kBAJV,CAAjB;kBAhCM;kBAAA;;gBAAA;kBAAA,MAsCGsB,cAAc,CAACngC,KAAf,KAAyB,CAtC5B;oBAAA;oBAAA;kBAAA;;kBAuCAmiC,iBAvCA,GAuCoB1B,gBAAgB,CAACyB,QAAjB,CAA0Bjd,YAA1B,CAAuC1Y,MAAvC,CACxB,UAAA8Y,WAAW;oBAAA,OAAIA,WAAW,CAACze,IAAZ,KAAqB,QAAzB;kBAAA,CADa,EAExB,CAFwB,CAvCpB;kBAAA;kBAAA,OA0CA+5B,cAAc,CAAC;oBACnBz2B,SAAS,kCACJD,MADI;sBAEP1J,MAAM,EAAE;wBAAEG,YAAY,EAAEy/B,cAAc,CAACngC,KAAf,KAAyB,QAAzB,GAAoCmgC,cAAc,CAACngC,KAAnD,GAA2D+/B;sBAA3E,CAFD;sBAGP1a,WAAW,EAAE;wBAAE/f,EAAE,EAAE68B,iBAAiB,CAAC78B;sBAAxB;oBAHN;kBADU,CAAD,CA1Cd;;gBAAA;kBAiDNsF,WAAW;kBACXrB,QAAQ,CAAC;oBACP3C,IAAI,EAAE2B,oFADC;oBAEPgC,OAAO,eACL,wDAAC,4DAAD;sBAAkB,EAAE,yBAApB;sBAA6C,cAAc;wBAAA;wBAAA;sBAAA;oBAA3D;kBAHK,CAAD,CAAR;kBAlDM;kBAAA;;gBAAA;kBAyDNK,WAAW;;gBAzDL;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA,CAAF;;QAAA;UAAA;QAAA;MAAA,GAJV;MAAA,UAiEG,yBAA8B;QAAA,IAA3BX,MAA2B,SAA3BA,MAA2B;QAAA,IAAnBisB,YAAmB,SAAnBA,YAAmB;QAC7B,IAAM0I,cAAc,GAAGnxB,KAAK,CAACxD,MAAM,CAAC20B,cAAR,CAAL,GAA+BwC,qBAA/B,GAAuDn3B,MAAM,CAAC20B,cAArF;QACA,IAAMwD,OAAO,GAAGxhC,IAAI,CAACC,KAAL,CAAWoJ,MAAM,CAAC1J,MAAP,IAAiBq+B,cAAc,GAAG,GAAlC,CAAX,CAAhB;QAEA,IAAMyD,cAAc,GAAG,EAAvB;QACAA,cAAc,CAACV,IAAf,CAAoB;UAClB3hC,KAAK,EAAEmJ,IADW;UAElB6G,KAAK,eAAE,wDAAC,gFAAD;YAAwB,KAAK,EAAE7G;UAA/B;QAFW,CAApB;;QAIA,IAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE7D,EAAN,MAAa6E,OAAO,CAAC7E,EAAzB,EAA6B;UAC3B+8B,cAAc,CAACV,IAAf,CAAoB;YAAE3hC,KAAK,EAAEmK,OAAT;YAAkB6F,KAAK,eAAE,wDAAC,gFAAD;cAAwB,KAAK,EAAE7F;YAA/B;UAAzB,CAApB;QACD;;QAED,IAAI,CAACy1B,WAAW,CAACvB,oBAAjB,EAAuC;UACrC,oBACE,yDAAC,kDAAD;YAAM,WAAQ,gBAAd;YAAA,wBACE;cAAA,uBACE,wDAAC,4DAAD;gBAAkB,EAAE,4BAApB;gBAAgD,cAAc;kBAAA;kBAAA;gBAAA;cAA9D;YADF,EADF,eAIE,yDAAC,8DAAD;cAAA,wBACE,wDAAC,KAAD;gBACE,IAAI,EAAC,aADP;gBAEE,OAAO,EAAC,sBAFV;gBAGE,KAAK,eAAE,wDAAC,4DAAD;kBAAkB,EAAE,wBAApB;kBAA4C,cAAc;oBAAA;oBAAA;kBAAA;gBAA1D,EAHT;gBAIE,EAAE,EAAE,CAJN;gBAAA,UAMG;kBAAA,IAAGiE,IAAH,SAAGA,IAAH;kBAAA,IAASjW,KAAT,SAASA,KAAT;kBAAA,oBACC,wDAAC,wEAAD;oBACE,OAAO,EAAEA,KAAK,CAAC/mB,EADjB;oBAEE,WAAQ,kBAFV;oBAGE,KAAK,EAAE,CAAC,MAAD,EAAS,cAAT,CAHT;oBAIE,SAAS,MAJX;oBAKE,KAAK,EAAE+mB,KAAK,CAACxiB,KALf;oBAME,8BAA8B,EAAE,CAAC,kBAAD,EAAqB,kBAArB,CANlC;oBAOE,MAAM,EAAE;sBAAA,OAAMy4B,IAAI,CAAC/W,eAAL,CAAqBc,KAAK,CAACzP,IAA3B,EAAiC,IAAjC,CAAN;oBAAA,CAPV;oBAQE,aAAa,EAAEylB,cARjB;oBASE,QAAQ,EAAE;sBAAA,IAAGriC,KAAH,SAAGA,KAAH;sBAAA,OAAesiC,IAAI,CAACr3B,aAAL,CAAmBohB,KAAK,CAACzP,IAAzB,EAA+B5c,KAA/B,CAAf;oBAAA;kBATZ,EADD;gBAAA;cANH,EADF,eAqBE,wDAAC,KAAD;gBACE,IAAI,EAAC,MADP;gBAEE,OAAO,EAAC,eAFV;gBAGE,KAAK,eAAE,wDAAC,4DAAD;kBAAA;kBAAkB,cAAc;oBAAA;oBAAA;kBAAA;gBAAhC,EAHT;gBAIE,EAAE,EAAE,CAJN;gBAAA,UAMG;kBAAA,IAAGsiC,IAAH,SAAGA,IAAH;kBAAA,IAASjW,KAAT,SAASA,KAAT;kBAAA,oBACC,wDAAC,gEAAD;oBACE,OAAO,EAAEA,KAAK,CAAC/mB,EADjB;oBAEE,WAAQ,gBAFV;oBAGE,KAAK,EAAE+mB,KAAK,CAACxiB,KAHf;oBAIE,MAAM,EAAE;sBAAA,OAAMy4B,IAAI,CAAC/W,eAAL,CAAqBc,KAAK,CAACzP,IAA3B,EAAiC,IAAjC,CAAN;oBAAA,CAJV;oBAKE,QAAQ,EAAE;sBAAA,IAAG5c,KAAH,SAAGA,KAAH;sBAAA,OAAesiC,IAAI,CAACr3B,aAAL,CAAmBohB,KAAK,CAACzP,IAAzB,EAA+B5c,KAA/B,CAAf;oBAAA,CALZ;oBAME,SAAS,EAAE2J,OANb;oBAOE,OAAO,EAAEo3B,YAPX;oBAQE,YAAY,EAAEd,OAAO,CAAC5+B,MAAR,GAAiB,EARjC;oBASE,KAAK,EAAE0/B,YAAY,CAACvV,IAAb,CAAkB,UAAArD,MAAM;sBAAA;;sBAAA,OAC7B,CAACle,MAAM,CAAC80B,IAAR,GAAe5W,MAAM,CAACnoB,KAAP,KAAiB,IAAhC,GAAuC,kBAAAmoB,MAAM,CAACnoB,KAAP,gEAAcsF,EAAd,MAAqB2E,MAAM,CAAC80B,IAAP,CAAYz5B,EAD3C;oBAAA,CAAxB;kBATT,EADD;gBAAA;cANH,EArBF,eA2CE,wDAAC,KAAD;gBACE,IAAI,EAAC,aADP;gBAEE,OAAO,EAAC,sBAFV;gBAGE,KAAK,eAAE,wDAAC,4DAAD;kBAAkB,EAAE,sBAApB;kBAA0C,cAAc;oBAAA;oBAAA;kBAAA;gBAAxD,EAHT;gBAIE,EAAE,EAAE,CAJN;gBAAA,UAMG;kBAAA,IAAG+mB,KAAH,SAAGA,KAAH;kBAAA,oBAAe,wDAAC,+DAAD;oBAAa,WAAQ;kBAArB,GAAiDA,KAAjD,EAAf;gBAAA;cANH,EA3CF,eAmDE,wDAAC,KAAD;gBACE,IAAI,EAAC,aADP;gBAEE,OAAO,EAAC,sBAFV;gBAGE,SAAS,EAAC,MAHZ;gBAIE,KAAK,eACH;kBAAA,wBACE,wDAAC,4DAAD;oBAAkB,EAAE,sBAApB;oBAA0C,cAAc;sBAAA;sBAAA;oBAAA;kBAAxD,EADF,oBAGE,wDAAC,gEAAD;oBACE,OAAO,EAAE;sBAAA,oBAAM,wDAAC,4DAAD;wBAAA;wBAAkB,cAAc;0BAAA;0BAAA;wBAAA;sBAAhC,EAAN;oBAAA,CADX;oBAAA,uBAGE,wDAAC,2FAAD;sBAAY,IAAI,EAAE;oBAAlB;kBAHF,EAHF;gBAAA,EALJ;gBAeE,EAAE,EAAE,CAfN;gBAAA,UAiBG;kBAAA,IAAGA,KAAH,UAAGA,KAAH;kBAAA,oBAAe,wDAAC,+DAAD;oBAAa,WAAQ;kBAArB,GAAiDA,KAAjD,EAAf;gBAAA;cAjBH,EAnDF,eAsEE,wDAAC,KAAD;gBACE,IAAI,EAAC,MADP;gBAEE,OAAO,EAAC,eAFV;gBAGE,KAAK,eACH;kBAAA,wBACE,wDAAC,4DAAD;oBAAA;oBAAkB,cAAc;sBAAA;sBAAA;oBAAA;kBAAhC,EADF,oBAGE,wDAAC,gEAAD;oBACE,OAAO,EAAE;sBAAA,oBACP,wDAAC,4DAAD;wBAAA;wBAAkB,cAAc;0BAAA;0BAAA;wBAAA;sBAAhC,EADO;oBAAA,CADX;oBAAA,uBAKE,wDAAC,2FAAD;sBAAY,IAAI,EAAE;oBAAlB;kBALF,EAHF;gBAAA,EAJJ;gBAgBE,QAAQ,EAAE,KAhBZ;gBAiBE,EAAE,EAAE,CAjBN;gBAAA,UAmBG;kBAAA,IAAGA,KAAH,UAAGA,KAAH;kBAAA,oBAAe,wDAAC,+DAAD;oBAAa,WAAQ;kBAArB,GAA0CA,KAA1C,EAAf;gBAAA;cAnBH,EAtEF,eA2FE,yDAAC,kDAAD;gBAAM,EAAE,EAAE,CAAV;gBAAa,QAAQ,EAAC,MAAtB;gBAAA,wBACE,wDAAC,KAAD;kBACE,IAAI,EAAC,QADP;kBAEE,OAAO,EAAC,iBAFV;kBAGE,KAAK,eAAE,wDAAC,4DAAD;oBAAkB,EAAE,iBAApB;oBAAqC,cAAc;sBAAA;sBAAA;oBAAA;kBAAnD,EAHT;kBAIE,QAAQ,MAJV;kBAKE,IAAI,EAAC,KALP;kBAAA,UAOG;oBAAA,IAAGiW,IAAH,UAAGA,IAAH;oBAAA,IAASjW,KAAT,UAASA,KAAT;oBAAA,oBACC,wDAAC,oEAAD;sBACE,EAAE,EAAEA,KAAK,CAAC/mB,EADZ;sBAEE,WAAQ,kBAFV;sBAGE,QAAQ,EAAE7E,QAHZ;sBAIE,WAAW,EAAC,MAJd;sBAKE,KAAK,EAAE4rB,KAAK,CAACxiB,KALf;sBAME,KAAK,EAAEwiB,KAAK,CAACrsB,KANf;sBAOE,QAAQ,EAAC,MAPX;sBAQE,QAAQ,EAAE,kBAAAA,KAAK;wBAAA,OAAIsiC,IAAI,CAACr3B,aAAL,CAAmBohB,KAAK,CAACzP,IAAzB,EAA+B5c,KAA/B,CAAJ;sBAAA,CARjB;sBASE,MAAM,EAAE;wBAAA,OAAMsiC,IAAI,CAAC/W,eAAL,CAAqBc,KAAK,CAACzP,IAA3B,EAAiC,IAAjC,CAAN;sBAAA;oBATV,EADD;kBAAA;gBAPH,EADF,EAsBGokB,aAAa,iBACZ,wDAAC,KAAD;kBACE,IAAI,EAAC,gBADP;kBAEE,OAAO,EAAC,yBAFV;kBAGE,KAAK,eACH;oBAAA,wBACE,wDAAC,4DAAD;sBAAA;sBAAkB,cAAc;wBAAA;wBAAA;sBAAA;oBAAhC,EADF,oBAGE,wDAAC,gEAAD;sBACE,OAAO,EAAE;wBAAA,oBACP,wDAAC,4DAAD;0BACE,EAAE,iCADJ;0BAEE,cAAc;4BAAA;4BAAA;0BAAA;wBAFhB,EADO;sBAAA,CADX;sBAAA,uBAQE,wDAAC,2FAAD;wBAAY,IAAI,EAAE;sBAAlB;oBARF,EAHF;kBAAA,EAJJ;kBAmBE,EAAE,EAAE,CAnBN;kBAAA,UAqBG;oBAAA,IAAGsB,IAAH,UAAGA,IAAH;oBAAA,IAASjW,KAAT,UAASA,KAAT;oBAAA,oBACC,wDAAC,wEAAD;sBACE,EAAE,EAAEA,KAAK,CAAC/mB,EADZ;sBAEE,WAAW,EAAE87B,qBAFf;sBAGE,KAAK,EAAE/U,KAAK,CAACrsB,KAHf;sBAIE,KAAK,EAAEqsB,KAAK,CAACxiB,KAJf;sBAKE,QAAQ,EAAE,kBAAA7J,KAAK;wBAAA,OAAIsiC,IAAI,CAACr3B,aAAL,CAAmBohB,KAAK,CAACzP,IAAzB,EAA+B5c,KAA/B,CAAJ;sBAAA,CALjB;sBAME,MAAM,EAAE;wBAAA,OAAMsiC,IAAI,CAAC/W,eAAL,CAAqBc,KAAK,CAACzP,IAA3B,EAAiC,IAAjC,CAAN;sBAAA;oBANV,EADD;kBAAA;gBArBH,EAvBJ;cAAA,EA3FF,EAoJG8kB,qBAAqB,CAACrgC,MAAtB,GAA+B,CAA/B,iBACC,wDAAC,4DAAD;gBAAW,KAAK,EAAC,MAAjB;gBAAA,uBACE,wDAAC,KAAD;kBACE,IAAI,EAAC,iBADP;kBAEE,OAAO,EAAC,0BAFV;kBAGE,KAAK,eAAE,wDAAC,4DAAD;oBAAA;oBAAkB,cAAc;sBAAA;sBAAA;oBAAA;kBAAhC,EAHT;kBAIE,EAAE,EAAE,CAJN;kBAAA,UAMG;oBAAA,IAAGihC,IAAH,UAAGA,IAAH;oBAAA,IAASjW,KAAT,UAASA,KAAT;oBAAA,oBACC,wDAAC,gEAAD;sBACE,EAAE,EAAEA,KAAK,CAAC/mB,EADZ;sBAEE,OAAO,EAAEo8B,qBAFX;sBAGE,YAAY,EAAEA,qBAAqB,CAAC,CAAD,CAHrC;sBAIE,QAAQ,EAAE,kBAAA1hC,KAAK;wBAAA,OAAIsiC,IAAI,CAACr3B,aAAL,CAAmBohB,KAAK,CAACzP,IAAzB,EAA+B5c,KAA/B,CAAJ;sBAAA;oBAJjB,EADD;kBAAA;gBANH;cADF,EArJJ,eAuKE,wDAAC,qCAAD;gBAAG,QAAQ,EAAC,MAAZ;gBAAmB,UAAU,EAAC,MAA9B;gBAAqC,UAAU,EAAC,KAAhD;gBAAsD,EAAE,EAAE,CAA1D;gBAAA,uBACE,wDAAC,4DAAD;kBAAkB,EAAE,WAApB;kBAA+B,cAAc;oBAAA;oBAAA;kBAAA;gBAA7C;cADF,EAvKF,eA0KE,wDAAC,2DAAD;gBAAU,EAAE,EAAE,CAAd;gBAAiB,WAAW,EAAC;cAA7B,EA1KF,eA2KE,wDAAC,iBAAD;gBACE,KAAK,EAAEiK,MAAM,CAAC1J,MAAP,IAAiB,CAD1B;gBAEE,QAAQ,EAAEE,QAFZ;gBAGE,KAAK,eAAE,wDAAC,4DAAD;kBAAkB,EAAE,+BAApB;kBAAmD,cAAc;oBAAA;oBAAA;kBAAA;gBAAjE;cAHT,EA3KF,EAgLGugC,aAAa,iBACZ,wDAAC,iBAAD;gBACE,KAAK,EAAEoB,OADT;gBAEE,QAAQ,EAAE3hC,QAFZ;gBAGE,KAAK,eACH,wDAAC,4DAAD;kBACE,EAAE,0BADJ;kBAEE,cAAc;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;kBAAA,EAFhB;kBAGE,MAAM,EAAE;oBAAEygC,QAAQ,YAAKtC,cAAL;kBAAV;gBAHV;cAJJ,EAjLJ,eA6LE,wDAAC,2DAAD;gBAAU,EAAE,EAAE,CAAd;gBAAiB,WAAW,EAAC;cAA7B,EA7LF,eA8LE,wDAAC,iBAAD;gBACE,KAAK,EAAE30B,MAAM,CAAC1J,MAAP,GAAgB6hC,OADzB;gBAEE,QAAQ,EAAE3hC,QAFZ;gBAGE,KAAK,eACH,wDAAC,4DAAD;kBACE,EAAE,2BADJ;kBAEE,cAAc;oBAAA;oBAAA;kBAAA;gBAFhB,EAJJ;gBASE,aAAa;cATf,EA9LF,eAyME,wDAAC,qCAAD;gBAAG,QAAQ,EAAC,MAAZ;gBAAmB,UAAU,EAAC,MAA9B;gBAAqC,KAAK,EAAC,WAA3C;gBAAuD,EAAE,EAAE,CAA3D;gBAAA,uBACE,wDAAC,4DAAD;kBACE,EAAE,4BADJ;kBAEE,cAAc;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;kBAAA,EAFhB;kBAGE,MAAM,EAAE;oBAAEF,MAAM,EAAE4gB,8EAAc,CAAClX,MAAM,CAAC1J,MAAR,EAAgBE,QAAhB,EAA0B;sBAAEmhB,MAAM,EAAE7hB,IAAI,CAAC6hB;oBAAf,CAA1B;kBAAxB;gBAHV;cADF,EAzMF,EAgNG8e,SAAS,iBAAI,wDAAC,yEAAD;gBAAwB,KAAK,EAAEA,SAA/B;gBAA0C,EAAE,EAAE,CAA9C;gBAAiD,QAAQ,EAAC;cAA1D,EAhNhB;YAAA,EAJF,eAsNE,wDAAC,gEAAD;cAAa,WAAW,MAAxB;cAAA,uBACE,yDAAC,kDAAD;gBAAM,cAAc,EAAC,QAArB;gBAA8B,QAAQ,EAAC,MAAvC;gBAAA,wBACE,wDAAC,+DAAD;kBACE,IAAI,EAAC,QADP;kBAEE,WAAQ,sBAFV;kBAGE,WAAW,EAAC,SAHd;kBAIE,EAAE,EAAE,CAJN;kBAKE,EAAE,EAAE,CALN;kBAME,QAAQ,EAAE,GANZ;kBAOE,OAAO,EAAExK,YAPX;kBAAA,uBASE,wDAAC,4DAAD;oBAAkB,EAAE,iBAApB;oBAAqC,cAAc;sBAAA;sBAAA;oBAAA;kBAAnD;gBATF,EADF,eAYE,wDAAC,+DAAD;kBAAc,EAAE,EAAE,CAAlB;kBAAqB,EAAE,EAAE,CAAzB;kBAA4B,QAAQ,EAAE,GAAtC;kBAA2C,OAAO,EAAEtrB,WAApD;kBAAiE,IAAI,EAAC,QAAtE;kBAAA,uBACE,wDAAC,4DAAD;oBAAkB,EAAE,kBAApB;oBAAsC,cAAc;sBAAA;sBAAA;oBAAA;kBAApD;gBADF,EAZF;cAAA;YADF,EAtNF;UAAA,EADF;QA2OD,CA5OD,MA4OO;UACL,oBACE,yDAAC,kDAAD;YAAA,wBACE,yDAAC,8DAAD;cAAW,WAAQ,aAAnB;cAAA,wBACE,yDAAC,4DAAD;gBAAA,wBACE;kBAAA,uBACE,wDAAC,4DAAD;oBAAkB,EAAE,4BAApB;oBAAgD,cAAc;sBAAA;sBAAA;oBAAA;kBAA9D;gBADF,EADF,eAIE,yDAAC,4DAAD;kBAAW,EAAE,EAAE,CAAf;kBAAA,wBACE,wDAAC,4DAAD;oBAAkB,EAAE,0BAApB;oBAA8C,cAAc;sBAAA;sBAAA;oBAAA;kBAA5D,EADF,eAEE;oBAAA,wBACE;sBAAA,uBACE;wBAAA,oBAAYg1B,WAAW,CAACM,UAAZ,GAAyB,GAArC,cAA4Cz/B,QAA5C;sBAAA;oBADF,EADF,eAIE;sBAAA,wBACE,wDAAC,4DAAD;wBAAkB,EAAE,+BAApB;wBAAmD,cAAc;0BAAA;0BAAA;wBAAA;sBAAjE,EADF,EACyF,GADzF,eAEE;wBAAA,uBACE,wDAAC,iEAAD;0BAAgB,UAAU,EAAEm/B,WAAW,CAAC1/B;wBAAxC;sBADF,EAFF;oBAAA,EAJF,eAUE;sBAAA,wBACE,wDAAC,4DAAD;wBAAkB,EAAE,+BAApB;wBAAmD,cAAc;0BAAA;0BAAA;wBAAA;sBAAjE,EADF,EAC4F,GAD5F,eAEE;wBAAA,UAAS0/B,WAAW,CAACjjB;sBAArB,EAFF;oBAAA,EAVF,EAcGijB,WAAW,CAAC9sB,IAAZ,iBACC;sBAAA,wBACE,wDAAC,4DAAD;wBAAA;wBAAkB,cAAc;0BAAA;0BAAA;wBAAA;sBAAhC,EADF,EAEG,IAFH,eAGE;wBAAA,UAAS8sB,WAAW,CAAC9sB;sBAArB,EAHF;oBAAA,EAfJ,EAqBG8sB,WAAW,CAACf,WAAZ,iBACC;sBAAA,wBACE,wDAAC,kDAAD;wBAAM,aAAa,EAAC,YAApB;wBAAA,uBACE,wDAAC,4DAAD;0BAAkB,EAAE,eAApB;0BAAmC,cAAc;4BAAA;4BAAA;0BAAA;wBAAjD;sBADF,EADF,EAIG,IAJH,eAKE;wBAAA,UAAS9+B,IAAI,CAACwD,UAAL,CAAgBq8B,WAAW,CAACf,WAA5B,EAAyC;0BAAEl7B,QAAQ,EAAE;wBAAZ,CAAzC;sBAAT,EALF;oBAAA,EAtBJ,EA8BGi8B,WAAW,CAACb,IAAZ,iBACC;sBAAA,wBACE,wDAAC,4DAAD;wBAAA;wBAAkB,cAAc;0BAAA;0BAAA;wBAAA;sBAAhC,EADF,EACqD,GADrD,eAEE,wDAAC,6DAAD;wBACE,EAAE,EAAEr6B,uDADN;wBAEE,YAAY,MAFd;wBAGE,IAAI,YAAK2Z,mFAAsB,CAACtU,UAAD,CAA3B,yBAAsD61B,WAAW,CAACb,IAAZ,CAAiBta,IAAvE,cACFmb,WAAW,CAACb,IAAZ,CAAiB30B,QADf,CAHN;wBAAA,uBAOE;0BAAA,UAASw1B,WAAW,CAACb,IAAZ,CAAiBniB;wBAA1B;sBAPF,EAFF;oBAAA,EA/BJ;kBAAA,EAFF;gBAAA,EAJF,eAoDE,yDAAC,4DAAD;kBAAW,EAAE,EAAE,CAAf;kBAAA,wBACE,wDAAC,4DAAD;oBAAkB,EAAE,0BAApB;oBAA8C,cAAc;sBAAA;sBAAA;oBAAA;kBAA5D,EADF,EAC+E,GAD/E,eAEE,wDAAC,6DAAD;oBAAY,IAAI,EAAC,UAAjB;oBAA4B,WAAW,EAAC,UAAxC;oBAAmD,UAAU,EAAC,MAA9D;oBAAA,uBACE,wDAAC,4DAAD;sBAAkB,EAAE,wBAApB;sBAA4C,cAAc;wBAAA;wBAAA;sBAAA;oBAA1D;kBADF,EAFF;gBAAA,EApDF;cAAA,EADF,EA4DGykB,iBAAiB,IAAIe,OAAO,KAAK,CAAjC,iBACC,yDAAC,4DAAD;gBAAA,wBACE,wDAAC,2DAAD;kBAAU,EAAE,EAAE,CAAd;kBAAiB,WAAW,EAAC;gBAA7B,EADF,eAEE;kBAAA,wBACE,wDAAC,qCAAD;oBAAG,UAAU,EAAC,KAAd;oBAAoB,QAAQ,EAAC,MAA7B;oBAAoC,UAAU,EAAC,MAA/C;oBAAsD,KAAK,EAAC,WAA5D;oBAAwE,EAAE,EAAE,EAA5E;oBAAA,uBACE,wDAAC,4DAAD;sBACE,EAAE,iCADJ;sBAEE,cAAc;wBAAA;wBAAA;sBAAA;oBAFhB;kBADF,EADF,eAOE,yDAAC,kDAAD;oBAAM,cAAc,EAAC,eAArB;oBAAqC,QAAQ,EAAE,CAAC,MAAD,EAAS,QAAT,CAA/C;oBAAA,wBACE,yDAAC,kDAAD;sBAAM,UAAU,EAAC,QAAjB;sBAAA,wBACE,wDAAC,YAAD;wBAAc,GAAG,EAAC;sBAAlB,EADF,eAEE,wDAAC,qCAAD;wBAAG,UAAU,EAAE,GAAf;wBAAoB,QAAQ,EAAC,MAA7B;wBAAoC,UAAU,EAAC,MAA/C;wBAAsD,KAAK,EAAC,WAA5D;wBAAwE,EAAE,EAAE,EAA5E;wBAAA,uBACE,wDAAC,4DAAD;0BACE,EAAE,0BADJ;0BAEE,cAAc;4BAAA;4BAAA;0BAAA;wBAFhB;sBADF,EAFF;oBAAA,EADF,eAUE,wDAAC,gEAAD;sBACE,cAAW,qBADb;sBAEE,WAAQ,qBAFV;sBAGE,KAAK,EAAC,MAHR;sBAIE,QAAQ,EAAE,CAAC,MAAD,EAAS,GAAT,CAJZ;sBAKE,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CALN;sBAME,YAAY,EAAE,KANhB;sBAOE,QAAQ,EAAC,MAPX;sBAQE,OAAO,EAAEnC,OARX;sBASE,QAAQ,EAAEG,iBATZ;sBAUE,iBAAiB,EAAEN,iBAVrB;sBAWE,KAAK,EAAEK;oBAXT,EAVF;kBAAA,EAPF,EA+BGA,cAAc,CAACngC,KAAf,KAAyB,QAAzB,iBACC,wDAAC,kDAAD;oBAAM,cAAc,EAAC,UAArB;oBAAgC,EAAE,EAAE,CAApC;oBAAA,uBACE,wDAAC,oEAAD;sBACE,EAAE,EAAC,aADL;sBAEE,QAAQ,EAAES,QAFZ;sBAGE,QAAQ,EAAE,kBAAAF,MAAM;wBAAA,OAAIy/B,eAAe,CAACz/B,MAAD,CAAnB;sBAAA,CAHlB;sBAIE,YAAY,EAAE0/B,OAAO,CAAC,CAAD,CAAP,CAAWjgC;oBAJ3B;kBADF,EAhCJ;gBAAA,EAFF,EA4CG4gC,gBAAgB,iBAAI,wDAAC,yEAAD;kBAAwB,KAAK,EAAEA,gBAA/B;kBAAiD,EAAE,EAAE,CAArD;kBAAwD,QAAQ,EAAC;gBAAjE,EA5CvB;cAAA,EA7DJ;YAAA,EADF,eA8GE,wDAAC,gEAAD;cAAa,WAAW,MAAxB;cAAA,uBACE,yDAAC,kDAAD;gBAAM,cAAc,EAAC,QAArB;gBAA8B,QAAQ,EAAC,MAAvC;gBAAA,wBACE,wDAAC,+DAAD;kBACE,IAAI,EAAC,QADP;kBAEE,WAAQ,sBAFV;kBAGE,WAAW,EAAC,SAHd;kBAIE,EAAE,EAAE,CAJN;kBAKE,EAAE,EAAE,CALN;kBAME,QAAQ,EAAE,GANZ;kBAOE,OAAO,EAAE1K,YAPX;kBAAA,UASGiK,cAAc,CAACngC,KAAf,KAAyB,CAAzB,gBACC,wDAAC,4DAAD;oBAAkB,EAAE,8BAApB;oBAAkD,cAAc;sBAAA;sBAAA;oBAAA;kBAAhE,EADD,gBAGC,wDAAC,4DAAD;oBAAkB,EAAE,UAApB;oBAA8B,cAAc;sBAAA;sBAAA;oBAAA;kBAA5C;gBAZJ,EADF,EAgBG,CAAC4/B,WAAW,CAACvB,oBAAb,iBACC,wDAAC,+DAAD;kBAAc,EAAE,EAAE,CAAlB;kBAAqB,EAAE,EAAE,CAAzB;kBAA4B,QAAQ,EAAE,GAAtC;kBAA2C,OAAO,EAAEzzB,WAApD;kBAAiE,IAAI,EAAC,QAAtE;kBAAA,uBACE,wDAAC,4DAAD;oBAAkB,EAAE,kBAApB;oBAAsC,cAAc;sBAAA;sBAAA;oBAAA;kBAApD;gBADF,EAjBJ;cAAA;YADF,EA9GF;UAAA,EADF;QAyID;MACF;IArcH,EAZJ;EAAA,GADF;AAudD,CA7iBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyjBA,yDAAe+0B,aAAf;;;;;;;;;;;;;;;;;;ACp2BA;AAEA;AAEA;AACA;AACA;;;;AACA,IAAMlH,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA50B,KAAK,EAAI;EAChC,oBACE,uDAAC,kEAAD;IAAkB,IAAI,EAAC,IAAvB;IAA4B,OAAO,EAAC;EAApC,GAAoEA,KAApE;IAAA,uBACE;MACE,CAAC,EAAC,6GADJ;MAEE,IAAI,EAAC,cAFP;MAGE,WAAW,EAAC;IAHd;EADF,GADF;AASD,CAVD;;;;;;;AAYA,yDAAe40B,gBAAf;;;;;;;;;ACnBA;AAEA;AAEA,IAAM+J,gBAAgB,GAAGrjC,uEAAM,CAACwI,8DAAD,CAAT;EAAA;EAAA;AAAA,sWAAtB;AAiBA,yDAAe66B,gBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAEA;AAEA;AACA;AAEA;AACA;AACA;;;AAEA,IAAMG,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAAtd,WAAW,EAAI;EAAA;;EACjD,IAAIA,WAAW,CAACud,QAAhB,EAA0B;IACxB,OAAO,SAAP;EACD;;EACD,IAAIvd,WAAW,CAACwd,eAAZ,IAA+Bxd,WAAW,CAACyd,UAA/C,EAA2D;IACzD,OAAO,OAAP;EACD;;EACD,IAAIzd,WAAW,CAACyd,UAAZ,IAA0B,uBAAAzd,WAAW,CAACpR,KAAZ,0EAAmByF,MAAnB,MAA8B+oB,sDAA5D,EAAqF;IACnF,OAAO,MAAP;EACD;;EACD,IAAI,wBAAApd,WAAW,CAACpR,KAAZ,4EAAmByF,MAAnB,MAA8B+oB,gDAAlC,EAAwD;IACtD,OAAO,SAAP;EACD;;EAED,OAAO,SAAP;AACD,CAfD;;AAiBA,IAAMh9B,GAAG,GAAGrB,sBAAc,CAAC;EACzB4+B,SAAS,EAAE;IACT19B,EAAE,0BADO;IAETnC,cAAc;MAAA;MAAA;IAAA;EAFL,CADc;EAKzB8/B,QAAQ,EAAE;IACR39B,EAAE,yBADM;IAERnC,cAAc;MAAA;MAAA;IAAA;EAFN,CALe;EASzB+/B,QAAQ,EAAE;IACR59B,EAAE,oBADM;IAERnC,cAAc;MAAA;MAAA;IAAA;EAFN;AATe,CAAD,CAA1B;;AAeA,IAAMggC,YAAY,GAAG,SAAfA,YAAe,CAACpjC,IAAD,EAAOslB,WAAP,EAAuB;EAAA;;EAC1C,IAAIA,WAAW,CAACud,QAAhB,EAA0B;IACxB,OAAO7iC,IAAI,CAACsD,aAAL,CAAmBoC,GAAG,CAACu9B,SAAvB,CAAP;EACD,CAFD,MAEO,IAAI3d,WAAW,CAACwd,eAAZ,IAA+Bxd,WAAW,CAACyd,UAA/C,EAA2D;IAChE,OAAO/iC,IAAI,CAACsD,aAAL,CAAmBoC,GAAG,CAACy9B,QAAvB,CAAP;EACD,CAFM,MAEA,IAAI7d,WAAW,CAACyd,UAAhB,EAA4B;IACjC,OAAO/iC,IAAI,CAACsD,aAAL,CAAmBoC,GAAG,CAACw9B,QAAvB,CAAP;EACD,CAFM,MAEA,IAAI,CAACR,sDAAD,EAA0BA,gDAA1B,EAAgDtiB,QAAhD,wBAAyDkF,WAAW,CAACpR,KAArE,wDAAyD,oBAAmByF,MAA5E,CAAJ,EAAyF;IAC9F,OAAOgpB,oCAAe,CAAC3iC,IAAD,EAAOslB,WAAW,CAACpR,KAAZ,CAAkByF,MAAzB,CAAtB;EACD,CAFM,MAEA;IACL,OAAO3Z,IAAI,CAACsD,aAAL,CAAmBoC,GAAG,CAACu9B,SAAvB,CAAP;EACD;AACF,CAZD;;AAcA,IAAMI,eAAe,GAAGh/B,sBAAc,kEACnCq+B,gDADmC,EACZ;EACtBn9B,EAAE,wBADoB;EAEtBnC,cAAc;IAAA;IAAA;EAAA;AAFQ,CADY,6CAKnCs/B,sDALmC,EAKT;EACzBn9B,EAAE,2BADuB;EAEzBnC,cAAc;IAAA;IAAA;EAAA;AAFW,CALS,oBAAtC;;AAWA,IAAMkgC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAA+B;EAAA;;EAAA,IAA5Bhe,WAA4B,QAA5BA,WAA4B;EAAA,IAAZxhB,KAAY;;EAC1D,IAAM9D,IAAI,GAAGb,0BAAO,EAApB;;EAEA,IAAM6Q,GAAG,gBACP,oBAAC,wBAAD;IACE,IAAI,EAAE4yB,2BAA2B,CAACtd,WAAD,CADnC;IAEE,UAAU,EAAC,KAFb;IAGE,aAAa,EAAC,OAHhB;IAIE,aAAa,EAAC,WAJhB;IAKE,WAAQ;EALV,GAMMxhB,KANN;IAAA,UAQGs/B,YAAY,CAACpjC,IAAD,EAAOslB,WAAP;EARf,GADF;;EAaA,IAAI,CAACod,sDAAD,EAA0BA,gDAA1B,EAAgDtiB,QAAhD,wBAAyDkF,WAAW,CAACpR,KAArE,wDAAyD,oBAAmByF,MAA5E,CAAJ,EAAyF;IACvF,oBACE,oBAAC,4BAAD;MAAe,OAAO,EAAE;QAAA,OAAM3Z,IAAI,CAACsD,aAAL,CAAmB+/B,eAAe,CAAC/d,WAAW,CAACpR,KAAZ,CAAkByF,MAAnB,CAAlC,EAA8D8T,8BAA9D,CAAN;MAAA,CAAxB;MAAA,UACGzd;IADH,EADF;EAKD;;EACD,OAAOA,GAAP;AACD,CAxBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,oEAAeszB,oBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/GA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;AAEO,IAAME,yBAAyB,GAAGn8B,mCAAH,oOAA/B;;AAQP,IAAMo8B,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAA3/B,KAAK,EAAI;EACvC,mBAA4BwD,sBAAW,CAACk8B,yBAAD,EAA4B;IACjE/5B,OAAO,EAAEjC,6BAAcA;EAD0C,CAA5B,CAAvC;EAAA;EAAA,IAAOk8B,iBAAP;;EAGA,sBAAgC1kC,cAAA,CAAe,KAAf,CAAhC;EAAA;EAAA,IAAO2kC,SAAP;EAAA,IAAkBC,UAAlB;;EACA,uBAA0B5kC,cAAA,CAAe,IAAf,CAA1B;EAAA;EAAA,IAAO8K,KAAP;EAAA,IAAcwjB,QAAd;;EAEA,IAAMuW,uBAAuB;IAAA,+EAAG;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEtBH,iBAAiB,CAAC;gBAAEv5B,SAAS,EAAE;kBAAEmb,WAAW,EAAE;oBAAE/f,EAAE,EAAEzB,KAAK,CAACyB;kBAAZ;gBAAf;cAAb,CAAD,CAFK;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAI5B+nB,QAAQ,aAAR;cAJ4B;;YAAA;cAO9BxpB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEggC,iBAAP;cACAF,UAAU,CAAC,KAAD,CAAV;;YAR8B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAvBC,uBAAuB;MAAA;IAAA;EAAA,GAA7B;;EAWA,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBH,UAAU,CAAC,KAAD,CAAV;IACAtW,QAAQ,CAAC,IAAD,CAAR;EACD,CAHD;;EAKA,oBACE,oBAAC,iBAAD;IAAM,aAAa,EAAC,QAApB;IAAA,uBACE,qBAAC,gBAAD;MAAA,wBACE,oBAAC,2BAAD;QACE,UAAU,EAAC,OADb;QAEE,WAAW,EAAC,WAFd;QAGE,QAAQ,EAAE,GAHZ;QAIE,UAAU,EAAC,aAJb;QAKE,aAAa,EAAC,YALhB;QAME,OAAO,EAAE;UAAA,OAAMsW,UAAU,CAAC,IAAD,CAAhB;QAAA,CANX;QAAA,uBAQE,qBAAC,iBAAD;UAAM,UAAU,EAAC,QAAjB;UAA0B,cAAc,EAAC,cAAzC;UAAA,wBACE,oBAAC,oBAAD;YAAM,IAAI,EAAE;UAAZ,EADF,eAEE,oBAAC,iCAAD;YAAkB,EAAE,0BAApB;YAA8C,cAAc;cAAA;cAAA;YAAA;UAA5D,EAFF;QAAA;MARF,EADF,EAcGD,SAAS,iBACR,oBAAC,gCAAD;QACE,OAAO,EAAEI,UADX;QAEE,MAAM,eAAE,oBAAC,iCAAD;UAAkB,EAAE,UAApB;UAA8B,cAAc;YAAA;YAAA;UAAA;QAA5C,EAFV;QAGE,IAAI,eACF;UAAA,wBACE;YAAA,uBACE,oBAAC,iCAAD;cACE,EAAE,2BADJ;cAEE,cAAc;gBAAA;gBAAA;cAAA;YAFhB;UADF,EADF,EAOGj6B,KAAK,iBAAI,oBAAC,qCAAD;YAAwB,EAAE,EAAC,MAA3B;YAAkC,KAAK,EAAEA;UAAzC,EAPZ;QAAA,EAJJ;QAcE,aAAa,eACX,qBAAC,iBAAD;UAAM,UAAU,EAAC,QAAjB;UAA0B,cAAc,EAAC,cAAzC;UAAA,wBACE,oBAAC,oBAAD;YAAM,IAAI,EAAE;UAAZ,EADF,eAEE,oBAAC,iCAAD;YAAkB,EAAE,UAApB;YAA8B,cAAc;cAAA;cAAA;YAAA;UAA5C,EAFF;QAAA,EAfJ;QAoBE,eAAe,EAAE+5B;MApBnB,EAfJ;IAAA;EADF,EADF;AA2CD,CAlED;;;;;;;;;;;;;;;;;;;;;;;AAyEA,yEAAeJ,uBAAf;;;;;;;;;;;;;;;;AC9FA;AAEA;AAEA;AACA;;AAEA,IAAMO,kBAAkB,GAAG,GAA3B;AAEA,IAAMt0B,QAAQ,GAAGrL,sBAAc,CAAC;EAC9B4/B,eAAe,EAAE;IACf1+B,EAAE,mBADa;IAEfnC,cAAc;MAAA;MAAA;IAAA;EAFC;AADa,CAAD,CAA/B;;AAOA,IAAM8gC,4BAA4B,GAAG,SAA/BA,4BAA+B,OAA2B;EAAA,IAAxB15B,OAAwB,QAAxBA,OAAwB;EAAA,IAAfmC,QAAe,QAAfA,QAAe;EAC9D,IAAM3M,IAAI,GAAGb,0BAAO,EAApB;;EACA,IAAMglC,cAAc,GAAG,SAAjBA,cAAiB,CAAAx2B,CAAC,EAAI;IAC1BhB,QAAQ,CAACgB,CAAC,CAACE,MAAF,CAAS5N,KAAV,CAAR;EACD,CAFD;;EAGA,oBACE;IAAA,uBACE,oBAAC,+BAAD;MACE,SAAS,MADX;MAEE,IAAI,EAAC,kBAFP;MAGE,OAAO,EAAC,kBAHV;MAIE,KAAK,eAAE,oBAAC,iCAAD;QAAkB,EAAE,mBAApB;QAAuC,cAAc;UAAA;UAAA;QAAA;MAArD,EAJT;MAKE,QAAQ,EAAE,KALZ;MAME,EAAE,EAAE,CANN;MAAA,UAQG,kBAAAgL,UAAU;QAAA,oBACT,oBAAC,6BAAD,0FACMA,UADN;UAEE,MAAM,EAAC,MAFT;UAGE,SAAS,EAAE+4B,kBAHb;UAIE,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,CAJZ;UAKE,SAAS,EAAE,GALb;UAME,QAAQ,EAAC,MANX;UAOE,KAAK,EAAC,MAPR;UAQE,WAAW,EAAEhkC,IAAI,CAACsD,aAAL,CAAmBoM,QAAQ,CAACu0B,eAA5B,CARf;UASE,KAAK,EAAEz5B,OATT;UAUE,QAAQ,EAAE25B;QAVZ,GADS;MAAA;IARb;EADF,EADF;AA2BD,CAhCD;;;;;;;;;;;;;;;;;;;;;;;AAuCA,8EAAeD,4BAAf;;;;;;;;;ACvDA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB;EAAA,oBACrB;IAAA,uBACE,oBAAC,MAAD;MAAG,QAAQ,EAAC,MAAZ;MAAmB,UAAU,EAAC,MAA9B;MAAA,uBACE,oBAAC,iCAAD;QACE,EAAE,2BADJ;QAEE,cAAc;UAAA;UAAA;QAAA;MAFhB;IADF;EADF,EADqB;AAAA,CAAvB;;AAWO,IAAMC,yBAAyB,GAAGj9B,mCAAH,uTAA/B;;AAQP,IAAMk9B,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAzgC,KAAK,EAAI;EACvC,mBAAsDwD,sBAAW,CAACg9B,yBAAD,EAA4B;IAC3F76B,OAAO,EAAEjC,6BAAcA;EADoE,CAA5B,CAAjE;EAAA;EAAA,IAAOg9B,iBAAP;EAAA,IAAmCC,aAAnC,oBAA4B36B,KAA5B;;EAGA,sBAAgC9K,cAAA,CAAe,KAAf,CAAhC;EAAA;EAAA,IAAO2kC,SAAP;EAAA,IAAkBC,UAAlB;;EACA,uBAA0B5kC,cAAA,CAAe,IAAf,CAA1B;EAAA;EAAA,IAAO8K,KAAP;EAAA,IAAcwjB,QAAd;;EACA,uBAA8BtuB,cAAA,CAAe,EAAf,CAA9B;EAAA;EAAA,IAAOwL,OAAP;EAAA,IAAgBqkB,UAAhB;;EAEA7vB,eAAA,CAAgB,YAAM;IACpBsuB,QAAQ,CAACmX,aAAD,CAAR;EACD,CAFD,EAEG,CAACA,aAAD,CAFH;;EAIA,IAAMC,uBAAuB;IAAA,+EAAG;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACxBF,iBAAiB,CAAC;gBACtBr6B,SAAS,EAAE;kBACTmb,WAAW,EAAE;oBAAE/f,EAAE,EAAEzB,KAAK,CAACyB;kBAAZ,CADJ;kBAETiF,OAAO,EAAPA;gBAFS;cADW,CAAD,CADO;;YAAA;cAO9B1G,KAAK,CAACggC,iBAAN;cACAF,UAAU,CAAC,KAAD,CAAV;;YAR8B;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAvBc,uBAAuB;MAAA;IAAA;EAAA,GAA7B;;EAWA,IAAMX,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBH,UAAU,CAAC,KAAD,CAAV;IACAtW,QAAQ,CAAC,IAAD,CAAR;EACD,CAHD;;EAKA,oBACE,oBAAC,iBAAD;IAAM,aAAa,EAAC,QAApB;IAAA,uBACE,qBAAC,gBAAD;MAAA,wBACE,oBAAC,4BAAD;QAAe,OAAO,EAAE+W,cAAxB;QAAA,uBACE,oBAAC,2BAAD;UACE,UAAU,EAAC,OADb;UAEE,WAAW,EAAC,iBAFd;UAGE,QAAQ,EAAE,GAHZ;UAIE,UAAU,EAAC,aAJb;UAKE,aAAa,EAAC,YALhB;UAME,OAAO,EAAE;YAAA,OAAMT,UAAU,CAAC,IAAD,CAAhB;UAAA,CANX;UAOE,EAAE,EAAE9/B,KAAK,CAAC6gC,SAAN,GAAkB,CAAlB,GAAsB,CAP5B;UAAA,uBASE,qBAAC,iBAAD;YAAM,UAAU,EAAC,QAAjB;YAA0B,cAAc,EAAC,cAAzC;YAAA,wBACE,oBAAC,kCAAD;cAAa,IAAI,EAAE;YAAnB,EADF,eAEE,oBAAC,iCAAD;cAAkB,EAAE,kBAApB;cAAsC,cAAc;gBAAA;gBAAA;cAAA;YAApD,EAFF;UAAA;QATF;MADF,EADF,EAiBGhB,SAAS,iBACR,oBAAC,gCAAD;QACE,OAAO,EAAEI,UADX;QAEE,MAAM,eAAE,oBAAC,iCAAD;UAAkB,EAAE,sBAApB;UAA0C,cAAc;YAAA;YAAA;UAAA;QAAxD,EAFV;QAGE,IAAI,eACF,oBAAC,cAAD;UAAA,uBACE,qBAAC,iBAAD;YAAM,aAAa,EAAC,QAApB;YAA6B,UAAU,EAAC,QAAxC;YAAiD,cAAc,EAAC,QAAhE;YAAA,wBACE,qBAAC,yBAAD;cAAY,IAAI,EAAC,SAAjB;cAA2B,EAAE,EAAE,CAA/B;cAAA,wBACE,oBAAC,iCAAD;gBACE,EAAE,2BADJ;gBAEE,cAAc;kBAAA;kBAAA;gBAAA;cAFhB,EADF,eAKE,6BALF,eAME,6BANF,EAOGjgC,KAAK,CAAC6gC,SAAN,gBACC,oBAAC,iCAAD;gBACE,EAAE,qCADJ;gBAEE,cAAc;kBAAA;kBAAA;gBAAA;cAFhB,EADD,gBAMC,oBAAC,iCAAD;gBACE,EAAE,wCADJ;gBAEE,cAAc;kBAAA;kBAAA;gBAAA;cAFhB,EAbJ;YAAA,EADF,EAoBG76B,KAAK,iBAAI,oBAAC,qCAAD;cAAwB,EAAE,EAAC,MAA3B;cAAkC,KAAK,EAAEA;YAAzC,EApBZ,eAqBE,oBAAC,yCAAD;cAA8B,OAAO,EAAEU,OAAvC;cAAgD,QAAQ,EAAE,kBAAAA,OAAO;gBAAA,OAAIqkB,UAAU,CAACrkB,OAAD,CAAd;cAAA;YAAjE,EArBF;UAAA;QADF,EAJJ;QA8BE,aAAa,eACX,qBAAC,iBAAD;UAAM,UAAU,EAAC,QAAjB;UAA0B,cAAc,EAAC,cAAzC;UAAA,wBACE,oBAAC,kCAAD;YAAa,IAAI,EAAE;UAAnB,EADF,eAEE,oBAAC,iCAAD;YAAkB,EAAE,8BAApB;YAAkD,cAAc;cAAA;cAAA;YAAA;UAAhE,EAFF;QAAA,EA/BJ;QAoCE,eAAe,EAAEk6B,uBApCnB;QAqCE,QAAQ;MArCV,EAlBJ;IAAA;EADF,EADF;AA+DD,CA3FD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA,yEAAeH,uBAAf;;ACxIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;AAEA,IAAMW,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,cAAD,EAAiBC,cAAjB;EAAA,oBACpC,qBAAC,gBAAD;IAAA,WACGD,cAAc,iBACb,oBAAC,MAAD;MAAG,QAAQ,EAAC,MAAZ;MAAmB,UAAU,EAAC,MAA9B;MAAqC,EAAE,EAAEC,cAAc,GAAG,CAAH,GAAO,CAA9D;MAAA,uBACE,oBAAC,iCAAD;QACE,EAAE,+BADJ;QAEE,cAAc;UAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;UAAA;UAAA;QAAA,EAFhB;QAGE,MAAM,EAAE;UAAEC,IAAI,EAAEJ,+BAAQA;QAAhB;MAHV;IADF,EAFJ,EAUGG,cAAc,iBACb,oBAAC,MAAD;MAAG,QAAQ,EAAC,MAAZ;MAAmB,UAAU,EAAC,MAA9B;MAAA,uBACE,oBAAC,iCAAD;QACE,EAAE,+BADJ;QAEE,cAAc;UAAA;UAAA;UAAA;YAAA;YAAA;UAAA;QAAA;UAAA;UAAA;QAAA,EAFhB;QAGE,MAAM,EAAE;UAAEC,IAAI,EAAEJ,+BAAQA;QAAhB;MAHV;IADF,EAXJ;EAAA,EADoC;AAAA,CAAtC,EAuBA;;;AACA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACvG,WAAD,EAAcwG,SAAd,EAA4B;EAAA;;EACrD,OAAO,wBAAAxG,WAAW,CAACyG,MAAZ,4EAAoBjgC,EAApB,MAA2BggC,SAAS,CAAChgC,EAArC,IAA2Cw5B,WAAW,CAACx5B,EAAZ,yBAAmBggC,SAAS,CAACn8B,IAA7B,oDAAmB,gBAAgB7D,EAAnC,CAAlD;AACD,CAFD;;AAIA,IAAMkgC,WAAW,GAAGrmC,uEAAH;EAAA;EAAA;AAAA,2IAAjB;AAUA,IAAMsmC,iBAAiB,GAAGtmC,2EAAH;EAAA;EAAA;AAAA,kFAAvB;AAOA,IAAMumC,gBAAgB,GAAGvmC,iDAAM,CAACK,iBAAD,CAAT;EAAA;EAAA;AAAA,uGAKlB,UAAAqE,KAAK;EAAA,OACLA,KAAK,CAAC8hC,SAAN,IACAl6B,6CADA,kCADK;AAAA,CALa,CAAtB;;AAgBA,IAAMm6B,kBAAkB,GAAG,SAArBA,kBAAqB,OAAwD;EAAA;;EAAA,IAArDC,cAAqD,QAArDA,cAAqD;EAAA,IAArCxgB,WAAqC,QAArCA,WAAqC;EAAA,IAAxBwe,iBAAwB,QAAxBA,iBAAwB;EACjF,IAAM9jC,IAAI,GAAGb,0BAAO,EAApB;;EACA,oBAAmE2lC,oCAAY,CAACE,oCAAD,EAAc;IAAEe,aAAa,EAAE;EAAjB,CAAd,CAA/E;EAAA,IAAiBC,cAAjB,iBAAQp8B,OAAR;EAAA,IAA2Cq8B,mBAA3C,iBAAiCC,QAAjC;;EACA,IACE3gC,EADF,GAqBI+f,WArBJ,CACE/f,EADF;EAAA,IAEEsB,IAFF,GAqBIye,WArBJ,CAEEze,IAFF;EAAA,IAGEk8B,UAHF,GAqBIzd,WArBJ,CAGEyd,UAHF;EAAA,IAIEF,QAJF,GAqBIvd,WArBJ,CAIEud,QAJF;EAAA,IAKE0C,SALF,GAqBIjgB,WArBJ,CAKEigB,SALF;EAAA,IAMExG,WANF,GAqBIzZ,WArBJ,CAMEyZ,WANF;EAAA,IAOE31B,IAPF,GAqBIkc,WArBJ,CAOElc,IAPF;EAAA,IAQE+8B,IARF,GAqBI7gB,WArBJ,CAQE6gB,IARF;EAAA,IASEC,WATF,GAqBI9gB,WArBJ,CASE8gB,WATF;EAAA,IAUE/D,OAVF,GAqBI/c,WArBJ,CAUE+c,OAVF;EAAA,IAWEjM,aAXF,GAqBI9Q,WArBJ,CAWE8Q,aAXF;EAAA,IAYEjB,mBAZF,GAqBI7P,WArBJ,CAYE6P,mBAZF;EAAA,IAaEtU,YAbF,GAqBIyE,WArBJ,CAaEzE,YAbF;EAAA,IAcErgB,MAdF,GAqBI8kB,WArBJ,CAcE9kB,MAdF;EAAA,IAeE6lC,SAfF,GAqBI/gB,WArBJ,CAeE+gB,SAfF;EAAA,IAgBE/rB,WAhBF,GAqBIgL,WArBJ,CAgBEhL,WAhBF;EAAA,IAiBEpG,KAjBF,GAqBIoR,WArBJ,CAiBEpR,KAjBF;EAAA,IAkBED,OAlBF,GAqBIqR,WArBJ,CAkBErR,OAlBF;EAAA,IAmBE6uB,eAnBF,GAqBIxd,WArBJ,CAmBEwd,eAnBF;EAAA,IAoBEne,IApBF,GAqBIW,WArBJ,CAoBEX,IApBF;EAsBA,IAAMtP,QAAQ,GAAGxO,IAAI,KAAKg+B,mDAA1B;EACA,IAAM0B,QAAQ,GAAGryB,KAAK,KAAK,IAA3B,CA1BiF,CA4BjF;;EACA,IAAMsyB,gBAAgB,GAAG,CAAAlsB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEqqB,SAAb,KAA0B,CAAC5B,UAApD;EACA,IAAM0D,gBAAgB,GAAG,CAAAnsB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEuf,SAAb,KAA0B,CAACiJ,eAApD;EACA,IAAM4D,yBAAyB,GAAG,CAAApsB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEqsB,kBAAb,KAAmC,CAACrB,kBAAkB,CAACvG,WAAD,EAAcwG,SAAd,CAAxF;EACA,IAAMqB,kBAAkB,4BAAGthB,WAAW,CAACuhB,mBAAf,0DAAG,sBAAiCpb,IAAjC,CACzB,UAAAva,CAAC;IAAA,OAAIA,CAAC,CAACyT,IAAF,KAAWnB,sDAAX,IAAuCtS,CAAC,CAACrK,IAAF,KAAWg+B,mDAAtD;EAAA,CADwB,CAA3B;EAGA,IAAMiC,qBAAqB,6BAAGxhB,WAAW,CAACuhB,mBAAf,2DAAG,uBAAiCpb,IAAjC,CAC5B,UAAAva,CAAC;IAAA,OAAIA,CAAC,CAACyT,IAAF,KAAWnB,oFAAX,IAAsDtS,CAAC,CAACrK,IAAF,KAAWg+B,mDAArE;EAAA,CAD2B,CAA9B;EAGA,IAAMmC,YAAY,GAAG,CAACtE,sDAAD,EAA0BA,gDAA1B,EAAgDtiB,QAAhD,CAAyDlM,KAAzD,aAAyDA,KAAzD,uBAAyDA,KAAK,CAAEyF,MAAhE,CAArB;EAEA,oBACE,qBAAC,gBAAD;IAAkB,QAAQ,EAAC,MAA3B;IAAkC,UAAU,EAAC,YAA7C;IAAA,WACG,CAACqtB,YAAD,iBACC,qBAAC,iBAAD;MAAM,aAAa,EAAC,QAApB;MAA6B,KAAK,EAAE,CAAC,CAAD,EAAI,IAAJ,CAApC;MAAA,wBACE,oBAAC,WAAD;QAAA,uBACE,oBAAC,iCAAD;UAAkB,EAAE,uBAApB;UAA2C,cAAc;YAAA;YAAA;UAAA;QAAzD;MADF,EADF,eAIE,qBAAC,iBAAD;QAAA,WACGjC,gDAAmB,CAAC;UACnBvkC,MAAM,EAANA,MADmB;UAEnB4lC,WAAW,EAAXA,WAFmB;UAGnB/D,OAAO,EAAPA,OAHmB;UAInBlN,mBAAmB,EAAnBA,mBAJmB;UAKnBkR,SAAS,EAATA,SALmB;UAMnBhxB,QAAQ,EAARA,QANmB;UAOnB0tB,UAAU,EAAVA,UAPmB;UAQnBwD,QAAQ,EAARA,QARmB;UASnBhB,SAAS,EAATA,SATmB;UAUnBxG,WAAW,EAAXA,WAVmB;UAWnBkI,SAAS,EAAE3hB,WAAW,CAAC2hB,SAXJ;UAYnBC,OAAO,EAAE5hB,WAAW,CAAC4hB,OAZF;UAanBlnC,IAAI,EAAJA,IAbmB;UAcnB2kB,IAAI,EAAJA,IAdmB;UAenB1Q,OAAO,EAAPA,OAfmB;UAgBnB4uB,QAAQ,EAARA,QAhBmB;UAiBnBiE,qBAAqB,EAArBA;QAjBmB,CAAD,CADtB,EAoBG,CAAC,cAAD,EAAiB,aAAjB,EAAgC,SAAhC,EAA2C1mB,QAA3C,CAAoDkF,WAAW,CAACX,IAAhE,KAAyEiiB,kBAAzE,iBACC,qBAAC,cAAD;UAAA,wBACE,6BADF,eAEE,oBAAC,iCAAD;YACE,EAAE,8BADJ;YAEE,cAAc;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA;cAAA;cAAA;YAAA,EAFhB;YAGE,MAAM,EAAE;cACNpmC,MAAM,eACJ,oBAAC,mCAAD;gBACE,MAAM,EAAEomC,kBAAkB,CAACP,SAAnB,CAA6B1lC,YADvC;gBAEE,QAAQ,EAAEimC,kBAAkB,CAACP,SAAnB,CAA6B3lC,QAFzC;gBAGE,gBAAgB,EAAE,KAHpB;gBAIE,YAAY,EAAE;cAJhB;YAFI;UAHV,EAFF;QAAA,EArBJ;MAAA,EAJF,EA4CG,CAAAwT,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEnB,IAAP,kBACC,qBAAC,cAAD;QAAA,wBACE,oBAAC,WAAD;UAAA,uBACE,oBAAC,iCAAD;YAAA;YAAkB,cAAc;cAAA;cAAA;YAAA;UAAhC;QADF,EADF,eAIE,oBAAC,iBAAD;UAAA,UAAoBmB,KAAK,CAACnB;QAA1B,EAJF;MAAA,EA7CJ,EAoDG,CAAAmB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAE4qB,WAAP,MACExZ,WAAW,CAACX,IAAZ,KAAqBnB,4DAArB,IACE,CAAC4S,aAAD,IAAkB9Q,WAAW,CAACX,IAAZ,KAAqBnB,8DAF3C,kBAGG,qBAAC,cAAD;QAAA,wBACE,oBAAC,WAAD;UAAA,uBACE;YAAA,wBACE,oBAAC,iCAAD;cAAkB,EAAE,sBAApB;cAA0C,cAAc;gBAAA;gBAAA;cAAA;YAAxD,EADF,oBAGE,oBAAC,4BAAD;cAAe,OAAO,EAAE;gBAAA,oBAAM,oBAAC,iCAAD;kBAAA;kBAAkB,cAAc;oBAAA;oBAAA;kBAAA;gBAAhC,EAAN;cAAA,CAAxB;cAAA,uBACE,oBAAC,gCAAD;gBAAY,IAAI,EAAE;cAAlB;YADF,EAHF;UAAA;QADF,EADF,eAUE,oBAAC,iBAAD;UAAA,UACGxjB,IAAI,CAACwD,UAAL,CAAgB0Q,KAAK,CAAC4qB,WAAtB,EAAmC;YAAEr7B,SAAS,EAAE,MAAb;YAAqBG,QAAQ,EAAE;UAA/B,CAAnC;QADH,EAVF;MAAA,EAvDN;IAAA,EAFJ,eA0EE,oBAAC,iBAAD;MAAM,aAAa,EAAC,QAApB;MAA6B,KAAK,EAAE,CAAC,CAAD,EAAI,IAAJ,CAApC;MAAA,uBACE,qBAAC,gBAAD;QAAA,WACG,CAACwF,IAAI,IAAIgtB,aAAT,kBACC,qBAAC,cAAD;UAAA,WACGhtB,IAAI,iBACH,qBAAC,gBAAD;YAAA,wBACE,oBAAC,WAAD;cAAA,uBACE,oBAAC,iCAAD;gBAAkB,EAAE,cAApB;gBAAkC,cAAc;kBAAA;kBAAA;gBAAA;cAAhD;YADF,EADF,eAIE,oBAAC,iBAAD;cAAA,uBACE,oBAAC,yBAAD;gBAAY,EAAE,EAAE6O,6BAAhB;gBAAgC,UAAU,EAAE7O;cAA5C;YADF,EAJF;UAAA,EAFJ,EAWGgtB,aAAa,iBACZ,qBAAC,gBAAD;YAAA,wBACE,oBAAC,WAAD;cAAA,uBACE,oBAAC,iCAAD;gBAAkB,EAAE,YAApB;gBAAgC,cAAc;kBAAA;kBAAA;gBAAA;cAA9C;YADF,EADF,eAIE,oBAAC,iBAAD;cAAA,uBACE,oBAAC,wCAAD;gBAA2B,IAAI,EAAEA,aAAa,CAACvvB,IAA/C;gBAAqD,QAAQ,EAAE,EAA/D;gBAAmE,QAAQ,EAAE;cAA7E;YADF,EAJF;UAAA,EAZJ;QAAA,EAFJ,EAyBGga,YAAY,iBACX,qBAAC,gBAAD;UAAA,wBACE,oBAAC,WAAD;YAAA,uBACE,oBAAC,iCAAD;cAAkB,EAAE,YAApB;cAAgC,cAAc;gBAAA;gBAAA;cAAA;YAA9C;UADF,EADF,eAIE,oBAAC,iBAAD;YAAA,uBACE,oBAAC,uCAAD;cACE,IAAI,EAAEA,YAAY,CAACha,IADrB;cAEE,KAAK,EAAE,SAFT;cAGE,UAAU,EAAE,SAHd;cAIE,QAAQ,EAAE,SAJZ;cAKE,QAAQ,EAAE;YALZ;UADF,EAJF;QAAA,EA1BJ;MAAA;IADF,EA1EF,EAsHGi/B,cAAc;IAAA;IAAM;IACnB,oBAAC,iBAAD;MAAM,aAAa,EAAC,QAApB;MAA6B,KAAK,EAAE,CAAC,CAAD,EAAI,GAAJ,CAApC;MAAA,uBACE,qBAAC,iBAAD;QAAM,QAAQ,EAAC,MAAf;QAAsB,cAAc,EAAE,CAAC,YAAD,EAAe,UAAf,CAAtC;QAAkE,UAAU,EAAC,QAA7E;QAAsF,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAA1F;QAAA,WACG,CAACU,gBAAgB,IAAIC,gBAArB,kBACC,oBAAC,4BAAD;UAAe,OAAO,EAAEvB,6BAA6B,CAACsB,gBAAD,EAAmBC,gBAAnB,CAArD;UAA2F,EAAE,EAAE,CAA/F;UAAA,uBACE,oBAAC,gBAAD;YAAK,EAAE,EAAE,CAAT;YAAA,uBACE,oBAAC,oBAAD;cAAM,KAAK,EAAC,SAAZ;cAAsB,IAAI,EAAE;YAA5B;UADF;QADF,EAFJ,EAQGD,gBAAgB,iBACf,oBAAC,iBAAD;UAAM,EAAE,EAAE,CAAV;UAAA,uBACE,oBAAC,oCAAD;YAAyB,EAAE,EAAEjhC,EAA7B;YAAiC,iBAAiB,EAAEu+B;UAApD;QADF,EATJ,EAaG2C,gBAAgB,iBACf,oBAAC,iBAAD;UAAM,EAAE,EAAE,CAAV;UAAA,uBACE,oBAAC,oCAAD;YACE,EAAE,EAAElhC,EADN;YAEE,SAAS,EAAE,CAAA+U,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEqqB,SAAb,KAA0B,CAAC5B,UAFxC;YAGE,iBAAiB,EAAEe;UAHrB;QADF,EAdJ,EAsBG4C,yBAAyB,iBACxB,qBAAC,2BAAD;UACE,UAAU,EAAC,OADb;UAEE,OAAO,EAAEV,cAFX;UAGE,OAAO,EAAEC,mBAAmB,CAAC;YAAEoB,eAAe,EAAElB,IAAnB;YAAyBmB,gBAAgB,EAAE/B,SAAS,CAAC7gB;UAArD,CAAD,CAH9B;UAIE,QAAQ,EAAE,GAJZ;UAKE,UAAU,EAAC,aALb;UAME,aAAa,EAAC,YANhB;UAOE,EAAE,EAAE,CAPN;UAQE,EAAE,EAAE,CARN;UASE,EAAE,EAAC,OATL;UAAA,WAWGzQ,OAAO,iBAAI,oBAAC,iCAAD;YAAkB,EAAE,mBAApB;YAAuC,cAAc;cAAA;cAAA;YAAA;UAArD,EAXd,EAYGC,KAAK,iBAAI,oBAAC,iCAAD;YAAkB,EAAE,mBAApB;YAAuC,cAAc;cAAA;cAAA;YAAA;UAArD,EAZZ;QAAA,EAvBJ;MAAA;IADF,EAvHJ;EAAA,EADF;AAoKD,CA5MD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8RA,oEAAe2xB,kBAAf;;;;;ACrXA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,IAAQuB,YAAR,GAAoD5jB,8DAApD;AAAA,IAAsB2jB,WAAtB,GAAoD3jB,4DAApD;AAAA,IAAmCkkB,YAAnC,GAAoDlkB,8DAApD;AAEA;;AACA,IAAMmkB,cAAc,GAAG,KAAvB;AAEO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACtiB,WAAD,EAActb,UAAd,EAA6B;EAAA;;EAC7D,IAAMqL,QAAQ,GAAGiQ,WAAW,CAACze,IAAZ,KAAqBg+B,mDAAtC;EACA,IAAM0B,QAAQ,GAAGjhB,WAAW,CAACpR,KAAZ,KAAsB,IAAvC;EACA,IAAM2zB,SAAS,GAAGviB,WAAW,CAACX,IAAZ,KAAqBnB,oDAAvC;EACA,IAAMskB,MAAM,GAAGxiB,WAAW,CAACyZ,WAAZ,CAAwBra,IAAxB,KAAiC1a,UAAU,CAAC0a,IAA3D;EACA,IAAMqjB,qBAAqB,GACzBxB,QAAQ,IAAI,CAAC7D,sDAAD,EAA0BA,gDAA1B,EAAgDtiB,QAAhD,uBAAyDkF,WAAW,CAACpR,KAArE,uDAAyD,mBAAmByF,MAA5E,CADd;;EAGA,IAAIkuB,SAAJ,EAAe;IACb,OAAOviB,WAAW,CAAC+gB,SAAnB;EACD,CAFD,MAEO,IAAI0B,qBAAJ,EAA2B;IAChC,OAAOziB,WAAW,CAAC9kB,MAAnB;EACD,CAFM,MAEA,IAAI6U,QAAQ,IAAIkxB,QAAhB,EAA0B;IAC/B;IACA,OAAOjhB,WAAW,CAAC9kB,MAAnB;EACD,CAHM,MAGA,IAAI8kB,WAAW,CAACyd,UAAhB,EAA4B;IACjC,IAAK+E,MAAM,IAAI,CAACxiB,WAAW,CAACud,QAAxB,IAAsCvd,WAAW,CAACud,QAAZ,IAAwBxtB,QAAlE,EAA6E;MAC3E,OAAOiQ,WAAW,CAAC+gB,SAAnB;IACD,CAFD,MAEO;MACL,OAAO/gB,WAAW,CAAC9kB,MAAnB;IACD;EACF,CANM,MAMA;IACL,OAAO8kB,WAAW,CAAC+gB,SAAnB;EACD;AACF,CAxBM;;AA0BP,IAAM2B,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAkC;EAAA,IAA/B/zB,OAA+B,QAA/BA,OAA+B;EAAA,IAAtBC,KAAsB,QAAtBA,KAAsB;EAAA,IAAf/R,QAAe,QAAfA,QAAe;;EACzD,IAAI8R,OAAJ,EAAa;IACX,oBACE,oBAAC,4BAAD;MACE,OAAO,eAAE,oBAAC,iCAAD;QAAkB,EAAE,oBAApB;QAAwC,cAAc;UAAA;UAAA;QAAA;MAAtD,EADX;MAEE,SAAS,EAAE,CAFb;MAAA,uBAIE,oBAAC,yBAAD;QACE,EAAE,EAAEtP,mBADN;QAEE,gBAAgB,MAFlB;QAGE,IAAI,YAAK2Z,8CAAsB,CAACrK,OAAO,CAAC7J,OAAT,CAA3B,uBAAyD6J,OAAO,CAAC5J,QAAjE,CAHN;QAAA,UAKGlI;MALH;IAJF,EADF;EAcD,CAfD,MAeO,IAAI+R,KAAJ,EAAW;IAChB,oBACE,oBAAC,4BAAD;MACE,OAAO,eAAE,oBAAC,iCAAD;QAAkB,EAAE,yBAApB;QAA6C,cAAc;UAAA;UAAA;QAAA;MAA3D,EADX;MAEE,SAAS,EAAE,CAFb;MAAA,uBAIE,oBAAC,yBAAD;QACE,EAAE,EAAEvP,mBADN;QAEE,gBAAgB,MAFlB;QAGE,IAAI,YAAK2Z,8CAAsB,CAACpK,KAAK,CAACqxB,SAAP,CAA3B,qBAAuDrxB,KAAK,CAAC7J,QAA7D,CAHN;QAAA,UAKGlI;MALH;IAJF,EADF;EAcD,CAfM,MAeA;IACL,oBAAO,oBAAC,cAAD;MAAA,UAAiBA;IAAjB,EAAP;EACD;AACF,CAlCD;;AAoDA,IAAM8lC,OAAO,GAAG7oC,iDAAM,CAACqP,wBAAD,CAAN,CAAkB7C,KAAlB,CAAwB;EACtCgD,OAAO,EAAE,cAD6B;EAEtC/H,IAAI,EAAE,MAFgC;EAGtC0N,EAAE,EAAE,KAHkC;EAItCC,EAAE,EAAE,MAJkC;EAKtC9P,aAAa,EAAE,WALuB;EAMtCpC,QAAQ,EAAE,MAN4B;EAOtCmR,UAAU,EAAE;AAP0B,CAAxB,CAAH;EAAA;EAAA;AAAA,QAAb;;AAUA,IAAMy0B,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACj0B,OAAD,EAAU4uB,QAAV,EAAoBE,UAApB,EAAmC;EAC7D,IAAIoF,kBAAJ;;EACA,IAAIpF,UAAJ,EAAgB;IACdoF,kBAAkB,GAAG,UAArB;EACD,CAFD,MAEO,IAAItF,QAAJ,EAAc;IACnBsF,kBAAkB,GAAG,WAArB;EACD,CAFM,MAEA;IACLA,kBAAkB,GAAG,CAAAl0B,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAE0F,MAAT,KAAmBlB,uCAAxC;EACD;;EACD,oBACE,oBAAC,+BAAD;IACE,MAAM,EAAE0vB,kBADV;IAEE,QAAQ,EAAC,MAFX;IAGE,UAAU,EAAC,MAHb;IAIE,UAAU,EAAC,MAJb;IAKE,aAAa,EAAC,QALhB;IAME,EAAE,EAAC,KANL;IAOE,EAAE,EAAC;EAPL,EADF;AAWD,CApBD;;AAsBA,IAAMpkB,eAAe,GAAG,SAAlBA,eAAkB,QAAoE;EAAA;;EAAA,IAAjE+hB,cAAiE,SAAjEA,cAAiE;EAAA,IAAjD97B,UAAiD,SAAjDA,UAAiD;EAAA,IAArCsb,WAAqC,SAArCA,WAAqC;EAAA,IAAxBwe,iBAAwB,SAAxBA,iBAAwB;EAC1F,IACEyB,SADF,GAYIjgB,WAZJ,CACEigB,SADF;EAAA,IAEExG,WAFF,GAYIzZ,WAZJ,CAEEyZ,WAFF;EAAA,IAGEqJ,sBAHF,GAYI9iB,WAZJ,CAGE8iB,sBAHF;EAAA,IAIEl0B,KAJF,GAYIoR,WAZJ,CAIEpR,KAJF;EAAA,IAKED,OALF,GAYIqR,WAZJ,CAKErR,OALF;EAAA,IAMEpN,IANF,GAYIye,WAZJ,CAMEze,IANF;EAAA,IAOE8d,IAPF,GAYIW,WAZJ,CAOEX,IAPF;EAAA,IAQE/H,WARF,GAYI0I,WAZJ,CAQE1I,WARF;EAAA,IASE6D,SATF,GAYI6E,WAZJ,CASE7E,SATF;EAAA,IAUEsiB,UAVF,GAYIzd,WAZJ,CAUEyd,UAVF;EAAA,IAWEF,QAXF,GAYIvd,WAZJ,CAWEud,QAXF;;EAcA,uBAAyBlZ,kCAAe,EAAxC;EAAA,IAAQ/D,YAAR,oBAAQA,YAAR;;EACA,sBAAkC5mB,cAAA,CAAe,KAAf,CAAlC;EAAA;EAAA,IAAO24B,UAAP;EAAA,IAAmBC,WAAnB;;EACA,IAAM53B,IAAI,GAAGb,0BAAO,EAApB;EAEA,IAAMonC,QAAQ,GAAGryB,KAAK,KAAK,IAA3B;EACA,IAAM2zB,SAAS,GAAGljB,IAAI,KAAKnB,oDAA3B;EACA,IAAMnO,QAAQ,GAAGxO,IAAI,KAAKg+B,mDAA1B;EACA,IAAMwD,IAAI,GAAGhzB,QAAQ,GAAGyC,kCAAH,GAAgBD,iCAArC;EACA,IAAMywB,kBAAkB,GAAGt+B,UAAU,CAACK,QAAX,IAAuBL,UAAU,CAACzE,EAA7D;EACA,IAAMgjC,gBAAgB,GAAG3iB,YAAY,IAAIA,YAAY,CAAC4iB,YAAb,KAA8BF,kBAAvE;EACA,IAAMG,gBAAgB,GAAGpzB,QAAQ,GAAG0pB,WAAH,GAAiBwG,SAAlD;EACA,IAAMwC,qBAAqB,GAAGxB,QAAQ,IAAI,CAAC7D,sDAAD,EAA0BA,gDAA1B,EAAgDtiB,QAAhD,CAAyDlM,KAAzD,aAAyDA,KAAzD,uBAAyDA,KAAK,CAAEyF,MAAhE,CAA1C;EAEA,IAAM+uB,eAAe,GAAGd,kBAAkB,CAACtiB,WAAD,EAActb,UAAd,CAA1C;;EAEA,IAAM2+B,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;IACnC,oBACE,oBAAC,2BAAD;MACE,WAAQ,qBADV;MAEE,UAAU,EAAC,MAFb;MAGE,WAAW,EAAC,WAHd;MAIE,YAAY,MAJd;MAKE,OAAO,EAAE;QAAA,OAAM/Q,WAAW,CAAC,CAACD,UAAF,CAAjB;MAAA,CALX;MAAA,uBAOE,oBAAC,iBAAD;QAAM,UAAU,EAAC,QAAjB;QAAA,UACGA,UAAU,gBACT,qBAAC,cAAD;UAAA,wBACE,oBAAC,iCAAD;YAAkB,EAAE,gBAApB;YAAoC,cAAc;cAAA;cAAA;YAAA;UAAlD,EADF,uBAGE,oBAAC,8BAAD;YAAW,IAAI,EAAC;UAAhB,EAHF;QAAA,EADS,gBAOT,oBAAC,cAAD;UAAA,uBACE,qBAAC,iBAAD;YAAM,UAAU,EAAC,QAAjB;YAAA,wBACE,oBAAC,iCAAD;cAAkB,EAAE,eAApB;cAAmC,cAAc;gBAAA;gBAAA;cAAA;YAAjD,EADF,uBAGE,oBAAC,kCAAD;cAAa,IAAI,EAAC;YAAlB,EAHF;UAAA;QADF;MARJ;IAPF,EADF;EA2BD,CA5BD;;EA8BA,oBACE,qBAAC,IAAD;IAAM,WAAQ,kBAAd;IAAA,wBACE,qBAAC,gBAAD;MAAK,EAAE,EAAE,CAAC,EAAD,EAAK,EAAL,CAAT;MAAmB,EAAE,EAAE,EAAvB;MAAA,wBACE,qBAAC,iBAAD;QAAM,QAAQ,EAAC,MAAf;QAAsB,cAAc,EAAC,eAArC;QAAA,wBACE,qBAAC,iBAAD;UAAM,IAAI,EAAC,GAAX;UAAe,QAAQ,EAAC,KAAxB;UAA8B,EAAE,EAAE,CAAlC;UAAA,wBACE,oBAAC,gBAAD;YAAK,EAAE,EAAE,CAAT;YAAA,uBACE,oBAAC,6BAAD;cAAgB,UAAU,EAAE8Q,gBAA5B;cAAA,uBACE,oBAAC,sBAAD;gBAAQ,UAAU,EAAEA,gBAApB;gBAAsC,MAAM,EAAE;cAA9C;YADF;UADF,EADF,eAME,qBAAC,gBAAD;YAAA,wBACE,qBAAC,wBAAD;cACE,WAAQ,yBADV;cAEE,UAAU,EAAC,KAFb;cAGE,QAAQ,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,EAAqB,MAArB,CAHZ;cAIE,UAAU,EAAE,CAAC,MAAD,EAAS,IAAT,EAAe,IAAf,EAAqB,MAArB,CAJd;cAAA,wBAME,oBAAC,gBAAD;gBAAkB,OAAO,EAAEx0B,OAA3B;gBAAoC,KAAK,EAAEC,KAA3C;gBAAA,uBACE,oBAAC,iBAAD;kBAAM,KAAK,EAAE0I,WAAb;kBAA0B,KAAK,EAAEA,WAAW,GAAG,WAAH,GAAiB,WAA7D;kBAAA,UACGA,WAAW,GACV,mBAASA,WAAT,EAAsB;oBAAEtb,MAAM,EAAE;kBAAV,CAAtB,CADU,gBAGV,oBAAC,iCAAD;oBAAkB,EAAE,iBAApB;oBAAqC,cAAc;sBAAA;sBAAA;oBAAA;kBAAnD;gBAJJ;cADF,EANF,EAeGinC,gBAAgB,8BAAIjjB,WAAW,CAACyZ,WAAhB,0DAAI,sBAAyB6J,WAA7B,CAAhB,iBACC;gBAAM,EAAE,EAAE,CAAV;gBAAA,uBACE,oBAAC,8BAAD;kBAAiB,KAAK,EAAC,SAAvB;kBAAA,uBACE,oBAAC,iCAAD;oBACE,EAAE,sBADJ;oBAEE,cAAc;sBAAA;sBAAA;oBAAA;kBAFhB;gBADF;cADF,EAhBJ;YAAA,EADF,eA2BE,qBAAC,MAAD;cAAG,EAAE,EAAC,KAAN;cAAY,QAAQ,EAAC,MAArB;cAA4B,UAAU,EAAC,MAAvC;cAA8C,KAAK,EAAC,WAApD;cAAgE,WAAQ,qBAAxE;cAAA,WACGnB,gDAAmB,CAACznC,IAAD,EAAOslB,WAAW,CAACze,IAAnB,CADtB,uBAII,qBAAC,cAAD;gBAAA,wBACE,oBAAC,iCAAD;kBACE,EAAE,oBADJ;kBAEE,cAAc;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;kBAAA,EAFhB;kBAGE,MAAM,EAAE;oBAAEgW,IAAI,eAAE,oBAAC,yBAAD;sBAAY,EAAE,EAAE5E,6BAAhB;sBAAgC,UAAU,EAAE8mB;oBAA5C;kBAAR;gBAHV,EADF;cAAA,EAJJ,eAcI,oBAAC,iCAAD;gBACE,EAAE,kBADJ;gBAEE,cAAc;kBAAA;kBAAA;gBAAA;kBAAA;kBAAA;gBAAA,EAFhB;gBAGE,MAAM,EAAE;kBAAEliB,IAAI,eAAE,oBAAC,yBAAD;oBAAY,EAAE,EAAE5E,6BAAhB;oBAAgC,UAAU,EAAEstB;kBAA5C;gBAAR;cAHV,EAdJ,EAoBG6C,sBAAsB,iBACrB,qBAAC,cAAD;gBAAA,gCAEE,oBAAC,iCAAD;kBACE,EAAE,iCADJ;kBAEE,cAAc;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;kBAAA;oBAAA;oBAAA;kBAAA,EAFhB;kBAGE,MAAM,EAAE;oBACNS,QAAQ,eAAE,oBAAC,0BAAD;sBAAa,IAAI,EAAEjkC,4CAAnB;sBAAoC,aAAa,EAAC;oBAAlD,EADJ;oBAENoF,UAAU,eAAE,oBAAC,yBAAD;sBAAY,EAAE,EAAEiO,6BAAhB;sBAAgC,UAAU,EAAEmwB;oBAA5C;kBAFN;gBAHV,EAFF;cAAA,EArBJ,EAiCGT,cAjCH,eAkCE,oBAAC,uBAAD;gBAAU,KAAK,EAAElnB,SAAjB;gBAA4B,WAAQ;cAApC,EAlCF,EAmCGonB,SAAS,IAAI,CAAA5zB,OAAO,SAAP,IAAAA,OAAO,WAAP,iCAAAA,OAAO,CAAE60B,QAAT,wEAAmBtX,UAAnB,IAAgC,CAA7C,iBACC,qBAAC,cAAD;gBAAA,WACGmW,cADH,eAEE;kBAAA,wBACE,oBAAC,sCAAD;oBAAe,IAAI,EAAC;kBAApB,EADF,UAGG1zB,OAAO,CAAC60B,QAAR,CAAiBtX,UAHpB;gBAAA,EAFF;cAAA,EApCJ;YAAA,EA3BF;UAAA,EANF;QAAA,EADF,eAkFE,qBAAC,iBAAD;UAAM,aAAa,EAAE,CAAC,KAAD,EAAQ,QAAR,CAArB;UAAwC,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAA5C;UAAoD,QAAQ,EAAC,MAA7D;UAAoE,UAAU,EAAE,CAAC,QAAD,EAAW,UAAX,CAAhF;UAAA,wBACE,qBAAC,wBAAD;YACE,OAAO,EAAC,MADV;YAEE,EAAE,EAAE,CAFN;YAGE,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAHN;YAIE,QAAQ,EAAE,GAJZ;YAKE,cAAc,EAAC,UALjB;YAME,WAAQ,oBANV;YAOE,QAAQ,EAAC,MAPX;YAQE,EAAE,EAAC,MARL;YAAA,wBAUE,oBAAC,8BAAD;cAAiB,QAAQ,EAAEnc;YAA3B,EAVF,eAWE,oBAAC,iBAAD;cAAM,UAAU,EAAC,MAAjB;cAAwB,KAAK,EAAC,WAA9B;cAA0C,EAAE,EAAE,CAA9C;cAAA,UACG+L,yCAAc,CAACvgB,IAAI,CAACiiB,GAAL,CAAS4lB,eAAe,CAAC/nC,YAAzB,CAAD,EAAyC+nC,eAAe,CAAChoC,QAAzD,EAAmE;gBAChFmhB,MAAM,EAAE7hB,IAAI,CAAC6hB;cADmE,CAAnE;YADjB,EAXF,eAgBE,oBAAC,iBAAD;cAAM,KAAK,EAAC,WAAZ;cAAwB,aAAa,EAAC,WAAtC;cAAA,UACG6mB,eAAe,CAAChoC;YADnB,EAhBF;UAAA,EADF,EAqBG6lC,QAAQ,iBACP,oBAAC,+BAAD;YACE,WAAW,EAAEjhB,WADf;YAEE,QAAQ,EAAC,MAFX;YAGE,UAAU,EAAC,MAHb;YAIE,UAAU,EAAC,MAJb;YAKE,aAAa,EAAC,QALhB;YAME,EAAE,EAAC,KANL;YAOE,EAAE,EAAC;UAPL,EAtBJ,EA+BK,GA/BL,EAgCGuiB,SAAS,IAAIK,mBAAmB,CAACj0B,OAAD,EAAU4uB,QAAV,EAAoBE,UAApB,CAhCnC;QAAA,EAlFF;MAAA,EADF,EAsHGwD,QAAQ,IAAI,CAACa,YAAD,EAAeD,WAAf,EAA4BO,YAA5B,EAA0CtnB,QAA1C,CAAmDkF,WAAW,CAACX,IAA/D,CAAZ,iBACC,qBAAC,wBAAD;QAAW,SAAS,EAAE,CAAC,mBAAD,EAAsB,MAAtB,CAAtB;QAAqD,EAAE,EAAE,CAAzD;QAA4D,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAhE;QAAA,wBACE,qBAAC,OAAD;UAAA,WACG6iB,gDAAmB,CAACxnC,IAAD,EAAOslB,WAAW,CAACX,IAAnB,CADtB,EAEGxb,OAAO,CAAC+K,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAE7J,QAAR,CAAP,gBAAiC6J,KAAK,CAAC7J,QAAvC,CAFH;QAAA,EADF,EAKG,CAAC,CAAC09B,qBAAD,IAA0BziB,WAAW,CAAC8Q,aAAvC,KAAyDuS,sBAAsB,EALlF;MAAA,EAvHJ,EA+HGd,SAAS,iBACR,qBAAC,wBAAD;QAAW,OAAO,EAAC,MAAnB;QAA0B,EAAE,EAAE,CAA9B;QAAiC,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAArC;QAAA,wBACE,oBAAC,mBAAD;UAAM,OAAO,EAAE5zB;QAAf,EADF,EAEG00B,sBAAsB,EAFzB;MAAA,EAhIJ,EAqIG,CAACd,SAAD,KAAe,CAACtB,QAAD,IAAa,CAAC,CAACa,YAAD,EAAeD,WAAf,EAA4BO,YAA5B,EAA0CtnB,QAA1C,CAAmDkF,WAAW,CAACX,IAA/D,CAA7B,kBACC,oBAAC,wBAAD;QAAW,EAAE,EAAE,CAAf;QAAkB,EAAE,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAtB;QAAA,uBACE,oBAAC,OAAD;UAAA,UAAU6iB,gDAAmB,CAACxnC,IAAD,EAAOslB,WAAW,CAACX,IAAnB;QAA7B;MADF,EAtIJ;IAAA,EADF,EA4IGgT,UAAU,KAAK4O,QAAQ,IAAIsB,SAAjB,CAAV,iBACC,oBAAC,+BAAD;MACE,cAAc,EAAE/B,cADlB;MAEE,WAAW,EAAExgB,WAFf;MAGE,iBAAiB,EAAEwe;IAHrB,EA7IJ;EAAA,EADF;AAsJD,CAlND;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgSA,iEAAe/f,eAAf;;;;;GAzMoC;EAAEzO,aAAa,EAAE;AAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChPpC;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;CAGA;;;;AACO,IAAMuO,eAAe,GAAG,SAAlBA,eAAkB,GAAM;EACnC,OAAO,CACLL,0GADK,EAELA,oHAFK,EAGLA,4GAHK,EAILA,kGAJK,EAKLA,4GALK,CAAP;AAOD,CARM;;AAUP,IAAM0lB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAhJ,OAAO,EAAI;EACtC,IAAI,CAACA,OAAD,IAAYA,OAAO,CAAC5+B,MAAR,KAAmB,mDAAKkiB,kFAAL,CAAnC,EAA0D;IACxD,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OAAO,CAAC0c,OAAD,GAAW,IAAX,GAAkBA,OAAO,CAACl+B,GAAR,CAAY;MAAA,IAAG/B,KAAH,QAAGA,KAAH;MAAA,OAAeA,KAAf;IAAA,CAAZ,EAAkCiV,IAAlC,CAAuC,GAAvC,CAAzB;EACD;AACF,CAND;;AAQO,IAAMi0B,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,GAAG,EAAI;EAC1C,IAAIA,GAAG,KAAK,KAAZ,EAAmB;IACjB,OAAOje,MAAM,CAACjhB,MAAP,CAAcsZ,kFAAd,CAAP;EACD;;EAED,IAAM5hB,MAAM,GAAGwnC,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEtc,KAAL,CAAW,GAAX,CAAf;;EACA,IAAI,EAAClrB,MAAD,aAACA,MAAD,eAACA,MAAM,CAAEN,MAAT,KAAmBM,MAAM,CAACN,MAAP,KAAkB,mDAAKkiB,kFAAL,CAAzC,EAAgE;IAC9D,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OAAO5hB,MAAM,SAAN,IAAAA,MAAM,WAAN,IAAAA,MAAM,CAAEN,MAAR,GAAiBM,MAAjB,GAA0B,IAAjC;EACD;AACF,CAXM;AAaP,IAAMynC,kBAAkB,GAAGjqC,wEAAM,CAAC4B,iDAAD,CAAN,CAAa4K,KAAb,CAAmB;EAC5C09B,gBAAgB,EAAE,IAD0B;EAE5CC,EAAE,EAAE,CAFwC;EAG5CpmB,QAAQ,EAAE,CAAC,qBAAD,EAAwB,MAAxB,EAAgC,OAAhC,EAAyC,OAAzC;AAHkC,CAAnB,CAAH;EAAA;EAAA;AAAA,iDAOpBA,6DAPoB,CAAxB;;AAUA,IAAMqmB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAA1lC,KAAK,EAAI;EACvC,IAAQ2lC,WAAR,GAAkC3lC,KAAlC,CAAQ2lC,WAAR;EAAA,IAAqBtnC,QAArB,GAAkC2B,KAAlC,CAAqB3B,QAArB;EACA,IAAMunC,SAAS,GAAG,CAACD,WAAW,CAACxpC,KAAZ,IAAqB,EAAtB,EAA0B+B,GAA1B,CAA8B;IAAA,IAAGiO,KAAH,SAAGA,KAAH;IAAA,OAAeA,KAAf;EAAA,CAA9B,CAAlB;EACA,IAAM05B,YAAY,GAAGD,SAAS,CAACx0B,IAAV,CAAe,IAAf,CAArB;EAEA,oBACE,yDAAC,4DAAD,kCAA2CpR,KAA3C;IAAA,wBACE,wDAAC,kBAAD;MAAoB,KAAK,EAAE6lC,YAA3B;MAAA,UAA0CA;IAA1C,EADF,EAEGxnC,QAFH;EAAA,GADF;AAMD,CAXD;;AAkBA,IAAMynC,+BAA+B,GAAG;EACtCC,cAAc,EAAEL,uBADsB;EAEtCM,UAAU,EAAE;IAAA,OAAM,IAAN;EAAA,CAF0B,CAEd;;AAFc,CAAxC;;AAKA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,QAA0C;EAAA,IAAvCp9B,SAAuC,SAAvCA,QAAuC;EAAA,IAA7B1M,KAA6B,SAA7BA,KAA6B;EAAA,IAAtB+pC,KAAsB,SAAtBA,KAAsB;EAAA,IAAZlmC,KAAY;;EACvE,IAAM9D,IAAI,GAAGb,gEAAO,EAApB;;EACA,IAAM8qC,SAAS,GAAG,SAAZA,SAAY,CAAChqC,KAAD,EAAQkmB,GAAR;IAAA,OAAiB;MAAElW,KAAK,EAAEu3B,oFAAmB,CAACxnC,IAAD,EAAOC,KAAP,CAA5B;MAA2CA,KAAK,EAALA,KAA3C;MAAkDkmB,GAAG,EAAHA;IAAlD,CAAjB;EAAA,CAAlB;;EACA,IAAM+jB,cAAc,GAAGF,KAAK,IAAIA,KAAK,CAAC1oC,MAAf,GAAwB0oC,KAAxB,GAAgCnmB,eAAe,EAAtE;EACA,IAAMqc,OAAO,GAAGgK,cAAc,CAACloC,GAAf,CAAmBioC,SAAnB,CAAhB;EACA,IAAME,eAAe,GAAGnrC,0CAAA,CACtB;IAAA,OAAM,CAAC,CAACiB,KAAD,GAAS,2DAAa4jB,eAAe,EAA5B,EAAgCqmB,cAAhC,CAAT,GAA2Df,qBAAqB,CAAClpC,KAAD,CAAjF,EAA0F+B,GAA1F,CAA8FioC,SAA9F,CAAN;EAAA,CADsB,EAEtB,CAAChqC,KAAD,CAFsB,CAAxB;EAIA,oBACE,wDAAC,4EAAD;IACE,YAAY,EAAE,KADhB;IAEE,WAAW,EAAE,KAFf;IAGE,QAAQ,EAAE,kBAAAigC,OAAO;MAAA,OAAIvzB,SAAQ,CAACu8B,oBAAoB,CAAChJ,OAAD,CAArB,CAAZ;IAAA,CAHnB;IAIE,KAAK,EAAEiK,eAJT;IAKE,OAAO,EAAEjK,OALX;IAME,UAAU,EAAE0J,+BANd;IAOE,iBAAiB,EAAE,KAPrB;IAQE,mBAAmB,EAAE,KARvB;IASE,OAAO,MATT;IAUE,QAAQ,EAAE,CAAC,MAAD,EAAS,GAAT,EAAc,GAAd,CAVZ;IAWE,QAAQ,EAAE;EAXZ,GAYM9lC,KAZN,EADF;AAgBD,CAzBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,0DAAeimC,sBAAf;;;;;;;;;;;;;;;;;AChHA;AAEO,IAAMjmB,mCAAmC,GAAGzc,oEAAH,szGAAzC;;;;;;;ACFP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,yDAAe;EACb+iC,KAAK,EAAE,OADM;EAEbzc,OAAO,EAAE,SAFI;EAGb/T,QAAQ,EAAE,UAHG;EAIbsG,QAAQ,EAAE,UAJG;EAKb8iB,UAAU,EAAE,YALC;EAMb3uB,KAAK,EAAE,OANM;EAOb8L,IAAI,EAAE,MAPO;EAQb0N,qBAAqB,EAAE,uBARV;EASbH,IAAI,EAAE,MATO;EAUbE,UAAU,EAAE,YAVC;EAWbyc,UAAU,EAAE;AAXC,CAAf;;;;;;;ACtBA,yDAAe;EACbzqB,MAAM,EAAE,QADK;EAEb5C,OAAO,EAAE,SAFI;EAGbstB,OAAO,EAAE,SAHI;EAIbnO,KAAK,EAAE,OAJM;EAKb5O,UAAU,EAAE,YALC;EAMbgd,YAAY,EAAE;AAND,CAAf;;;;;;;;;;;;;ACAO,IAAMrb,gBAAgB,GAAG;EAC9BmB,eAAe,EAAE,iBADa;EAE9BX,YAAY,EAAE,cAFgB;EAG9B9vB,MAAM,EAAE,QAHsB;EAI9B4qC,WAAW,EAAE,aAJiB;EAK9B/a,KAAK,EAAE;AALuB,CAAzB,EAQP;;AACO,IAAMU,MAAM,GAAG,QAAf,EAEP;;AACO,IAAMC,YAAY,GAAG,cAArB,EAEP;;AACO,IAAMqa,kCAAkC,iXAAxC;;;;;;;;;;ACfP;AACA;AACA;AACA;AACO,IAAMhnB,WAAW,GAAG0H,MAAM,CAAC4I,MAAP,CAAc,EAAd,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHP;AAEA;AAEA,IAAQkI,YAAR,GAAyB9a,sGAAzB;AAEO,IAAMwpB,iBAAiB,GAAGD,gEAAU,CAAC,UAAAE,eAAe,EAAI;EAC7D,IAAI,CAACA,eAAL,EAAsB;IACpB,OAAO,EAAP;EACD,CAFD,MAEO;IACL,IAAMC,cAAc,GAAG,CAACD,eAAD,CAAvB;;IADK,2CAEoB,kDAAIA,eAAJ,EAAqB,wBAArB,EAA+C,EAA/C,CAFpB;IAAA;;IAAA;MAEL,oDAA6E;QAAA,IAAlEE,UAAkE;;QAC3E,KACE;QACA,CAAC7O,YAAD,EAAe7b,QAAf,CAAwB0qB,UAAU,CAAC1gC,OAAX,CAAmBvD,IAA3C,KACA;QACAikC,UAAU,CAAC1gC,OAAX,CAAmBue,QAJrB,EAKE;UACA;UACAkiB,cAAc,CAACjJ,IAAf,CAAoB,mDAAKkJ,UAAU,CAAC1gC,OAAhB,EAAyB,CAAC,kBAAD,CAAzB,CAApB,EAFA,CAGA;;UAHA,4CAI8B0gC,UAAU,CAAC1gC,OAAX,CAAmB2gC,gBAAnB,CAAoCxiB,KAJlE;UAAA;;UAAA;YAIA,uDAAyE;cAAA,IAA9DyiB,eAA8D;;cACvE,IAAIA,eAAe,CAACriB,QAApB,EAA8B;gBAC5BkiB,cAAc,CAACjJ,IAAf;kBAAsBx4B,IAAI,EAAE0hC,UAAU,CAAC1gC,OAAX,CAAmBhB;gBAA/C,GAAwD4hC,eAAxD;cACD;YACF;UARD;YAAA;UAAA;YAAA;UAAA;QASD;MACF;IAlBI;MAAA;IAAA;MAAA;IAAA;;IAmBL,OAAOH,cAAP;EACD;AACF,CAxB0C,CAApC;AA0BA,IAAMI,+BAA+B,GAAG;EAAE9O,KAAK,EAAE,KAAT;EAAgBnf,OAAO,EAAE,IAAzB;EAA+BstB,OAAO,EAAE;AAAxC,CAAxC;AAEA,IAAMY,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAA9gC,OAAO,EAAI;EACjD,IAAI,CAACA,OAAL,EAAc;IACZ,OAAO,EAAP;EACD;;EAED,IAAMhB,IAAI,GAAGgB,OAAO,CAAChB,IAArB;EACA,IAAMo8B,MAAM,GAAGp7B,OAAO,CAACo7B,MAAR,IAAkBp7B,OAAO,CAAC+gC,gBAAzC;;EACA,IAAI/gC,OAAO,CAACghC,qBAAR,IAAiC5F,MAAjC,aAAiCA,MAAjC,eAAiCA,MAAM,CAAE4F,qBAA7C,EAAoE;IAClE;IACA,OAAOhhC,OAAO,CAACghC,qBAAR,IAAiC5F,MAAM,CAAC4F,qBAA/C;EACD,CAHD,MAGO;IACL;IACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAjhC,OAAO;MAAA;;MAAA,OAAI,qDAAOA,OAAP,aAAOA,OAAP,4CAAOA,OAAO,CAAEf,QAAhB,sDAAO,kBAAmBiT,YAA1B,yDAAJ;IAAA,CAA/B;;IACA,IAAMgvB,mBAAmB,GAAGL,+BAA5B;;IACA,IAAMM,gBAAgB,GAAG,mEAAMD,mBAAN,mLAA8B,CAACliC,IAAD,EAAOo8B,MAAP,EAAep7B,OAAf,EAAwBpI,GAAxB,CAA4BqpC,eAA5B,CAA9B,GAAzB;;IACA,OAAOlgB,MAAM,CAACtQ,IAAP,CAAY0wB,gBAAZ,EAA8B/+B,MAA9B,CAAqC,UAAA0F,GAAG;MAAA,OAAIq5B,gBAAgB,CAACr5B,GAAD,CAApB;IAAA,CAAxC,CAAP,CALK,CAKsE;EAC5E;AACF,CAjBM;AAmBP;AACA;AACA;;AACO,IAAMs5B,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACphC,OAAD,EAAUqhC,WAAV,EAA0B;EAC9D,IAAMC,cAAc,GAAGR,wBAAwB,CAAC9gC,OAAD,CAA/C;EACA,OAAOshC,cAAc,CAACtrB,QAAf,CAAwBqrB,WAAxB,CAAP;AACD,CAHM;;;;;;;;;;;;;;;;;;;;;;;ACzDP;AACA;AAEA;AAEA;AAEO,IAAM3G,YAAY,GAAG,SAAfA,YAAe,CAAC8G,EAAD,EAAwC;EAAA,+EAAP,EAAO;EAAA,8BAAjC7F,aAAiC;EAAA,IAAjCA,aAAiC,mCAAjB,KAAiB;;EAClE,sBAA8B/mC,2CAAA,CAAe,KAAf,CAA9B;EAAA;EAAA,IAAO4K,OAAP;EAAA,IAAgBiS,UAAhB;;EACA,uBAAwB7c,2CAAA,EAAxB;EAAA;EAAA,IAAO+mB,IAAP;EAAA,IAAa8lB,OAAb;;EACA,uBAA0B7sC,2CAAA,EAA1B;EAAA;EAAA,IAAO8K,KAAP;EAAA,IAAcwjB,QAAd;;EACA,iBAAqB7kB,8EAAS,EAA9B;EAAA,IAAQe,QAAR,cAAQA,QAAR;;EACA,IAAMxJ,IAAI,GAAGb,+DAAO,EAApB;;EAEA,IAAM+mC,QAAQ,GACZ,SADIA,QACJ;IAAA,kCAAI4F,IAAJ;MAAIA,IAAJ;IAAA;;IAAA,kXACA;MAAA;MAAA;QAAA;UAAA;YAAA;cACEjwB,UAAU,CAAC,IAAD,CAAV;cACAyR,QAAQ;cACRue,OAAO;cAHT;cAAA;cAAA,OAK2BD,EAAE,MAAF,SAAME,IAAN,CAL3B;;YAAA;cAKUhR,QALV;cAMI+Q,OAAO,CAAC/Q,QAAD,CAAP;cANJ;cAAA;;YAAA;cAAA;cAAA;cAQIxN,QAAQ,aAAR,CARJ,CASI;;cACAye,OAAO,CAACjiC,KAAR;;cACA,IAAIi8B,aAAJ,EAAmB;gBACjBv8B,QAAQ,CAAC;kBAAE3C,IAAI,EAAE2B,0FAAR;kBAA0BgC,OAAO,EAAEmhC,qEAAkB,CAAC3rC,IAAD;gBAArD,CAAD,CAAR;cACD;;YAbL;cAAA;cAeI6b,UAAU,CAAC,KAAD,CAAV;cAfJ;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CADA;EAAA,CADF;;EAqBA,IAAMmwB,IAAI,GAAG,SAAPA,IAAO;IAAA,OAAa9F,QAAQ,MAAR,qBAAb;EAAA,CAAb;;EAEA,OAAO;IAAEt8B,OAAO,EAAPA,OAAF;IAAWoiC,IAAI,EAAJA,IAAX;IAAiB9F,QAAQ,EAARA,QAAjB;IAA2BngB,IAAI,EAAJA,IAA3B;IAAiCjc,KAAK,EAALA;EAAjC,CAAP;AACD,CA/BM;;;;;;;;;;;;;;;ACPP;AAEA;AAEA,IAAMoiC,aAAa,GAAG7nC,0DAAc,gNACjC4nC,2IADiC,EACK;EACrC1mC,EAAE,qCADmC;EAErCnC,cAAc;IAAA;IAAA;EAAA;AAFuB,CADL,2LAKjC6oC,iIALiC,EAKA;EAChC1mC,EAAE,wBAD8B;EAEhCnC,cAAc;IAAA;IAAA;EAAA;AAFkB,CALA,2LASjC6oC,uGATiC,EASb;EACnB1mC,EAAE,WADiB;EAEnBnC,cAAc;IAAA;IAAA;EAAA;AAFK,CATa,2LAajC6oC,iGAbiC,EAahB;EAChB1mC,EAAE,SADc;EAEhBnC,cAAc;IAAA;IAAA;EAAA;AAFE,CAbgB,2LAiBjC6oC,qGAjBiC,EAiBd;EAClB1mC,EAAE,WADgB;EAElBnC,cAAc;IAAA;IAAA;EAAA;AAFI,CAjBc,2LAqBjC6oC,iHArBiC,EAqBR;EACxB1mC,EAAE,iBADsB;EAExBnC,cAAc;IAAA;IAAA;EAAA;AAFU,CArBQ,2LAyBjC6oC,qIAzBiC,EAyBE;EAClC1mC,EAAE,2BADgC;EAElCnC,cAAc;IAAA;IAAA;EAAA;AAFoB,CAzBF,2LA6BjC6oC,qGA7BiC,EA6Bd;EAClB1mC,EAAE,yBADgB;EAElBnC,cAAc;IAAA;IAAA;EAAA;AAFI,CA7Bc,2LAiCjC6oC,uGAjCiC,EAiCb;EACnB1mC,EAAE,yBADiB;EAEnBnC,cAAc;IAAA;IAAA;EAAA;AAFK,CAjCa,2LAsCjC6oC,2GAtCiC,EAsCX;EACrB1mC,EAAE,cADmB;EAErBnC,cAAc;IAAA;IAAA;EAAA;AAFO,CAtCW,2LA0CjC6oC,iHA1CiC,EA0CR;EACxB1mC,EAAE,iBADsB;EAExBnC,cAAc;IAAA;IAAA;EAAA;AAFU,CA1CQ,2LA+CjC6oC,mGA/CiC,EA+Cf;EACjB1mC,EAAE,UADe;EAEjBnC,cAAc;IAAA;IAAA;EAAA;AAFG,CA/Ce,2LAmDjC6oC,uGAnDiC,EAmDb;EACnB1mC,EAAE,YADiB;EAEnBnC,cAAc;IAAA;IAAA;EAAA;AAFK,CAnDa,2LAwDjC6oC,+GAxDiC,EAwDT;EACvB1mC,EAAE,qBADqB;EAEvBnC,cAAc;IAAA;IAAA;EAAA;AAFS,CAxDS,2LA4DjC6oC,mGA5DiC,EA4Df;EACjB1mC,EAAE,wBADe;EAEjBnC,cAAc;IAAA;IAAA;EAAA;AAFG,CA5De,2LAgEjC6oC,2HAhEiC,EAgEH;EAC7B1mC,EAAE,mCAD2B;EAE7BnC,cAAc;IAAA;IAAA;EAAA;AAFe,CAhEG,2LAoEjC6oC,uGApEiC,EAoEb;EACnB1mC,EAAE,YADiB;EAEnBnC,cAAc;IAAA;IAAA;EAAA;AAFK,CApEa,2LAyEjC6oC,+GAzEiC,EAyET;EACvB1mC,EAAE,8BADqB;EAEvBnC,cAAc;IAAA;IAAA;EAAA;AAFS,CAzES,2LA6EjC6oC,+GA7EiC,EA6ET;EACvB1mC,EAAE,sCADqB;EAEvBnC,cAAc;IAAA;IAAA;EAAA;AAFS,CA7ES,2LAkFjC6oC,iGAlFiC,EAkFhB;EAChB1mC,EAAE,0BADc;EAEhBnC,cAAc;IAAA;IAAA;EAAA;AAFE,CAlFgB,oBAApC;;AAwFA,IAAMmqC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACvtC,IAAD,EAAOwtC,OAAP,EAAmB;EACnD,OAAOtB,aAAa,CAACsB,OAAD,CAAb,GAAyBxtC,IAAI,CAACsD,aAAL,CAAmB4oC,aAAa,CAACsB,OAAD,CAAhC,CAAzB,GAAsEA,OAA7E;AACD,CAFD;;AAIA,yDAAeD,yBAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGA;AACA;AAEA;AACA;;AAEA,IAAMG,SAAS,GAAGrpC,0DAAc;EAC9B0zB,GAAG,EAAE;IACHxyB,EAAE,eADC;IAEHnC,cAAc;MAAA;MAAA;IAAA;EAFX;AADyB,2LAK7BqqC,wFAL6B,EAKN;EACtBloC,EAAE,wBADoB;EAEtBnC,cAAc;IAAA;IAAA;EAAA;AAFQ,CALM,2LAS7BqqC,wFAT6B,EASN;EACtBloC,EAAE,4BADoB;EAEtBnC,cAAc;IAAA;IAAA;EAAA;AAFQ,CATM,2LAa7BqqC,oFAb6B,EAaR;EACpBloC,EAAE,+BADkB;EAEpBnC,cAAc;IAAA;IAAA;EAAA;AAFM,CAbQ,2LAiB7BqqC,kGAjB6B,EAiBD;EAC3BloC,EAAE,6BADyB;EAE3BnC,cAAc;IAAA;IAAA;EAAA;AAFa,CAjBC,2LAqB7BqqC,sFArB6B,EAqBP;EACrBloC,EAAE,uBADmB;EAErBnC,cAAc;IAAA;IAAA;EAAA;AAFO,CArBO,2LAyB7BqqC,8FAzB6B,EAyBH;EACzBloC,EAAE,2BADuB;EAEzBnC,cAAc;IAAA;IAAA;EAAA;AAFW,CAzBG,oBAAhC;AA+BA,IAAMuqC,UAAU,GAAGtpC,0DAAc;EAC/B0zB,GAAG,EAAE;IACHxyB,EAAE,qBADC;IAEHnC,cAAc;MAAA;MAAA;IAAA;EAFX;AAD0B,4LAK9BqV,sFAL8B,EAKR;EACrBlT,EAAE,iBADmB;EAErBnC,cAAc;IAAA;IAAA;EAAA;AAFO,CALQ,4LAS9BqV,0FAT8B,EASN;EACvBlT,EAAE,mBADqB;EAEvBnC,cAAc;IAAA;IAAA;EAAA;AAFS,CATM,4LAa9BqV,4FAb8B,EAaL;EACxBlT,EAAE,oBADsB;EAExBnC,cAAc;IAAA;IAAA;EAAA;AAFU,CAbK,4LAiB9BqV,4FAjB8B,EAiBL;EACxBlT,EAAE,oBADsB;EAExBnC,cAAc;IAAA;IAAA;EAAA;AAFU,CAjBK,4LAqB9BqV,oFArB8B,EAqBT;EACpBlT,EAAE,gBADkB;EAEpBnC,cAAc;IAAA;IAAA;EAAA;AAFM,CArBS,4LAyB9BqV,gGAzB8B,EAyBH;EAC1BlT,EAAE,cADwB;EAE1BnC,cAAc;IAAA;IAAA;EAAA;AAFY,CAzBG,4LA6B9BqV,sFA7B8B,EA6BR;EACrBlT,EAAE,SADmB;EAErBnC,cAAc;IAAA;IAAA;EAAA;AAFO,CA7BQ,4LAiC9BqV,sHAjC8B,EAiCQ;EACrClT,EAAE,+BADmC;EAErCnC,cAAc;IAAA;IAAA;EAAA;AAFuB,CAjCR,4LAqC9BqV,gGArC8B,EAqCH;EAC1BlT,EAAE,mBADwB;EAE1BnC,cAAc;IAAA;IAAA;EAAA;AAFY,CArCG,4MAyCjB;EACZmC,EAAE,kBADU;EAEZnC,cAAc;IAAA;IAAA;EAAA;AAFF,CAzCiB,yMA6CpB;EACTmC,EAAE,qBADO;EAETnC,cAAc;IAAA;IAAA;EAAA;AAFL,CA7CoB,wMAiDrB;EACRmC,EAAE,2BADM;EAERnC,cAAc;IAAA;IAAA;EAAA;AAFN,CAjDqB,4LAqD9BqV,gGArD8B,EAqDH;EAAA;EAC1BrV,cAAc;IAAA;IAAA;EAAA;AADY,CArDG,qBAAjC;AA0DA;AACA;AACA;;AACO,IAAM+qB,eAAe,GAAG,SAAlBA,eAAkB,CAACnuB,IAAD,EAAO6G,IAAP,EAAatB,EAAb,EAAoB;EACjD,IAAIqoC,aAAa,GAAGF,SAAS,CAAC7mC,IAAD,CAAT,GAAkB7G,IAAI,CAACsD,aAAL,CAAmBoqC,SAAS,CAAC7mC,IAAD,CAA5B,CAAlB,GAAwDA,IAA5E;;EACA,IAAItB,EAAJ,EAAQ;IACNqoC,aAAa,aAAMA,aAAN,eAAwBroC,EAAxB,CAAb;EACD;;EACD,OAAOqoC,aAAP;AACD,CANM;AAQP;AACA;AACA;;AACO,IAAMl1B,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC1Y,IAAD,EAAO2Z,MAAP,EAAkB;EACjD,OAAOg0B,UAAU,CAACh0B,MAAD,CAAV,GAAqB3Z,IAAI,CAACsD,aAAL,CAAmBqqC,UAAU,CAACh0B,MAAD,CAA7B,CAArB,GAA8DA,MAArE;AACD,CAFM;AAIA,IAAMk0B,yBAAyB,GAAG;EACvCC,IAAI,eAAE,uDAAC,2DAAD;IAAkB,EAAE,QAApB;IAA4B,cAAc;MAAA;MAAA;IAAA;EAA1C,EADiC;EAEvCC,KAAK,eAAE,uDAAC,2DAAD;IAAkB,EAAE,qBAApB;IAAyC,cAAc;MAAA;MAAA;IAAA;EAAvD,EAFgC;EAGvCC,OAAO,eAAE,uDAAC,2DAAD;IAAkB,EAAE,WAApB;IAA+B,cAAc;MAAA;MAAA;IAAA;EAA7C,EAH8B;EAIvCC,IAAI,eAAE,uDAAC,2DAAD;IAAkB,EAAE,oBAApB;IAAwC,cAAc;MAAA;MAAA;IAAA;EAAtD;AAJiC,CAAlC;AAOA,IAAMC,wBAAwB,GAAG/iB,MAAM,CAACtQ,IAAP,CAAYgzB,yBAAZ,EAAuCve,MAAvC,CACtC,UAACplB,MAAD,EAASgI,GAAT;EAAA,2LAAqBhI,MAArB,IAA6B;IAAEjK,KAAK,EAAEiS,GAAT;IAAcjC,KAAK,EAAE49B,yBAAyB,CAAC37B,GAAD;EAA9C,CAA7B;AAAA,CADsC,EAEtC,EAFsC,CAAjC;;;;;;;;;;;;;;;ACxHP;AAEA;AAEA,IAAMi8B,QAAQ,GAAG9pC,0DAAc;EAC7B0zB,GAAG,EAAE;IACHxyB,EAAE,cADC;IAEHnC,cAAc;MAAA;MAAA;IAAA;EAFX;AADwB,2LAK5Bs/B,8FAL4B,EAKH;EACxBn9B,EAAE,2BADsB;EAExBnC,cAAc;IAAA;IAAA;EAAA;AAFU,CALG,2LAS5Bs/B,4FAT4B,EASJ;EACvBn9B,EAAE,kBADqB;EAEvBnC,cAAc;IAAA;IAAA;EAAA;AAFS,CATI,2LAa5Bs/B,sFAb4B,EAaP;EACpBn9B,EAAE,SADkB;EAEpBnC,cAAc;IAAA;IAAA;EAAA;AAFM,CAbO,2LAiB5Bs/B,0FAjB4B,EAiBL;EACtBn9B,EAAE,iBADoB;EAEtBnC,cAAc;IAAA;IAAA;EAAA;AAFQ,CAjBK,2LAqB5Bs/B,8FArB4B,EAqBH;EACxBn9B,EAAE,mBADsB;EAExBnC,cAAc;IAAA;IAAA;EAAA;AAFU,CArBG,2LAyB5Bs/B,0FAzB4B,EAyBL;EACtBn9B,EAAE,iBADoB;EAEtBnC,cAAc;IAAA;IAAA;EAAA;AAFQ,CAzBK,2LA6B5Bs/B,kFA7B4B,EA6BT;EAClBn9B,EAAE,aADgB;EAElBnC,cAAc;IAAA;IAAA;EAAA;AAFI,CA7BS,2LAiC5Bs/B,kIAjC4B,EAiCe;EAC1Cn9B,EAAE,qCADwC;EAE1CnC,cAAc;IAAA;IAAA;EAAA;AAF4B,CAjCf,2LAqC5Bs/B,0FArC4B,EAqCL;EACtBn9B,EAAE,iBADoB;EAEtBnC,cAAc;IAAA;IAAA;EAAA;AAFQ,CArCK,2LAyC5Bs/B,wFAzC4B,EAyCN;EACrBn9B,EAAE,wBADmB;EAErBnC,cAAc;IAAA;IAAA;EAAA;AAFO,CAzCM,2LA6C5Bs/B,4FA7C4B,EA6CJ;EACvBn9B,EAAE,yBADqB;EAEvBnC,cAAc;IAAA;IAAA;EAAA;AAFS,CA7CI,2LAiD5Bs/B,4FAjD4B,EAiDJ;EACvBn9B,EAAE,kBADqB;EAEvBnC,cAAc;IAAA;IAAA;EAAA;AAFS,CAjDI,2LAqD5Bs/B,oFArD4B,EAqDR;EACnBn9B,EAAE,cADiB;EAEnBnC,cAAc;IAAA;IAAA;EAAA;AAFK,CArDQ,2LAyD5Bs/B,gGAzD4B,EAyDF;EACzBn9B,EAAE,cADuB;EAEzBnC,cAAc;IAAA;IAAA;EAAA;AAFW,CAzDE,oBAA/B;;AA+DA,IAAMu/B,eAAe,GAAG,SAAlBA,eAAkB,CAAC3iC,IAAD,EAAO2Z,MAAP,EAAkB;EACxC,IAAMk1B,OAAO,GAAGV,QAAQ,CAACx0B,MAAD,CAAxB;EACA,OAAOk1B,OAAO,GAAG7uC,IAAI,CAACsD,aAAL,CAAmBurC,OAAnB,CAAH,GAAiCl1B,MAA/C;AACD,CAHD;;AAKA,yDAAegpB,eAAf;;;;;;;;;;;;;;ACxEA;AAEA,IAAM+K,SAAS,GAAGrpC,0DAAc,CAAC;EAC/B0zB,GAAG,EAAE;IACHxyB,EAAE,sBADC;IAEHnC,cAAc;MAAA;MAAA;IAAA;EAFX,CADyB;EAK9B0rC,QAAQ,EAAE;IAAA;IACR1rC,cAAc;MAAA;MAAA;IAAA;EADN,CALoB;EAQ9B2D,QAAQ,EAAE;IACRxB,EAAE,YADM;IAERnC,cAAc;MAAA;MAAA;IAAA;EAFN,CARoB;EAY9B4D,UAAU,EAAE;IACVzB,EAAE,cADQ;IAEVnC,cAAc;MAAA;MAAA;IAAA;EAFJ,CAZkB;EAgB9B2rC,OAAO,EAAE;IACPxpC,EAAE,WADK;IAEPnC,cAAc;MAAA;MAAA;IAAA;EAFP,CAhBqB;EAoB9B+zB,UAAU,EAAE;IACV5xB,EAAE,yBADQ;IAEVnC,cAAc;MAAA;MAAA;IAAA;EAFJ,CApBkB;EAwB9B4rC,IAAI,EAAE;IACJzpC,EAAE,QADE;IAEJnC,cAAc;MAAA;MAAA;IAAA;EAFV,CAxBwB;EA4B9B6rC,MAAM,EAAE;IACN1pC,EAAE,UADI;IAENnC,cAAc;MAAA;MAAA;IAAA;EAFR,CA5BsB;EAgC9B8rC,MAAM,EAAE;IACN3pC,EAAE,UADI;IAENnC,cAAc;MAAA;MAAA;IAAA;EAFR,CAhCsB;EAoC9B8D,OAAO,EAAE;IAAA;IACP9D,cAAc;MAAA;MAAA;IAAA;EADP,CApCqB;EAuC9B+D,YAAY,EAAE;IAAA;IACZ/D,cAAc;MAAA;MAAA;IAAA;EADF,CAvCgB;EA0C9B+rC,eAAe,EAAE;IAAE5pC,EAAE,aAAJ;IAAmBnC,cAAc;MAAA;MAAA;IAAA;EAAjC,CA1Ca;EA2C9BgsC,UAAU,EAAE;IAAE7pC,EAAE,aAAJ;IAAmBnC,cAAc;MAAA;MAAA;IAAA;EAAjC,CA3CkB;EA4C9BisC,UAAU,EAAE;IAAE9pC,EAAE,aAAJ;IAAmBnC,cAAc;MAAA;MAAA;IAAA;EAAjC,CA5CkB;EA6C9BksC,UAAU,EAAE;IAAE/pC,EAAE,yCAAJ;IAA+CnC,cAAc;MAAA;MAAA;IAAA;EAA7D;AA7CkB,GA8C7B,IA9C6B,EA8CtB;EACNmC,EAAE,uBADI;EAENnC,cAAc;IAAA;IAAA;EAAA;AAFR,CA9CsB,EAAhC;AAwDA;AACA;AACA;AACA;AACA;;AACO,IAAMoD,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACxG,IAAD,EAAO6G,IAAP,EAAgB;EACnD,OAAO6mC,SAAS,CAAC7mC,IAAD,CAAT,GAAkB7G,IAAI,CAACsD,aAAL,CAAmBoqC,SAAS,CAAC7mC,IAAD,CAA5B,CAAlB,GAAwDA,IAA/D;AACD,CAFM;;;;;;;;;;;;;;;AC/DP;AAEA;AAEA,IAAM0oC,SAAS,GAAGlrC,0DAAc;EAC9B0zB,GAAG,EAAE;IACHxyB,EAAE,yBADC;IAEHnC,cAAc;MAAA;MAAA;IAAA;EAFX;AADyB,2LAK7B8rB,4FAL6B,EAKJ;EACxB3pB,EAAE,2BADsB;EAExBnC,cAAc;IAAA;IAAA;EAAA;AAFU,CALI,2LAS7B8rB,0GAT6B,EASG;EAC/B3pB,EAAE,iCAD6B;EAE/BnC,cAAc;IAAA;IAAA;EAAA;AAFiB,CATH,2LAa7B8rB,wGAb6B,EAaE;EAC9B3pB,EAAE,iCAD4B;EAE9BnC,cAAc;IAAA;IAAA;EAAA;AAFgB,CAbF,oBAAhC;AAmBA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMsvB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAC1yB,IAAD,EAAO6G,IAAP,EAAyD;EAAA,+EAAP,EAAO;EAAA,IAA1CqsB,8BAA0C,QAA1CA,8BAA0C;;EACpF,IAAI,CAACrsB,IAAL,EAAW;IACT,OAAO7G,IAAI,CAACsD,aAAL,CAAmBisC,SAAS,CAACrgB,4FAAD,CAA5B,CAAP;EACD,CAFD,MAEO,IAAIroB,IAAI,KAAKqoB,8FAAb,EAAsC;IAC3C,OAAO,QAAP;EACD,CAFM,MAEA,IAAIroB,IAAI,KAAKqoB,0GAAT,IAA0CgE,8BAA9C,EAA8E;IACnF,OAAO,MAAP;EACD,CAFM,MAEA,IAAIrsB,IAAI,KAAKqoB,gHAAb,EAA+C;IACpD,OAAO,iBAAP;EACD;;EAED,IAAM2f,OAAO,GAAGU,SAAS,CAAC1oC,IAAD,CAAzB;EACA,OAAOgoC,OAAO,GAAG7uC,IAAI,CAACsD,aAAL,CAAmBurC,OAAnB,CAAH,GAAiChoC,IAA/C;AACD,CAbD;;AAeA,yDAAe6rB,oBAAf;;;;;;;;;;;;;;;;;;;;AC5CA;AAEA;AAEA,IAAMgb,SAAS,GAAGrpC,0DAAc;EAC9B0zB,GAAG,EAAE;IACHxyB,EAAE,mBADC;IAEHnC,cAAc;MAAA;MAAA;IAAA;EAFX;AADyB,2LAK7ByhC,6FAL6B,EAKH;EACzBt/B,EAAE,2BADuB;EAEzBnC,cAAc;IAAA;IAAA;EAAA;AAFW,CALG,2LAS7ByhC,2FAT6B,EASJ;EACxBt/B,EAAE,sBADsB;EAExBnC,cAAc;IAAA;IAAA;EAAA;AAFU,CATI,oBAAhC;AAeA,IAAMssC,QAAQ,GAAGrrC,0DAAc;EAC7B0zB,GAAG,EAAE;IACHxyB,EAAE,2BADC;IAEHnC,cAAc;MAAA;MAAA;IAAA;EAFX;AADwB,4LAK5BogB,sGAL4B,EAKE;EAC7Bje,EAAE,gCAD2B;EAE7BnC,cAAc;IAAA;IAAA;EAAA;AAFe,CALF,4LAS5BogB,wGAT4B,EASG;EAC9Bje,EAAE,iCAD4B;EAE9BnC,cAAc;IAAA;IAAA;EAAA;AAFgB,CATH,4LAa5BogB,8FAb4B,EAaF;EACzBje,EAAE,4BADuB;EAEzBnC,cAAc;IAAA;IAAA;EAAA;AAFW,CAbE,4LAiB5BogB,gGAjB4B,EAiBD;EAC1Bje,EAAE,WADwB;EAE1BnC,cAAc;IAAA;IAAA;EAAA;AAFY,CAjBC,4LAqB5BogB,4GArB4B,EAqBK;EAChCje,EAAE,mCAD8B;EAEhCnC,cAAc;IAAA;IAAA;EAAA;AAFkB,CArBL,4LAyB5BogB,8HAzB4B,EAyBc;EACzCje,EAAE,4CADuC;EAEzCnC,cAAc;IAAA;IAAA;EAAA;AAF2B,CAzBd,4LA6B5BogB,0HA7B4B,EA6BY;EACvCje,EAAE,2BADqC;EAEvCnC,cAAc;IAAA;IAAA;EAAA;AAFyB,CA7BZ,4LAiC5BogB,wGAjC4B,EAiCG;EAC9Bje,EAAE,eAD4B;EAE9BnC,cAAc;IAAA;IAAA;EAAA;AAFgB,CAjCH,4LAqC5BogB,wGArC4B,EAqCG;EAC9Bje,EAAE,iCAD4B;EAE9BnC,cAAc;IAAA;IAAA;EAAA;AAFgB,CArCH,4LAyC5BogB,4HAzC4B,EAyCa;EACxCje,EAAE,2CADsC;EAExCnC,cAAc;IAAA;IAAA;EAAA;AAF0B,CAzCb,4LA6C5BogB,sHA7C4B,EA6CU;EACrCje,EAAE,wCADmC;EAErCnC,cAAc;IAAA;IAAA;EAAA;AAFuB,CA7CV,4LAiD5BogB,kHAjD4B,EAiDQ;EACnCje,EAAE,sCADiC;EAEnCnC,cAAc;IAAA;IAAA;EAAA;AAFqB,CAjDR,4LAqD5BogB,gHArD4B,EAqDO;EAClCje,EAAE,qCADgC;EAElCnC,cAAc;IAAA;IAAA;EAAA;AAFoB,CArDP,qBAA/B;AA2DA,IAAM4sC,oBAAoB,GAAG3rC,0DAAc,kNACxCmrC,sGADwC,EACH;EACpCjqC,EAAE,yBADkC;EAEpCnC,cAAc;IAAA;IAAA;EAAA;AAFsB,CADG,4LAKxCosC,8GALwC,EAKC;EACxCjqC,EAAE,6BADsC;EAExCnC,cAAc;IAAA;IAAA;EAAA;AAF0B,CALD,4LASxCosC,4GATwC,EASA;EACvCjqC,EAAE,4BADqC;EAEvCnC,cAAc;IAAA;IAAA;EAAA;AAFyB,CATA,qBAA3C;AAeA;AACA;AACA;;AACO,IAAMqkC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACznC,IAAD,EAAO6G,IAAP,EAAatB,EAAb,EAAoB;EACrD,IAAIqoC,aAAa,GAAGF,SAAS,CAAC7mC,IAAD,CAAT,GAAkB7G,IAAI,CAACsD,aAAL,CAAmBoqC,SAAS,CAAC7mC,IAAD,CAA5B,CAAlB,GAAwDA,IAA5E;;EACA,IAAItB,EAAJ,EAAQ;IACNqoC,aAAa,aAAMA,aAAN,eAAwBroC,EAAxB,CAAb;EACD;;EACD,OAAOqoC,aAAP;AACD,CANM;AAQP;AACA;AACA;;AACO,IAAMpG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACxnC,IAAD,EAAO6G,IAAP,EAAgB;EACjD,OAAO6oC,QAAQ,CAAC7oC,IAAD,CAAR,GAAiB7G,IAAI,CAACsD,aAAL,CAAmBosC,QAAQ,CAAC7oC,IAAD,CAA3B,CAAjB,GAAsDA,IAA7D;AACD,CAFM;AAIA,IAAMupC,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACpwC,IAAD,EAAO2Z,MAAP,EAAkB;EAC/D,OAAOq2B,oBAAoB,CAACr2B,MAAD,CAApB,GAA+B3Z,IAAI,CAACsD,aAAL,CAAmB0sC,oBAAoB,CAACr2B,MAAD,CAAvC,CAA/B,GAAkFA,MAAzF;AACD,CAFM;;;;;;;;;;AC/GP;AAEO,IAAMta,mBAAmB,GAAG0B,uDAAA,CAAgB;EACjDd,KAAK,EAAEc,0DAD0C;EAEjDJ,YAAY,EAAEI,0DAFmC;EAGjDL,QAAQ,EAAEK,0DAHuC;EAIjDN,YAAY,EAAEM,uDAAA,CAAgB;IAC5Bd,KAAK,EAAEc,0DADqB;IAE5BZ,MAAM,EAAEY,0DAFoB;IAG5Bb,IAAI,EAAEa,0DAHsB;IAI5BX,aAAa,EAAEW,wDAAcsvC;EAJD,CAAhB;AAJmC,CAAhB,CAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFP;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAM3gC,QAAQ,GAAGrL,2DAAc,CAAC;EAC9Bg+B,OAAO,EAAE;IACP98B,EAAE,uCADK;IAEPnC,cAAc;MAAA;MAAA;IAAA;EAFP,CADqB;EAK9B+xB,mBAAmB,EAAE;IACnB5vB,EAAE,mDADiB;IAEnBnC,cAAc;MAAA;MAAA;IAAA;EAFK,CALS;EAS9B0tC,iBAAiB,EAAE;IACjBvrC,EAAE,kCADe;IAEjBnC,cAAc;MAAA;MAAA;IAAA;EAFG;AATW,CAAD,CAA/B;AAeO,IAAM2tC,SAAS,GAAG,SAAZA,SAAY,CAACvwC,MAAD,EAAS00B,WAAT,EAAsBrY,IAAtB,EAA4Bm0B,UAA5B,EAAwCnvB,MAAxC,EAAmD;EAC1E,IAAI,EAACrhB,MAAD,aAACA,MAAD,eAACA,MAAM,CAAEG,YAAT,CAAJ,EAA2B;IACzB,OAAO,EAAP;EACD;;EACD,IAAMkR,CAAC,GACLrR,MAAM,CAACG,YAAP,GAAsB,CAAtB,gBACUygB,yEAAc,CAACvgB,IAAI,CAACiiB,GAAL,CAAStiB,MAAM,CAACG,YAAhB,CAAD,EAAgCH,MAAM,CAACE,QAAvC,EAAiD;IAAEmhB,MAAM,EAANA;EAAF,CAAjD,CADxB,iBAEUT,yEAAc,CAACvgB,IAAI,CAACiiB,GAAL,CAAStiB,MAAM,CAACG,YAAhB,CAAD,EAAgCH,MAAM,CAACE,QAAvC,EAAiD;IAAEmhB,MAAM,EAANA;EAAF,CAAjD,CAFxB,CADF,CAJ0E,CAQ1E;;EACA,IAAImvB,UAAU,IAAIxwC,MAAM,CAACE,QAAP,MAAoBw0B,WAApB,aAAoBA,WAApB,uBAAoBA,WAAW,CAAEx0B,QAAjC,CAAlB,EAA6D;IAC3D,IAAM4+B,UAAU,GAAGz+B,IAAI,CAACiiB,GAAL,CAAS,oDAAOtiB,MAAM,CAACG,YAAP,GAAsBu0B,WAAW,CAACv0B,YAAnC,GAAmD,GAAzD,EAA8D,CAA9D,CAAT,CAAnB,CAD2D,CAE3D;;IACA,IAAIqwC,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK1R,UAA1C,EAAsD;MACpD,iBAAUztB,CAAV,eAAgBytB,UAAhB,eAA+BziB,IAA/B;IACD;EACF;;EACD,iBAAUhL,CAAV,eAAgBgL,IAAhB;AACD,CAjBM;AAmBA,IAAMkoB,mBAAmB,GAAG,SAAtBA,mBAAsB,OAiB7B;EAAA,IAhBIkM,OAgBJ,QAhBJzwC,MAgBI;EAAA,IAfJ4lC,WAeI,QAfJA,WAeI;EAAA,IAdJ/D,OAcI,QAdJA,OAcI;EAAA,IAbJlN,mBAaI,QAbJA,mBAaI;EAAA,IAZO+b,UAYP,QAZJ7K,SAYI;EAAA,IAXJY,SAWI,QAXJA,SAWI;EAAA,IAVJC,OAUI,QAVJA,OAUI;EAAA,IATJ7xB,QASI,QATJA,QASI;EAAA,IARJkxB,QAQI,QARJA,QAQI;EAAA,IAPJhB,SAOI,QAPJA,SAOI;EAAA,IANJxG,WAMI,QANJA,WAMI;EAAA,IALJ/+B,IAKI,QALJA,IAKI;EAAA,IAJJ2kB,IAII,QAJJA,IAII;EAAA,IAHJ1Q,OAGI,QAHJA,OAGI;EAAA,IAFJ4uB,QAEI,QAFJA,QAEI;EAAA,IADJiE,qBACI,QADJA,qBACI;EACJ;EACA,IAAMtmC,MAAM,GAAG,CAAC6U,QAAD,IAAa67B,UAAb,GAA0BA,UAA1B,GAAuCD,OAAtD;EACA,IAAME,YAAY,GAAG/vB,yEAAc,CAACvgB,IAAI,CAACiiB,GAAL,CAAStiB,MAAM,CAACG,YAAhB,CAAD,EAAgCH,MAAM,CAACE,QAAvC,EAAiD;IAAEmhB,MAAM,EAAE7hB,IAAI,CAAC6hB;EAAf,CAAjD,CAAnC;EACA,IAAMuvB,aAAa,GAAGn9B,OAAO,GACzBmN,yEAAc,CAACvgB,IAAI,CAACiiB,GAAL,CAAS7O,OAAO,CAACzT,MAAjB,CAAD,EAA2ByT,OAAO,CAACvT,QAAnC,EAA6C;IAAEmhB,MAAM,EAAE7hB,IAAI,CAAC6hB;EAAf,CAA7C,CADW,GAEzB,IAFJ;EAIA,IAAMwvB,iBAAiB,GAAGN,SAAS,CACjC3K,WADiC,EAEjC5lC,MAFiC,EAGjCR,IAAI,CAACsD,aAAL,CAAmBoM,QAAQ,CAACohC,iBAA5B,CAHiC,EAIjCz7B,QAAQ,IAAI,CAACkxB,QAAb,GAAwBxH,WAAW,CAACuS,kBAApC,GAAyD/L,SAAS,CAAC+L,kBAJlC,EAKjCtxC,IAAI,CAAC6hB,MAL4B,CAAnC;EAOA,IAAM0vB,aAAa,GAAGR,SAAS,CAC7B1O,OAD6B,EAE7B7hC,MAF6B,EAG7BR,IAAI,CAACsD,aAAL,CAAmBoM,QAAQ,CAAC2yB,OAA5B,CAH6B,EAI7BhtB,QAAQ,IAAI,CAACkxB,QAAb,GAAwBxH,WAAW,CAACF,cAApC,GAAqD0G,SAAS,CAAC1G,cAJlC,EAK7B7+B,IAAI,CAAC6hB,MALwB,CAA/B;EAOA,IAAM2vB,yBAAyB,GAAGT,SAAS,CACzC5b,mBADyC,EAEzC30B,MAFyC,EAGzCR,IAAI,CAACsD,aAAL,CAAmBoM,QAAQ,CAACylB,mBAA5B,CAHyC,EAIzC,KAJyC,EAKzCn1B,IAAI,CAAC6hB,MALoC,CAA3C;;EAQA,IAAI8C,IAAI,KAAKnB,8FAAb,EAAsC;IACpC,IAAMiuB,0BAA0B,GAAGrwB,yEAAc,CAC/CvgB,IAAI,CAACiiB,GAAL,CAASqS,mBAAmB,CAACx0B,YAA7B,CAD+C,EAE/Cw0B,mBAAmB,CAACz0B,QAF2B,EAG/C;MAAEmhB,MAAM,EAAE7hB,IAAI,CAAC6hB;IAAf,CAH+C,CAAjD;IAKA,IAAM6vB,gBAAgB,GAAGtwB,yEAAc,CAACvgB,IAAI,CAACiiB,GAAL,CAASouB,UAAU,CAACvwC,YAApB,CAAD,EAAoCuwC,UAAU,CAACxwC,QAA/C,EAAyD;MAC9FmhB,MAAM,EAAE7hB,IAAI,CAAC6hB;IADiF,CAAzD,CAAvC;IAGA,IAAM8vB,wBAAwB,GAAG7K,qBAAqB,KAAKj+B,SAA3D;IACA,IAAM+oC,8BAA8B,GAAGD,wBAAwB,GAC3DvwB,yEAAc,CACZvgB,IAAI,CAACiiB,GAAL,CAASgkB,qBAAqB,CAACT,SAAtB,CAAgC1lC,YAAzC,CADY,EAEZmmC,qBAAqB,CAACT,SAAtB,CAAgC3lC,QAFpB,EAGZ;MACEmhB,MAAM,EAAE7hB,IAAI,CAAC6hB;IADf,CAHY,CAD6C,GAQ3D,IARJ;IASA,IAAMrC,KAAK,GAAG+lB,SAAS,CAAC1oB,IAAxB;IACA,IAAMg1B,KAAK,GAAG9S,WAAW,CAACliB,IAA1B;IACA,IAAMqX,SAAS,GAAG,CAAAjgB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEigB,SAAT,KAAsB,YAAxC;;IAEA,IAAMsd,0BAAyB,GAAG,SAA5BA,0BAA4B,CAACrc,mBAAD,EAAsB0N,QAAtB,EAAgC3O,SAAhC,EAA8C;MAC9E,IAAIiB,mBAAmB,CAACx0B,YAApB,KAAqC,CAArC,IAA0CkiC,QAA9C,EAAwD;QACtD,oBACE,wDAAC,4DAAD;UAAA;UACE,cAAc;YAAA;YAAA;YAAA;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;cAAA;cAAA;gBAAA;cAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;cAAA;cAAA;gBAAA;cAAA;cAAA;gBAAA;cAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA,EADhB;UAEE,MAAM,EAAE;YACNA,QAAQ,EAARA,QADM;YAEN1N,mBAAmB,EAAEwc,wBAAwB,GACzCC,8BADyC,GAEzCH,0BAJE;YAKNE,wBAAwB,EAAxBA;UALM;QAFV,EADF;MAYD,CAbD,MAaO;QACL,oBACE,wDAAC,4DAAD;UAAA;UACE,cAAc;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA,EADhB;UAEE,MAAM,EAAE;YAAE3nC,UAAU,EAAEkqB,SAAS,KAAK,OAAd,GAAwB1U,KAAxB,GAAgCqyB,KAA9C;YAAqDJ,0BAA0B,EAA1BA;UAArD;QAFV,EADF;MAMD;IACF,CAtBD;;IAwBA,oBACE,yDAAC,2CAAD;MAAA,WACGL,aAAa,iBACZ,wDAAC,sEAAD;QAAW,EAAE,EAAE,CAAf;QAAA,uBACE,wDAAC,4DAAD;UAAA;UAAkB,cAAc;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA,EAAhC;UAAmE,MAAM,EAAE;YAAEA,aAAa,EAAbA;UAAF;QAA3E;MADF,EAFJ,eAME,wDAAC,sEAAD;QAAW,EAAE,EAAE,CAAf;QAAA,UAAmBI,0BAAyB,CAACrc,mBAAD,EAAsB0N,QAAtB,EAAgC3O,SAAhC;MAA5C,EANF,EAOG+S,SAAS,IAAIC,OAAb,iBACC,wDAAC,4DAAD;QAAA;QACE,cAAc;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;QAAA,EADhB;QAEE,MAAM,EAAE;UACNlb,IAAI,EAAE,oDAAMkb,OAAO,CAAClb,IAAR,GAAe,GAArB,EAA0B,CAA1B,CADA;UAEN8lB,OAAO,EAAEnf,iEAAW,CAAC3yB,IAAD,EAAOknC,OAAO,CAACrgC,IAAf,EAAqB,OAArB,CAFd;UAGNrG,MAAM,EAAE4gB,yEAAc,CAAC6lB,SAAS,CAACtmC,YAAX,EAAyBsmC,SAAS,CAACvmC,QAAnC,EAA6C;YAAEmhB,MAAM,EAAE7hB,IAAI,CAAC6hB;UAAf,CAA7C;QAHhB;MAFV,EARJ,eAiBE,wDAAC,sEAAD;QAAA,uBACE,wDAAC,4DAAD;UAAA;UACE,cAAc;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA,EADhB;UAEE,MAAM,EAAE;YAAEkwB,cAAc,EAAE18B,QAAQ,GAAGmK,KAAH,GAAWqyB,KAArC;YAA4CH,gBAAgB,EAAhBA;UAA5C;QAFV;MADF,EAjBF;IAAA,EADF;EA0BD,CAzED,MAyEO;IACL,IAAMM,YAAY,GAAG,CAACb,YAAD,EAAeI,aAAf,EAA8BF,iBAA9B,EAAiDG,yBAAjD,CAArB;;IACA,IAAIvK,SAAJ,EAAe;MACb+K,YAAY,CAACpQ,IAAb,CAAkBmP,SAAS,CAAC9J,SAAD,EAAYzmC,MAAZ,EAAoB,CAAA0mC,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAE3hC,EAAT,KAAe,OAAnC,EAA4C2hC,OAA5C,aAA4CA,OAA5C,uBAA4CA,OAAO,CAAE5H,UAArD,EAAiEt/B,IAAI,CAAC6hB,MAAtE,CAA3B;IACD;;IACD,OAAOmwB,YAAY,CAACC,MAAb,CAAoB,GAApB,CAAP;EACD;AACF,CA/HM;AAiIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,QAAiF;EAAA,IAA9EC,kBAA8E,SAA9EA,kBAA8E;EAAA,IAA1D7K,gBAA0D,SAA1DA,gBAA0D;EAAA,IAAxCD,eAAwC,SAAxCA,eAAwC;EAAA,IAAvB+K,QAAuB,SAAvBA,QAAuB;EAAA,IAAbC,MAAa,SAAbA,MAAa;EAC5G,OAAOhL,eAAe,GAClBwJ,8EAAqB,CAACxJ,eAAD,CADH,GAElBsJ,6EAAoB,CAACwB,kBAAD,EAAqB7K,gBAArB,EAAuCgL,SAAS,CAACF,QAAD,CAAhD,EAA4DE,SAAS,CAACD,MAAD,CAArE,EAA+E,KAA/E,CAFxB;AAGD,CAJM;AAMA,IAAME,WAAW,GAAG,SAAdA,WAAc,QAA4F;EAAA,IAAzFJ,kBAAyF,SAAzFA,kBAAyF;EAAA,IAArE9K,eAAqE,SAArEA,eAAqE;EAAA,IAApDC,gBAAoD,SAApDA,gBAAoD;EAAA,IAAlC8K,QAAkC,SAAlCA,QAAkC;EAAA,IAAxBC,MAAwB,SAAxBA,MAAwB;EAAA,IAAhB5xB,SAAgB,SAAhBA,SAAgB;;EACrH,IAAI4mB,eAAJ,EAAqB;IACnB,IAAMmL,eAAe,GAAGhC,oEAAY,CAAC/vB,SAAS,GAAG,IAAIoM,IAAJ,CAASpM,SAAT,CAAH,GAAyB,IAAIoM,IAAJ,EAAnC,CAApC;IACA,iBAAUya,gBAAgB,IAAI,aAA9B,cAA+CkL,eAA/C,cAAkEnL,eAAlE;EACD,CAHD,MAGO;IACL,IAAMoL,UAAU,GAAGjC,oEAAY,CAAC4B,QAAQ,GAAG,IAAIvlB,IAAJ,CAASulB,QAAT,CAAH,GAAwB,IAAIvlB,IAAJ,EAAjC,CAA/B;;IACA,IAAM6lB,SAAQ,GAAGlC,oEAAY,CAAC6B,MAAM,GAAG,IAAIxlB,IAAJ,CAASwlB,MAAT,CAAH,GAAsB,IAAIxlB,IAAJ,EAA7B,CAA7B;;IACA,iBAAUslB,kBAAV,cAAgC7K,gBAAhC,cAAoDmL,UAApD,cAAkEC,SAAlE;EACD;AACF,CATM;AAWA,IAAM1N,WAAW;EAAA,0WAAG;IAAA;;IAAA;IAAA;MAAA;QAAA;UAAA;YACzBmN,kBADyB,SACzBA,kBADyB,EAEzB7K,gBAFyB,SAEzBA,gBAFyB,EAGzBD,eAHyB,SAGzBA,eAHyB,EAIzB+K,QAJyB,SAIzBA,QAJyB,EAKzBC,MALyB,SAKzBA,MALyB,EAMzB5xB,SANyB,SAMzBA,SANyB;YAQnBuM,UARmB,GAQNklB,aAAa,CAAC;cAC/BC,kBAAkB,EAAlBA,kBAD+B;cAE/B7K,gBAAgB,EAAhBA,gBAF+B;cAG/BD,eAAe,EAAfA,eAH+B;cAI/B+K,QAAQ,EAARA,QAJ+B;cAK/BC,MAAM,EAANA,MAL+B;cAM/B5xB,SAAS,EAATA;YAN+B,CAAD,CARP;YAgBnBkyB,SAhBmB,GAgBP;cAAEC,MAAM,EAAE,MAAV;cAAkBC,aAAa,EAAEjC,sEAAiBA;YAAlD,CAhBO;YAiBnBkC,WAjBmB,GAiBLrC,8EAAmB,CAACC,mGAAD,CAjBd;;YAkBzB,IAAIoC,WAAJ,EAAiB;cACfH,SAAS,CAACK,OAAV,GAAoB;gBAAEC,aAAa,mBAAYH,WAAZ;cAAf,CAApB;YACD;;YApBwB;YAAA;YAAA,OAwBVvC,mDAAK,CAACvjB,UAAD,EAAa2lB,SAAb,CAxBK;;UAAA;YAwBvBO,IAxBuB;YAAA;YAAA;;UAAA;YAAA;YAAA;YAAA,MA0BjBrpC,+DAAW,CAACwK,qEAAD,CA1BM;;UAAA;YAAA,MA6BrB,UAAA6+B,IAAI,UAAJ,sCAAMrsC,IAAN,MAAe,iBA7BM;cAAA;cAAA;YAAA;;YAAA,MA8BjBgD,+DAAW,CAACwK,qEAAD,CA9BM;;UAAA;YAiCnB8Y,QAjCmB,GAiCRolB,WAAW,CAAC;cAAEJ,kBAAkB,EAAlBA,kBAAF;cAAsB7K,gBAAgB,EAAhBA,gBAAtB;cAAwCD,eAAe,EAAfA,eAAxC;cAAyD+K,QAAQ,EAARA,QAAzD;cAAmEC,MAAM,EAANA,MAAnE;cAA2E5xB,SAAS,EAATA;YAA3E,CAAD,CAjCH;YAAA,iCAkClBpE,kDAAM,CAAC62B,IAAD,EAAO/lB,QAAP,CAlCY;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAX6X,WAAW;IAAA;EAAA;AAAA,GAAjB","sources":["webpack://_N_E/./components/AmountWithExchangeRateInfo.js","webpack://_N_E/./components/AutosizeText.js","webpack://_N_E/./components/DateTime.js","webpack://_N_E/./components/DefinedTerm.js","webpack://_N_E/./components/PaymentMethodTypeWithIcon.js","webpack://_N_E/./components/edit-collective/RequestVirtualCardModal.js","webpack://_N_E/./components/RequestVirtualCardBtn.js","webpack://_N_E/./components/StyledFilters.js","webpack://_N_E/./components/StyledInputPercentage.js","webpack://_N_E/./components/StyledInputTags.js","webpack://_N_E/./components/StyledSelectFilter.js","webpack://_N_E/./components/Tags.js","webpack://_N_E/./components/TransactionSign.js","webpack://_N_E/./components/UploadedFilePreview.js","webpack://_N_E/./components/budget/DebitCreditList.js","webpack://_N_E/./components/AvatarWithLink.tsx","webpack://_N_E/./components/expenses/AdminExpenseStatusTag.js","webpack://_N_E/./components/BulletSlider.js","webpack://_N_E/./components/FilesPreviewModal.js","webpack://_N_E/./components/expenses/ExpenseFilesPreviewModal.js","webpack://_N_E/./components/budget/ExpenseBudgetItem.js","webpack://_N_E/./components/collective-page/BudgetStats.js","webpack://_N_E/./components/collective-page/ContainerSectionContent.js","webpack://_N_E/./components/collective-page/sections/Budget.js","webpack://_N_E/./components/StyledInputMask.js","webpack://_N_E/./components/edit-collective/AssignVirtualCardModal.js","webpack://_N_E/./lib/virtual-cards/constants.ts","webpack://_N_E/./components/edit-collective/EditVirtualCardModal.tsx","webpack://_N_E/./components/expenses/ExpenseGSTFormikFields.js","webpack://_N_E/./components/expenses/ExpenseInvoiceDownloadHelper.js","webpack://_N_E/./components/expenses/ExpenseStatusTag.js","webpack://_N_E/./components/expenses/ExpenseTypeTag.js","webpack://_N_E/./components/expenses/ExpenseVATFormikFields.js","webpack://_N_E/./components/expenses/MarkExpenseAsIncompleteModal.js","webpack://_N_E/./components/expenses/PayoutMethodData.js","webpack://_N_E/./components/expenses/PayoutMethodTypeWithIcon.js","webpack://_N_E/./lib/constants/permissions.js","webpack://_N_E/./components/expenses/DeleteExpenseButton.js","webpack://_N_E/./components/expenses/MarkExpenseAsUnpaidButton.js","webpack://_N_E/./components/expenses/PayExpenseModal.js","webpack://_N_E/./components/expenses/SecurityChecksModal.js","webpack://_N_E/./components/expenses/PayExpenseButton.js","webpack://_N_E/./components/expenses/ProcessExpenseButtons.js","webpack://_N_E/./components/expenses/graphql/fragments.ts","webpack://_N_E/./components/expenses/lib/utils.js","webpack://_N_E/./components/host-dashboard/AddFundsModal.js","webpack://_N_E/./components/icons/TransferwiseIcon.js","webpack://_N_E/./components/ocf-host-application/OCFPrimaryButton.js","webpack://_N_E/./components/TransactionStatusTag.js","webpack://_N_E/./components/transactions/TransactionRefundButton.js","webpack://_N_E/./components/transactions/TransactionRejectMessageForm.js","webpack://_N_E/./components/transactions/TransactionRejectButton.js","webpack://_N_E/./components/transactions/TransactionDetails.js","webpack://_N_E/./components/transactions/TransactionItem.js","webpack://_N_E/./components/transactions/filters/TransactionsKindFilter.js","webpack://_N_E/./components/transactions/graphql/fragments.js","webpack://_N_E/./lib/constants/expense-status.ts","webpack://_N_E/./lib/constants/expenseTypes.ts","webpack://_N_E/./lib/constants/payout-method.js","webpack://_N_E/./lib/constants/utils.js","webpack://_N_E/./lib/expenses.js","webpack://_N_E/./lib/hooks/useAsyncCall.js","webpack://_N_E/./lib/i18n-collective-page-section.js","webpack://_N_E/./lib/i18n/expense.js","webpack://_N_E/./lib/i18n/order-status.js","webpack://_N_E/./lib/i18n/payment-method-type.js","webpack://_N_E/./lib/i18n/payout-method-type.js","webpack://_N_E/./lib/i18n/transaction.js","webpack://_N_E/./lib/prop-types.js","webpack://_N_E/./lib/transactions.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InfoCircle } from '@styled-icons/boxicons-regular/InfoCircle';\nimport { round } from 'lodash';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { AmountPropTypeShape } from '../lib/prop-types';\n\nimport DateTime from './DateTime';\nimport FormattedMoneyAmount from './FormattedMoneyAmount';\nimport { Box, Flex } from './Grid';\nimport StyledTooltip from './StyledTooltip';\n\nconst FX_RATE_SOURCE_LABEL = {\n  PAYPAL: 'PayPal',\n  OPENCOLLECTIVE: 'Open Collective',\n  WISE: 'Wise',\n};\n\nexport const formatFxRateInfo = (intl, { value, date, source, isApproximate }) => {\n  return (\n    <Flex flexDirection=\"column\">\n      <FormattedMessage defaultMessage=\"Exchange rate: {value}\" values={{ value: round(value, 7) }} />\n      {source && (\n        <div>\n          <FormattedMessage\n            defaultMessage=\"Source: {source}\"\n            values={{ source: FX_RATE_SOURCE_LABEL[source] || source }}\n          />\n        </div>\n      )}\n      {date && (\n        <div>\n          <FormattedMessage\n            defaultMessage=\"Acquired on: {date}\"\n            values={{ date: <DateTime value={date} timeStyle=\"short\" /> }}\n          />\n        </div>\n      )}\n      {isApproximate && (\n        <Box>\n          <br />\n          <span role=\"img\" aria-label=\"Warning\">\n            ⚠️\n          </span>\n          &nbsp;\n          <FormattedMessage defaultMessage=\"This amount is subject to fluctuations\" />\n        </Box>\n      )}\n    </Flex>\n  );\n};\n\nconst ContentContainer = styled.div`\n  white-space: nowrap;\n  margin-right: 4px;\n`;\n\nconst AmountWithExchangeRateInfo = ({ amount: { exchangeRate, currency, value, valueInCents }, showCurrencyCode }) => {\n  const intl = useIntl();\n  return (\n    <StyledTooltip\n      display=\"block\"\n      containerVerticalAlign=\"middle\"\n      noTooltip={!exchangeRate}\n      content={() => formatFxRateInfo(intl, exchangeRate)}\n    >\n      <Flex flexWrap=\"noWrap\" alignItems=\"center\">\n        <ContentContainer>\n          {exchangeRate?.isApproximate && `~ `}\n          <FormattedMoneyAmount\n            amount={valueInCents ?? Math.round(value * 100)}\n            currency={currency}\n            precision={2}\n            amountStyles={null}\n            showCurrencyCode={showCurrencyCode}\n          />\n        </ContentContainer>\n        <InfoCircle size=\"1em\" />\n      </Flex>\n    </StyledTooltip>\n  );\n};\n\nAmountWithExchangeRateInfo.propTypes = {\n  amount: AmountPropTypeShape,\n  showCurrencyCode: PropTypes.bool,\n};\n\nexport default AmountWithExchangeRateInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Span } from './Text';\n\nconst getBaseFontSize = (value, minFontSizeInPx, maxFontSizeInPx, maxLength, lengthThreshold) => {\n  if (!value || value.length < lengthThreshold) {\n    return maxFontSizeInPx;\n  } else if (value.length > maxLength) {\n    return minFontSizeInPx;\n  } else {\n    const lengthRange = maxLength - lengthThreshold;\n    const lengthReductionRatio = (value.length - lengthThreshold) / lengthRange;\n    const sizeRange = maxFontSizeInPx - minFontSizeInPx;\n    const sizeReduction = sizeRange * lengthReductionRatio;\n    return Math.round(maxFontSizeInPx - sizeReduction);\n  }\n};\n\nconst formatResult = (result, valueFormatter) => {\n  if (!valueFormatter) {\n    return result;\n  } else if (Array.isArray(result)) {\n    return result.map(entry => (typeof entry === 'number' ? valueFormatter(entry) : entry));\n  } else {\n    return valueFormatter(result);\n  }\n};\n\n/**\n * A magic text component whose size adapts based on string length.\n * By default the `maxFontSizeInPx` will be used, until the breakpoint defined by `lengthThreshold`\n * is reached. At this point the size will decreaze linearly until `maxLength` is reached, the\n * value will then always be equal to `minFontSizeInPx`.\n *\n * Please note that this component always round the font size to whole numbers, font-sizes like\n * `12.5px` are not supported.\n */\nconst AutosizeText = ({\n  children,\n  value,\n  minFontSizeInPx,\n  maxFontSizeInPx,\n  maxLength,\n  lengthThreshold,\n  mobileRatio,\n  valueFormatter,\n}) => {\n  const baseFontSize = getBaseFontSize(value, minFontSizeInPx, maxFontSizeInPx, maxLength, lengthThreshold);\n  const result = mobileRatio ? [Math.round(baseFontSize * mobileRatio), null, baseFontSize] : baseFontSize;\n  return children({\n    value,\n    fontSize: formatResult(result, valueFormatter),\n  });\n};\n\nAutosizeText.propTypes = {\n  /** The value to display */\n  value: PropTypes.string,\n  /** Minimum font size */\n  minFontSizeInPx: PropTypes.number.isRequired,\n  /** Maximum font size. Must be different from `minFontSizeInPx` */\n  maxFontSizeInPx: PropTypes.number.isRequired,\n  /** The maximum length of the string (`value`) */\n  maxLength: PropTypes.number.isRequired,\n  /** Length breakpoint where size will starts to be reduced */\n  lengthThreshold: PropTypes.number.isRequired,\n  /** A render func that gets passed the fontSize in px */\n  children: PropTypes.func.isRequired,\n  /** A function used to convert the value */\n  valueFormatter: PropTypes.func,\n  /** Reduction percentage on mobile */\n  mobileRatio: PropTypes.number,\n};\n\nconst AutosizedSpan = ({ value, fontSize }) => {\n  return <Span fontSize={`${fontSize}px`}>{value}</Span>;\n};\n\nAutosizedSpan.propTypes = {\n  value: PropTypes.string,\n  fontSize: PropTypes.number,\n};\n\nAutosizeText.defaultProps = {\n  children: AutosizedSpan,\n};\n\nexport default AutosizeText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessage, FormattedDate, useIntl } from 'react-intl';\n\nimport { getDateFromValue } from '../lib/date-utils';\nimport dayjs from '../lib/dayjs';\nimport { capitalize } from '../lib/utils';\n\nconst TITLE_MESSAGE = defineMessage({\n  defaultMessage: 'Local time: {localTime}{newLine}UTC time: {utcTime}',\n});\n\nexport const generateDateTitle = (intl, date) => {\n  return intl.formatMessage(TITLE_MESSAGE, {\n    localTime: capitalize(intl.formatDate(date, { dateStyle: 'full', timeStyle: 'long' })),\n    utcTime: capitalize(intl.formatDate(date, { dateStyle: 'full', timeStyle: 'long', timeZone: 'UTC' })),\n    newLine: '\\n',\n  });\n};\n\n/**\n * A wrapper around `FormattedDate` + HTML `<time>` with sensible defaults.\n * Displays the full date and time in the user's locale and in UTC in the title.\n */\nconst DateTime = ({ value, dateStyle, timeStyle, ...props }) => {\n  const intl = useIntl();\n  const [title, setTitle] = React.useState();\n  const date = React.useMemo(() => getDateFromValue(value), [value]);\n  return (\n    <time\n      {...props}\n      title={title}\n      dateTime={date.toISOString()}\n      onMouseEnter={() => setTitle(generateDateTitle(intl, date))}\n    >\n      <FormattedDate dateStyle={dateStyle} timeStyle={timeStyle} value={date} />\n    </time>\n  );\n};\n\nDateTime.propTypes = {\n  /** The value as a Date or as a parsable string */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date), PropTypes.instanceOf(dayjs)]).isRequired,\n  /** Date style, set this to null to hide the date */\n  dateStyle: PropTypes.oneOf(['full', 'long', 'medium', 'short']),\n  /** Time style, set this to display the time along with the date */\n  timeStyle: PropTypes.oneOf(['full', 'long', 'medium', 'short', undefined, null]),\n};\n\nDateTime.defaultProps = {\n  dateStyle: 'long',\n};\n\nexport default DateTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { themeGet } from '@styled-system/theme-get';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport styled from 'styled-components';\nimport { borderColor, color, typography } from 'styled-system';\n\nimport { textTransform } from '../lib/styled-system-custom-properties';\n\nimport Link from './Link';\nimport StyledTooltip from './StyledTooltip';\n\n/**\n * All the terms defined here must have a matching translation\n * in both `TranslatedTerms` and `TranslatedDefinitions`.\n */\nexport const Terms = {\n  FISCAL_HOST: 'FISCAL_HOST',\n  GIFT_CARD: 'GIFT_CARD',\n  HOST_FEE: 'HOST_FEE',\n  PLATFORM_FEE: 'PLATFORM_FEE',\n  ESTIMATED_BUDGET: 'ESTIMATED_BUDGET',\n  EXPENSE_TYPE: 'EXPENSE_TYPE',\n  TOTAL_RAISED: 'TOTAL_RAISED',\n  TOTAL_INCOME: 'TOTAL_INCOME',\n  BALANCE: 'BALANCE',\n};\n\nconst TranslatedTerms = defineMessages({\n  [Terms.FISCAL_HOST]: {\n    id: 'Fiscalhost',\n    defaultMessage: 'Fiscal Host',\n  },\n  [Terms.HOST_FEE]: {\n    id: 'HostFee',\n    defaultMessage: 'Host fee',\n  },\n  [Terms.PLATFORM_FEE]: {\n    id: 'PlatformFee',\n    defaultMessage: 'Platform fee',\n  },\n  [Terms.GIFT_CARD]: {\n    id: 'GiftCard',\n    defaultMessage: 'Gift Card',\n  },\n  [Terms.ESTIMATED_BUDGET]: {\n    id: 'CollectivePage.SectionBudget.Annual',\n    defaultMessage: 'Estimated annual budget',\n  },\n  [Terms.EXPENSE_TYPE]: {\n    id: 'expense.type',\n    defaultMessage: 'Type',\n  },\n  [Terms.TOTAL_RAISED]: {\n    id: 'budgetSection-raised',\n    defaultMessage: 'Total raised',\n  },\n  [Terms.TOTAL_INCOME]: {\n    id: 'budgetSection-income',\n    defaultMessage: 'Total income',\n  },\n  [Terms.BALANCE]: {\n    id: 'CollectivePage.SectionBudget.Balance',\n    defaultMessage: 'Today’s balance',\n  },\n});\n\nconst TranslatedDefinitions = defineMessages({\n  [Terms.FISCAL_HOST]: {\n    id: 'Fiscalhost.definition',\n    defaultMessage:\n      'A Fiscal Host is an entity that holds the money on behalf of a Collective, and takes care of accounting, taxes, and invoices.',\n  },\n  [Terms.HOST_FEE]: {\n    id: 'host.hostFee.help',\n    defaultMessage:\n      'The Host Fee is what a Fiscal Host charges a Collective for its services, such as holding funds, making expense payouts, meeting tax obligations, and access to the Open Collective software platform.',\n  },\n  [Terms.PLATFORM_FEE]: {\n    id: 'host.platformFee.help',\n    defaultMessage: 'The Platform fee is what Open Collective charges for use of the software.',\n  },\n  [Terms.GIFT_CARD]: {\n    id: 'GiftCard.definition',\n    defaultMessage:\n      'Gift cards empower your employees or community members to support the projects they love. <learn-more-link>Learn more</learn-more-link>.',\n  },\n  [Terms.ESTIMATED_BUDGET]: {\n    id: 'CollectivePage.SectionBudget.Annual.Definition',\n    defaultMessage: 'Projected annual budget based on financial contributions over the past 12 months.',\n  },\n  [Terms.EXPENSE_TYPE]: {\n    id: 'expense.type.tooltip',\n    defaultMessage:\n      \"Select 'receipt' to get paid back for a purchase already made. Select 'invoice' if you are charging for your time, getting paid in advance, or do not have a receipt.\",\n  },\n  [Terms.TOTAL_RAISED]: {\n    id: 'budgetSection-raised-definition',\n    defaultMessage: 'Total net amount available to spend after fees.',\n  },\n  [Terms.TOTAL_INCOME]: {\n    id: 'budgetSection-total-income-definition',\n    defaultMessage: 'Net all time, including host fees and direct contributions.',\n  },\n  [Terms.BALANCE]: {\n    id: 'budgetSection-balance-definition',\n    defaultMessage: 'The current balance of the account. Not including Projects and Events.',\n  },\n});\n\nconst GiftCardLearnMoreLink = msg => <Link href=\"/gift-cards\">{msg}</Link>;\n\nconst TranslationParams = {\n  [Terms.GIFT_CARD]: {\n    'learn-more-link': GiftCardLearnMoreLink,\n  },\n};\n\nconst UnderlinedTerm = styled.span`\n  border-bottom: 2px dotted;\n  cursor: help;\n\n  ${color}\n  ${borderColor}\n  ${typography}\n  ${textTransform}\n\n  &:hover {\n    color: ${themeGet('colors.primary.500')};\n    border-color: ${themeGet('colors.primary.500')};\n  }\n`;\n\n/**\n * Underlines the given word and show a tooltip with the definition when focused\n * or hovered. Both the term and the definition are translated.\n */\nconst DefinedTerm = ({ intl, term, textTransform, fontSize, children, color, extraTooltipContent }) => {\n  return (\n    <StyledTooltip\n      content={() => (\n        <React.Fragment>\n          {intl.formatMessage(TranslatedDefinitions[term], TranslationParams[term])}\n          {extraTooltipContent}\n        </React.Fragment>\n      )}\n    >\n      {props => (\n        <UnderlinedTerm {...props} textTransform={textTransform} color={color} borderColor={color} fontSize={fontSize}>\n          {children || intl.formatMessage(TranslatedTerms[term])}\n        </UnderlinedTerm>\n      )}\n    </StyledTooltip>\n  );\n};\n\nDefinedTerm.propTypes = {\n  /** The term to be defined */\n  term: PropTypes.oneOf(Object.values(Terms)),\n  /** Applies to the underlined term */\n  textTransform: PropTypes.string,\n  /** Color for the text and the underline */\n  color: PropTypes.string,\n  /** Font size */\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** If provided, will be rendered in place of the term */\n  children: PropTypes.node,\n  /** @ignore from injectIntl */\n  intl: PropTypes.object.isRequired,\n  /** Extra content to include with term definition */\n  extraTooltipContent: PropTypes.node,\n};\n\nDefinedTerm.defaultProps = {\n  color: 'black.700',\n};\n\nexport default injectIntl(DefinedTerm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alipay } from '@styled-icons/fa-brands/Alipay';\nimport { Paypal as PaypalIcon } from '@styled-icons/fa-brands/Paypal';\nimport { CreditCard } from '@styled-icons/fa-solid/CreditCard';\nimport { ExchangeAlt as OtherIcon } from '@styled-icons/fa-solid/ExchangeAlt';\nimport { useIntl } from 'react-intl';\n\nimport { PAYMENT_METHOD_TYPE } from '../lib/constants/payment-methods';\nimport { i18nPaymentMethodType } from '../lib/i18n/payment-method-type';\n\nimport GiftCard from './icons/GiftCard';\nimport { Flex } from './Grid';\nimport LoadingPlaceholder from './LoadingPlaceholder';\nimport { Span } from './Text';\n\n/**\n * Shows the data of the given payout method\n */\nconst PaymentMethodTypeWithIcon = ({ isLoading, type, iconSize }) => {\n  const intl = useIntl();\n  if (isLoading) {\n    return <LoadingPlaceholder height={15} width={90} />;\n  }\n\n  switch (type) {\n    case PAYMENT_METHOD_TYPE.GIFTCARD:\n      return (\n        <Flex alignItems=\"center\">\n          <GiftCard size={iconSize} color=\"#9D9FA3\" />\n          <Span ml={2}>{i18nPaymentMethodType(intl, type)}</Span>\n        </Flex>\n      );\n    case PAYMENT_METHOD_TYPE.CREDITCARD:\n      return (\n        <Flex alignItems=\"center\">\n          <CreditCard size={iconSize} color=\"#9D9FA3\" />\n          <Span ml={2}>{i18nPaymentMethodType(intl, type)}</Span>\n        </Flex>\n      );\n    case PAYMENT_METHOD_TYPE.ALIPAY:\n      return (\n        <Flex alignItems=\"center\">\n          <Alipay size={iconSize} color=\"#9D9FA3\" />\n          <Span ml={2}>Alipay</Span>\n        </Flex>\n      );\n    case PAYMENT_METHOD_TYPE.PAYMENT:\n    case PAYMENT_METHOD_TYPE.SUBSCRIPTION:\n      return (\n        <Flex alignItems=\"center\">\n          <PaypalIcon size={iconSize} color=\"#192f86\" />\n          <Span ml={2}>PayPal</Span>\n        </Flex>\n      );\n    default:\n      return (\n        <Flex alignItems=\"center\">\n          <OtherIcon size={iconSize} color=\"#9D9FA3\" />\n          <Span ml={2}>{i18nPaymentMethodType(intl, type)}</Span>\n        </Flex>\n      );\n  }\n};\n\nPaymentMethodTypeWithIcon.propTypes = {\n  isLoading: PropTypes.bool,\n  type: PropTypes.oneOf(Object.values(PAYMENT_METHOD_TYPE)),\n  iconSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nPaymentMethodTypeWithIcon.defaultProps = {\n  iconSize: 24,\n};\n\n// @component\nexport default PaymentMethodTypeWithIcon;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { useFormik } from 'formik';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport Container from '../Container';\nimport { Box } from '../Grid';\nimport HTMLContent from '../HTMLContent';\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\nimport StyledCheckbox from '../StyledCheckbox';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputAmount from '../StyledInputAmount';\nimport StyledInputField from '../StyledInputField';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport StyledTextarea from '../StyledTextarea';\nimport { P, Span } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst initialValues = {\n  agreement: false,\n  notes: undefined,\n  budget: undefined,\n  purpose: undefined,\n};\n\nconst requestVirtualCardMutation = gql`\n  mutation requestVirtualCard($notes: String, $purpose: String, $budget: Int, $account: AccountReferenceInput!) {\n    requestVirtualCard(notes: $notes, purpose: $purpose, budget: $budget, account: $account)\n  }\n`;\n\nconst RequestVirtualCardModal = props => {\n  const hasPolicy = Boolean(props.host?.settings?.virtualcards?.policy);\n\n  const { addToast } = useToasts();\n  const [requestNewVirtualCard, { loading: isCreating, error: createError }] = useMutation(requestVirtualCardMutation, {\n    context: API_V2_CONTEXT,\n  });\n  const formik = useFormik({\n    initialValues: { ...initialValues, collective: props.collective },\n    async onSubmit(values) {\n      const { collective, notes, purpose, budget } = values;\n      await requestNewVirtualCard({\n        variables: {\n          notes,\n          purpose,\n          budget,\n          account: typeof collective.id === 'string' ? { id: collective.id } : { legacyId: collective.id },\n        },\n      });\n      props.onSuccess?.();\n      addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: <FormattedMessage id=\"Collective.VirtualCards.RequestCard.Success\" defaultMessage=\"Card requested!\" />,\n      });\n      props.onClose?.();\n    },\n    validate(values) {\n      const errors = {};\n      if (!values.agreement) {\n        errors.agreement = 'Required';\n      }\n      if (!values.purpose) {\n        errors.purpose = 'Required';\n      }\n      if (!values.notes && values.notes?.lenght > 10) {\n        errors.notes = 'Required';\n      }\n      return errors;\n    },\n  });\n\n  const handleClose = () => {\n    formik.setErrors({});\n    props.onClose?.();\n  };\n\n  return (\n    <StyledModal width=\"382px\" onClose={handleClose} trapFocus {...props}>\n      <form onSubmit={formik.handleSubmit}>\n        <ModalHeader onClose={props.onClose}>\n          <FormattedMessage id=\"Collective.VirtualCards.RequestCard\" defaultMessage=\"Request a Card\" />\n        </ModalHeader>\n        <ModalBody pt={2}>\n          <P>\n            <FormattedMessage\n              id=\"Collective.VirtualCards.RequestCard.Description\"\n              defaultMessage=\"You can request your fiscal host to assign you a credit card for your expenses.\"\n            />\n          </P>\n          {hasPolicy && (\n            <Fragment>\n              <StyledHr borderColor=\"black.300\" my={3} />\n              <P fontSize=\"13px\" fontWeight=\"600\" lineHeight=\"16px\">\n                <FormattedMessage id=\"Collective.VirtualCards.RequestCard.Policy\" defaultMessage=\"Card use policy\" />\n              </P>\n              <Box mt={2}>\n                <HTMLContent content={props.host.settings?.virtualcards?.policy} />\n              </Box>\n            </Fragment>\n          )}\n          <StyledHr borderColor=\"black.300\" my={3} />\n          <StyledInputField\n            labelFontSize=\"13px\"\n            label={\n              <FormattedMessage\n                id=\"Collective.VirtualCards.RequestCard.MonthlyBudget\"\n                defaultMessage=\"Monthly Budget\"\n              />\n            }\n            htmlFor=\"budget\"\n            error={formik.touched.budget && formik.errors.budget}\n            labelFontWeight=\"500\"\n          >\n            {inputProps => (\n              <StyledInputAmount\n                {...inputProps}\n                currency=\"USD\"\n                name=\"budget\"\n                id=\"budget\"\n                onChange={value => formik.setFieldValue('budget', value)}\n                value={formik.values.budget}\n                disabled={isCreating}\n              />\n            )}\n          </StyledInputField>\n          <StyledInputField\n            mt={3}\n            labelFontSize=\"13px\"\n            label={<FormattedMessage id=\"Collective.VirtualCards.RequestCard.Purpose\" defaultMessage=\"Purpose\" />}\n            htmlFor=\"purpose\"\n            error={formik.touched.purpose && formik.errors.purpose}\n            labelFontWeight=\"500\"\n            useRequiredLabel\n            required\n          >\n            {inputProps => (\n              <StyledInput\n                {...inputProps}\n                name=\"purpose\"\n                id=\"purpose\"\n                onChange={formik.handleChange}\n                value={formik.values.purpose}\n                type=\"text\"\n                disabled={isCreating}\n              />\n            )}\n          </StyledInputField>\n          <StyledInputField\n            mt={3}\n            labelFontSize=\"13px\"\n            label={\n              <FormattedMessage\n                id=\"PrivateNotesToAdministrators\"\n                defaultMessage=\"Private notes to the administrators\"\n              />\n            }\n            htmlFor=\"notes\"\n            error={formik.touched.notes && formik.errors.notes}\n            labelFontWeight=\"500\"\n            useRequiredLabel\n            required\n          >\n            {inputProps => (\n              <StyledTextarea\n                {...inputProps}\n                name=\"notes\"\n                id=\"notes\"\n                onChange={formik.handleChange}\n                value={formik.values.notes}\n                disabled={isCreating}\n              />\n            )}\n          </StyledInputField>\n          <Box mt={3}>\n            <StyledCheckbox\n              name=\"tos\"\n              label={\n                <Span fontSize=\"12px\" fontWeight=\"400\" lineHeight=\"16px\">\n                  <FormattedMessage\n                    id=\"Collective.VirtualCards.RequestCard.Agreement\"\n                    defaultMessage=\"I agree to all the terms and conditions set by the host and Open Collective\"\n                  />\n                  <Span color=\"black.500\"> *</Span>\n                </Span>\n              }\n              required\n              checked={formik.values.agreement}\n              onChange={({ checked }) => formik.setFieldValue('agreement', checked)}\n              error={formik.touched.agreement && formik.errors.agreement}\n            />\n          </Box>\n          {createError && (\n            <Box mt={3}>\n              <MessageBox type=\"error\" fontSize=\"13px\">\n                {createError.message}\n              </MessageBox>\n            </Box>\n          )}\n        </ModalBody>\n        <ModalFooter isFullWidth>\n          <Container display=\"flex\" justifyContent={['center', 'flex-end']} flexWrap=\"Wrap\">\n            <StyledButton\n              my={1}\n              minWidth={140}\n              buttonStyle={'primary'}\n              data-cy=\"confirmation-modal-continue\"\n              loading={isCreating}\n              type=\"submit\"\n              disabled={!formik.isValid}\n            >\n              <FormattedMessage id=\"RequestCard\" defaultMessage=\"Request Card\" />\n            </StyledButton>\n          </Container>\n        </ModalFooter>\n      </form>\n    </StyledModal>\n  );\n};\n\nRequestVirtualCardModal.propTypes = {\n  onClose: PropTypes.func,\n  onSuccess: PropTypes.func,\n  host: PropTypes.shape({\n    legacyId: PropTypes.number,\n    slug: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.string,\n    name: PropTypes.string,\n    imageUrl: PropTypes.string,\n    settings: PropTypes.shape({\n      virtualcards: PropTypes.shape({\n        autopause: PropTypes.bool,\n        requestcard: PropTypes.bool,\n        policy: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n  collective: PropTypes.shape({\n    slug: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.string,\n    name: PropTypes.string,\n    imageUrl: PropTypes.string,\n  }),\n};\n\n/** @component */\nexport default RequestVirtualCardModal;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport RequestVirtualCardModal from './edit-collective/RequestVirtualCardModal';\n\nconst RequestVirtualCardBtn = ({ children, collective, host }) => {\n  const [showModal, setShowModal] = React.useState(false);\n  return (\n    <Fragment>\n      {children({ onClick: () => setShowModal(true) })}\n      {showModal && <RequestVirtualCardModal host={host} collective={collective} onClose={() => setShowModal(false)} />}\n    </Fragment>\n  );\n};\n\nRequestVirtualCardBtn.propTypes = {\n  children: PropTypes.func.isRequired,\n  collective: PropTypes.object.isRequired,\n  host: PropTypes.object.isRequired,\n};\n\nexport default RequestVirtualCardBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport { Flex } from './Grid';\nimport StyledButton from './StyledButton';\nimport { Span } from './Text';\n\nconst FilterButton = styled(StyledButton).attrs({\n  buttonSize: 'tiny',\n  buttonStyle: 'standard',\n})`\n  font-size: 14px;\n  font-weight: 400;\n  height: ${props => props.heignt};\n  padding: ${props => props.padding};\n  background: #f9fafb;\n  border-color: white;\n  color: ${props => props.theme.colors.black[800]};\n\n  ${props =>\n    props['data-selected'] &&\n    css`\n      &,\n      &:hover,\n      &:focus {\n        background-color: ${props => props.theme.colors.primary[100]};\n        border: 1px solid ${props => props.theme.colors.primary[700]};\n        color: ${props => props.theme.colors.primary[900]};\n        box-shadow: none;\n      }\n    `}\n\n  &:active {\n    background-color: ${props => props.theme.colors.primary[100]};\n    color: ${props => props.theme.colors.primary[800]};\n  }\n  &:focus {\n    border: 2px solid #050505;\n  }\n`;\n\nconst ButtonContainer = styled.span`\n  ${props =>\n    props.flexGrow &&\n    css`\n      flex-grow: ${props.flexGrow};\n    `}\n`;\n\nconst defaultGetLabel = filter => filter;\n\n/**\n * A controlled component to display a list of filters.\n */\nconst StyledFilters = ({\n  filters,\n  onChange,\n  disabled = false,\n  getLabel = defaultGetLabel,\n  selected = undefined,\n  minButtonWidth = undefined,\n  buttonHeight = '34px',\n  buttonPadding = '4px 14px',\n  buttonGrow = undefined,\n  ...flexProps\n}) => {\n  return (\n    <Flex data-cy=\"filters\" px={1} py={1} css={{ overflowX: 'auto' }} gap=\"8px\" {...flexProps}>\n      {filters.map(filter => {\n        const isSelected = filter === selected;\n        return (\n          <ButtonContainer key={filter} flexGrow={buttonGrow}>\n            <FilterButton\n              data-cy={`filter-button ${filter.toLowerCase()}`}\n              onClick={isSelected ? undefined : () => onChange(filter)}\n              data-selected={isSelected}\n              minWidth={minButtonWidth}\n              disabled={disabled}\n              height={buttonHeight}\n              padding={buttonPadding}\n            >\n              <Span whiteSpace=\"nowrap\">{getLabel(filter)}</Span>\n            </FilterButton>\n          </ButtonContainer>\n        );\n      })}\n    </Flex>\n  );\n};\n\nStyledFilters.propTypes = {\n  filters: PropTypes.arrayOf(PropTypes.string).isRequired,\n  getLabel: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  selected: PropTypes.string,\n  disabled: PropTypes.bool,\n  buttonGrow: PropTypes.any,\n  minButtonWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  buttonHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  buttonPadding: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default StyledFilters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { clamp, round } from 'lodash';\n\nimport StyledInputGroup from './StyledInputGroup';\n\nconst StyledInputPercentage = ({ value, onChange, onBlur, ...props }) => {\n  return (\n    <StyledInputGroup\n      append=\"%\"\n      type=\"number\"\n      min=\"0\"\n      max=\"100\"\n      appendProps={{ color: 'black.600' }}\n      fontWeight=\"normal\"\n      maxWidth={100}\n      step=\"0.01\"\n      {...props}\n      value={isNaN(value) ? '' : value}\n      onChange={e => onChange(parseFloat(e.target.value))}\n      onBlur={e => {\n        const newValue = clamp(round(parseFloat(e.target.value), 2), 0, 100);\n        onChange(isNaN(newValue) ? value : newValue);\n        if (onBlur) {\n          onBlur(e);\n        }\n      }}\n    />\n  );\n};\n\nStyledInputPercentage.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n  value: PropTypes.number,\n};\n\nexport default StyledInputPercentage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Plus } from '@styled-icons/fa-solid/Plus';\nimport { Times } from '@styled-icons/fa-solid/Times';\nimport { PriceTags } from '@styled-icons/icomoon/PriceTags';\nimport { uniqBy } from 'lodash';\nimport { defineMessages, useIntl } from 'react-intl';\nimport { Manager, Popper, Reference } from 'react-popper';\nimport styled, { css } from 'styled-components';\n\nimport useGlobalBlur from '../lib/hooks/useGlobalBlur';\nimport useKeyboardKey, { ESCAPE_KEY } from '../lib/hooks/useKeyboardKey';\n\nimport { Box, Flex } from './Grid';\nimport StyledCard from './StyledCard';\nimport StyledTag from './StyledTag';\n\nconst TagIcon = styled(PriceTags)`\n  margin-right: 4px;\n`;\n\nexport const EditTag = styled(StyledTag).attrs({\n  variant: 'rounded-right',\n  tabIndex: 0,\n})`\n  border: 1px dashed;\n  cursor: pointer;\n  position: relative;\n  padding: 2px 10px 2px 6px;\n  background-color: ${props => props.theme.colors.white.full};\n  border-color: ${props => props.theme.colors.black[200]};\n  color: ${props => props.theme.colors.black[700]};\n  margin-right: 4px;\n  margin-bottom: 4px;\n  &:not([disabled]) {\n    &:hover,\n    &:focus {\n      background-color: ${props => props.theme.colors.white.full};\n      border-color: ${props => props.theme.colors.blue[500]};\n      svg {\n        color: ${props => props.theme.colors.blue[500]};\n      }\n    }\n  }\n  &:focus {\n    outline: 0;\n  }\n  &[disabled] {\n    cursor: not-allowed;\n    background: #f0f1f2;\n  }\n  ${props =>\n    props.active &&\n    css`\n      background-color: ${props => props.theme.colors.blue[50]};\n      border-color: ${props => props.theme.colors.blue[600]};\n      svg {\n        color: ${props => props.theme.colors.blue[600]};\n      }\n      color: ${props => props.theme.colors.black[900]};\n    `}\n`;\n\nconst Input = styled.input`\n  font-size: 12px;\n  line-height: 18px;\n  border: 0;\n  margin-left: 10px;\n  outline: none;\n  width: auto;\n  ::placeholder {\n    color: ${props => props.theme.colors.black[400]};\n  }\n`;\n\nconst InputWrapper = styled(Box)`\n  position: sticky;\n  top: 0;\n  padding: 12px 16px;\n  background-color: inherit;\n  :not(:only-child) {\n    border-bottom: 1px solid ${props => props.theme.colors.black[300]};\n  }\n`;\n\nconst TagWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  :not(:first-child) {\n    border-top: 1px solid ${props => props.theme.colors.black[300]};\n  }\n`;\n\nconst TagActionButton = styled.button`\n  cursor: pointer;\n  text-align: center;\n  background-color: transparent;\n  border: none;\n  padding: 5px;\n  line-height: inherit;\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n\nconst AddTagButton = styled(TagActionButton)`\n  &:not([disabled]) {\n    color: ${props => props.theme.colors.blue[400]};\n    &:hover,\n    &:focus {\n      color: ${props => props.theme.colors.blue[600]};\n    }\n  }\n`;\n\nconst DeleteTagButton = styled(TagActionButton)`\n  color: ${props => props.theme.colors.black[400]};\n  &:hover {\n    color: ${props => props.theme.colors.black[600]};\n  }\n`;\n\nconst messages = defineMessages({\n  placeholder: {\n    id: 'StyledInputTags.Placeholder',\n    defaultMessage: 'Create New Tag',\n  },\n  editLabel: {\n    id: 'StyledInputTags.EditLabel',\n    defaultMessage: 'Edit Tags',\n  },\n  addLabel: {\n    id: 'StyledInputTags.AddLabel',\n    defaultMessage: 'Add Tags',\n  },\n});\n\nconst getOptions = tags => {\n  if (!tags || !tags.length) {\n    return [];\n  } else {\n    return tags.map(tag => ({ label: tag, value: tag }));\n  }\n};\n\nconst StyledInputTags = ({ suggestedTags, value, onChange, renderUpdatedTags, defaultValue, disabled, ...props }) => {\n  const { formatMessage } = useIntl();\n  const inputRef = React.useRef();\n  const wrapperRef = React.useRef();\n  const scrollerRef = React.useRef();\n  const [isOpen, setOpen] = React.useState(false);\n  const [tags, setTags] = React.useState(getOptions(value || defaultValue));\n  const [inputValue, setInputValue] = React.useState('');\n  const availableSuggestedTags = suggestedTags?.filter(st => !tags.some(t => t.value === st));\n\n  const handleClose = React.useCallback(() => {\n    if (isOpen) {\n      setOpen(false);\n    }\n  }, [isOpen]);\n\n  const addTag = tag => {\n    const newTags = uniqBy([...tags, { label: tag.toLowerCase(), value: tag.toLowerCase() }], 'value');\n    setTags(newTags);\n    onChange(newTags);\n  };\n\n  const handleToggleInput = () => {\n    if (isOpen) {\n      handleClose();\n    } else {\n      setOpen(true);\n      setTimeout(() => inputRef?.current?.focus(), 50);\n    }\n  };\n\n  const removeTag = (tag, update) => {\n    const updatedTags = tags.filter(v => v.value !== tag);\n    setTags(updatedTags);\n    if (update) {\n      onChange(updatedTags);\n    }\n  };\n\n  // Close when clicking outside\n  useGlobalBlur(wrapperRef, outside => {\n    if (outside) {\n      handleClose();\n    }\n  });\n\n  // Closes the modal upon the `ESC` key press.\n  useKeyboardKey({ callback: handleClose, keyMatch: ESCAPE_KEY });\n\n  return (\n    <Manager>\n      <Flex ref={wrapperRef} flexWrap=\"wrap\">\n        {(renderUpdatedTags ? tags : getOptions(value))?.map(tag => (\n          <StyledTag\n            key={tag.value}\n            variant=\"rounded-right\"\n            mr=\"4px\"\n            mb=\"4px\"\n            color={disabled ? 'black.500' : 'black.700'}\n            closeButtonProps={{\n              onClick: () => removeTag(tag.value, true),\n              disabled,\n            }}\n          >\n            {tag.label}\n          </StyledTag>\n        ))}\n        <Reference>\n          {({ ref }) => (\n            <Flex ref={ref}>\n              <EditTag\n                data-cy=\"styled-input-tags-open\"\n                active={isOpen}\n                onClick={handleToggleInput}\n                disabled={disabled}\n                onKeyDown={e => {\n                  if (e.key === ' ') {\n                    e.preventDefault();\n                    handleToggleInput();\n                  }\n                }}\n              >\n                <TagIcon size=\"14px\" />{' '}\n                {tags?.length > 0 ? formatMessage(messages.editLabel) : formatMessage(messages.addLabel)}\n              </EditTag>\n            </Flex>\n          )}\n        </Reference>\n        {isOpen && (\n          <Popper placement=\"bottom\">\n            {({ placement, ref, style }) => (\n              <div\n                data-placement={placement}\n                ref={ref}\n                style={{\n                  ...style,\n                  zIndex: 9999,\n                }}\n              >\n                <StyledCard\n                  m={1}\n                  overflow=\"auto\"\n                  overflowY=\"auto\"\n                  {...props}\n                  ref={scrollerRef}\n                  boxShadow=\"0px 4px 10px #C4C7CC\"\n                >\n                  <InputWrapper color=\"black.400\">\n                    <TagIcon size=\"16px\" />\n                    <Input\n                      data-cy=\"styled-input-tags-input\"\n                      disabled={disabled}\n                      placeholder={formatMessage(messages.placeholder)}\n                      ref={inputRef}\n                      value={inputValue}\n                      onChange={e => setInputValue(e.target.value)}\n                      onBlur={() => {\n                        if (!availableSuggestedTags?.length) {\n                          handleClose();\n                        }\n                      }}\n                      onKeyPress={e => {\n                        if (e.key === 'Enter') {\n                          e.preventDefault();\n                          const newTag = e.target.value.trim();\n                          if (!newTag) {\n                            return;\n                          }\n\n                          addTag(newTag);\n                          setInputValue('');\n                          if (!renderUpdatedTags) {\n                            // Wait until new tag renders, otherwise we'll scroll to the second-last tag\n                            requestAnimationFrame(() => scrollerRef.current?.scrollTo(0, Number.MAX_SAFE_INTEGER), 30);\n                          }\n                        }\n                      }}\n                    />\n                  </InputWrapper>\n                  {(suggestedTags?.length || tags?.length) > 0 && (\n                    <Box flexGrow=\"1\">\n                      {!availableSuggestedTags?.length\n                        ? null\n                        : availableSuggestedTags.map(st => (\n                            <TagWrapper key={st} px=\"16px\" py=\"8px\" backgroundColor=\"blue.50\">\n                              <StyledTag type=\"info\" variant=\"rounded-right\">\n                                {st}\n                              </StyledTag>\n                              <AddTagButton\n                                data-cy={`styled-input-tags-add-suggestion-${st}`}\n                                disabled={disabled}\n                                onClick={() => {\n                                  addTag(st);\n                                  // When adding the last suggested tag, focus the input\n                                  setTimeout(() => inputRef?.current?.focus(), 50);\n                                }}\n                                onBlur={() => {\n                                  if (st === suggestedTags[suggestedTags.length - 1]) {\n                                    handleToggleInput();\n                                  }\n                                }}\n                              >\n                                <Plus size=\"10px\" />\n                              </AddTagButton>\n                            </TagWrapper>\n                          ))}\n                      {!renderUpdatedTags &&\n                        tags.map(tag => (\n                          <TagWrapper key={tag.value} px=\"16px\" py=\"8px\" autoFocus>\n                            <StyledTag variant=\"rounded-right\">{tag.label}</StyledTag>\n                            <DeleteTagButton\n                              data-cy={`styled-input-tags-remove-${tag.value}`}\n                              disabled={disabled}\n                              onClick={() => {\n                                removeTag(tag.value);\n                              }}\n                            >\n                              <Times size=\"10px\" />\n                            </DeleteTagButton>\n                          </TagWrapper>\n                        ))}\n                    </Box>\n                  )}\n                </StyledCard>\n              </div>\n            )}\n          </Popper>\n        )}\n      </Flex>\n    </Manager>\n  );\n};\n\nStyledInputTags.propTypes = {\n  suggestedTags: PropTypes.arrayOf(PropTypes.string),\n  defaultValue: PropTypes.arrayOf(PropTypes.string),\n  value: PropTypes.arrayOf(PropTypes.string),\n  disabled: PropTypes.bool,\n  renderUpdatedTags: PropTypes.bool,\n  onChange: PropTypes.func,\n  ...StyledCard.propTypes,\n};\n\nStyledInputTags.defaultProps = {\n  maxHeight: ['50vh', null, '30vh'],\n  minWidth: '240px',\n  renderUpdatedTags: true,\n};\n\nexport default React.memo(StyledInputTags);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport StyledSelect from './StyledSelect';\n\nexport const getSelectFilterStyles = stylesFromProps => ({\n  ...(stylesFromProps || null),\n  control: (baseStyles, state) => {\n    const styles = {\n      ...baseStyles,\n      background: '#F7F8FA',\n      borderRadius: 100,\n      padding: '0 8px',\n      fontWeight: 500,\n      borderColor: '#E8E9EB',\n      ...(stylesFromProps?.control || null),\n      '&:hover': {\n        borderColor: '#C4C7CC',\n      },\n    };\n\n    if (state.isFocused) {\n      styles.background = 'white';\n      styles.boxShadow = '0 0 0 2px black';\n    }\n\n    return styles;\n  },\n});\n\n/**\n * A superset of `StyledSelect` with custom styles, to use for selects that contains\n * filters for lists.\n */\nexport const StyledSelectFilter = props => {\n  const styles = React.useMemo(() => getSelectFilterStyles(props.styles), [props.styles]);\n  return (\n    <StyledSelect minWidth={80} fontSize=\"12px\" lineHeight=\"14px\" isSearchable={false} {...props} styles={styles} />\n  );\n};\n\nStyledSelectFilter.propTypes = {\n  /** The id of the search input */\n  inputId: PropTypes.string.isRequired,\n  /** Define an id prefix for the select components e.g., {your-id}-value */\n  instanceId: PropTypes.string,\n  /** Placeholder for the select value */\n  placeholder: PropTypes.node,\n  /** Whether the component is disabled */\n  disabled: PropTypes.bool,\n  /** Additional styles for the component */\n  styles: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { defineMessage, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { i18nGraphqlException } from '../lib/errors';\nimport { API_V2_CONTEXT } from '../lib/graphql/helpers';\n\nimport ExpenseTypeTag from './expenses/ExpenseTypeTag';\nimport { Flex } from './Grid';\nimport StyledInputTags from './StyledInputTags';\nimport StyledTag from './StyledTag';\nimport { TOAST_TYPE, useToasts } from './ToastProvider';\n\nconst setTagsMutation = gql`\n  mutation SetTags($order: OrderReferenceInput, $expense: ExpenseReferenceInput, $tags: [String!]!) {\n    setTags(expense: $expense, order: $order, tags: $tags) {\n      order {\n        id\n        tags\n      }\n      expense {\n        id\n        tags\n      }\n    }\n  }\n`;\n\n/**\n * Display expense tags, with the ability to edit them. Triggers a migration whenever a tag changes.\n */\nconst TagsForAdmins = ({ expense, order, suggestedTags }) => {\n  const [setTags, { loading }] = useMutation(setTagsMutation, { context: API_V2_CONTEXT });\n  const tagList = expense?.tags || order?.tags;\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  return (\n    <StyledInputTags\n      disabled={loading}\n      value={tagList}\n      suggestedTags={suggestedTags}\n      onChange={async tags => {\n        try {\n          const referencedObject = expense ? { expense: { id: expense.id } } : { order: { id: order.id } };\n          await setTags({ variables: { ...referencedObject, tags: tags.map(tag => tag.value) } });\n        } catch (e) {\n          addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(intl, e) });\n        }\n      }}\n    />\n  );\n};\n\nTagsForAdmins.propTypes = {\n  suggestedTags: PropTypes.arrayOf(PropTypes.string),\n  expense: PropTypes.shape({\n    id: PropTypes.string,\n    status: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    legacyId: PropTypes.number,\n    type: PropTypes.string,\n  }),\n  order: PropTypes.shape({\n    id: PropTypes.string,\n    status: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    legacyId: PropTypes.number,\n    type: PropTypes.string,\n  }),\n};\n\nconst Tag = styled(StyledTag).attrs({\n  mb: '4px',\n  mr: '4px',\n  variant: 'rounded-right',\n})``;\n\nconst Tags = ({ expense, order, isLoading, limit, getTagProps, children, canEdit, suggestedTags, showUntagged }) => {\n  const intl = useIntl();\n  const tagList = expense?.tags || order?.tags;\n\n  const renderTag = ({ tag, label }) => {\n    const extraTagProps = getTagProps?.(tag) || {};\n\n    const renderedTag = (\n      <Tag key={tag} data-cy=\"expense-tag\" {...extraTagProps}>\n        {label ?? tag}\n      </Tag>\n    );\n\n    return children ? children({ key: tag, tag, renderedTag, props: extraTagProps }) : renderedTag;\n  };\n  return (\n    <Flex flexWrap=\"wrap\" alignItems=\"flex-start\">\n      {expense?.type && <ExpenseTypeTag type={expense.type} legacyId={expense.legacyId} isLoading={isLoading} />}\n\n      {canEdit ? (\n        <TagsForAdmins expense={expense} order={order} suggestedTags={suggestedTags} />\n      ) : (\n        tagList && (\n          <React.Fragment>\n            {tagList.slice(0, limit).map(tag => renderTag({ tag }))}\n            {showUntagged &&\n              renderTag({\n                tag: 'untagged',\n                label: intl.formatMessage(defineMessage({ defaultMessage: 'Untagged' })),\n              })}\n\n            {tagList.length > limit && (\n              <Tag color=\"black.600\" title={tagList.slice(limit).join(', ')}>\n                <FormattedMessage\n                  id=\"expenses.countMore\"\n                  defaultMessage=\"+ {count} more\"\n                  values={{ count: tagList.length - limit }}\n                />\n              </Tag>\n            )}\n          </React.Fragment>\n        )\n      )}\n    </Flex>\n  );\n};\n\nTags.propTypes = {\n  isLoading: PropTypes.bool,\n  /** Max number of tags to display */\n  limit: PropTypes.number,\n  /** A render func that gets passed the tag */\n  children: PropTypes.func,\n  /** A function to build the tag props dynamically */\n  getTagProps: PropTypes.func,\n  /** Whether current user can edit the tags */\n  canEdit: PropTypes.bool,\n  /** If canEdit is true, this array is used to display suggested tags */\n  suggestedTags: PropTypes.arrayOf(PropTypes.string),\n  expense: PropTypes.shape({\n    id: PropTypes.string,\n    status: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    legacyId: PropTypes.number,\n    type: PropTypes.string,\n  }),\n  order: PropTypes.shape({\n    id: PropTypes.string,\n    status: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    legacyId: PropTypes.number,\n    type: PropTypes.string,\n  }),\n  /** Whether to show an \"Untagged\" tag (when used for filtering) */\n  showUntagged: PropTypes.bool,\n};\n\nTags.defaultProps = {\n  limit: 4,\n};\n\nexport default Tags;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Span } from './Text';\n\nconst TransactionSign = ({ isCredit }) => {\n  return (\n    <Span\n      data-cy=\"transaction-sign\"\n      color={isCredit ? 'green.700' : 'red.700'}\n      mr={2}\n      css={{ verticalAlign: 'text-bottom' }}\n    >\n      {isCredit ? '+' : '-'}\n    </Span>\n  );\n};\n\nTransactionSign.propTypes = {\n  isCredit: PropTypes.bool,\n};\n\nexport default TransactionSign;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Download } from '@styled-icons/feather/Download';\nimport { FileText } from '@styled-icons/feather/FileText';\nimport { endsWith, max } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport styled, { css } from 'styled-components';\n\nimport { imagePreview } from '../lib/image-utils';\n\nimport PrivateInfoIcon from './icons/PrivateInfoIcon';\nimport Container from './Container';\nimport Link from './Link';\nimport LoadingPlaceholder from './LoadingPlaceholder';\nimport { fadeInDown } from './StyledKeyframes';\nimport StyledLink from './StyledLink';\nimport StyledSpinner from './StyledSpinner';\nimport { P } from './Text';\n\nconst ImageLink = styled(StyledLink)`\n  cursor: pointer;\n  overflow: hidden;\n  display: block;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n`;\n\nImageLink.defaultProps = {\n  openInNewTab: true,\n};\n\nconst FileTextIcon = styled(FileText)`\n  opacity: 1;\n`;\n\nconst DownloadIcon = styled(Download)`\n  position: absolute;\n  opacity: 0;\n`;\n\nconst CardContainer = styled(Container)`\n  position: relative;\n  border-radius: 8px;\n  padding: 4px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 12px;\n  max-width: 100%;\n  background: white;\n\n  svg {\n    transition: opacity 0.3s;\n  }\n\n  img {\n    width: 100%;\n    max-height: 100%;\n    max-width: 100%;\n    border-radius: 8px;\n    @media (max-width: 40em) {\n      object-fit: cover;\n    }\n  }\n`;\n\nconst MainContainer = styled(Container)`\n  text-align: center;\n  ${props =>\n    props.hasOnClick &&\n    css`\n      cursor: pointer;\n      &:hover ${CardContainer} {\n        ${FileTextIcon} {\n          opacity: 0.25;\n        }\n        ${DownloadIcon} {\n          opacity: 1;\n          animation: ${fadeInDown} 0.3s;\n        }\n      }\n    `}\n`;\n\nconst FileName = styled(P)`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst PrivateIconContainer = styled.div`\n  text-align: center;\n  svg {\n    max-height: 32px;\n  }\n`;\n\nconst formatFileSize = sizeInBytes => {\n  if (sizeInBytes < 1024) {\n    return `${sizeInBytes} bytes`;\n  } else if (sizeInBytes < 1048576) {\n    return `${(sizeInBytes / 1024).toFixed(2)} KB`;\n  } else if (sizeInBytes < 1073741824) {\n    return `${(sizeInBytes / 1048576).toFixed(2)} MB`;\n  } else {\n    return `${(sizeInBytes / 1073741824).toFixed(2)} GB`;\n  }\n};\n\n/**\n * To display the preview of a file uploaded on Open Collective.\n * Supports images and PDFs.\n */\nconst UploadedFilePreview = ({\n  isPrivate,\n  isLoading,\n  isDownloading,\n  url,\n  size,\n  maxHeight,\n  alt,\n  fileName,\n  fileSize,\n  showFileName,\n  border,\n  ...props\n}) => {\n  let content = null;\n  const isText = endsWith(url, 'csv') || endsWith(url, 'txt') || endsWith(url, 'pdf');\n\n  if (isLoading) {\n    content = <LoadingPlaceholder borderRadius={8} />;\n  } else if (isDownloading) {\n    content = <StyledSpinner size=\"50%\" />;\n  } else if (isPrivate) {\n    content = (\n      <PrivateInfoIcon color=\"#dcdee0\" size=\"60%\" tooltipProps={{ childrenContainer: PrivateIconContainer }}>\n        <FormattedMessage id=\"Attachment.Private\" defaultMessage=\"This attachment is private\" />\n      </PrivateInfoIcon>\n    );\n  } else if (!url && props.onClick) {\n    content = (\n      <React.Fragment>\n        <FileTextIcon color=\"#dcdee0\" size=\"60%\" />\n        <DownloadIcon color=\"#b3b3b3\" size=\"30%\" />\n      </React.Fragment>\n    );\n  } else if (!url) {\n    content = <FileText color=\"#dcdee0\" size=\"60%\" />;\n  } else if (isText) {\n    content = <FileTextIcon color=\"#dcdee0\" size=\"60%\" />;\n  } else {\n    const resizeWidth = Array.isArray(size) ? max(size) : size;\n    content = <img src={imagePreview(url, null, { width: resizeWidth })} alt={alt || fileName} />;\n  }\n\n  return (\n    <MainContainer\n      {...props}\n      hasOnClick={Boolean(url || props.onClick)}\n      maxWidth={size}\n      as={url ? Link : 'div'}\n      href={url}\n      title={fileName}\n      openInNewTab\n    >\n      <CardContainer size={size} maxHeight={maxHeight} title={fileName} border={border}>\n        {content}\n      </CardContainer>\n      {showFileName && (\n        <Container mt=\"4px\" maxWidth={size || 100} textAlign=\"left\" px={1}>\n          {isLoading ? (\n            <LoadingPlaceholder height={12} />\n          ) : fileName ? (\n            <FileName fontSize=\"13px\" color=\"black.700\" fontWeight=\"700\">\n              {fileName}\n            </FileName>\n          ) : (\n            <P fontStyle=\"italic\" fontSize=\"13px\" color=\"black.700\">\n              <FormattedMessage id=\"File.NoFilename\" defaultMessage=\"No filename\" />\n            </P>\n          )}\n          {fileSize && (\n            <P mt=\"2px\" fontSize=\"11px\" lineHeight=\"16px\" color=\"black.600\" fontWeight=\"400\">\n              {formatFileSize(fileSize)}\n            </P>\n          )}\n        </Container>\n      )}\n    </MainContainer>\n  );\n};\n\nUploadedFilePreview.propTypes = {\n  url: PropTypes.string,\n  isPrivate: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isDownloading: PropTypes.bool,\n  showFileName: PropTypes.bool,\n  alt: PropTypes.string,\n  fileName: PropTypes.string,\n  onClick: PropTypes.func,\n  fileSize: PropTypes.number,\n  border: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n  maxHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n};\n\nUploadedFilePreview.defaultProps = {\n  size: 88,\n  border: '1px solid #dcdee0',\n  alt: 'Uploaded file preview',\n};\n\nexport default UploadedFilePreview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport { fadeIn } from '../StyledKeyframes';\n\n/** A single item */\nconst DebitCreditItem = styled.div`\n  position: relative;\n  animation: ${fadeIn} 0.15s;\n`;\n\n/**\n * A list to display CREDIT/DEBIT items, like transactions or expenses. This is\n * built in a generic way so we can use it for either displaying only orders,\n * or only expenses, or both.\n *\n * Please make your children big enough, otherwise the gradient won't show.\n */\nconst DebitCreditList = styled.div`\n  border: 1px solid #e6e8eb;\n  border-radius: 8px 8px 0 0;\n\n  & > ${DebitCreditItem}:not(:last-child) {\n    border-bottom: 1px solid #e6e8eb;\n  }\n`;\n\n/** A colored gradient to show the type of the transaction */\nconst DebitCreditGradient = styled.div`\n  position: absolute;\n  right: -1px;\n  height: 70%;\n  width: 2px;\n  margin: 14px 0;\n\n  ${props =>\n    props.isCredit\n      ? css`\n          background: linear-gradient(\n            180deg,\n            #00af2f 0%,\n            rgba(106, 255, 146, 0.354167) 53.65%,\n            rgba(255, 255, 255, 0) 100%\n          );\n        `\n      : css`\n          background: linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, #ffd4df 55.73%, #ff0044 100%);\n        `}\n`;\n\n/** Displays a debit entry in the list */\nexport const DebitItem = ({ children, ...props }) => {\n  return (\n    <DebitCreditItem {...props}>\n      <DebitCreditGradient isCredit={false} />\n      {children}\n    </DebitCreditItem>\n  );\n};\n\nDebitItem.propTypes = { children: PropTypes.node };\n\n/** Displays a credit entry in the list */\nexport const CreditItem = ({ children, ...props }) => {\n  return (\n    <DebitCreditItem {...props}>\n      <DebitCreditGradient isCredit />\n      {children}\n    </DebitCreditItem>\n  );\n};\n\nCreditItem.propTypes = { children: PropTypes.node };\n\n/** @component */\nexport default DebitCreditList;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Account } from '../lib/graphql/types/v2/graphql';\nimport { getAvatarBorderRadius } from '../lib/image-utils';\n\nimport Avatar from './Avatar';\nimport LinkCollective from './LinkCollective';\n\ntype AvatarWithLinkProps = {\n  account: Account;\n  secondaryAccount: Account | null;\n  /** The size in pixels */\n  size: number;\n};\n\nconst DualAvatarContainer = styled.div`\n  position: relative;\n`;\n\ntype SecondaryAvatarContainerProps = {\n  borderRadius: string | number;\n};\n\nconst SecondaryAvatarContainer = styled.div<SecondaryAvatarContainerProps>`\n  position: absolute;\n  background: white;\n  border-radius: 6px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  bottom: -8px;\n  right: -8px;\n  width: 50%;\n  height: 50%;\n  border-radius: ${({ borderRadius }) => borderRadius};\n`;\n\n/**\n * [GraphQL V2 ONLY] A wrapper around `Avatar` that wraps it in a Link, with support for an optional second\n * profile to be displayed in the corner.\n */\nexport const AvatarWithLink = ({ account, secondaryAccount, size }: AvatarWithLinkProps) => {\n  const mainAvatar = (\n    <LinkCollective collective={account}>\n      <Avatar collective={account} radius={size} />\n    </LinkCollective>\n  );\n\n  if (!secondaryAccount) {\n    return mainAvatar;\n  } else {\n    return (\n      <DualAvatarContainer>\n        {mainAvatar}\n        <SecondaryAvatarContainer borderRadius={getAvatarBorderRadius(secondaryAccount.type)}>\n          <LinkCollective collective={secondaryAccount}>\n            <Avatar collective={secondaryAccount} radius={size / 2.5} />\n          </LinkCollective>\n        </SecondaryAvatarContainer>\n      </DualAvatarContainer>\n    );\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@styled-icons/boxicons-regular/ChevronDown';\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Manager, Popper, Reference } from 'react-popper';\nimport styled from 'styled-components';\n\nimport expenseStatus from '../../lib/constants/expense-status';\nimport useGlobalBlur from '../../lib/hooks/useGlobalBlur';\nimport useKeyboardKey, { ESCAPE_KEY } from '../../lib/hooks/useKeyboardKey';\nimport { i18nExpenseStatus } from '../../lib/i18n/expense';\n\nimport { Box, Flex } from '../Grid';\nimport StyledButton from '../StyledButton';\nimport StyledSpinner from '../StyledSpinner';\nimport StyledTag from '../StyledTag';\n\nimport { getExpenseStatusMsgType } from './ExpenseStatusTag';\nimport MarkExpenseAsIncompleteModal from './MarkExpenseAsIncompleteModal';\nimport ProcessExpenseButtons, { ButtonLabel } from './ProcessExpenseButtons';\n\nconst ExpenseStatusTag = styled(StyledTag)`\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 16px;\n  letter-spacing: 0.06em;\n  text-transform: uppercase;\n`;\n\nconst PopupContainer = styled(`div`)`\n  z-index: 2;\n  border-radius: 5px;\n  font-size: 12px;\n  text-transform: initial;\n  white-space: normal;\n  min-width: 200px;\n  background: #ffffff;\n  box-shadow: 0px 4px 8px rgba(20, 20, 20, 0.16);\n\n  svg {\n    display: none;\n  }\n\n  ${StyledSpinner} {\n    display: block;\n    margin: auto;\n  }\n`;\n\nconst Arrow = styled('div')`\n  position: absolute;\n  font-size: 8px;\n  width: 3em;\n  height: 3em;\n  top: 0;\n  left: 0;\n  margin-top: -0.9em;\n  &::before {\n    content: '';\n    margin: auto;\n    display: block;\n    border-style: solid;\n    border-width: 0 1.5em 1em 1.5em;\n    border-color: transparent transparent #ffffff transparent;\n    filter: drop-shadow(0px -3px 3px rgba(20, 20, 20, 0.1));\n  }\n`;\n\nconst ChevronDownIcon = styled(ChevronDown)`\n  width: 15px;\n  height: 15px;\n  cursor: pointer;\n  color: inherit;\n`;\n\nconst AdminExpenseStatusTag = ({ expense, host, collective, ...props }) => {\n  const intl = useIntl();\n  const wrapperRef = React.useRef();\n  const [showPopup, setShowPopup] = React.useState(false);\n  const [isClosable, setClosable] = React.useState(true);\n  const [showMarkAsIncompleteModal, setMarkAsIncompleteModal] = React.useState(false);\n  const hideProcessExpenseButtons = expense?.status === expenseStatus.APPROVED;\n  const buttonProps = { px: 2, py: 2, isBorderless: true, width: '100%', textAlign: 'left' };\n\n  const onClick = () => {\n    setShowPopup(true);\n  };\n\n  // Close when clicking outside\n  useGlobalBlur(wrapperRef, outside => {\n    if (outside && isClosable && showPopup && !document.getElementById('mark-expense-as-unpaid-modal')) {\n      setShowPopup(false);\n    }\n  });\n\n  // Closes the modal upon the `ESC` key press.\n  useKeyboardKey({\n    callback: () => {\n      if (isClosable) {\n        setShowPopup(false);\n      }\n    },\n    keyMatch: ESCAPE_KEY,\n  });\n\n  return (\n    <React.Fragment>\n      <Manager>\n        <Reference>\n          {({ ref }) => (\n            <Box ref={ref} onClick={onClick}>\n              <ExpenseStatusTag\n                type={getExpenseStatusMsgType(expense.status)}\n                data-cy=\"admin-expense-status-msg\"\n                {...props}\n              >\n                <Flex>\n                  {i18nExpenseStatus(intl, expense.status)}\n                  <ChevronDownIcon />\n                </Flex>\n              </ExpenseStatusTag>\n            </Box>\n          )}\n        </Reference>\n\n        {showPopup &&\n          ReactDOM.createPortal(\n            <Popper placement=\"bottom\">\n              {({ ref, style, arrowProps }) => (\n                <PopupContainer ref={ref} style={style} onMouseEnter={onClick}>\n                  <Flex alignItems=\"center\" ref={wrapperRef} flexDirection=\"column\" p={2}>\n                    {!hideProcessExpenseButtons && (\n                      <ProcessExpenseButtons\n                        host={host}\n                        buttonProps={buttonProps}\n                        collective={collective}\n                        expense={expense}\n                        permissions={expense.permissions}\n                        onModalToggle={isOpen => setClosable(!isOpen)}\n                        onSuccess={() => setShowPopup(false)}\n                      />\n                    )}\n                    {expense?.permissions?.canMarkAsIncomplete && (\n                      <StyledButton\n                        {...buttonProps}\n                        onClick={() => {\n                          setMarkAsIncompleteModal(true);\n                        }}\n                      >\n                        <ButtonLabel>\n                          <FormattedMessage id=\"actions.markAsIncomplete\" defaultMessage=\"Mark as Incomplete\" />\n                        </ButtonLabel>\n                      </StyledButton>\n                    )}\n                  </Flex>\n                  <Arrow ref={arrowProps.ref} style={arrowProps.style} />\n                </PopupContainer>\n              )}\n            </Popper>,\n            document.body,\n          )}\n      </Manager>\n      {showMarkAsIncompleteModal && (\n        <MarkExpenseAsIncompleteModal expense={expense} onClose={() => setMarkAsIncompleteModal(false)} />\n      )}\n    </React.Fragment>\n  );\n};\n\nAdminExpenseStatusTag.propTypes = {\n  collective: PropTypes.object.isRequired,\n  expense: PropTypes.object.isRequired,\n  host: PropTypes.object,\n};\n\nexport default AdminExpenseStatusTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nimport { Flex } from './Grid';\n\nconst Bullet = styled.div`\n  width: 8px;\n  height: 8px;\n  background-color: ${props => props.theme.colors.black[200]};\n  margin-bottom: 8px;\n  border-radius: 100%;\n  transition: transform 0.1s, background-color 0.3s;\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.5);\n  }\n\n  &:not(:last-child) {\n    margin-right: 8px;\n  }\n\n  ${props =>\n    props.isSelected &&\n    css`\n      transform: scale(1.5);\n      background-color: ${props => props.theme.colors.primary[500]};\n    `}\n`;\n\n/**\n * A multi-bullets slider to switch between multiple items (ie. usually a slideshow)\n */\nconst BulletSlider = ({ nbItems, selectedIndex, onChange }) => {\n  return (\n    <Flex flexWrap=\"wrap\" justifyContent=\"center\">\n      {[...Array(nbItems).keys()].map(index => (\n        <Bullet\n          key={index}\n          role=\"button\"\n          tabIndex={0}\n          isSelected={index === selectedIndex}\n          onClick={() => onChange(index)}\n          onKeyDown={event => {\n            if (event.key === 'Enter') {\n              event.preventDefault();\n              onChange(index);\n            }\n          }}\n        />\n      ))}\n    </Flex>\n  );\n};\n\nBulletSlider.propTypes = {\n  /** Called with the item index */\n  onChange: PropTypes.func.isRequired,\n  selectedIndex: PropTypes.number,\n  nbItems: PropTypes.number,\n};\n\nexport default BulletSlider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ArrowLeft } from '@styled-icons/feather/ArrowLeft';\nimport { ArrowRight } from '@styled-icons/feather/ArrowRight';\nimport { FormattedMessage } from 'react-intl';\n\nimport BulletSlider from './BulletSlider';\nimport { Box, Flex } from './Grid';\nimport StyledButton from './StyledButton';\nimport StyledModal, { ModalBody, ModalHeader } from './StyledModal';\nimport UploadedFilePreview from './UploadedFilePreview';\n\nexport default class FilesPreviewModal extends React.Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n    renderItemPreview: PropTypes.func,\n    /** A render func for item details */\n    renderInfo: PropTypes.func,\n    files: PropTypes.arrayOf(\n      PropTypes.shape({\n        url: PropTypes.string,\n        name: PropTypes.string,\n        /** An alternative to `url` */\n        onClick: PropTypes.func,\n      }),\n    ),\n  };\n\n  state = { selectedIndex: 0, isDownloading: false };\n\n  componentDidMount() {\n    this.eventListener = document.addEventListener('keydown', event => {\n      if (event.key === 'ArrowLeft') {\n        this.selectPrevFile();\n      } else if (event.key === 'ArrowRight') {\n        this.selectNextFile();\n      } else if (event.key === 'Escape') {\n        this.props.onClose();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.eventListener) {\n      this.document.removeEventListener(this.eventListener);\n      this.eventListener = null;\n    }\n  }\n\n  selectPrevFile = () => {\n    this.setState(({ selectedIndex }) => ({ selectedIndex: Math.max(selectedIndex - 1, 0) }));\n  };\n\n  selectNextFile = () => {\n    this.setState(({ selectedIndex }) => ({\n      selectedIndex: Math.min(selectedIndex + 1, (this.props.files?.length || 1) - 1),\n    }));\n  };\n\n  getItemOnClick(item) {\n    if (!item.onClick) {\n      return undefined;\n    } else {\n      return () =>\n        item.onClick({\n          isLoading: this.state.isDownloading,\n          setLoading: isDownloading => this.setState({ isDownloading }),\n        });\n    }\n  }\n\n  renderItemPreview(item) {\n    if (this.props.renderItemPreview) {\n      return this.props.renderItemPreview({ item, isDownloading: this.state.isDownloading });\n    }\n\n    return (\n      <UploadedFilePreview\n        url={item.url}\n        size={350}\n        onClick={this.getItemOnClick(item)}\n        isDownloading={this.state.isDownloading}\n        title={item.title}\n      />\n    );\n  }\n\n  render() {\n    const { renderInfo, files, ...props } = this.props;\n    const { selectedIndex } = this.state;\n    const selectedItem = files ? files[selectedIndex] : null;\n    const nbFiles = this.props.files?.length || 0;\n    const hasMultipleFiles = nbFiles > 1;\n\n    return (\n      <StyledModal {...props} width=\"100%\" maxWidth={450} trapFocus={false}>\n        <ModalHeader mb={3}>\n          <FormattedMessage id=\"FilesPreviewModal.AttachmentPreview\" defaultMessage=\"Attachment preview\" />\n        </ModalHeader>\n        <ModalBody mb={0}>\n          <Flex justifyContent=\"center\" width=\"100%\">\n            {hasMultipleFiles && (\n              <StyledButton\n                buttonSize=\"tiny\"\n                isBorderless\n                ml=\"-12px\"\n                px=\"4px\"\n                onClick={this.selectPrevFile}\n                disabled={!selectedIndex}\n              >\n                <ArrowLeft size={18} />\n              </StyledButton>\n            )}\n            <Flex mx={2} width=\"100%\" justifyContent=\"center\">\n              {selectedItem && this.renderItemPreview(selectedItem)}\n            </Flex>\n            {hasMultipleFiles && (\n              <StyledButton\n                buttonSize=\"tiny\"\n                isBorderless\n                mr=\"-12px\"\n                px=\"4px\"\n                onClick={this.selectNextFile}\n                disabled={!nbFiles || selectedIndex === nbFiles - 1}\n              >\n                <ArrowRight size={18} />\n              </StyledButton>\n            )}\n          </Flex>\n          {renderInfo && renderInfo({ item: selectedItem })}\n          {hasMultipleFiles && (\n            <Box mt={4}>\n              <BulletSlider\n                nbItems={nbFiles}\n                selectedIndex={selectedIndex}\n                onChange={selectedIndex => this.setState({ selectedIndex })}\n              />\n            </Box>\n          )}\n        </ModalBody>\n      </StyledModal>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Download as DownloadIcon } from '@styled-icons/feather/Download';\nimport { saveAs } from 'file-saver';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport expenseTypes from '../../lib/constants/expenseTypes';\n\nimport Container from '../Container';\nimport ExpenseInvoiceDownloadHelper, {\n  generateInvoiceBlob,\n  getExpenseInvoiceFilename,\n} from '../expenses/ExpenseInvoiceDownloadHelper';\nimport FilesPreviewModal from '../FilesPreviewModal';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport StyledButton from '../StyledButton';\nimport { P } from '../Text';\nimport UploadedFilePreview from '../UploadedFilePreview';\n\nconst FileInfo = ({ collective, expense, item, invoiceBlob }) => (\n  <Flex justifyContent=\"space-between\" px={25} mt={2}>\n    <Box flex=\"1 1 65%\">\n      {(item.description || item.name) && (\n        <P fontSize=\"14px\" lineHeight=\"21px\" color=\"black.900\" mb={1}>\n          {item.description || item.name}\n        </P>\n      )}\n      <P fontSize=\"11px\" color=\"black.500\">\n        <FormattedDate value={item.incurredAt} month=\"short\" year=\"numeric\" day=\"numeric\" />\n      </P>\n    </Box>\n    <Container ml={2} flex=\"1 1 35%\" textAlign=\"right\">\n      <div>{item.amount && <FormattedMoneyAmount amount={item.amount} currency={expense.currency} />}</div>\n      {invoiceBlob && (\n        <StyledButton\n          buttonSize=\"tiny\"\n          isBorderless\n          mr=\"-12px\"\n          mt={1}\n          onClick={() => saveAs(invoiceBlob, getExpenseInvoiceFilename(collective, expense))}\n        >\n          <DownloadIcon size=\"1em\" /> <FormattedMessage id=\"Download\" defaultMessage=\"Download\" />\n        </StyledButton>\n      )}\n    </Container>\n  </Flex>\n);\n\nFileInfo.propTypes = {\n  item: PropTypes.object,\n  collective: PropTypes.object,\n  expense: PropTypes.object,\n  invoiceBlob: PropTypes.object,\n};\n\nconst getFilesFromExpense = (collective, expense) => {\n  if (!expense) {\n    return [];\n  }\n\n  if (expense.type === expenseTypes.INVOICE) {\n    return expense.attachedFiles || [];\n  } else {\n    const items = expense.items?.filter(({ url }) => Boolean(url)) || [];\n    return [...items, ...expense.attachedFiles];\n  }\n};\n\nconst ExpenseInvoicePreview = ({ isLoading, fileURL }) => {\n  if (isLoading) {\n    return <UploadedFilePreview isDownloading width=\"100%\" minHeight={350} />;\n  } else {\n    return <iframe title=\"Expense Invoice File URL\" width=\"100%\" height={350} src={fileURL} />;\n  }\n};\n\nExpenseInvoicePreview.propTypes = {\n  isLoading: PropTypes.bool,\n  fileURL: PropTypes.string,\n};\n\nconst ExpenseFilesPreviewModal = ({ collective, expense, onClose }) => {\n  const [invoiceFile, setInvoiceFile] = React.useState(null);\n  const [invoiceBlob, setInvoiceBlob] = React.useState(null);\n  const [invoiceError, setInvoiceError] = React.useState(false);\n  const files = React.useMemo(() => getFilesFromExpense(collective, expense), [collective, expense]);\n\n  React.useEffect(() => {\n    generateInvoiceBlob(expense)\n      .then(file => {\n        setInvoiceError(false);\n        setInvoiceBlob(file);\n        setInvoiceFile(URL.createObjectURL(file));\n      })\n      .catch(() => {\n        setInvoiceError(true);\n      });\n    return () => {\n      if (invoiceFile) {\n        URL.revokeObjectURL(invoiceFile);\n      }\n    };\n  }, []);\n\n  return (\n    <FilesPreviewModal\n      files={files}\n      onClose={onClose}\n      renderInfo={({ item }) => (\n        <FileInfo\n          collective={collective}\n          expense={expense}\n          item={item}\n          invoiceBlob={item.type === 'EXPENSE_INVOICE' ? invoiceBlob : null}\n        />\n      )}\n      renderItemPreview={({ item }) =>\n        item.type === 'EXPENSE_INVOICE' ? (\n          invoiceError ? (\n            <ExpenseInvoiceDownloadHelper expense={expense} collective={collective}>\n              {({ isLoading, downloadInvoice }) => (\n                <UploadedFilePreview\n                  onClick={downloadInvoice}\n                  isDownloading={isLoading}\n                  fileName={getExpenseInvoiceFilename(collective, expense)}\n                  size={350}\n                />\n              )}\n            </ExpenseInvoiceDownloadHelper>\n          ) : (\n            <ExpenseInvoicePreview isLoading={!invoiceFile} fileURL={invoiceFile} />\n          )\n        ) : (\n          <UploadedFilePreview url={item.url} size={350} title={item.title} fileName={item.name} />\n        )\n      }\n    />\n  );\n};\n\nExpenseFilesPreviewModal.propTypes = {\n  collective: PropTypes.object,\n  expense: PropTypes.object,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ExpenseFilesPreviewModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AlertTriangle } from '@styled-icons/feather/AlertTriangle';\nimport { Maximize2 as MaximizeIcon } from '@styled-icons/feather/Maximize2';\nimport { get, includes, size } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport expenseStatus from '../../lib/constants/expense-status';\nimport expenseTypes from '../../lib/constants/expenseTypes';\nimport { AmountPropTypeShape } from '../../lib/prop-types';\nimport { toPx } from '../../lib/theme/helpers';\nimport { getCollectivePageRoute } from '../../lib/url-helpers';\n\nimport AmountWithExchangeRateInfo from '../AmountWithExchangeRateInfo';\nimport AutosizeText from '../AutosizeText';\nimport { AvatarWithLink } from '../AvatarWithLink';\nimport Container from '../Container';\nimport DateTime from '../DateTime';\nimport AdminExpenseStatusTag from '../expenses/AdminExpenseStatusTag';\nimport ExpenseFilesPreviewModal from '../expenses/ExpenseFilesPreviewModal';\nimport ExpenseStatusTag from '../expenses/ExpenseStatusTag';\nimport ExpenseTypeTag from '../expenses/ExpenseTypeTag';\nimport PayoutMethodTypeWithIcon from '../expenses/PayoutMethodTypeWithIcon';\nimport ProcessExpenseButtons, {\n  DEFAULT_PROCESS_EXPENSE_BTN_PROPS,\n  hasProcessButtons,\n} from '../expenses/ProcessExpenseButtons';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport Link from '../Link';\nimport LinkCollective from '../LinkCollective';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport StyledButton from '../StyledButton';\nimport StyledLink from '../StyledLink';\nimport StyledTooltip from '../StyledTooltip';\nimport Tags from '../Tags';\nimport { H3, P, Span } from '../Text';\nimport TransactionSign from '../TransactionSign';\n\nconst DetailColumnHeader = styled.div`\n  font-style: normal;\n  font-weight: bold;\n  font-size: 9px;\n  line-height: 14px;\n  letter-spacing: 0.6px;\n  text-transform: uppercase;\n  color: #c4c7cc;\n  margin-bottom: 2px;\n`;\n\nconst ButtonsContainer = styled.div.attrs({ 'data-cy': 'expense-actions' })`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 8px;\n  transition: opacity 0.05s;\n  justify-content: flex-end;\n\n  @media (max-width: 40em) {\n    justify-content: center;\n  }\n\n  & > *:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst ExpenseContainer = styled.div`\n  padding: 16px 27px;\n\n  @media (hover: hover) {\n    &:not(:hover):not(:focus-within) ${ButtonsContainer} {\n      opacity: 0.24;\n    }\n  }\n`;\n\nconst getNbAttachedFiles = expense => {\n  if (!expense) {\n    return 0;\n  } else if (expense.type === expenseTypes.INVOICE) {\n    return size(expense.attachedFiles);\n  } else {\n    return size(expense.attachedFiles) + size(expense.items.filter(({ url }) => Boolean(url)));\n  }\n};\n\nconst ExpenseBudgetItem = ({\n  isLoading,\n  host,\n  isInverted,\n  showAmountSign,\n  expense,\n  showProcessActions,\n  view,\n  suggestedTags,\n  onProcess,\n}) => {\n  const [hasFilesPreview, showFilesPreview] = React.useState(false);\n  const featuredProfile = isInverted ? expense?.account : expense?.payee;\n  const isAdminView = view === 'admin';\n  const isSubmitterView = view === 'submitter';\n  const isCharge = expense?.type === expenseTypes.CHARGE;\n  const pendingReceipt = isCharge && expense?.items?.every(i => i.url === null);\n  const nbAttachedFiles = !isAdminView ? 0 : getNbAttachedFiles(expense);\n  const isExpensePaidOrRejected = [expenseStatus.REJECTED, expenseStatus.PAID].includes(expense?.status);\n  const shouldDisplayStatusTagActions =\n    (isExpensePaidOrRejected || expense?.status === expenseStatus.APPROVED) &&\n    (hasProcessButtons(expense.permissions) || expense.permissions.canMarkAsIncomplete);\n  const isMultiCurrency =\n    expense?.amountInAccountCurrency && expense.amountInAccountCurrency?.currency !== expense.currency;\n\n  return (\n    <ExpenseContainer data-cy={`expense-container-${expense?.legacyId}`}>\n      <Flex justifyContent=\"space-between\" flexWrap=\"wrap\">\n        <Flex flex=\"1\" minWidth=\"max(50%, 200px)\" maxWidth={[null, '70%']} mr=\"24px\">\n          <Box mr={3}>\n            {isLoading ? (\n              <LoadingPlaceholder width={40} height={40} />\n            ) : (\n              <AvatarWithLink\n                size={40}\n                account={featuredProfile}\n                secondaryAccount={featuredProfile.id === expense.createdByAccount.id ? null : expense.createdByAccount}\n              />\n            )}\n          </Box>\n          {isLoading ? (\n            <LoadingPlaceholder height={60} />\n          ) : (\n            <Box>\n              <StyledTooltip\n                content={<FormattedMessage id=\"Expense.GoToPage\" defaultMessage=\"Go to expense page\" />}\n                delayHide={0}\n              >\n                <StyledLink\n                  as={Link}\n                  underlineOnHover\n                  href={`${getCollectivePageRoute(expense.account)}/expenses/${expense.legacyId}`}\n                >\n                  <AutosizeText\n                    value={expense.description}\n                    maxLength={255}\n                    minFontSizeInPx={12}\n                    maxFontSizeInPx={16}\n                    lengthThreshold={72}\n                    mobileRatio={0.875}\n                    valueFormatter={toPx}\n                  >\n                    {({ value, fontSize }) => (\n                      <H3\n                        fontWeight=\"500\"\n                        lineHeight=\"1.5em\"\n                        textDecoration=\"none\"\n                        color=\"black.900\"\n                        fontSize={`${fontSize}px`}\n                        data-cy=\"expense-title\"\n                      >\n                        {value}\n                      </H3>\n                    )}\n                  </AutosizeText>\n                </StyledLink>\n              </StyledTooltip>\n\n              <P mt=\"5px\" fontSize=\"12px\" color=\"black.700\">\n                {isAdminView ? (\n                  <LinkCollective collective={expense.account} />\n                ) : (\n                  <FormattedMessage\n                    defaultMessage=\"from {payee} to {account}\"\n                    values={{\n                      payee: <LinkCollective collective={expense.payee} />,\n                      account: <LinkCollective collective={expense.account} />,\n                    }}\n                  />\n                )}\n                {' • '}\n                <DateTime value={expense.createdAt} />\n                {isAdminView && (\n                  <React.Fragment>\n                    {' • '}\n                    <FormattedMessage\n                      id=\"BalanceAmount\"\n                      defaultMessage=\"Balance {balance}\"\n                      values={{\n                        balance: (\n                          <FormattedMoneyAmount\n                            amount={get(\n                              expense.account,\n                              'stats.balanceWithBlockedFunds.valueInCents',\n                              get(expense.account, 'stats.balanceWithBlockedFunds', 0),\n                            )}\n                            currency={expense.account.currency}\n                            amountStyles={{ color: 'black.700' }}\n                          />\n                        ),\n                      }}\n                    />\n                  </React.Fragment>\n                )}\n              </P>\n            </Box>\n          )}\n        </Flex>\n        <Flex flexDirection={['row', 'column']} mt={[3, 0]} flexWrap=\"wrap\" alignItems={['center', 'flex-end']}>\n          <Flex\n            my={2}\n            mr={[3, 0]}\n            flexDirection=\"column\"\n            minWidth={100}\n            alignItems=\"flex-end\"\n            data-cy=\"transaction-amount\"\n          >\n            {isLoading ? (\n              <LoadingPlaceholder height={19} width={120} />\n            ) : (\n              <React.Fragment>\n                <div>\n                  {showAmountSign && <TransactionSign isCredit={isInverted} />}\n                  <Span color=\"black.700\" fontSize=\"16px\">\n                    <FormattedMoneyAmount amount={expense.amount} currency={expense.currency} precision={2} />\n                  </Span>\n                </div>\n                {isMultiCurrency && (\n                  <Container color=\"black.600\" fontSize=\"13px\" my={1}>\n                    <AmountWithExchangeRateInfo amount={expense.amountInAccountCurrency} />\n                  </Container>\n                )}\n              </React.Fragment>\n            )}\n          </Flex>\n          {isLoading ? (\n            <LoadingPlaceholder height={20} width={140} />\n          ) : (\n            <Flex>\n              {(isAdminView || isSubmitterView) && pendingReceipt && (\n                <Box mr=\"1px\">\n                  <StyledTooltip\n                    content={\n                      <FormattedMessage id=\"Expense.MissingReceipt\" defaultMessage=\"Expense is missing its Receipt\" />\n                    }\n                  >\n                    <AlertTriangle size={18} />\n                  </StyledTooltip>\n                </Box>\n              )}\n              {(isAdminView || isSubmitterView) && (\n                <ExpenseTypeTag type={expense.type} legacyId={expense.legacyId} mb={0} py={0} mr=\"2px\" fontSize=\"9px\" />\n              )}\n              {shouldDisplayStatusTagActions ? (\n                <AdminExpenseStatusTag host={host} collective={expense.account} expense={expense} p=\"3px 8px\" />\n              ) : (\n                <ExpenseStatusTag\n                  status={expense.status}\n                  fontSize=\"12px\"\n                  fontWeight=\"bold\"\n                  letterSpacing=\"0.06em\"\n                  lineHeight=\"16px\"\n                  p=\"3px 8px\"\n                  showTaxFormTag={includes(expense.requiredLegalDocuments, 'US_TAX_FORM')}\n                  showTaxFormMsg={expense.payee.isAdmin}\n                />\n              )}\n            </Flex>\n          )}\n        </Flex>\n      </Flex>\n      <Flex flexWrap=\"wrap\" justifyContent=\"space-between\" alignItems=\"center\" mt={2}>\n        <Box mt={2}>\n          {isAdminView || isSubmitterView ? (\n            <Flex>\n              <Box mr={[3, 4]}>\n                <DetailColumnHeader>\n                  <FormattedMessage id=\"expense.payoutMethod\" defaultMessage=\"payout method\" />\n                </DetailColumnHeader>\n                <Box mt=\"6px\">\n                  <PayoutMethodTypeWithIcon\n                    isLoading={isLoading}\n                    type={expense?.payoutMethod?.type}\n                    iconSize=\"10px\"\n                    fontSize=\"11px\"\n                    fontWeight=\"normal\"\n                    color=\"black.700\"\n                  />\n                </Box>\n              </Box>\n              {nbAttachedFiles > 0 && (\n                <Box mr={[3, 4]}>\n                  <DetailColumnHeader>\n                    <FormattedMessage id=\"Expense.Attachments\" defaultMessage=\"Attachments\" />\n                  </DetailColumnHeader>\n                  {isLoading ? (\n                    <LoadingPlaceholder height={15} width={90} />\n                  ) : (\n                    <StyledButton\n                      color=\"black.700\"\n                      fontSize=\"11px\"\n                      cursor=\"pointer\"\n                      buttonSize=\"tiny\"\n                      onClick={() => showFilesPreview(true)}\n                      px={2}\n                      ml={-2}\n                      isBorderless\n                    >\n                      <MaximizeIcon size={10} />\n                      &nbsp;&nbsp;\n                      <FormattedMessage\n                        id=\"ExepenseAttachments.count\"\n                        defaultMessage=\"{count, plural, one {# attachment} other {# attachments}}\"\n                        values={{ count: nbAttachedFiles }}\n                      />\n                    </StyledButton>\n                  )}\n                </Box>\n              )}\n            </Flex>\n          ) : (\n            <Tags\n              expense={expense}\n              canEdit={get(expense, 'permissions.canEditTags', false)}\n              suggestedTags={suggestedTags}\n            />\n          )}\n        </Box>\n        {showProcessActions && expense?.permissions && !isExpensePaidOrRejected && (\n          <ButtonsContainer>\n            <ProcessExpenseButtons\n              host={host}\n              collective={expense.account}\n              expense={expense}\n              permissions={expense.permissions}\n              buttonProps={{ ...DEFAULT_PROCESS_EXPENSE_BTN_PROPS, mx: 1, py: 2 }}\n              onSuccess={onProcess}\n            />\n          </ButtonsContainer>\n        )}\n      </Flex>\n      {hasFilesPreview && (\n        <ExpenseFilesPreviewModal\n          collective={expense.account}\n          expense={expense}\n          onClose={() => showFilesPreview(false)}\n        />\n      )}\n    </ExpenseContainer>\n  );\n};\n\nExpenseBudgetItem.propTypes = {\n  isLoading: PropTypes.bool,\n  /** Set this to true to invert who's displayed (payee or collective) */\n  isInverted: PropTypes.bool,\n  showAmountSign: PropTypes.bool,\n  onDelete: PropTypes.func,\n  onProcess: PropTypes.func,\n  showProcessActions: PropTypes.bool,\n  view: PropTypes.oneOf(['public', 'admin', 'submitter']),\n  host: PropTypes.object,\n  suggestedTags: PropTypes.arrayOf(PropTypes.string),\n  expense: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    legacyId: PropTypes.number,\n    type: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    amount: PropTypes.number.isRequired,\n    amountInAccountCurrency: AmountPropTypeShape,\n    currency: PropTypes.string.isRequired,\n    permissions: PropTypes.object,\n    items: PropTypes.arrayOf(PropTypes.object),\n    requiredLegalDocuments: PropTypes.arrayOf(PropTypes.string),\n    attachedFiles: PropTypes.arrayOf(PropTypes.object),\n    payee: PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n      type: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string.isRequired,\n      isAdmin: PropTypes.bool,\n    }),\n    payoutMethod: PropTypes.shape({\n      type: PropTypes.string,\n    }),\n    createdByAccount: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      slug: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n    /** If available, this `account` will be used to link expense in place of the `collective` */\n    account: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n      currency: PropTypes.string,\n      stats: PropTypes.shape({\n        // Collective / Balance can be v1 or v2 there ...\n        balanceWithBlockedFunds: PropTypes.oneOfType([\n          PropTypes.number,\n          PropTypes.shape({\n            valueInCents: PropTypes.number,\n          }),\n        ]),\n      }),\n    }),\n  }),\n};\n\nExpenseBudgetItem.defaultProps = {\n  view: 'public',\n};\n\nexport default ExpenseBudgetItem;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Calendar } from '@styled-icons/feather/Calendar';\nimport { Expand } from '@styled-icons/ionicons-solid/Expand';\nimport { ShowChart } from '@styled-icons/material/ShowChart';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled, { css } from 'styled-components';\nimport { border } from 'styled-system';\n\nimport { isIndividualAccount } from '../../lib/collective.lib';\nimport { CollectiveType } from '../../lib/constants/collectives';\nimport { formatCurrency, getCurrencySymbol } from '../../lib/currency-utils';\nimport { AmountPropTypeShape } from '../../lib/prop-types';\n\nimport Container from '../Container';\nimport DefinedTerm, { Terms } from '../DefinedTerm';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box } from '../Grid';\nimport StyledCard from '../StyledCard';\nimport { P, Span } from '../Text';\n\nconst StatTitle = styled(Container)`\n  font-size: 12px;\n  line-height: 16px;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 8px;\n`;\n\nStatTitle.defaultProps = {\n  color: 'black.700',\n};\n\nconst StatAmount = ({ amount, ...props }) => (\n  <P fontSize=\"16px\" lineHeight=\"24px\" color=\"black.700\">\n    {/* Pass null instead of 0 to make sure we display `--.--` */}\n    <FormattedMoneyAmount amount={amount || null} {...props} />\n  </P>\n);\n\nStatAmount.propTypes = {\n  amount: PropTypes.number,\n};\n\nconst StatContainer = styled.div`\n  flex: 1;\n  padding: 16px 32px;\n\n  svg {\n    margin-right: 5px;\n    vertical-align: bottom;\n  }\n\n  ${props =>\n    props.$isMain &&\n    css`\n      background: #f7f8fa;\n    `}\n\n  border-color: #dcdee0;\n  ${border}\n`;\n\nconst BudgetStats = ({ collective, stats, horizontal }) => {\n  const { locale } = useIntl();\n  const monthlyRecurring =\n    (stats.activeRecurringContributions?.monthly || 0) + (stats.activeRecurringContributions?.yearly || 0) / 12;\n  const isFund = collective.type === CollectiveType.FUND;\n  const isIndividual = !collective.isHost && isIndividualAccount(collective);\n  const borderTop = ['1px solid #dcdee0', 'none', horizontal ? null : '1px solid #dcdee0'];\n\n  return (\n    <StyledCard\n      display=\"flex\"\n      flex={[null, null, '1 1 300px']}\n      width=\"100%\"\n      flexDirection={['column', 'row', horizontal ? null : 'column']}\n      mb={2}\n    >\n      {!isIndividual ? (\n        <React.Fragment>\n          <StatContainer data-cy=\"budgetSection-today-balance\" $isMain>\n            <StatTitle>\n              <Container\n                display=\"inline-block\"\n                fontSize=\"11px\"\n                mr=\"5px\"\n                fontWeight=\"500\"\n                width=\"12px\"\n                textAlign=\"center\"\n              >\n                {getCurrencySymbol(collective.currency)}\n              </Container>\n              {![CollectiveType.PROJECT, CollectiveType.EVENT].includes(collective.type) ? (\n                <DefinedTerm\n                  term={Terms.BALANCE}\n                  textTransform=\"uppercase\"\n                  color=\"black.700\"\n                  extraTooltipContent={\n                    <Fragment>\n                      <Box mt={2}>\n                        <FormattedMessage\n                          id=\"budgetSection-balance-consolidated\"\n                          defaultMessage=\"Total consolidated including Projects and Events: {amount}\"\n                          values={{\n                            amount: formatCurrency(stats?.consolidatedBalance.valueInCents || 0, collective.currency, {\n                              locale,\n                            }),\n                          }}\n                        />\n                      </Box>\n                    </Fragment>\n                  }\n                />\n              ) : (\n                <Span textTransform=\"uppercase\" color=\"black.700\">\n                  <FormattedMessage id=\"CollectivePage.SectionBudget.Balance\" defaultMessage=\"Today’s balance\" />\n                </Span>\n              )}\n            </StatTitle>\n            <StatAmount amount={stats.balance.valueInCents} currency={collective.currency} />\n          </StatContainer>\n          <StatContainer borderTop={borderTop}>\n            <StatTitle>\n              <ShowChart size=\"12px\" />\n              {collective.isHost ? (\n                <DefinedTerm term={Terms.TOTAL_INCOME} textTransform=\"uppercase\" color=\"black.700\" />\n              ) : (\n                <DefinedTerm\n                  term={Terms.TOTAL_RAISED}\n                  textTransform=\"uppercase\"\n                  color=\"black.700\"\n                  extraTooltipContent={\n                    <Box mt={2}>\n                      <FormattedMessage\n                        id=\"budgetSection-raised-total\"\n                        defaultMessage=\"Total contributed before fees: {amount}\"\n                        values={{\n                          amount: formatCurrency(stats?.totalAmountRaised.valueInCents || 0, collective.currency, {\n                            locale,\n                          }),\n                        }}\n                      />\n                    </Box>\n                  }\n                />\n              )}\n            </StatTitle>\n            <StatAmount amount={stats.totalNetAmountRaised.valueInCents} currency={collective.currency} />\n          </StatContainer>\n          <StatContainer borderTop={borderTop}>\n            <StatTitle>\n              <Expand size=\"12px\" />\n              <FormattedMessage id=\"budgetSection-disbursed\" defaultMessage=\"Total disbursed\" />\n            </StatTitle>\n            <StatAmount\n              amount={stats.totalNetAmountRaised.valueInCents - stats.balance.valueInCents}\n              currency={collective.currency}\n            />\n          </StatContainer>\n          {!isFund && (\n            <StatContainer data-cy=\"budgetSection-estimated-budget\" borderTop={borderTop}>\n              <StatTitle>\n                <Calendar size=\"12px\" />\n                <DefinedTerm\n                  term={Terms.ESTIMATED_BUDGET}\n                  textTransform=\"uppercase\"\n                  color=\"black.700\"\n                  extraTooltipContent={\n                    <Fragment>\n                      <Box mt={2}>\n                        <FormattedMessage\n                          id=\"CollectivePage.SectionBudget.MonthlyRecurringAmount\"\n                          defaultMessage=\"Monthly recurring: {amount}\"\n                          values={{ amount: formatCurrency(monthlyRecurring, collective.currency, { locale }) }}\n                        />\n                      </Box>\n                      <Box mt={2}>\n                        <FormattedMessage\n                          id=\"CollectivePage.SectionBudget.TotalAmountReceived\"\n                          defaultMessage=\"Total received in the last 12 months: {amount}\"\n                          values={{\n                            amount: formatCurrency(stats?.totalAmountReceived.valueInCents || 0, collective.currency, {\n                              locale,\n                            }),\n                          }}\n                        />\n                      </Box>\n                    </Fragment>\n                  }\n                />\n              </StatTitle>\n              <StatAmount amount={stats.yearlyBudget.valueInCents} currency={collective.currency} />\n            </StatContainer>\n          )}\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <StatContainer data-cy=\"budgetSection-total-contributed\">\n            <StatTitle>\n              ↑&nbsp;\n              <FormattedMessage defaultMessage=\"Total contributed\" />\n            </StatTitle>\n            <StatAmount\n              amount={Math.abs(stats.totalAmountSpent.valueInCents)}\n              currency={stats.totalAmountSpent.currency}\n            />\n          </StatContainer>\n          <StatContainer data-cy=\"budgetSection-total-paid-expenses\" borderTop={borderTop}>\n            <StatTitle>\n              ↓&nbsp;\n              <FormattedMessage defaultMessage=\"Total received with expenses\" />\n            </StatTitle>\n            <StatAmount amount={stats.totalPaidExpenses.valueInCents} currency={stats.totalPaidExpenses.currency} />\n          </StatContainer>\n        </React.Fragment>\n      )}\n    </StyledCard>\n  );\n};\n\nBudgetStats.propTypes = {\n  /** Collective */\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n    isArchived: PropTypes.bool,\n    settings: PropTypes.object,\n    host: PropTypes.object,\n    isHost: PropTypes.bool,\n  }).isRequired,\n\n  /** Stats */\n  stats: PropTypes.shape({\n    balance: AmountPropTypeShape.isRequired,\n    consolidatedBalance: AmountPropTypeShape.isRequired,\n    yearlyBudget: AmountPropTypeShape.isRequired,\n    activeRecurringContributions: PropTypes.object,\n    totalAmountReceived: AmountPropTypeShape,\n    totalAmountRaised: AmountPropTypeShape,\n    totalNetAmountRaised: AmountPropTypeShape,\n    totalAmountSpent: AmountPropTypeShape,\n    totalPaidExpenses: AmountPropTypeShape,\n  }),\n\n  horizontal: PropTypes.bool,\n  isLoading: PropTypes.bool,\n};\n\nexport default React.memo(BudgetStats);\n","import styled from 'styled-components';\n\nimport Container from '../Container';\n\nimport { Dimensions } from './_constants';\n\n/**\n * A special container that center the content with the correct width and margins\n * for the collective page.\n */\nconst ContainerSectionContent = styled(Container).attrs({\n  maxWidth: Dimensions.MAX_SECTION_WIDTH,\n  px: Dimensions.PADDING_X,\n  m: '0 auto',\n})``;\n\n/** @component */\nexport default ContainerSectionContent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { get, orderBy } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\nimport styled, { css } from 'styled-components';\n\nimport { isIndividualAccount } from '../../../lib/collective.lib';\nimport { TransactionKind } from '../../../lib/constants/transactions';\nimport { EMPTY_ARRAY } from '../../../lib/constants/utils';\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\nimport { getCollectivePageRoute } from '../../../lib/url-helpers';\n\nimport { DebitItem } from '../../budget/DebitCreditList';\nimport ExpenseBudgetItem from '../../budget/ExpenseBudgetItem';\nimport Container from '../../Container';\nimport { expenseHostFields, expensesListFieldsFragment } from '../../expenses/graphql/fragments';\nimport { Box, Flex } from '../../Grid';\nimport Image from '../../Image';\nimport Link from '../../Link';\nimport LoadingPlaceholder from '../../LoadingPlaceholder';\nimport StyledCard from '../../StyledCard';\nimport StyledFilters from '../../StyledFilters';\nimport { P } from '../../Text';\nimport { getDefaultKinds } from '../../transactions/filters/TransactionsKindFilter';\nimport { transactionsQueryCollectionFragment } from '../../transactions/graphql/fragments';\nimport TransactionItem from '../../transactions/TransactionItem';\nimport { withUser } from '../../UserProvider';\nimport BudgetStats from '../BudgetStats';\nimport ContainerSectionContent from '../ContainerSectionContent';\n\nconst budgetSectionAccountFieldsFragment = gql`\n  fragment BudgetSectionAccountFields on Account {\n    id\n    isHost\n    type\n    stats {\n      id\n      balance {\n        valueInCents\n        currency\n      }\n      consolidatedBalance {\n        valueInCents\n        currency\n      }\n      yearlyBudget {\n        valueInCents\n        currency\n      }\n      activeRecurringContributions\n      totalAmountReceived(periodInMonths: 12) {\n        valueInCents\n        currency\n      }\n      totalAmountRaised: totalAmountReceived {\n        valueInCents\n        currency\n      }\n      totalNetAmountRaised: totalNetAmountReceived {\n        valueInCents\n        currency\n      }\n    }\n  }\n`;\n\nexport const budgetSectionQuery = gql`\n  query BudgetSection($slug: String!, $limit: Int!, $kind: [TransactionKind]) {\n    transactions(\n      account: { slug: $slug }\n      limit: $limit\n      kind: $kind\n      includeIncognitoTransactions: true\n      includeGiftCardTransactions: true\n      includeChildrenTransactions: true\n    ) {\n      ...TransactionsQueryCollectionFragment\n    }\n    expenses(account: { slug: $slug }, limit: $limit, includeChildrenExpenses: true) {\n      totalCount\n      nodes {\n        id\n        ...ExpensesListFieldsFragment\n      }\n    }\n    account(slug: $slug) {\n      id\n      ...BudgetSectionAccountFields\n    }\n  }\n  ${transactionsQueryCollectionFragment}\n  ${expensesListFieldsFragment}\n  ${budgetSectionAccountFieldsFragment}\n`;\n\nexport const budgetSectionForIndividualQuery = gql`\n  query BudgetSectionForIndividual($slug: String!, $limit: Int!, $kind: [TransactionKind]) {\n    transactions(\n      account: { slug: $slug }\n      limit: $limit\n      kind: $kind\n      includeIncognitoTransactions: true\n      includeGiftCardTransactions: true\n    ) {\n      ...TransactionsQueryCollectionFragment\n    }\n    expenses(createdByAccount: { slug: $slug }, limit: $limit) {\n      totalCount\n      nodes {\n        id\n        ...ExpensesListFieldsFragment\n      }\n    }\n    account(slug: $slug) {\n      id\n      isHost\n      type\n      stats {\n        id\n        totalAmountSpent(net: true) {\n          valueInCents\n          currency\n        }\n        totalPaidExpenses {\n          valueInCents\n          currency\n        }\n      }\n    }\n  }\n  ${transactionsQueryCollectionFragment}\n  ${expensesListFieldsFragment}\n`;\n\nexport const budgetSectionWithHostQuery = gql`\n  query BudgetSectionWithHost($slug: String!, $hostSlug: String!, $limit: Int!, $kind: [TransactionKind]) {\n    host(slug: $hostSlug) {\n      id\n      ...ExpenseHostFields\n    }\n    transactions(\n      account: { slug: $slug }\n      limit: $limit\n      kind: $kind\n      includeIncognitoTransactions: true\n      includeGiftCardTransactions: true\n      includeChildrenTransactions: true\n    ) {\n      ...TransactionsQueryCollectionFragment\n    }\n    expenses(account: { slug: $slug }, limit: $limit, includeChildrenExpenses: true) {\n      totalCount\n      nodes {\n        id\n        ...ExpensesListFieldsFragment\n      }\n    }\n    account(slug: $slug) {\n      id\n      ...BudgetSectionAccountFields\n    }\n  }\n  ${transactionsQueryCollectionFragment}\n  ${expensesListFieldsFragment}\n  ${expenseHostFields}\n  ${budgetSectionAccountFieldsFragment}\n`;\n\nexport const getBudgetSectionQuery = (hasHost, isIndividual) => {\n  if (hasHost) {\n    return budgetSectionWithHostQuery;\n  } else if (isIndividual) {\n    return budgetSectionForIndividualQuery;\n  } else {\n    return budgetSectionQuery;\n  }\n};\n\n// Any change here should be reflected in API's `server/graphql/cache.js`\nexport const getBudgetSectionQueryVariables = (collectiveSlug, hostSlug, isIndividual) => {\n  if (isIndividual) {\n    return { slug: collectiveSlug, limit: 3, kind: getDefaultKinds().filter(kind => kind !== TransactionKind.EXPENSE) };\n  } else {\n    return { slug: collectiveSlug, hostSlug, limit: 3, kind: getDefaultKinds() };\n  }\n};\n\nconst BudgetItemContainer = styled.div`\n  ${props =>\n    !props.$isFirst &&\n    css`\n      border-top: 1px solid #e6e8eb;\n    `}\n`;\n\nconst FILTERS = ['all', 'expenses', 'transactions'];\n\nconst geFilterLabel = (filter, isIndividual) => {\n  switch (filter) {\n    case 'all':\n      return <FormattedMessage id=\"SectionTransactions.All\" defaultMessage=\"All\" />;\n    case 'expenses':\n      return <FormattedMessage id=\"Expenses\" defaultMessage=\"Expenses\" />;\n    case 'transactions':\n      return isIndividual ? (\n        <FormattedMessage id=\"Contributions\" defaultMessage=\"Contributions\" />\n      ) : (\n        <FormattedMessage id=\"menu.transactions\" defaultMessage=\"Transactions\" />\n      );\n    default:\n      return null;\n  }\n};\n\nconst getBudgetItems = (transactions, expenses, filter) => {\n  if (filter === 'expenses') {\n    return expenses;\n  } else if (filter === 'transactions') {\n    return transactions;\n  } else {\n    const expenseIds = expenses.map(expense => expense.id);\n    const transactionsWithoutMatchingExpense = transactions.filter(\n      transaction => !expenseIds.includes(transaction.expense?.id),\n    );\n    return orderBy([...transactionsWithoutMatchingExpense, ...expenses], 'createdAt', 'desc').slice(0, 3);\n  }\n};\n\nconst ViewAllLink = ({ collective, filter, hasExpenses, hasTransactions, isIndividual }) => {\n  const isFilterAll = filter === 'all';\n  if (filter === 'expenses' || (isFilterAll && hasExpenses && !hasTransactions)) {\n    return (\n      <Link\n        href={`${getCollectivePageRoute(collective)}/${isIndividual ? 'submitted-expenses' : 'expenses'}`}\n        data-cy=\"view-all-expenses-link\"\n      >\n        <span>\n          <FormattedMessage id=\"CollectivePage.SectionBudget.ViewAllExpenses\" defaultMessage=\"View all expenses\" />\n          &nbsp; &rarr;\n        </span>\n      </Link>\n    );\n  } else if (isFilterAll && isIndividual) {\n    return (\n      <Link href={`${getCollectivePageRoute(collective)}/transactions`} data-cy=\"view-all-transactions-link\">\n        <FormattedMessage id=\"transactions.viewAll\" defaultMessage=\"View All Transactions\" />\n        &nbsp; &rarr;\n      </Link>\n    );\n  } else if (filter === 'transactions' || (isFilterAll && hasTransactions && !hasExpenses)) {\n    return isIndividual ? (\n      <Link\n        href={`${getCollectivePageRoute(collective)}/transactions?kind=ADDED_FUNDS,CONTRIBUTION,PLATFORM_TIP`}\n        data-cy=\"view-all-transactions-link\"\n      >\n        <FormattedMessage\n          id=\"CollectivePage.SectionBudget.ViewAllContributions\"\n          defaultMessage=\"View all contributions\"\n        />\n        &nbsp; &rarr;\n      </Link>\n    ) : (\n      <Link href={`${getCollectivePageRoute(collective)}/transactions`} data-cy=\"view-all-transactions-link\">\n        <FormattedMessage id=\"CollectivePage.SectionBudget.ViewAll\" defaultMessage=\"View all transactions\" /> &rarr;\n      </Link>\n    );\n  } else {\n    return null;\n  }\n};\n\nViewAllLink.propTypes = {\n  collective: PropTypes.object,\n  hasExpenses: PropTypes.bool,\n  isIndividual: PropTypes.bool,\n  hasTransactions: PropTypes.bool,\n  filter: PropTypes.oneOf(FILTERS),\n};\n\n/**\n * The budget section. Shows the expenses, the latest transactions and some statistics\n * abut the global budget of the collective.\n */\nconst SectionBudget = ({ collective, LoggedInUser }) => {\n  const [filter, setFilter] = React.useState('all');\n  const isIndividual = isIndividualAccount(collective) && !collective.isHost;\n  const budgetQueryResult = useQuery(getBudgetSectionQuery(Boolean(collective.host), isIndividual), {\n    variables: getBudgetSectionQueryVariables(collective.slug, collective.host?.slug, isIndividual),\n    context: API_V2_CONTEXT,\n  });\n  const { data, refetch } = budgetQueryResult;\n\n  const transactions = get(data, 'transactions.nodes') || EMPTY_ARRAY;\n  const expenses = get(data, 'expenses.nodes') || EMPTY_ARRAY;\n  const budgetItemsParams = [transactions, expenses, filter];\n  const allItems = React.useMemo(() => getBudgetItems(...budgetItemsParams), budgetItemsParams);\n  const isLoading = !allItems.length && budgetQueryResult.loading;\n  const hasExpenses = Boolean(expenses.length);\n  const hasTransactions = Boolean(transactions.length);\n\n  // Refetch data when user logs in to refresh permissions\n  React.useEffect(() => {\n    if (LoggedInUser) {\n      refetch();\n    }\n  }, [LoggedInUser]);\n\n  return (\n    <ContainerSectionContent pb={4}>\n      {(hasExpenses || hasTransactions) && (\n        <Flex\n          mb={3}\n          flexWrap=\"wrap\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          maxWidth={['100%', null, 'min(748px, 55vw)']}\n        >\n          <StyledFilters\n            filters={FILTERS}\n            getLabel={filter => geFilterLabel(filter, isIndividual)}\n            selected={filter}\n            onChange={setFilter}\n          />\n          <ViewAllLink\n            collective={collective}\n            filter={filter}\n            hasExpenses={hasExpenses}\n            hasTransactions={hasTransactions}\n            isIndividual={isIndividual}\n          />\n        </Flex>\n      )}\n      <Flex flexDirection={['column-reverse', null, 'row']} justifyContent=\"space-between\" alignItems=\"flex-start\">\n        <Container flex=\"10\" mb={3} width=\"100%\" maxWidth={800}>\n          <StyledCard>\n            {isLoading ? (\n              <LoadingPlaceholder height={300} />\n            ) : !allItems.length ? (\n              <Container textAlign=\"center\" py={94} px={2}>\n                <Image src=\"/static/images/empty-jars.png\" alt=\"Empty jars\" width={125} height={125} />\n                <P fontWeight=\"500\" fontSize=\"20px\" lineHeight=\"28px\">\n                  <FormattedMessage id=\"Budget.Empty\" defaultMessage=\"There are no transactions yet.\" />\n                </P>\n                <P mt={2} fontSize=\"16px\" lineHeight=\"24px\" color=\"black.600\">\n                  <FormattedMessage\n                    id=\"Budget.EmptyComeBackLater\"\n                    defaultMessage=\"Come back to this section once there is at least one transaction!\"\n                  />\n                </P>\n              </Container>\n            ) : (\n              allItems.map((item, idx) => {\n                return (\n                  <BudgetItemContainer\n                    key={`${item.__typename}-${item?.id || idx}`}\n                    $isFirst={!idx}\n                    data-cy=\"single-budget-item\"\n                  >\n                    {item.__typename === 'Expense' ? (\n                      <DebitItem>\n                        <ExpenseBudgetItem expense={item} host={data?.host} showAmountSign showProcessActions />\n                      </DebitItem>\n                    ) : (\n                      <TransactionItem\n                        transaction={item}\n                        collective={collective}\n                        displayActions\n                        onMutationSuccess={refetch}\n                      />\n                    )}\n                  </BudgetItemContainer>\n                );\n              })\n            )}\n          </StyledCard>\n        </Container>\n\n        <Box width=\"32px\" flex=\"1\" />\n\n        {isLoading ? (\n          <LoadingPlaceholder height={300} />\n        ) : (\n          <BudgetStats collective={collective} stats={data?.account?.stats} />\n        )}\n      </Flex>\n    </ContainerSectionContent>\n  );\n};\n\nSectionBudget.propTypes = {\n  /** Collective */\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n    isArchived: PropTypes.bool,\n    isHost: PropTypes.bool,\n    settings: PropTypes.object,\n    host: PropTypes.object,\n  }),\n\n  LoggedInUser: PropTypes.object,\n};\n\nexport default React.memo(withUser(SectionBudget));\n","import React from 'react';\nimport MaskedInput from 'react-text-mask';\n\nimport StyledInput from './StyledInput';\n\nconst StyledInputMask = props => <MaskedInput {...props} />;\n\nStyledInputMask.propTypes = {\n  ...StyledInput.propTypes,\n  ...MaskedInput.propTypes,\n};\n\nStyledInputMask.defaultProps = {\n  // eslint-disable-next-line react/display-name\n  render: (ref, props) => <StyledInput ref={ref} {...props} />,\n};\n\nexport default StyledInputMask;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useLazyQuery, useMutation } from '@apollo/client';\nimport { useFormik } from 'formik';\nimport { debounce } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport CollectivePicker, { FLAG_COLLECTIVE_PICKER_COLLECTIVE } from '../CollectivePicker';\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport Container from '../Container';\nimport { Grid } from '../Grid';\nimport CreditCard from '../icons/CreditCard';\nimport StyledButton from '../StyledButton';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputField from '../StyledInputField';\nimport StyledInputGroup from '../StyledInputGroup';\nimport StyledInputMask from '../StyledInputMask';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport StyledSelect from '../StyledSelect';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst initialValues = {\n  cardNumber: undefined,\n  collective: undefined,\n  expiryDate: undefined,\n  cvv: undefined,\n  assignee: undefined,\n  provider: undefined,\n  cardName: undefined,\n};\n\nconst assignNewVirtualCardMutation = gql`\n  mutation assignNewVirtualCard(\n    $virtualCard: VirtualCardInput!\n    $account: AccountReferenceInput!\n    $assignee: AccountReferenceInput!\n  ) {\n    assignNewVirtualCard(virtualCard: $virtualCard, account: $account, assignee: $assignee) {\n      id\n      name\n      last4\n      data\n    }\n  }\n`;\n\nconst collectiveMembersQuery = gql`\n  query CollectiveMembers($slug: String!) {\n    account(slug: $slug) {\n      id\n      members(role: ADMIN) {\n        nodes {\n          id\n          account {\n            id\n            name\n            imageUrl\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst throttledCall = debounce((searchFunc, variables) => {\n  return searchFunc({ variables });\n}, 750);\n\nconst AssignVirtualCardModal = ({ collective, host, onSuccess, onClose, ...modalProps }) => {\n  const { addToast } = useToasts();\n  const [assignNewVirtualCard, { loading: isBusy }] = useMutation(assignNewVirtualCardMutation, {\n    context: API_V2_CONTEXT,\n  });\n  const [getCollectiveUsers, { loading: isLoadingUsers, data: users }] = useLazyQuery(collectiveMembersQuery, {\n    context: API_V2_CONTEXT,\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      ...initialValues,\n      collective,\n    },\n    async onSubmit(values) {\n      const { collective, assignee, provider, cardName } = values;\n      const privateData = {\n        cardNumber: values.cardNumber.replace(/\\s+/g, ''),\n        cvv: values.cvv,\n        expiryDate: values.expiryDate,\n        // Should be removed once https://github.com/opencollective/opencollective-api/pull/7307 is deployed to production\n        expireDate: values.expiryDate,\n      };\n\n      try {\n        await assignNewVirtualCard({\n          variables: {\n            virtualCard: {\n              privateData,\n              provider,\n              name: cardName,\n            },\n            assignee: { id: assignee.id },\n            account: typeof collective.id === 'string' ? { id: collective.id } : { legacyId: collective.id },\n          },\n        });\n      } catch (e) {\n        addToast({\n          type: TOAST_TYPE.ERROR,\n          message: (\n            <FormattedMessage\n              id=\"Host.VirtualCards.AssignCard.Error\"\n              defaultMessage=\"Error assigning card: {error}\"\n              values={{\n                error: e.message,\n              }}\n            />\n          ),\n        });\n        return;\n      }\n      onSuccess?.();\n      handleClose();\n    },\n    validate(values) {\n      const errors = {};\n      if (!values.cardNumber) {\n        errors.cardNumber = 'Required';\n      } else if (values.cardNumber.length < 16 + 6) {\n        errors.cardNumber = 'Card Number must have 16 digits';\n      }\n      if (!values.collective) {\n        errors.collective = 'Required';\n      }\n      if (!values.provider) {\n        errors.provider = 'Required';\n      }\n      if (!values.cardName) {\n        errors.cardName = 'Required';\n      }\n      if (!values.assignee) {\n        errors.assignee = 'Required';\n      }\n      if (!values.expiryDate) {\n        errors.expiryDate = 'Required';\n      }\n      if (!values.cvv) {\n        errors.cvv = 'Required';\n      }\n      return errors;\n    },\n  });\n\n  useEffect(() => {\n    if (formik.values.collective?.slug) {\n      throttledCall(getCollectiveUsers, { slug: formik.values.collective.slug });\n    }\n  }, [formik.values.collective]);\n\n  const handleClose = () => {\n    formik.resetForm(initialValues);\n    formik.setErrors({});\n    onClose?.();\n  };\n  const handleCollectivePick = async option => {\n    formik.setFieldValue('collective', option.value);\n    formik.setFieldValue('assignee', null);\n  };\n\n  const collectiveUsers = users?.account?.members.nodes.map(node => node.account);\n\n  return (\n    <StyledModal width=\"382px\" onClose={handleClose} trapFocus {...modalProps}>\n      <form onSubmit={formik.handleSubmit}>\n        <ModalHeader onClose={handleClose}>\n          <FormattedMessage id=\"Host.VirtualCards.AssignCard\" defaultMessage=\"Assign Card\" />\n        </ModalHeader>\n        <ModalBody pt={2}>\n          <P>\n            <FormattedMessage\n              id=\"Host.VirtualCards.AssignCard.Description\"\n              defaultMessage=\"Assign existing card to a collective sharing the private information below.\"\n            />\n          </P>\n          <StyledHr borderColor=\"black.300\" mt={3} />\n          <Grid mt={3} gridTemplateColumns=\"repeat(2, 1fr)\" gridGap=\"26px 8px\">\n            <StyledInputField\n              gridColumn=\"1/3\"\n              labelFontSize=\"13px\"\n              label={<FormattedMessage defaultMessage=\"Which collective will be assigned to this card?\" />}\n              htmlFor=\"collective\"\n              error={formik.touched.collective && formik.errors.collective}\n            >\n              {inputProps => (\n                <CollectivePickerAsync\n                  {...inputProps}\n                  hostCollectiveIds={[host.legacyId]}\n                  name=\"collective\"\n                  id=\"collective\"\n                  collective={formik.values.collective}\n                  isDisabled={!!collective || isBusy}\n                  customOptions={[\n                    {\n                      value: host,\n                      label: host.name,\n                      [FLAG_COLLECTIVE_PICKER_COLLECTIVE]: true,\n                    },\n                  ]}\n                  onChange={handleCollectivePick}\n                  filterResults={collectives => collectives.filter(c => c.isActive)}\n                />\n              )}\n            </StyledInputField>\n            <StyledInputField\n              gridColumn=\"1/3\"\n              labelFontSize=\"13px\"\n              label={<FormattedMessage defaultMessage=\"Which user will be responsible for this card?\" />}\n              htmlFor=\"assignee\"\n              error={formik.touched.assignee && formik.errors.assignee}\n            >\n              {inputProps => (\n                <CollectivePicker\n                  {...inputProps}\n                  name=\"assignee\"\n                  id=\"assignee\"\n                  groupByType={false}\n                  collectives={collectiveUsers}\n                  collective={formik.values.assignee}\n                  isDisabled={isLoadingUsers || isBusy}\n                  onChange={option => formik.setFieldValue('assignee', option.value)}\n                />\n              )}\n            </StyledInputField>\n\n            <StyledInputField\n              gridColumn=\"1/3\"\n              labelFontSize=\"13px\"\n              label=\"What payment provider do you use for this card?\"\n              htmlFor=\"provider\"\n              error={formik.touched.provider && formik.errors.provider}\n            >\n              {inputProps => (\n                <StyledSelect\n                  {...inputProps}\n                  id=\"provider\"\n                  inputId=\"provider\"\n                  placeholder=\"Select\"\n                  options={[\n                    { key: 'PRIVACY', value: 'PRIVACY', label: 'Privacy' },\n                    { key: 'STRIPE', value: 'STRIPE', label: 'Stripe' },\n                  ]}\n                  isSearchable={false}\n                  disabled={isBusy}\n                  onChange={option => formik.setFieldValue('provider', option.value)}\n                />\n              )}\n            </StyledInputField>\n\n            <StyledInputField\n              gridColumn=\"1/3\"\n              labelFontSize=\"13px\"\n              label={<FormattedMessage defaultMessage=\"Card name\" />}\n              htmlFor=\"cardName\"\n              error={formik.touched.cardName && formik.errors.cardName}\n            >\n              {inputProps => (\n                <StyledInput\n                  {...inputProps}\n                  name=\"cardName\"\n                  id=\"cardName\"\n                  onChange={formik.handleChange}\n                  value={formik.values.cardName}\n                  disabled={isBusy}\n                  guide={false}\n                />\n              )}\n            </StyledInputField>\n\n            <StyledInputField\n              gridColumn=\"1/3\"\n              labelFontSize=\"13px\"\n              label={<FormattedMessage defaultMessage=\"Card number\" />}\n              htmlFor=\"number\"\n              error={formik.touched.cardNumber && formik.errors.cardNumber}\n            >\n              {inputProps => (\n                <StyledInputMask\n                  {...inputProps}\n                  name=\"cardNumber\"\n                  id=\"cardNumber\"\n                  onChange={formik.handleChange}\n                  value={formik.values.cardNumber}\n                  mask={[\n                    /\\d/,\n                    /\\d/,\n                    /\\d/,\n                    /\\d/,\n                    ' ',\n                    ' ',\n                    /\\d/,\n                    /\\d/,\n                    /\\d/,\n                    /\\d/,\n                    ' ',\n                    ' ',\n                    /\\d/,\n                    /\\d/,\n                    /\\d/,\n                    /\\d/,\n                    ' ',\n                    ' ',\n                    /\\d/,\n                    /\\d/,\n                    /\\d/,\n                    /\\d/,\n                  ]}\n                  render={(ref, props) => (\n                    <StyledInputGroup\n                      prepend={<CreditCard height=\"18px\" style={{ marginTop: '-1px' }} />}\n                      prependProps={{ bg: 'transparent', ml: 2 }}\n                      innerRef={ref}\n                      {...props}\n                    />\n                  )}\n                  disabled={isBusy}\n                  guide={false}\n                />\n              )}\n            </StyledInputField>\n            <StyledInputField\n              labelFontSize=\"13px\"\n              label={<FormattedMessage defaultMessage=\"Expiry date\" />}\n              htmlFor=\"expiryDate\"\n              error={formik.touched.expiryDate && formik.errors.expiryDate}\n            >\n              {inputProps => (\n                <StyledInputMask\n                  {...inputProps}\n                  name=\"expiryDate\"\n                  id=\"expiryDate\"\n                  onChange={formik.handleChange}\n                  value={formik.values.expiryDate}\n                  mask={[/[01]/, /\\d/, '/', '2', '0', /\\d/, /\\d/]}\n                  placeholder=\"MM/YYYY\"\n                  guide={false}\n                  disabled={isBusy}\n                />\n              )}\n            </StyledInputField>\n            <StyledInputField\n              labelFontSize=\"13px\"\n              label={<FormattedMessage defaultMessage=\"CVV/CVC\" />}\n              htmlFor=\"cvv\"\n              error={formik.touched.cvv && formik.errors.cvv}\n            >\n              {inputProps => (\n                <StyledInputMask\n                  {...inputProps}\n                  id=\"cvv\"\n                  name=\"cvv\"\n                  onChange={formik.handleChange}\n                  value={formik.values.cvv}\n                  mask={[/\\d/, /\\d/, /\\d/]}\n                  guide={false}\n                  placeholder=\"123\"\n                  disabled={isBusy}\n                />\n              )}\n            </StyledInputField>\n          </Grid>\n        </ModalBody>\n        <ModalFooter isFullWidth>\n          <Container display=\"flex\" justifyContent={['center', 'flex-end']} flexWrap=\"Wrap\">\n            <StyledButton\n              my={1}\n              minWidth={140}\n              buttonStyle=\"primary\"\n              data-cy=\"confirmation-modal-continue\"\n              loading={isBusy}\n              type=\"submit\"\n              textTransform=\"capitalize\"\n            >\n              <FormattedMessage id=\"SaveCard\" defaultMessage=\"Save Card\" />\n            </StyledButton>\n          </Container>\n        </ModalFooter>\n      </form>\n    </StyledModal>\n  );\n};\n\nAssignVirtualCardModal.propTypes = {\n  onClose: PropTypes.func,\n  onSuccess: PropTypes.func,\n  host: PropTypes.shape({\n    legacyId: PropTypes.number,\n    slug: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.string,\n    name: PropTypes.string,\n    imageUrl: PropTypes.string,\n  }).isRequired,\n  collective: PropTypes.shape({\n    slug: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.string,\n    name: PropTypes.string,\n    imageUrl: PropTypes.string,\n  }),\n};\n\n/** @component */\nexport default AssignVirtualCardModal;\n","import { defineMessages } from 'react-intl';\n\nimport { VirtualCardLimitInterval } from '../graphql/types/v2/graphql';\n\nexport const VirtualCardLimitIntervalDescriptionsI18n = defineMessages({\n  [VirtualCardLimitInterval.ALL_TIME]: {\n    id: 'virtualCard.intervalLimitDescription.all_time',\n    defaultMessage: 'Total amount that can be spent with this card.',\n  },\n  [VirtualCardLimitInterval.DAILY]: {\n    id: 'virtualCard.intervalLimitDescription.daily',\n    defaultMessage: 'Daily amount that can be spent with this card.',\n  },\n  [VirtualCardLimitInterval.MONTHLY]: {\n    id: 'virtualCard.intervalLimitDescription.monthly',\n    defaultMessage: 'Monthly amount that can be spent with this card.',\n  },\n  [VirtualCardLimitInterval.PER_AUTHORIZATION]: {\n    id: 'virtualCard.intervalLimitDescription.per_authorization',\n    defaultMessage: 'Amount that can be spent with this card per use.',\n  },\n  [VirtualCardLimitInterval.WEEKLY]: {\n    id: 'virtualCard.intervalLimitDescription.weekly',\n    defaultMessage: 'Weekly amount that can be spent with this card.',\n  },\n  [VirtualCardLimitInterval.YEARLY]: {\n    id: 'virtualCard.intervalLimitDescription.yearly',\n    defaultMessage: 'Yearly amount that can be spent with this card.',\n  },\n});\n\nexport const VirtualCardLimitIntervalI18n = defineMessages({\n  [VirtualCardLimitInterval.ALL_TIME]: {\n    defaultMessage: 'All time',\n  },\n  [VirtualCardLimitInterval.DAILY]: {\n    id: 'virtualCard.intervalLimit.daily',\n    defaultMessage: 'Daily',\n  },\n  [VirtualCardLimitInterval.MONTHLY]: {\n    id: 'Frequency.Monthly',\n    defaultMessage: 'Monthly',\n  },\n  [VirtualCardLimitInterval.PER_AUTHORIZATION]: {\n    id: 'virtualCard.intervalLimit.per_authorization',\n    defaultMessage: 'Per authorization',\n  },\n  [VirtualCardLimitInterval.WEEKLY]: {\n    id: 'week',\n    defaultMessage: 'Weekly',\n  },\n  [VirtualCardLimitInterval.YEARLY]: {\n    id: 'Frequency.Yearly',\n    defaultMessage: 'Yearly',\n  },\n});\n","import React, { useEffect } from 'react';\nimport { gql, useLazyQuery, useMutation, useQuery } from '@apollo/client';\nimport { ExclamationCircle } from '@styled-icons/fa-solid/ExclamationCircle';\nimport { useFormik } from 'formik';\nimport { debounce } from 'lodash';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport roles from '../../lib/constants/roles';\nimport { graphqlAmountValueInCents } from '../../lib/currency-utils';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { Account, VirtualCard, VirtualCardLimitInterval } from '../../lib/graphql/types/v2/graphql';\nimport useLoggedInUser from '../../lib/hooks/useLoggedInUser';\nimport {\n  VirtualCardLimitIntervalDescriptionsI18n,\n  VirtualCardLimitIntervalI18n,\n} from '../../lib/virtual-cards/constants';\n\nimport CollectivePicker, { FLAG_COLLECTIVE_PICKER_COLLECTIVE } from '../CollectivePicker';\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport { Box, Flex } from '../Grid';\nimport { getI18nLink } from '../I18nFormatters';\nimport Link from '../Link';\nimport StyledButton from '../StyledButton';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputAmount from '../StyledInputAmount';\nimport StyledInputField from '../StyledInputField';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport StyledSelect from '../StyledSelect';\nimport { P, Span } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst editVirtualCardMutation = gql`\n  mutation editVirtualCard(\n    $virtualCard: VirtualCardReferenceInput!\n    $name: String!\n    $limitAmount: AmountInput\n    $limitInterval: VirtualCardLimitInterval\n    $assignee: AccountReferenceInput!\n  ) {\n    editVirtualCard(\n      virtualCard: $virtualCard\n      name: $name\n      limitAmount: $limitAmount\n      limitInterval: $limitInterval\n      assignee: $assignee\n    ) {\n      id\n      name\n      spendingLimitAmount\n      spendingLimitInterval\n      assignee {\n        id\n        name\n        slug\n        imageUrl\n      }\n    }\n  }\n`;\n\nconst createVirtualCardMutation = gql`\n  mutation createVirtualCard(\n    $name: String!\n    $limitAmount: AmountInput!\n    $limitInterval: VirtualCardLimitInterval!\n    $account: AccountReferenceInput!\n    $assignee: AccountReferenceInput!\n  ) {\n    createVirtualCard(\n      name: $name\n      limitAmount: $limitAmount\n      limitInterval: $limitInterval\n      account: $account\n      assignee: $assignee\n    ) {\n      id\n      name\n      last4\n      data\n    }\n  }\n`;\n\n// TODO : refactor this mutation\nconst collectiveMembersQuery = gql`\n  query CollectiveMembers($slug: String!) {\n    account(slug: $slug) {\n      id\n      members(role: ADMIN) {\n        nodes {\n          id\n          account {\n            id\n            name\n            imageUrl\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst VirtualCardPoliciesQuery = gql`\n  query VirtualCardPoliciesQuery($slug: String) {\n    account(slug: $slug) {\n      id\n      policies {\n        MAXIMUM_VIRTUAL_CARD_LIMIT_AMOUNT_FOR_INTERVAL {\n          ALL_TIME {\n            valueInCents\n          }\n          DAILY {\n            valueInCents\n          }\n          MONTHLY {\n            valueInCents\n          }\n          PER_AUTHORIZATION {\n            valueInCents\n          }\n          WEEKLY {\n            valueInCents\n          }\n          YEARLY {\n            valueInCents\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst throttledCall = debounce((searchFunc, variables) => {\n  return searchFunc({ variables });\n}, 750);\n\nexport type EditVirtualCardModalProps = {\n  host: Account;\n  collective: Account;\n  virtualCard: VirtualCard;\n  onSuccess: (el: React.ReactNode) => void;\n  onClose: () => void;\n  modalProps: any;\n};\n\nexport default function EditVirtualCardModal({\n  host,\n  collective,\n  virtualCard,\n  onSuccess,\n  onClose,\n  modalProps,\n}: EditVirtualCardModalProps) {\n  const { addToast } = useToasts();\n\n  const { data: policyData, loading: isLoadingPolicy } = useQuery(VirtualCardPoliciesQuery, {\n    context: API_V2_CONTEXT,\n    variables: {\n      slug: host.slug,\n    },\n  });\n\n  const MAXIMUM_VIRTUAL_CARD_LIMIT_AMOUNT_FOR_INTERVAL =\n    policyData?.account?.policies?.MAXIMUM_VIRTUAL_CARD_LIMIT_AMOUNT_FOR_INTERVAL;\n\n  const isEditing = virtualCard?.id ? true : false;\n  const formMutation = isEditing ? editVirtualCardMutation : createVirtualCardMutation;\n\n  const [submitForm, { loading: isBusy }] = useMutation(formMutation, {\n    context: API_V2_CONTEXT,\n  });\n  const [getCollectiveUsers, { loading: isLoadingUsers, data: users }] = useLazyQuery(collectiveMembersQuery, {\n    context: API_V2_CONTEXT,\n  });\n\n  const { LoggedInUser } = useLoggedInUser();\n  const isHostAdmin = LoggedInUser?.hasRole(roles.ADMIN, host);\n\n  const canEditLimit = isHostAdmin && (!isEditing || virtualCard.provider === 'STRIPE');\n  const currency = virtualCard?.currency ?? host.currency ?? 'USD';\n\n  const formik = useFormik({\n    initialValues: {\n      collective: isEditing ? undefined : collective,\n      cardName: virtualCard?.name,\n      assignee: virtualCard?.assignee,\n      limitAmount: canEditLimit ? virtualCard?.spendingLimitAmount : undefined,\n      limitInterval: canEditLimit ? virtualCard?.spendingLimitInterval ?? VirtualCardLimitInterval.MONTHLY : undefined,\n    },\n    async onSubmit(values) {\n      const { assignee, cardName, limitAmount, limitInterval, collective } = values;\n\n      try {\n        const variables = {\n          virtualCard: isEditing ? { id: virtualCard.id } : undefined,\n          account: isEditing\n            ? undefined\n            : typeof collective.id === 'string'\n            ? { id: collective.id }\n            : { legacyId: collective.id },\n          name: cardName,\n          assignee: { id: assignee.id },\n          limitAmount: undefined,\n          limitInterval: undefined,\n        };\n\n        if (canEditLimit) {\n          variables.limitAmount = {\n            currency,\n            valueInCents: limitAmount,\n            value: limitAmount / 100,\n          };\n\n          variables.limitInterval = limitInterval;\n        }\n\n        await submitForm({ variables });\n      } catch (e) {\n        addToast({\n          type: TOAST_TYPE.ERROR,\n          message: (\n            <FormattedMessage\n              defaultMessage=\"Error submiting form: {error}\"\n              values={{\n                error: e.message,\n              }}\n            />\n          ),\n        });\n        return;\n      }\n\n      onSuccess?.(<FormattedMessage defaultMessage=\"Card successfully updated\" />);\n      handleClose();\n    },\n    validate(values: any) {\n      const errors: any = {};\n      if (!isEditing && !values.collective) {\n        errors.collective = 'Required';\n      }\n\n      if (!values.assignee) {\n        errors.assignee = 'Required';\n      }\n      if (!values.cardName) {\n        errors.cardName = 'Required';\n      }\n      if (canEditLimit && !values.limitAmount) {\n        errors.limitAmount = 'Required';\n      }\n      if (values.limitInterval) {\n        const maximumLimitForInterval = graphqlAmountValueInCents(\n          MAXIMUM_VIRTUAL_CARD_LIMIT_AMOUNT_FOR_INTERVAL[values.limitInterval],\n        );\n        if (values.limitAmount > maximumLimitForInterval * 100) {\n          errors.limitAmount = `Limit for this interval should not exceed ${maximumLimitForInterval} ${currency}`;\n        }\n      }\n      return errors;\n    },\n  });\n\n  const cardCollective = isEditing ? virtualCard.account : formik.values.collective;\n\n  useEffect(() => {\n    if (cardCollective?.slug) {\n      throttledCall(getCollectiveUsers, { slug: cardCollective.slug });\n    }\n  }, [cardCollective]);\n\n  const intl = useIntl();\n\n  const handleClose = () => {\n    onClose?.();\n  };\n\n  const virtualCardLimitOptions = Object.keys(VirtualCardLimitInterval).map(interval => ({\n    value: interval,\n    label: intl.formatMessage(VirtualCardLimitIntervalI18n[interval]),\n  }));\n\n  const collectiveUsers = users?.account?.members.nodes.map(node => node.account);\n\n  return (\n    <StyledModal width=\"382px\" onClose={handleClose} trapFocus {...modalProps}>\n      <form onSubmit={formik.handleSubmit}>\n        <ModalHeader onClose={handleClose} hideCloseIcon={false}>\n          {isEditing ? (\n            <FormattedMessage defaultMessage=\"Edit virtual card\" />\n          ) : (\n            <FormattedMessage defaultMessage=\"Create virtual card\" />\n          )}\n        </ModalHeader>\n        <ModalBody pt={2}>\n          <P>\n            {isEditing ? (\n              <FormattedMessage defaultMessage=\"Edit virtual card for a collective with the information below.\" />\n            ) : (\n              <FormattedMessage defaultMessage=\"Create virtual card for a collective with the information below.\" />\n            )}\n          </P>\n          <StyledHr borderColor=\"black.300\" mt={3} />\n          <Flex flexDirection=\"column\" mt={3}>\n            {!isEditing && (\n              <StyledInputField\n                mb={3}\n                labelFontSize=\"13px\"\n                labelFontWeight=\"bold\"\n                label={<FormattedMessage defaultMessage=\"Which collective will be assigned to this card?\" />}\n                htmlFor=\"collective\"\n                error={formik.touched.collective && formik.errors.collective}\n              >\n                {inputProps => (\n                  <CollectivePickerAsync\n                    {...inputProps}\n                    hostCollectiveIds={[host.legacyId]}\n                    name=\"collective\"\n                    id=\"collective\"\n                    collective={formik.values.collective}\n                    isDisabled={!!collective || isBusy}\n                    customOptions={[\n                      {\n                        value: host,\n                        label: host.name,\n                        [FLAG_COLLECTIVE_PICKER_COLLECTIVE]: true,\n                      },\n                    ]}\n                    onChange={option => {\n                      formik.setFieldValue('collective', option.value);\n                      formik.setFieldValue('assignee', null);\n                    }}\n                    filterResults={collectives => collectives.filter(c => c.isActive)}\n                  />\n                )}\n              </StyledInputField>\n            )}\n\n            <StyledInputField\n              labelFontSize=\"13px\"\n              labelFontWeight=\"bold\"\n              label={<FormattedMessage defaultMessage=\"Who is this card assigned to?\" />}\n              htmlFor=\"assignee\"\n              error={formik.touched.assignee && formik.errors.assignee}\n            >\n              {inputProps => (\n                <CollectivePicker\n                  {...inputProps}\n                  name=\"assignee\"\n                  id=\"assignee\"\n                  groupByType={false}\n                  collectives={collectiveUsers}\n                  collective={formik.values.assignee}\n                  isDisabled={isLoadingUsers || isBusy}\n                  onChange={option => formik.setFieldValue('assignee', option.value)}\n                />\n              )}\n            </StyledInputField>\n\n            <StyledInputField\n              mt={3}\n              labelFontWeight=\"bold\"\n              labelFontSize=\"13px\"\n              label={<FormattedMessage defaultMessage=\"Card name\" />}\n              htmlFor=\"cardName\"\n              error={formik.touched.cardName && formik.errors.cardName}\n            >\n              {inputProps => (\n                <StyledInput\n                  {...inputProps}\n                  name=\"cardName\"\n                  id=\"cardName\"\n                  placeholder={intl.formatMessage({ defaultMessage: 'e.g Card for Subscription' })}\n                  onChange={formik.handleChange}\n                  value={formik.values.cardName}\n                  disabled={isBusy}\n                  guide={false}\n                />\n              )}\n            </StyledInputField>\n\n            {canEditLimit && (\n              <React.Fragment>\n                <Flex mt={3} width=\"100%\" alignItems=\"flex-start\" justifyContent=\"space-between\">\n                  <StyledInputField\n                    flexGrow={1}\n                    labelFontSize=\"13px\"\n                    labelFontWeight=\"bold\"\n                    label={\n                      <FormattedMessage\n                        defaultMessage=\"Limit Interval <link>(Read More)</link>\"\n                        values={{\n                          link: getI18nLink({\n                            as: Link,\n                            openInNewTab: true,\n                            href: 'https://docs.opencollective.com/help/expenses-and-getting-paid/virtual-cards',\n                          }),\n                        }}\n                      />\n                    }\n                    htmlFor=\"limitInterval\"\n                  >\n                    {inputProps => (\n                      <StyledSelect\n                        {...inputProps}\n                        inputId=\"limitInterval\"\n                        data-cy=\"limitInterval\"\n                        error={formik.touched.limitAmount && Boolean(formik.errors.limitAmount)}\n                        onBlur={() => formik.setFieldTouched('limitInterval', true)}\n                        onChange={({ value }) => formik.setFieldValue('limitInterval', value)}\n                        isLoading={isBusy}\n                        options={virtualCardLimitOptions}\n                        value={virtualCardLimitOptions.find(option => option.value === formik.values.limitInterval)}\n                      />\n                    )}\n                  </StyledInputField>\n                  <StyledInputField\n                    ml={3}\n                    labelFontSize=\"13px\"\n                    labelFontWeight=\"bold\"\n                    label={<FormattedMessage defaultMessage=\"Card Limit\" />}\n                    htmlFor=\"limitAmount\"\n                  >\n                    {inputProps => (\n                      <StyledInputAmount\n                        {...inputProps}\n                        id=\"limitAmount\"\n                        placeholder=\"0.00\"\n                        error={formik.touched.limitAmount && Boolean(formik.errors.limitAmount)}\n                        currency={currency}\n                        prepend={currency}\n                        onChange={value => formik.setFieldValue('limitAmount', value)}\n                        value={formik.values.limitAmount}\n                        disabled={isBusy}\n                      />\n                    )}\n                  </StyledInputField>\n                </Flex>\n                <Box pt={2}>\n                  <Span ml={1}>\n                    {intl.formatMessage(VirtualCardLimitIntervalDescriptionsI18n[formik.values.limitInterval])}\n                  </Span>\n                </Box>\n                {formik.touched.limitAmount && formik.errors.limitAmount && (\n                  <Box pt={2}>\n                    <ExclamationCircle color=\"#E03F6A\" size={16} />\n                    <Span ml={1} color=\"black.700\" fontSize=\"14px\">\n                      {formik.errors.limitAmount}\n                    </Span>\n                  </Box>\n                )}\n              </React.Fragment>\n            )}\n          </Flex>\n        </ModalBody>\n        <ModalFooter isFullWidth>\n          <Flex justifyContent=\"flex-end\" flexWrap=\"wrap\">\n            <StyledButton\n              my={1}\n              minWidth={140}\n              buttonStyle=\"primary\"\n              data-cy=\"confirmation-modal-continue\"\n              loading={isBusy}\n              disabled={isLoadingPolicy}\n              type=\"submit\"\n              textTransform=\"capitalize\"\n            >\n              {isEditing ? (\n                <FormattedMessage id=\"actions.update\" defaultMessage=\"Update\" />\n              ) : (\n                <FormattedMessage defaultMessage=\"Create virtual card\" />\n              )}\n            </StyledButton>\n          </Flex>\n        </ModalFooter>\n      </form>\n    </StyledModal>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GST_RATE_PERCENT, TaxType } from '@opencollective/taxes';\nimport { round } from 'lodash';\nimport { useIntl } from 'react-intl';\n\nimport { createError, ERROR } from '../../lib/errors';\n\nimport { Grid } from '../Grid';\nimport StyledInput from '../StyledInput';\nimport StyledInputFormikField from '../StyledInputFormikField';\nimport StyledInputGroup from '../StyledInputGroup';\n\nexport const validateTaxGST = (intl, tax) => {\n  const errors = {};\n  if (tax.type !== TaxType.GST) {\n    return errors;\n  }\n\n  // Not validating rate since it can't be customized\n  // ID number is required if there's a tax rate\n  if (tax.rate && !tax.idNumber) {\n    errors.idNumber = createError(ERROR.FORM_FIELD_REQUIRED);\n  }\n\n  return errors;\n};\n\nconst ExpenseGSTFormikFields = ({ formik, isOptional }) => {\n  const intl = useIntl();\n\n  // If mounted, it means that the form is subject to GST. Let's make sure we initialize taxes field accordingly\n  React.useEffect(() => {\n    if (!formik.values.taxes?.[0]?.type !== TaxType.GST) {\n      formik.setFieldValue('taxes.0', { ...formik.values.taxes?.[0], type: TaxType.GST, rate: GST_RATE_PERCENT / 100 });\n    }\n  }, []);\n\n  return (\n    <Grid gridTemplateColumns=\"75px minmax(120px, 1fr)\" gridGap={2}>\n      <StyledInputFormikField\n        name=\"taxes.0.rate\"\n        htmlFor=\"GST-rate\"\n        label={intl.formatMessage({ defaultMessage: 'GST rate' })}\n        inputType=\"number\"\n        required\n      >\n        {({ field }) => (\n          <StyledInputGroup\n            {...field}\n            value={round(field.value * 100, 2)}\n            append=\"%\"\n            min={0}\n            max={100}\n            step=\"0.01\"\n            disabled\n          />\n        )}\n      </StyledInputFormikField>\n      <StyledInputFormikField\n        name=\"taxes.0.idNumber\"\n        htmlFor=\"GST-number\"\n        label={intl.formatMessage({ id: 'EditCollective.GSTNumber', defaultMessage: 'GST number' })}\n        required={!isOptional}\n        mr={2}\n      >\n        {({ field }) => (\n          <StyledInput\n            {...field}\n            placeholder={intl.formatMessage(\n              { id: 'examples', defaultMessage: 'e.g., {examples}' },\n              { examples: '123456789' },\n            )}\n          />\n        )}\n      </StyledInputFormikField>\n    </Grid>\n  );\n};\n\nExpenseGSTFormikFields.propTypes = {\n  formik: PropTypes.object,\n  isOptional: PropTypes.bool,\n};\n\nexport default ExpenseGSTFormikFields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { saveAs } from 'file-saver';\n\nimport { fetchFromPDFService } from '../../lib/api';\nimport expenseTypes from '../../lib/constants/expenseTypes';\nimport { getErrorFromPdfService } from '../../lib/errors';\nimport { expenseInvoiceUrl } from '../../lib/url-helpers';\n\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst getPrettyDate = expense => {\n  if (!expense?.createdAt) {\n    return '';\n  }\n\n  const utc = new Date(expense.createdAt).toISOString();\n  return `-${utc.split('T')[0]}`;\n};\n\nexport const getExpenseInvoiceFilename = (collective, expense) => {\n  const prettyDate = getPrettyDate(expense);\n  return `Expense-${expense.legacyId}-${collective?.slug}-invoice${prettyDate}.pdf`;\n};\n\nexport const generateInvoiceBlob = async expense => {\n  const invoiceUrl = expenseInvoiceUrl(expense.id);\n  return fetchFromPDFService(invoiceUrl);\n};\n\nexport const downloadExpenseInvoice = async (collective, expense, { setLoading, isLoading, onError }) => {\n  if (isLoading) {\n    return false;\n  }\n\n  const filename = getExpenseInvoiceFilename(collective, expense);\n  setLoading(true);\n  try {\n    const file = await generateInvoiceBlob(expense);\n    return saveAs(file, filename);\n  } catch (e) {\n    const error = getErrorFromPdfService(e);\n    onError(error);\n  } finally {\n    setLoading(false);\n  }\n};\n\nexport const useExpenseInvoiceDownloadHelper = ({ expense, collective, onError, disablePreview }) => {\n  const [isLoading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const { addToast } = useToasts();\n\n  if (![expenseTypes.INVOICE, expenseTypes.SETTLEMENT].includes(expense.type)) {\n    return { error: null, isLoading: false, filename: '', downloadInvoice: null };\n  }\n\n  return {\n    error,\n    isLoading,\n    filename: getExpenseInvoiceFilename(collective, expense),\n    downloadInvoice: () => {\n      return downloadExpenseInvoice(collective, expense, {\n        setLoading,\n        isLoading,\n        disablePreview,\n        onError: error => {\n          setError(error);\n          if (onError) {\n            onError(error);\n          } else {\n            addToast({ type: TOAST_TYPE.ERROR, variant: 'light', message: 'Request failed, please try again later' });\n          }\n        },\n      });\n    },\n  };\n};\n\n/**\n * An helper to build components that download expense's invoice. Does not check the permissions.\n */\nconst ExpenseInvoiceDownloadHelper = ({ children, expense, collective, onError, disablePreview }) => {\n  const state = useExpenseInvoiceDownloadHelper({ expense, collective, onError, disablePreview });\n  return children(state);\n};\n\nExpenseInvoiceDownloadHelper.propTypes = {\n  /** Link content */\n  children: PropTypes.func.isRequired,\n  /** Expense */\n  expense: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    legacyId: PropTypes.number.isRequired,\n  }).isRequired,\n  /** Collective where the expense was posted */\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }),\n  /** Called with an error if anything wrong happens */\n  onError: PropTypes.func,\n};\n\nexport default ExpenseInvoiceDownloadHelper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport expenseStatus from '../../lib/constants/expense-status';\nimport { i18nExpenseStatus } from '../../lib/i18n/expense';\n\nimport { Flex } from '../Grid';\nimport I18nFormatters from '../I18nFormatters';\nimport StyledTag from '../StyledTag';\nimport StyledTooltip from '../StyledTooltip';\n\nexport const getExpenseStatusMsgType = status => {\n  switch (status) {\n    case expenseStatus.REJECTED:\n    case expenseStatus.SPAM:\n    case expenseStatus.ERROR:\n      return 'error';\n    case expenseStatus.PENDING:\n    case expenseStatus.UNVERIFIED:\n      return 'warning';\n    case expenseStatus.SCHEDULED_FOR_PAYMENT:\n    case expenseStatus.APPROVED:\n      return 'info';\n    case expenseStatus.PAID:\n    case 'COMPLETED':\n      return 'success';\n  }\n};\n\nconst ExtendedTag = ({ children, ...props }) => (\n  <StyledTag\n    {...props}\n    background=\"white\"\n    border=\"1px solid\"\n    borderColor=\"yellow.400\"\n    color=\"black.700\"\n    borderRadius=\"0px 4px 4px 0px\"\n    ml=\"-3px\"\n    lineHeight=\"100%\"\n  >\n    {children}\n  </StyledTag>\n);\n\nExtendedTag.propTypes = {\n  children: PropTypes.any,\n};\n\n/**\n * Displays an i18n version of the expense status in a `StyledTag`.\n * The color change in function of the status.\n *\n * Accepts all the props exposed by `StyledTag`.\n */\nconst ExpenseStatusTag = ({ status, showTaxFormTag, showTaxFormMsg, ...props }) => {\n  const intl = useIntl();\n  const tagProps = {\n    fontWeight: '600',\n    fontSize: '10px',\n    letterSpacing: '0.8px',\n    textTransform: 'uppercase',\n    ...props,\n  };\n\n  const tag = (\n    <StyledTag type={getExpenseStatusMsgType(status)} data-cy=\"expense-status-msg\" {...tagProps} {...props}>\n      {i18nExpenseStatus(intl, status)}\n    </StyledTag>\n  );\n\n  if (status === expenseStatus.UNVERIFIED) {\n    return (\n      <Flex alignItems=\"center\">\n        {tag}\n        <ExtendedTag {...tagProps}>\n          <FormattedMessage id=\"Unverified\" defaultMessage=\"Unverified\" />\n        </ExtendedTag>\n      </Flex>\n    );\n  } else if (!showTaxFormTag) {\n    return tag;\n  } else if (!showTaxFormMsg) {\n    return (\n      <Flex alignItems=\"center\">\n        {tag}\n        <ExtendedTag>\n          <FormattedMessage id=\"TaxForm\" defaultMessage=\"Tax form\" />\n        </ExtendedTag>\n      </Flex>\n    );\n  } else {\n    return (\n      <Flex alignItems=\"center\">\n        {tag}\n        <StyledTooltip\n          content={() => (\n            <FormattedMessage\n              id=\"expenseNeedsTaxForm.hover\"\n              defaultMessage=\"We can't pay until we receive your tax info. Check your inbox for an email from HelloWorks. Need help? Contact <SupportLink>support</SupportLink>\"\n              values={I18nFormatters}\n            />\n          )}\n        >\n          <ExtendedTag>\n            <FormattedMessage id=\"TaxForm\" defaultMessage=\"Tax form\" />\n          </ExtendedTag>\n        </StyledTooltip>\n      </Flex>\n    );\n  }\n};\n\nExpenseStatusTag.propTypes = {\n  status: PropTypes.oneOf(Object.values(expenseStatus)),\n  showTaxFormMsg: PropTypes.bool,\n  showTaxFormTag: PropTypes.bool,\n};\n\nexport default ExpenseStatusTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport expenseTypes from '../../lib/constants/expenseTypes';\nimport { i18nExpenseType } from '../../lib/i18n/expense';\n\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport StyledTag from '../StyledTag';\n\nconst ExpenseTypeTag = ({ type, legacyId, isLoading, ...props }) => {\n  const intl = useIntl();\n  return isLoading ? (\n    <LoadingPlaceholder height={24} width={73} borderRadius=\"12px 2px 2px 12px\" />\n  ) : (\n    <StyledTag\n      variant=\"rounded-left\"\n      type=\"grey\"\n      mb=\"4px\"\n      mr=\"10px\"\n      textTransform=\"uppercase\"\n      fontSize=\"10px\"\n      fontWeight=\"600\"\n      {...props}\n    >\n      {i18nExpenseType(intl, type, legacyId)}\n    </StyledTag>\n  );\n};\n\nExpenseTypeTag.propTypes = {\n  type: PropTypes.oneOf(Object.values(expenseTypes)).isRequired,\n  legacyId: PropTypes.number,\n  isLoading: PropTypes.bool,\n};\n\nexport default ExpenseTypeTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { checkVATNumberFormat, TaxType } from '@opencollective/taxes';\nimport { isNil, round } from 'lodash';\nimport { useIntl } from 'react-intl';\n\nimport { createError, ERROR } from '../../lib/errors';\nimport { verifyValueInRange } from '../../lib/form-utils';\n\nimport { Grid } from '../Grid';\nimport StyledInput from '../StyledInput';\nimport StyledInputFormikField from '../StyledInputFormikField';\nimport StyledInputGroup from '../StyledInputGroup';\n\nexport const validateTaxVAT = (intl, tax) => {\n  const errors = {};\n  if (tax.type !== TaxType.VAT) {\n    return errors;\n  }\n\n  if (isNaN(tax.rate) || isNil(tax.rate)) {\n    errors.rate = createError(ERROR.FORM_FIELD_REQUIRED);\n  } else {\n    verifyValueInRange(intl, errors, tax, 'rate', 0, 1);\n  }\n\n  // ID number is required if there's a tax rate\n  if (tax.rate) {\n    if (!tax.idNumber) {\n      errors.idNumber = createError(ERROR.FORM_FIELD_REQUIRED);\n    } else if (!checkVATNumberFormat(tax.idNumber).isValid) {\n      errors.idNumber = createError(ERROR.FORM_FIELD_PATTERN);\n    }\n  }\n\n  return errors;\n};\n\nconst ExpenseVATFormikFields = ({ formik, isOptional }) => {\n  const intl = useIntl();\n\n  // If mounted, it means that the form is subject to VAT. Let's make sure we initialize taxes field accordingly\n  React.useEffect(() => {\n    if (!formik.values.taxes?.[0]?.type !== TaxType.VAT) {\n      formik.setFieldValue('taxes.0.type', TaxType.VAT);\n    }\n  }, []);\n\n  return (\n    <Grid gridTemplateColumns=\"120px minmax(120px, 1fr)\" gridGap={2}>\n      <StyledInputFormikField\n        name=\"taxes.0.rate\"\n        htmlFor=\"vat-rate\"\n        label={intl.formatMessage({ defaultMessage: 'VAT rate' })}\n        inputType=\"number\"\n        required={!isOptional}\n      >\n        {({ field }) => (\n          <StyledInputGroup\n            {...field}\n            value={round(field.value * 100, 2)}\n            onChange={e => formik.setFieldValue(e.target.name, round(e.target.value / 100, 4))}\n            append=\"%\"\n            min={0}\n            max={100}\n            step=\"0.01\"\n          />\n        )}\n      </StyledInputFormikField>\n      <StyledInputFormikField\n        name=\"taxes.0.idNumber\"\n        htmlFor=\"vat-number\"\n        label={intl.formatMessage({ defaultMessage: 'VAT identifier' })}\n        required={!isOptional && Boolean(formik.values.taxes?.[0]?.rate)}\n        mr={2}\n      >\n        {({ field }) => (\n          <StyledInput\n            {...field}\n            placeholder={intl.formatMessage(\n              { id: 'examples', defaultMessage: 'e.g., {examples}' },\n              { examples: 'EU000011111' },\n            )}\n          />\n        )}\n      </StyledInputFormikField>\n    </Grid>\n  );\n};\n\nExpenseVATFormikFields.propTypes = {\n  formik: PropTypes.object,\n  isOptional: PropTypes.bool,\n};\n\nexport default ExpenseVATFormikFields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport { Box, Flex } from '../Grid';\nimport StyledButton from '../StyledButton';\nimport StyledInputField from '../StyledInputField';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport StyledTextarea from '../StyledTextarea';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nimport { expensePageExpenseFieldsFragment } from './graphql/fragments';\n\nconst messages = defineMessages({\n  reasonPlaceholder: {\n    defaultMessage: 'e.g. Email Address is wrong',\n  },\n});\n\nconst processExpenseMutation = gql`\n  mutation ProcessExpense($id: String, $legacyId: Int, $action: ExpenseProcessAction!, $message: String) {\n    processExpense(expense: { id: $id, legacyId: $legacyId }, action: $action, message: $message) {\n      id\n      ...ExpensePageExpenseFields\n    }\n  }\n\n  ${expensePageExpenseFieldsFragment}\n`;\n\nconst MarkExpenseAsIncompleteModal = ({ expense, onClose }) => {\n  const intl = useIntl();\n  const [message, setMessage] = React.useState();\n  const mutationOptions = { context: API_V2_CONTEXT };\n  const [processExpense, { loading }] = useMutation(processExpenseMutation, mutationOptions);\n  const { addToast } = useToasts();\n\n  const onConfirm = async () => {\n    try {\n      const variables = { id: expense.id, legacyId: expense.legacyId, action: 'MARK_AS_INCOMPLETE', message };\n      await processExpense({ variables });\n      onClose();\n    } catch (error) {\n      // Display a toast with light variant since we're in a modal\n      addToast({ type: TOAST_TYPE.ERROR, variant: 'light', message: i18nGraphqlException(intl, error) });\n    }\n  };\n\n  return (\n    <StyledModal role=\"alertdialog\" width=\"432px\" onClose={onClose}>\n      <ModalHeader>\n        <FormattedMessage defaultMessage=\"Mark as incomplete\" />\n      </ModalHeader>\n      <ModalBody pt={2}>\n        <P color=\"black.700\" lineHeight=\"20px\">\n          <FormattedMessage defaultMessage=\"Please mention the reason why this expense has been marked as incomplete. The reason will be shared with the user and also be documented as a comment under the expense.\" />\n        </P>\n        <Box>\n          <StyledInputField\n            name=\"reason\"\n            label={<FormattedMessage defaultMessage=\"Please specify the reason\" />}\n            labelFontSize=\"13px\"\n            labelFontWeight={600}\n            labelColor=\"black.700\"\n            required\n            mt={3}\n          >\n            {inputProps => (\n              <StyledTextarea\n                {...inputProps}\n                minHeight={100}\n                placeholder={intl.formatMessage(messages.reasonPlaceholder)}\n                onChange={e => setMessage(e.target.value)}\n              />\n            )}\n          </StyledInputField>\n        </Box>\n      </ModalBody>\n      <ModalFooter>\n        <Flex gap=\"16px\" justifyContent=\"flex-end\">\n          <StyledButton buttonStyle=\"secondary\" buttonSize=\"small\" onClick={onConfirm} minWidth={180} loading={loading}>\n            <FormattedMessage defaultMessage=\"Confirm and mark as incomplete\" />\n          </StyledButton>\n          <StyledButton buttonStyle=\"standard\" buttonSize=\"small\" onClick={onClose}>\n            <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n          </StyledButton>\n        </Flex>\n      </ModalFooter>\n    </StyledModal>\n  );\n};\n\nMarkExpenseAsIncompleteModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  onSuccess: PropTypes.func,\n  expense: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    legacyId: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default MarkExpenseAsIncompleteModal;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { get, startCase, upperCase } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport { PayoutMethodType } from '../../lib/constants/payout-method';\n\nimport Container from '../Container';\nimport PrivateInfoIcon from '../icons/PrivateInfoIcon';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport { P } from '../Text';\n\nconst renderObject = object =>\n  Object.entries(object).reduce((acc, [key, value]) => {\n    if (typeof value === 'object') {\n      return [...acc, ...renderObject(value)];\n    }\n    return [\n      ...acc,\n      <P key={key} fontSize=\"11px\" lineHeight=\"18px\">\n        <FormattedMessage id=\"withColon\" defaultMessage=\"{item}:\" values={{ item: startCase(key) }} /> {value}\n      </P>,\n    ];\n  }, []);\n\n/**\n * @returns boolean: True if the payout method has displayable data\n */\nexport const payoutMethodHasData = payoutMethod => {\n  switch (payoutMethod?.type) {\n    case PayoutMethodType.PAYPAL:\n      return Boolean(get(payoutMethod, 'data.email'));\n    case PayoutMethodType.OTHER:\n      return Boolean(get(payoutMethod, 'data.content'));\n    case PayoutMethodType.BANK_ACCOUNT:\n      return Boolean(get(payoutMethod, 'data.details'));\n    default:\n      return false;\n  }\n};\n\nconst PRIVATE_DATA_PLACEHOLDER = '********';\n\nconst getPmData = (payoutMethod, field, isLoading) => {\n  if (isLoading) {\n    return <LoadingPlaceholder height={15} />;\n  } else {\n    return get(payoutMethod, `data.${field}`, PRIVATE_DATA_PLACEHOLDER);\n  }\n};\n\n/**\n * Shows the data of the given payout method\n */\nconst PayoutMethodData = ({ payoutMethod, showLabel, isLoading }) => {\n  if (isLoading && !payoutMethod) {\n    return <LoadingPlaceholder height={24} mb={2} />;\n  } else if (!payoutMethod) {\n    return null;\n  }\n\n  switch (payoutMethod.type) {\n    case PayoutMethodType.PAYPAL:\n      return (\n        <div>\n          {showLabel && (\n            <Container fontSize=\"11px\" fontWeight=\"500\" mb={2}>\n              <FormattedMessage id=\"User.EmailAddress\" defaultMessage=\"Email address\" />\n              &nbsp;&nbsp;\n              <PrivateInfoIcon color=\"#969BA3\" />\n            </Container>\n          )}\n          <Container fontSize=\"11px\" color=\"black.700\">\n            {getPmData(payoutMethod, 'email', isLoading)}\n          </Container>\n        </div>\n      );\n    case PayoutMethodType.OTHER:\n      return (\n        <div>\n          {showLabel && (\n            <Container fontSize=\"11px\" fontWeight=\"500\" mb={2}>\n              <FormattedMessage id=\"Details\" defaultMessage=\"Details\" />\n              &nbsp;&nbsp;\n              <PrivateInfoIcon color=\"#969BA3\" />\n            </Container>\n          )}\n          <Container fontSize=\"11px\" color=\"black.700\">\n            {getPmData(payoutMethod, 'content', isLoading)}\n          </Container>\n        </div>\n      );\n    case PayoutMethodType.BANK_ACCOUNT:\n      return (\n        <div>\n          {showLabel && (\n            <Container fontSize=\"11px\" fontWeight=\"500\" mb={2}>\n              <FormattedMessage id=\"Details\" defaultMessage=\"Details\" />\n              &nbsp;&nbsp;\n              <PrivateInfoIcon color=\"#969BA3\" />\n            </Container>\n          )}\n          {payoutMethod.data ? (\n            <Container fontSize=\"11px\" color=\"black.700\">\n              <FormattedMessage\n                id=\"BankInfo.Type\"\n                defaultMessage=\"Type: {type}\"\n                values={{ type: upperCase(payoutMethod.data.type) }}\n              />\n              {payoutMethod.data.accountHolderName && (\n                <Fragment>\n                  <br />\n                  <FormattedMessage\n                    id=\"BankInfo.AccountHolder\"\n                    defaultMessage=\"Account Holder: {name}\"\n                    values={{ name: payoutMethod.data.accountHolderName }}\n                  />\n                </Fragment>\n              )}\n              {payoutMethod.data.details && renderObject(payoutMethod.data.details)}\n            </Container>\n          ) : isLoading ? (\n            <LoadingPlaceholder height=\"1.5em\" />\n          ) : (\n            PRIVATE_DATA_PLACEHOLDER\n          )}\n        </div>\n      );\n    default:\n      return null;\n  }\n};\n\nPayoutMethodData.propTypes = {\n  /** If false, only the raw data will be displayed */\n  showLabel: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  payoutMethod: PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.oneOf(Object.values(PayoutMethodType)),\n    data: PropTypes.object,\n  }),\n};\n\nPayoutMethodData.defaultProps = {\n  showLabel: true,\n};\n\n// @component\nexport default PayoutMethodData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Paypal as PaypalIcon } from '@styled-icons/fa-brands/Paypal';\nimport { CreditCard } from '@styled-icons/fa-solid/CreditCard';\nimport { ExchangeAlt as OtherIcon } from '@styled-icons/fa-solid/ExchangeAlt';\nimport { University as BankIcon } from '@styled-icons/fa-solid/University';\nimport { FormattedMessage } from 'react-intl';\n\nimport { INVITE, PayoutMethodType, VIRTUAL_CARD } from '../../lib/constants/payout-method';\n\nimport Avatar from '../Avatar';\nimport { Flex } from '../Grid';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport { Span } from '../Text';\n\n/**\n * Shows the data of the given payout method\n */\nconst PayoutMethodTypeWithIcon = ({ isLoading, type, fontSize, fontWeight, color, iconSize, name }) => {\n  if (isLoading) {\n    return <LoadingPlaceholder height={15} width={90} />;\n  }\n\n  switch (type) {\n    case PayoutMethodType.PAYPAL:\n      return (\n        <Flex alignItems=\"center\">\n          <PaypalIcon size={iconSize} color=\"#192f86\" />\n          <Span ml={2} fontWeight={fontWeight} fontSize={fontSize} color={color}>\n            PayPal\n          </Span>\n        </Flex>\n      );\n    case PayoutMethodType.BANK_ACCOUNT:\n      return (\n        <Flex alignItems=\"center\">\n          <BankIcon size={iconSize} color=\"#9D9FA3\" />\n          <Span ml={2} fontWeight={fontWeight} fontSize={fontSize} color={color}>\n            <FormattedMessage id=\"BankAccount\" defaultMessage=\"Bank account\" />\n          </Span>\n        </Flex>\n      );\n    case PayoutMethodType.ACCOUNT_BALANCE:\n      return (\n        <Flex alignItems=\"center\">\n          <OtherIcon size={iconSize} color=\"#9D9FA3\" />\n          <Span ml={2} fontWeight={fontWeight} fontSize={fontSize} color={color}>\n            Open Collective\n          </Span>\n        </Flex>\n      );\n    case INVITE:\n      return (\n        <Flex alignItems=\"center\">\n          <Avatar name=\"?\" size={iconSize} backgroundColor=\"blue.100\" color=\"blue.400\" fontWeight=\"500\" />\n          <Span ml={2} fontWeight={fontWeight} fontSize={fontSize} color={color}>\n            <FormattedMessage id=\"PayoutMethod.Type.ToBeDefined\" defaultMessage=\"Not yet set\" />\n          </Span>\n        </Flex>\n      );\n    case VIRTUAL_CARD:\n      return (\n        <Flex alignItems=\"center\">\n          <CreditCard size={iconSize} color=\"#9D9FA3\" />\n          <Span ml={2} fontWeight={fontWeight} fontSize={fontSize} color={color}>\n            {name || <FormattedMessage id=\"PayoutMethod.Type.VirtualCard\" defaultMessage=\"Virtual Card\" />}\n          </Span>\n        </Flex>\n      );\n    case PayoutMethodType.OTHER:\n    default:\n      return (\n        <Flex alignItems=\"center\">\n          <OtherIcon size={iconSize} color=\"#9D9FA3\" />\n          <Span ml={2} fontWeight={fontWeight} fontSize={fontSize} color={color}>\n            <FormattedMessage id=\"PayoutMethod.Type.Other\" defaultMessage=\"Other\" />\n          </Span>\n        </Flex>\n      );\n  }\n};\n\nPayoutMethodTypeWithIcon.propTypes = {\n  isLoading: PropTypes.bool,\n  type: PropTypes.oneOf([...Object.values(PayoutMethodType), INVITE]),\n  fontSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  fontWeight: PropTypes.string,\n  color: PropTypes.string,\n  iconSize: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n};\n\nPayoutMethodTypeWithIcon.defaultProps = {\n  fontSize: '13px',\n  fontWeight: 'bold',\n  color: 'black.900',\n  iconSize: 24,\n};\n\n// @component\nexport default PayoutMethodTypeWithIcon;\n","import { defineMessages } from 'react-intl';\n\nconst REASON_CODES = {\n  UNSUPPORTED_STATUS: 'UNSUPPORTED_STATUS',\n  UNSUPPORTED_USER_FEATURE: 'UNSUPPORTED_USER_FEATURE',\n  MINIMAL_CONDITION_NOT_MET: 'MINIMAL_CONDITION_NOT_MET',\n  AUTHOR_CANNOT_APPROVE: 'AUTHOR_CANNOT_APPROVE',\n};\n\nexport const ReasonMessage = defineMessages({\n  [REASON_CODES.AUTHOR_CANNOT_APPROVE]: {\n    id: 'ExpensePermissionReason.AUTHOR_CANNOT_APPROVE',\n    defaultMessage:\n      'You cannot approve expenses you have submitted{amount, select, 0 {.} other { when the expense is above {amount} {currency}.}}',\n  },\n});\n\nexport default REASON_CODES;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from '@apollo/client';\nimport { Mutation } from '@apollo/client/react/components';\nimport { Trash2 as IconTrash } from '@styled-icons/feather/Trash2';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport ConfirmationModal from '../ConfirmationModal';\nimport StyledButton from '../StyledButton';\nimport { Span } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nconst deleteExpenseMutation = gql`\n  mutation DeleteExpense($id: String!) {\n    deleteExpense(expense: { id: $id }) {\n      id\n    }\n  }\n`;\n\nconst removeExpenseFromCache = (cache, { data: { deleteExpense } }) => {\n  cache.modify({\n    fields: {\n      expenses(existingExpenses, { readField }) {\n        if (!existingExpenses?.nodes) {\n          return existingExpenses;\n        } else {\n          return {\n            ...existingExpenses,\n            totalCount: existingExpenses.totalCount - 1,\n            nodes: existingExpenses.nodes.filter(expense => deleteExpense.id !== readField('id', expense)),\n          };\n        }\n      },\n    },\n  });\n};\n\nconst DeleteExpenseButton = ({ expense, onDelete, buttonProps, isDisabled, onModalToggle }) => {\n  const [hasDeleteConfirm, setDeleteConfirm] = React.useState(false);\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  const showDeleteConfirm = isOpen => {\n    setDeleteConfirm(isOpen);\n    onModalToggle?.(isOpen);\n  };\n\n  return (\n    <React.Fragment>\n      <StyledButton\n        buttonStyle=\"dangerSecondary\"\n        data-cy=\"delete-expense-button\"\n        disabled={isDisabled}\n        {...buttonProps}\n        onClick={() => showDeleteConfirm(true)}\n      >\n        <IconTrash size=\"1em\" />\n        <Span ml=\"6px\">\n          <FormattedMessage id=\"actions.delete\" defaultMessage=\"Delete\" />\n        </Span>\n      </StyledButton>\n      {hasDeleteConfirm && (\n        <Mutation mutation={deleteExpenseMutation} context={API_V2_CONTEXT} update={removeExpenseFromCache}>\n          {deleteExpense => (\n            <ConfirmationModal\n              isDanger\n              type=\"delete\"\n              onClose={() => showDeleteConfirm(false)}\n              header={<FormattedMessage id=\"actions.delete\" defaultMessage=\"Delete\" />}\n              continueHandler={async () => {\n                try {\n                  await deleteExpense({ variables: { id: expense.id } });\n                } catch (e) {\n                  addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(intl, e) });\n                }\n\n                if (onDelete) {\n                  await onDelete(expense);\n                }\n                showDeleteConfirm(false);\n              }}\n            >\n              <FormattedMessage\n                id=\"Expense.DeleteDetails\"\n                defaultMessage=\"This will permanently delete the expense and all attachments and comments.\"\n              />\n            </ConfirmationModal>\n          )}\n        </Mutation>\n      )}\n    </React.Fragment>\n  );\n};\n\nDeleteExpenseButton.propTypes = {\n  isDisabled: PropTypes.bool,\n  expense: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    legacyId: PropTypes.number.isRequired,\n  }),\n  onDelete: PropTypes.func,\n  buttonProps: PropTypes.object,\n  /** Called when a modal is opened/closed with a boolean like (isOpen) */\n  onModalToggle: PropTypes.func,\n};\n\nexport default DeleteExpenseButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport ConfirmationModal from '../ConfirmationModal';\nimport StyledButton from '../StyledButton';\nimport StyledCheckbox from '../StyledCheckbox';\nimport { P } from '../Text';\n\nconst MarkExpenseAsUnpaidButton = ({ onConfirm, ...props }) => {\n  const [hasModal, setHasModal] = React.useState(false);\n  const [refundPaymentProcessorFee, setRefundPaymentProcessorFee] = React.useState(true);\n\n  const button = (\n    <StyledButton {...props} buttonStyle=\"dangerSecondary\" onClick={() => setHasModal(true)}>\n      <FormattedMessage id=\"expense.markAsUnpaid.btn\" defaultMessage=\"Mark as unpaid\" />\n    </StyledButton>\n  );\n\n  if (!hasModal) {\n    return button;\n  }\n\n  return (\n    <React.Fragment>\n      {button}\n      <ConfirmationModal\n        id=\"mark-expense-as-unpaid-modal\"\n        header={<FormattedMessage id=\"Expense.markAsUnpaid\" defaultMessage=\"Mark expense as unpaid\" />}\n        width=\"100%\"\n        minWidth={280}\n        maxWidth={450}\n        isDanger\n        onClose={() => setHasModal(false)}\n        data-cy=\"mark-expense-as-unpaid-modal\"\n        continueHandler={async () => {\n          try {\n            await onConfirm(refundPaymentProcessorFee);\n          } catch (e) {\n            setHasModal(false);\n            throw e;\n          }\n        }}\n      >\n        <P mb={4}>\n          <FormattedMessage\n            id=\"Expense.markAsUnpaid.details\"\n            defaultMessage=\"The amount will be credited back to the Collective balance.\"\n          />\n        </P>\n        <StyledCheckbox\n          name=\"processorFeeRefunded\"\n          checked={refundPaymentProcessorFee}\n          onChange={({ checked }) => setRefundPaymentProcessorFee(checked)}\n          label={\n            <FormattedMessage\n              id=\"processorFeeRefunded.checkbox.label\"\n              defaultMessage=\"Also refund payment processor fees?\"\n            />\n          }\n        />\n      </ConfirmationModal>\n    </React.Fragment>\n  );\n};\n\nMarkExpenseAsUnpaidButton.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n};\n\nexport default MarkExpenseAsUnpaidButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useQuery } from '@apollo/client';\nimport { Check } from '@styled-icons/boxicons-regular/Check';\nimport { useFormik } from 'formik';\nimport { cloneDeep, get, round } from 'lodash';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\nimport { border, color, space, typography } from 'styled-system';\n\nimport { default as hasFeature, FEATURES } from '../../lib/allowed-features';\nimport { PayoutMethodType } from '../../lib/constants/payout-method';\nimport { createError, ERROR } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport i18nPayoutMethodType from '../../lib/i18n/payout-method-type';\nimport { i18nTaxType } from '../../lib/i18n/taxes';\nimport { AmountPropTypeShape } from '../../lib/prop-types';\nimport { getAmountWithoutTaxes, getTaxAmount } from './lib/utils';\n\nimport Container from '../Container';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport MessageBox from '../MessageBox';\nimport StyledButton from '../StyledButton';\nimport StyledButtonSet from '../StyledButtonSet';\nimport StyledCheckbox from '../StyledCheckbox';\nimport StyledInputAmount from '../StyledInputAmount';\nimport StyledInputField from '../StyledInputField';\nimport StyledModal, { ModalBody, ModalHeader } from '../StyledModal';\nimport StyledTooltip from '../StyledTooltip';\nimport { H4, P, Span } from '../Text';\nimport { withUser } from '../UserProvider';\n\nimport PayoutMethodData from './PayoutMethodData';\nimport PayoutMethodTypeWithIcon from './PayoutMethodTypeWithIcon';\n\nconst quoteExpenseQuery = gql`\n  query QuoteExpenseQuery($id: String!) {\n    expense(expense: { id: $id }) {\n      id\n      currency\n      amountInHostCurrency: amountV2(currencySource: HOST) {\n        exchangeRate {\n          value\n        }\n      }\n      quote {\n        paymentProcessorFeeAmount {\n          valueInCents\n          currency\n        }\n        sourceAmount {\n          valueInCents\n          currency\n        }\n        estimatedDeliveryAt\n      }\n    }\n  }\n`;\n\nconst getPayoutLabel = (intl, type) => {\n  return i18nPayoutMethodType(intl, type, { aliasBankAccountToTransferWise: true });\n};\n\nconst getPayoutOptionValue = (payoutMethodType, isAuto, host) => {\n  if (payoutMethodType === PayoutMethodType.OTHER) {\n    return { forceManual: true, action: 'PAY' };\n  } else if (payoutMethodType === PayoutMethodType.BANK_ACCOUNT && !host.transferwise) {\n    return { forceManual: true, action: 'PAY' };\n  } else if (!isAuto) {\n    return { forceManual: true, action: 'PAY' };\n  } else {\n    const isPaypalPayouts =\n      host.features[FEATURES.PAYPAL_PAYOUTS] === 'ACTIVE' &&\n      payoutMethodType === PayoutMethodType.PAYPAL &&\n      host.supportedPayoutMethods?.includes(PayoutMethodType.PAYPAL);\n    const isWiseOTT =\n      payoutMethodType === PayoutMethodType.BANK_ACCOUNT &&\n      host.supportedPayoutMethods?.includes(PayoutMethodType.BANK_ACCOUNT) &&\n      hasFeature(host, FEATURES.TRANSFERWISE_OTT);\n    return {\n      forceManual: false,\n      action: isPaypalPayouts || isWiseOTT ? 'SCHEDULE_FOR_PAYMENT' : 'PAY',\n    };\n  }\n};\n\nconst DEFAULT_VALUES = Object.freeze({\n  paymentProcessorFeeInHostCurrency: null,\n  totalAmountPaidInHostCurrency: null,\n  feesPayer: 'COLLECTIVE',\n});\n\nconst validate = values => {\n  const errors = {};\n  if (isNaN(values.paymentProcessorFeeInHostCurrency)) {\n    errors.paymentProcessorFeeInHostCurrency = createError(ERROR.FORM_FIELD_PATTERN);\n  }\n  if (isNaN(values.totalAmountPaidInHostCurrency)) {\n    errors.totalAmountPaidInHostCurrency = createError(ERROR.FORM_FIELD_PATTERN);\n  }\n  return errors;\n};\n\nconst getCanCustomizeFeesPayer = (expense, collective, isManualPayment, feeAmount, isRoot) => {\n  const supportedPayoutMethods = [PayoutMethodType.BANK_ACCOUNT, PayoutMethodType.OTHER];\n  const isSupportedPayoutMethod = supportedPayoutMethods.includes(expense.payoutMethod?.type);\n  const isFullBalance = expense.amount === get(collective, 'stats.balanceWithBlockedFunds.valueInCents');\n  const isSameCurrency = expense.currency === collective?.currency;\n\n  // Current limitations:\n  // - Only for transferwise and manual payouts\n  // - Only when emptying the account balance (unless root user)\n  // - Only with expenses submitted in the same currency as the collective\n  if (!(isSupportedPayoutMethod && isSameCurrency && (isFullBalance || isRoot))) {\n    return false;\n  }\n\n  // We should only show the checkbox if there may actually be fees on the payout:\n  // - When the payment is manual, we only show the checkbox if a fee is set by the user\n  // - If it's an automatic payment then we can't predict the fees, so in doubt we show the checkbox\n  return !isManualPayment || Boolean(feeAmount);\n};\n\nconst AmountLine = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-weight: 400;\n  padding: 9px 0;\n  font-weight: 400;\n  line-height: 18px;\n  letter-spacing: 0em;\n\n  ${border}\n  ${space}\n`;\n\nconst Label = styled(Span)`\n  margin-right: 4px;\n  flex: 0 1 70%;\n  margin-right: 8px;\n  line-height: 18px;\n  word-break: break-word;\n  color: #4e5052;\n  ${color}\n  ${typography}\n  font-size: 12px;\n`;\n\nconst Amount = styled.span`\n  flex: 1 1 30%;\n  text-align: right;\n  font-size: 14px;\n  white-space: nowrap;\n  display: flex;\n  flex-direction: row-reverse;\n  & > * {\n    margin-left: 4px;\n  }\n`;\n\nconst SectionLabel = styled.p`\n  font-size: 9px;\n  font-weight: 500;\n  color: #4e5052;\n  margin: 5px 0;\n  text-transform: uppercase;\n`;\n\nconst getInitialValues = (expense, host, payoutMethodType) => {\n  return {\n    ...DEFAULT_VALUES,\n    ...getPayoutOptionValue(payoutMethodType, true, host),\n    feesPayer: expense.feesPayer || DEFAULT_VALUES.feesPayer,\n  };\n};\n\nconst calculateAmounts = ({ formik, expense, quote, host, feesPayer }) => {\n  if (formik.values.forceManual) {\n    const totalAmount = { valueInCents: formik.values.totalAmountPaidInHostCurrency, currency: host.currency };\n    const paymentProcessorFee = {\n      valueInCents: formik.values.paymentProcessorFeeInHostCurrency,\n      currency: host.currency,\n    };\n    const effectiveRate = expense.currency !== host.currency && totalAmount.valueInCents / expense.amount;\n    return { paymentProcessorFee, totalAmount, effectiveRate };\n  } else if (quote) {\n    const effectiveRate = expense.currency !== host.currency && quote.sourceAmount.valueInCents / expense.amount;\n    const totalAmount = cloneDeep(quote.sourceAmount);\n    if (feesPayer === 'PAYEE') {\n      totalAmount.valueInCents -= quote.paymentProcessorFeeAmount.valueInCents;\n    }\n    return { paymentProcessorFee: quote.paymentProcessorFeeAmount, totalAmount, effectiveRate };\n  } else {\n    return {};\n  }\n};\n\n/**\n * Modal displayed by `PayExpenseButton` to trigger the actual payment of an expense\n */\nconst PayExpenseModal = ({ onClose, onSubmit, expense, collective, host, error, LoggedInUser }) => {\n  const intl = useIntl();\n  const payoutMethodType = expense.payoutMethod?.type || PayoutMethodType.OTHER;\n  const initialValues = getInitialValues(expense, host, payoutMethodType);\n  const formik = useFormik({ initialValues, validate, onSubmit });\n  const hasManualPayment = payoutMethodType === PayoutMethodType.OTHER || formik.values.forceManual;\n  const payoutMethodLabel = getPayoutLabel(intl, payoutMethodType);\n  const hasBankInfoWithoutWise = payoutMethodType === PayoutMethodType.BANK_ACCOUNT && host.transferwise === null;\n  const isScheduling = formik.values.action === 'SCHEDULE_FOR_PAYMENT';\n  const hasAutomaticManualPicker = ![PayoutMethodType.OTHER, PayoutMethodType.ACCOUNT_BALANCE].includes(\n    payoutMethodType,\n  );\n  const canQuote = host.transferwise && payoutMethodType === PayoutMethodType.BANK_ACCOUNT;\n  const quoteQuery = useQuery(quoteExpenseQuery, {\n    variables: { id: expense.id },\n    context: API_V2_CONTEXT,\n    skip: !canQuote,\n  });\n\n  const amountWithoutTaxes = getAmountWithoutTaxes(expense.amount, expense.taxes);\n\n  const amounts = calculateAmounts({\n    formik,\n    expense,\n    quote: quoteQuery?.data?.expense?.quote,\n    collective,\n    host,\n    feesPayer: formik.values.feesPayer,\n  });\n\n  return (\n    <StyledModal onClose={onClose} width=\"100%\" minWidth={280} maxWidth={334} data-cy=\"pay-expense-modal\" trapFocus>\n      <ModalHeader>\n        <H4 fontSize=\"20px\" fontWeight=\"700\">\n          <FormattedMessage id=\"PayExpenseTitle\" defaultMessage=\"Pay expense\" />\n        </H4>\n      </ModalHeader>\n      <ModalBody as=\"form\" mb={0} onSubmit={formik.handleSubmit}>\n        <SectionLabel>\n          <FormattedMessage id=\"ExpenseForm.PayoutOptionLabel\" defaultMessage=\"Payout method\" />\n        </SectionLabel>\n        <Box mb={2}>\n          <PayoutMethodTypeWithIcon type={payoutMethodType} />\n        </Box>\n        <PayoutMethodData payoutMethod={expense.payoutMethod} showLabel={false} />\n        {hasAutomaticManualPicker && !hasBankInfoWithoutWise && (\n          <StyledButtonSet\n            items={['AUTO', 'MANUAL']}\n            buttonProps={{ width: '50%' }}\n            buttonPropsBuilder={({ item }) => ({ 'data-cy': `pay-type-${item}` })}\n            mt={3}\n            selected={formik.values.forceManual ? 'MANUAL' : 'AUTO'}\n            customBorderRadius=\"6px\"\n            onChange={item => {\n              formik.setValues({\n                ...formik.values,\n                ...getPayoutOptionValue(payoutMethodType, item === 'AUTO', host),\n                paymentProcessorFeeInHostCurrency: null,\n                totalAmountPaidInHostCurrency: null,\n                feesPayer: !getCanCustomizeFeesPayer(expense, collective, hasManualPayment, null, LoggedInUser.isRoot)\n                  ? DEFAULT_VALUES.feesPayer // Reset fees payer if can't customize\n                  : formik.values.feesPayer,\n              });\n            }}\n          >\n            {({ item }) =>\n              item === 'AUTO' ? (\n                <FormattedMessage id=\"Payout.Automatic\" defaultMessage=\"Automatic\" />\n              ) : (\n                <FormattedMessage id=\"Payout.Manual\" defaultMessage=\"Manual\" />\n              )\n            }\n          </StyledButtonSet>\n        )}\n        {hasManualPayment && (\n          <React.Fragment>\n            <StyledInputField\n              name=\"totalAmountPaidInHostCurrency\"\n              htmlFor=\"totalAmountPaidInHostCurrency\"\n              inputType=\"number\"\n              error={formik.errors.totalAmountPaidInHostCurrency}\n              required\n              mt={3}\n              label={\n                <FormattedMessage\n                  id=\"PayExpense.totalAmountPaidInHostCurrency.Input\"\n                  defaultMessage=\"Total amount paid\"\n                />\n              }\n              hint={\n                <FormattedMessage\n                  id=\"PayExpense.totalAmountPaidInHostCurrency.Hint\"\n                  defaultMessage=\"The total amount debited from your account.\"\n                />\n              }\n            >\n              {inputProps => (\n                <StyledInputAmount\n                  {...inputProps}\n                  currency={host.currency}\n                  currencyDisplay=\"FULL\"\n                  value={formik.values.totalAmountPaidInHostCurrency}\n                  data-cy=\"total-amount-paid\"\n                  placeholder=\"0.00\"\n                  maxWidth=\"100%\"\n                  min={0}\n                  onChange={value => formik.setFieldValue('totalAmountPaidInHostCurrency', value)}\n                />\n              )}\n            </StyledInputField>\n            <StyledInputField\n              name=\"paymentProcessorFeeInHostCurrency\"\n              htmlFor=\"paymentProcessorFeeInHostCurrency\"\n              inputType=\"number\"\n              error={formik.errors.paymentProcessorFeeInHostCurrency}\n              required={false}\n              mt={3}\n              label={<FormattedMessage id=\"PayExpense.ProcessorFeesInput\" defaultMessage=\"Payment processor fees\" />}\n              hint={\n                <FormattedMessage\n                  id=\"PayExpense.paymentProcessorFeeInHostCurrency.Hint\"\n                  defaultMessage=\"Amount in fees, included in the total amount paid.\"\n                />\n              }\n            >\n              {inputProps => (\n                <StyledInputAmount\n                  {...inputProps}\n                  currency={host.currency}\n                  currencyDisplay=\"FULL\"\n                  value={formik.values.paymentProcessorFeeInHostCurrency}\n                  placeholder=\"0.00\"\n                  maxWidth=\"100%\"\n                  min={0}\n                  max={100000000}\n                  onChange={value => formik.setFieldValue('paymentProcessorFeeInHostCurrency', value)}\n                />\n              )}\n            </StyledInputField>\n          </React.Fragment>\n        )}\n        {getCanCustomizeFeesPayer(\n          expense,\n          collective,\n          hasManualPayment,\n          formik.values.paymentProcessorFeeInHostCurrency,\n          LoggedInUser.isRoot,\n        ) && (\n          <Flex mt={16}>\n            <StyledTooltip\n              content={\n                <FormattedMessage defaultMessage=\"Check this box to have the payee cover the cost of payment processor fees (useful to zero balance)\" />\n              }\n            >\n              <StyledCheckbox\n                name=\"feesPayer\"\n                checked={formik.values.feesPayer === 'PAYEE'}\n                onChange={({ checked }) => formik.setFieldValue('feesPayer', checked ? 'PAYEE' : 'COLLECTIVE')}\n                label={\n                  <Span fontSize=\"12px\">\n                    <FormattedMessage defaultMessage=\"The payee is covering the fees\" />\n                  </Span>\n                }\n              />\n            </StyledTooltip>\n          </Flex>\n        )}\n        <Box mt={19} mb={3}>\n          <SectionLabel>\n            <FormattedMessage id=\"PaymentBreakdown\" defaultMessage=\"Payment breakdown\" />\n          </SectionLabel>\n          <AmountLine>\n            <Label>\n              <FormattedMessage id=\"ExpenseAmount\" defaultMessage=\"Expense amount\" />\n            </Label>\n            <Amount>\n              <FormattedMoneyAmount\n                amountStyles={{ fontWeight: 500 }}\n                amount={amountWithoutTaxes}\n                currency={expense.currency}\n                currencyCodeStyles={{ color: 'black.500' }}\n              />\n            </Amount>\n          </AmountLine>\n          {expense.taxes?.map(tax => (\n            <AmountLine key={tax.type} data-cy={`tax-${tax.type}-expense-amount-line`} pt={0}>\n              <Label>\n                {i18nTaxType(intl, tax.type, 'short')} ({round(tax.rate * 100, 2) || 0}%)\n              </Label>\n              &nbsp;\n              <Amount>\n                <FormattedMoneyAmount\n                  amount={getTaxAmount(amountWithoutTaxes, tax)}\n                  precision={2}\n                  currency={expense.currency}\n                  amountStyles={{ fontWeight: 500 }}\n                  showCurrencyCode={false}\n                />\n              </Amount>\n            </AmountLine>\n          ))}\n          {amounts.paymentProcessorFee && (\n            <AmountLine borderTop=\"0.8px dashed #9D9FA3\">\n              <Label>\n                <FormattedMessage id=\"PayExpense.ProcessorFeesInput\" defaultMessage=\"Payment processor fees\" />\n              </Label>\n              <Amount>\n                {quoteQuery.loading ? (\n                  <LoadingPlaceholder height=\"16px\" />\n                ) : (\n                  <FormattedMoneyAmount\n                    amount={amounts.paymentProcessorFee?.valueInCents}\n                    currency={amounts.paymentProcessorFee?.currency}\n                    currencyCodeStyles={{ color: 'black.500' }}\n                    amountStyles={{\n                      fontWeight: amounts.paymentProcessorFee ? 500 : 400,\n                      color: amounts.paymentProcessorFee ? 'black.900' : 'black.400',\n                    }}\n                  />\n                )}\n              </Amount>\n            </AmountLine>\n          )}\n          <AmountLine borderTop=\"1px solid #4E5052\" pt={11}>\n            <Label color=\"black.900\" fontWeight=\"600\">\n              {amounts.paymentProcessorFee !== null ? (\n                <FormattedMessage id=\"TotalAmount\" defaultMessage=\"Total amount\" />\n              ) : (\n                <FormattedMessage id=\"TotalAmountWithoutFee\" defaultMessage=\"Total amount (without fees)\" />\n              )}\n            </Label>\n            <Amount>\n              {quoteQuery.loading ? (\n                <LoadingPlaceholder height=\"16px\" />\n              ) : (\n                <FormattedMoneyAmount\n                  amount={amounts.totalAmount?.valueInCents}\n                  currency={amounts.totalAmount?.currency}\n                  currencyCodeStyles={{ color: 'black.500' }}\n                />\n              )}\n            </Amount>\n          </AmountLine>\n          {amounts?.effectiveRate ? (\n            <AmountLine py={0}>\n              <Label color=\"black.600\" fontWeight=\"500\">\n                <FormattedMessage id=\"EffectiveRate\" defaultMessage=\"Effective rate\" />\n              </Label>\n              <Flex>\n                <Container color=\"black.600\">~ {round(amounts.effectiveRate, 5)}</Container>\n              </Flex>\n            </AmountLine>\n          ) : null}\n        </Box>\n        {!error && formik.values.forceManual && payoutMethodType !== PayoutMethodType.OTHER && (\n          <MessageBox type=\"warning\" withIcon my={3} fontSize=\"12px\">\n            <strong>\n              <FormattedMessage id=\"Warning.Important\" defaultMessage=\"Important\" />\n            </strong>\n            <br />\n            <P mt={2} fontSize=\"12px\" lineHeight=\"18px\">\n              <FormattedMessage\n                id=\"PayExpenseModal.ManualPayoutWarning\"\n                defaultMessage=\"By clicking below, you acknowledge that this expense has already been paid {payoutMethod}.\"\n                values={{ payoutMethod: hasBankInfoWithoutWise ? 'manually' : `via ${payoutMethodLabel}` }}\n              />\n            </P>\n          </MessageBox>\n        )}\n        <Flex flexWrap=\"wrap\" justifyContent=\"space-evenly\">\n          <StyledButton\n            buttonStyle=\"success\"\n            width=\"100%\"\n            m={1}\n            type=\"submit\"\n            loading={formik.isSubmitting}\n            data-cy=\"mark-as-paid-button\"\n            disabled={quoteQuery.loading}\n          >\n            {hasManualPayment ? (\n              <React.Fragment>\n                <Check size=\"1.5em\" />\n                <Span css={{ verticalAlign: 'middle' }} ml={1}>\n                  <FormattedMessage id=\"expense.markAsPaid\" defaultMessage=\"Mark as paid\" />\n                </Span>\n              </React.Fragment>\n            ) : isScheduling ? (\n              <FormattedMessage\n                id=\"expense.schedule.btn\"\n                defaultMessage=\"Schedule to Pay with {paymentMethod}\"\n                values={{ paymentMethod: payoutMethodLabel }}\n              />\n            ) : (\n              <FormattedMessage\n                id=\"expense.pay.btn\"\n                defaultMessage=\"Pay with {paymentMethod}\"\n                values={{ paymentMethod: payoutMethodLabel }}\n              />\n            )}\n          </StyledButton>\n        </Flex>\n      </ModalBody>\n    </StyledModal>\n  );\n};\n\nPayExpenseModal.propTypes = {\n  expense: PropTypes.shape({\n    id: PropTypes.string,\n    legacyId: PropTypes.number,\n    amount: PropTypes.number,\n    amountInAccountCurrency: AmountPropTypeShape,\n    currency: PropTypes.string,\n    feesPayer: PropTypes.string,\n    taxes: PropTypes.array,\n    payoutMethod: PropTypes.shape({\n      type: PropTypes.oneOf(Object.values(PayoutMethodType)),\n    }),\n  }).isRequired,\n  collective: PropTypes.shape({\n    balance: PropTypes.number,\n    currency: PropTypes.string,\n  }).isRequired,\n  host: PropTypes.shape({\n    plan: PropTypes.object,\n    slug: PropTypes.string,\n    currency: PropTypes.string,\n    transferwise: PropTypes.object,\n  }),\n  onClose: PropTypes.func.isRequired,\n  /** Function called when users click on one of the \"Pay\" buttons */\n  onSubmit: PropTypes.func.isRequired,\n  /** If set, will be displayed in the pay modal */\n  error: PropTypes.object,\n  /** From withUser */\n  LoggedInUser: PropTypes.object,\n};\n\nexport default withUser(PayExpenseModal);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ShieldFillCheck } from '@styled-icons/bootstrap/ShieldFillCheck';\nimport { ShieldFillExclamation } from '@styled-icons/bootstrap/ShieldFillExclamation';\nimport { ChevronDown } from '@styled-icons/feather/ChevronDown';\nimport { ChevronUp } from '@styled-icons/feather/ChevronUp';\nimport { themeGet } from '@styled-system/theme-get';\nimport { compact, find, first, uniq, upperCase } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { Box, Flex } from '../Grid';\nimport StyledButton from '../StyledButton';\nimport StyledCard from '../StyledCard';\nimport StyledFilters from '../StyledFilters';\nimport StyledLink from '../StyledLink';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport StyledRoundButton from '../StyledRoundButton';\nimport StyledTag from '../StyledTag';\nimport { H1, P } from '../Text';\n\nconst SecurityCheckItem = styled(Flex)`\n  justify-content: space-between;\n  min-height: 72px;\n  padding: 12px 16px;\n  :not(:last-child) {\n    border-bottom: 1px solid ${themeGet('colors.black.300')};\n  }\n`;\n\nconst LEVEL_TAG_STYLE = { PASS: 'success', HIGH: 'error', MEDIUM: 'warning', LOW: 'info' };\nconst LEVEL_ORDER = ['HIGH', 'MEDIUM', 'LOW', 'PASS'];\nconst Scope = {\n  USER: 'USER',\n  COLLECTIVE: 'COLLECTIVE',\n  PAYEE: 'PAYEE',\n  PAYOUT_METHOD: 'PAYOUT_METHOD',\n};\n\nexport const expenseRequiresSecurityConfirmation = expense =>\n  expense?.securityChecks?.filter(check => check.level === 'HIGH').length > 0;\n\nconst SecurityCheck = check => {\n  const [isExpanded, setExpanded] = React.useState(false);\n\n  return (\n    <SecurityCheckItem key={check.message}>\n      <Flex flexDirection=\"column\" alignItems=\"start\">\n        <Box>\n          <StyledTag\n            type={LEVEL_TAG_STYLE[check.level]}\n            fontWeight=\"700\"\n            fontSize=\"12px\"\n            lineHeight=\"16px\"\n            p=\"2px 6px\"\n            mb={2}\n          >\n            {upperCase(check.scope)}\n          </StyledTag>\n        </Box>\n        <P fontWeight=\"500\" fontSize=\"14px\" lineHeight=\"20px\">\n          {check.message}\n        </P>\n\n        {isExpanded && (\n          <P mt={2} fontWeight=\"500\" fontSize=\"12px\" lineHeight=\"20px\">\n            {check.details}\n          </P>\n        )}\n      </Flex>\n      {check.details && (\n        <Flex alignItems=\"center\">\n          <StyledLink\n            fontWeight=\"500\"\n            fontSize=\"13px\"\n            lineHeight=\"16px\"\n            ml={2}\n            color=\"blue.500\"\n            onClick={() => setExpanded(!isExpanded)}\n            minWidth=\"max-content\"\n          >\n            {isExpanded ? (\n              <FormattedMessage defaultMessage=\"Hide Details\" />\n            ) : (\n              <FormattedMessage defaultMessage=\"Show Details\" />\n            )}\n            {isExpanded ? <ChevronUp size=\"1em\" /> : <ChevronDown size=\"1em\" />}\n          </StyledLink>\n        </Flex>\n      )}\n    </SecurityCheckItem>\n  );\n};\n\nconst I18nScopes = defineMessages({\n  ALL: {\n    id: 'SecurityScope.All',\n    defaultMessage: 'All Scopes',\n  },\n  [Scope.PAYEE]: {\n    id: 'SecurityScope.Payee',\n    defaultMessage: 'Payee',\n  },\n  [Scope.USER]: {\n    id: 'Tags.USER',\n    defaultMessage: 'User',\n  },\n  [Scope.COLLECTIVE]: {\n    id: 'Collective',\n    defaultMessage: 'Collective',\n  },\n  [Scope.PAYOUT_METHOD]: {\n    id: 'SecurityScope.PayoutMethod',\n    defaultMessage: 'Payout Method',\n  },\n});\nconst SecurityChecksModal = ({ expense, onClose, onConfirm, ...modalProps }) => {\n  const intl = useIntl();\n  const [scope, setScope] = React.useState();\n\n  return (\n    <StyledModal onClose={onClose} width=\"680px\" data-cy=\"security-check-modal\" {...modalProps}>\n      <ModalHeader onClose={onClose}>\n        <Box>\n          <H1 color=\"black.900\" fontSize=\"20px\" lineHeight=\"28px\">\n            {onConfirm ? (\n              <FormattedMessage id=\"SecurityChecksModal.confirm.title\" defaultMessage=\"Are you sure you want to pay?\" />\n            ) : (\n              <FormattedMessage id=\"SecurityChecksModal.title\" defaultMessage=\"Security Checks\" />\n            )}\n          </H1>\n          <P mt={2} color=\"black.700\" fontWeight=\"400\" fontSize=\"14px\" lineHeight=\"20px\">\n            <FormattedMessage\n              id=\"SecurityChecksModal.subtitle\"\n              defaultMessage=\"Multiple Security Checks have been flagged for this Expense. Please review and proceed with caution.\"\n            />\n          </P>\n        </Box>\n      </ModalHeader>\n      <ModalBody mb={0} mt=\"24px\">\n        <StyledFilters\n          p={0}\n          filters={['ALL', ...uniq(expense?.securityChecks?.map(check => check.scope))]}\n          getLabel={key => intl.formatMessage(I18nScopes[key])}\n          onChange={filter => (filter === 'ALL' ? setScope() : setScope(filter))}\n          selected={scope}\n        />\n        <StyledCard mt={3}>\n          {expense.securityChecks\n            .filter(check => (scope ? check.scope === scope : true))\n            .map(check => (\n              <SecurityCheck key={check.message} {...check} />\n            ))}\n        </StyledCard>\n      </ModalBody>\n      {onConfirm && (\n        <ModalFooter isFullWidth>\n          <Flex justifyContent=\"space-between\">\n            <StyledButton onClick={onClose}>\n              <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n            </StyledButton>\n            <StyledButton buttonStyle=\"primary\" onClick={onConfirm} data-cy=\"pay-button\">\n              <FormattedMessage id=\"SecurityChecksModal.confirm.button\" defaultMessage=\"Yes, Continue to Payment\" />\n            </StyledButton>\n          </Flex>\n        </ModalFooter>\n      )}\n    </StyledModal>\n  );\n};\n\nSecurityChecksModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  expense: PropTypes.shape({\n    securityChecks: PropTypes.arrayOf(\n      PropTypes.shape({\n        scope: PropTypes.string,\n        level: PropTypes.string,\n        message: PropTypes.string,\n      }),\n    ),\n  }),\n};\n\nconst Indicator = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  right: 0%;\n  top: -10%;\n  bottom: 90%;\n  left: 70%;\n  border-radius: 50%;\n  color: #fff;\n  padding: 9px;\n  border: 1px solid #fff;\n  background-color: ${themeGet('colors.red.500')};\n  font-size: 10px;\n  font-weight: 700;\n`;\n\nconst RoundButton = styled(StyledRoundButton)`\n  position: relative;\n`;\n\nconst LEVEL_BUTTON_STYLE = {\n  PASS: 'successSecondary',\n  HIGH: 'dangerSecondary',\n  MEDIUM: 'warningSecondary',\n  LOW: 'secondary',\n};\n\nexport const SecurityChecksButton = ({ expense, ...buttonProps }) => {\n  const [hasModal, setHasModal] = React.useState(false);\n  const highRiskChecks = expense?.securityChecks?.filter(check => check.level === 'HIGH').length || 0;\n  const higherRisk = first(compact(LEVEL_ORDER.map(level => find(expense?.securityChecks, { level }))));\n  const ShieldIcon = highRiskChecks ? ShieldFillExclamation : ShieldFillCheck;\n\n  return (\n    <React.Fragment>\n      <RoundButton\n        {...buttonProps}\n        buttonStyle={LEVEL_BUTTON_STYLE[higherRisk?.level] || 'secondary'}\n        onClick={() => setHasModal(true)}\n      >\n        {highRiskChecks ? <Indicator>{highRiskChecks}</Indicator> : null}\n        <ShieldIcon size={18} />\n      </RoundButton>\n      {hasModal && <SecurityChecksModal expense={expense} onClose={() => setHasModal(false)} />}\n    </React.Fragment>\n  );\n};\n\nSecurityChecksButton.propTypes = {\n  ...SecurityChecksModal.propTypes,\n  onConfirm: PropTypes.func,\n  onClose: PropTypes.func,\n};\n\nexport default SecurityChecksModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Paypal as PaypalIcon } from '@styled-icons/fa-brands/Paypal';\nimport { University as OtherIcon } from '@styled-icons/fa-solid/University';\nimport { get, includes } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport { PayoutMethodType } from '../../lib/constants/payout-method';\nimport { getAmountInCents } from '../../lib/currency-utils';\n\nimport TransferwiseIcon from '../icons/TransferwiseIcon';\nimport StyledButton from '../StyledButton';\nimport StyledTooltip from '../StyledTooltip';\nimport { Span } from '../Text';\n\nimport PayExpenseModal from './PayExpenseModal';\nimport SecurityChecksModal, { expenseRequiresSecurityConfirmation } from './SecurityChecksModal';\n\nconst getDisabledMessage = (expense, collective, host, payoutMethod) => {\n  // Collective / Balance can be v1 or v2 there ...\n  const expenseAmountInAccountCurrency = getAmountInCents(expense.amountInAccountCurrency);\n  const balance = get(\n    collective,\n    'stats.balanceWithBlockedFunds.valueInCents',\n    get(collective, 'stats.balanceWithBlockedFunds', 0),\n  );\n  if (!host) {\n    return (\n      <FormattedMessage id=\"expense.pay.error.noHost\" defaultMessage=\"Expenses cannot be paid without a Fiscal Host\" />\n    );\n  } else if (balance < expenseAmountInAccountCurrency) {\n    return <FormattedMessage id=\"expense.pay.error.insufficientBalance\" defaultMessage=\"Insufficient balance\" />;\n  } else if (includes(expense.requiredLegalDocuments, 'US_TAX_FORM')) {\n    return (\n      <FormattedMessage\n        id=\"TaxForm.DisabledPayment\"\n        defaultMessage=\"Unable to pay because tax form has not been submitted.\"\n      />\n    );\n  } else if (!payoutMethod) {\n    return null;\n  } else if (payoutMethod.type === PayoutMethodType.BANK_ACCOUNT) {\n    return null;\n  } else if (payoutMethod.type === PayoutMethodType.ACCOUNT_BALANCE) {\n    if (!expense.payee.host) {\n      return (\n        <FormattedMessage\n          id=\"expense.pay.error.payee.noHost\"\n          defaultMessage=\"Unable to pay because payee Collective does not have a Fiscal Host.\"\n        />\n      );\n    }\n    if (expense.payee.host.id !== host.id) {\n      return (\n        <FormattedMessage\n          id=\"expense.pay.error.payee.sameHost\"\n          defaultMessage=\"Payer and payee must have the same Fiscal Host to pay this way.\"\n        />\n      );\n    }\n  }\n};\n\nconst PayoutMethodTypeIcon = ({ type, host, ...props }) => {\n  if (type === PayoutMethodType.PAYPAL) {\n    return <PaypalIcon {...props} />;\n  } else if (type === PayoutMethodType.BANK_ACCOUNT && host?.transferwise) {\n    return <TransferwiseIcon {...props} />;\n  } else {\n    return <OtherIcon {...props} />;\n  }\n};\n\nPayoutMethodTypeIcon.propTypes = {\n  type: PropTypes.oneOf(Object.values(PayoutMethodType)),\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  host: PropTypes.shape({\n    transferwise: PropTypes.object,\n  }),\n};\n\nconst PayExpenseButton = ({ expense, collective, host, disabled, onSubmit, error, ...props }) => {\n  const [hasModal, showModal] = React.useState(false);\n  const [hasSecurityModal, showSecurityModal] = React.useState(false);\n  const disabledMessage = getDisabledMessage(expense, collective, host, expense.payoutMethod);\n  const isDisabled = Boolean(disabled || disabledMessage);\n  const requiresSecurityCheck = expenseRequiresSecurityConfirmation(expense);\n\n  const handleClick = () => (requiresSecurityCheck ? showSecurityModal(true) : showModal(true));\n\n  const button = (\n    <StyledButton\n      buttonStyle=\"successSecondary\"\n      data-cy=\"pay-button\"\n      {...props}\n      disabled={isDisabled}\n      onClick={handleClick}\n    >\n      <PayoutMethodTypeIcon type={expense.payoutMethod?.type} host={host} size={12} />\n      <Span ml=\"6px\">\n        <FormattedMessage id=\"actions.goToPay\" defaultMessage=\"Go to Pay\" />\n      </Span>\n    </StyledButton>\n  );\n\n  if (disabledMessage) {\n    return <StyledTooltip content={disabledMessage}>{button}</StyledTooltip>;\n  } else if (hasModal) {\n    return (\n      <React.Fragment>\n        {button}\n        <PayExpenseModal\n          expense={expense}\n          collective={collective}\n          host={host}\n          onClose={() => showModal(false)}\n          error={error}\n          onSubmit={async values => {\n            const { action, ...data } = values;\n            const success = await onSubmit(action, data);\n            if (success) {\n              showModal(false);\n            }\n          }}\n        />\n      </React.Fragment>\n    );\n  } else if (hasSecurityModal) {\n    return (\n      <React.Fragment>\n        {button}\n        <SecurityChecksModal\n          expense={expense}\n          onConfirm={() => {\n            showModal(true);\n            showSecurityModal(false);\n          }}\n          onClose={() => showSecurityModal(false)}\n        />\n      </React.Fragment>\n    );\n  } else {\n    return button;\n  }\n};\n\nPayExpenseButton.propTypes = {\n  expense: PropTypes.shape({\n    id: PropTypes.string,\n    legacyId: PropTypes.number,\n    amount: PropTypes.number,\n    payoutMethod: PropTypes.shape({\n      type: PropTypes.oneOf(Object.values(PayoutMethodType)),\n    }),\n    payee: PropTypes.shape({\n      host: PropTypes.shape({\n        id: PropTypes.string,\n      }),\n    }),\n  }).isRequired,\n  collective: PropTypes.shape({\n    host: PropTypes.shape({\n      plan: PropTypes.object,\n    }),\n    stats: PropTypes.shape({\n      // Collective / Balance can be v1 or v2 there ...\n      balanceWithBlockedFunds: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n          valueInCents: PropTypes.number.isRequired,\n          currency: PropTypes.string.isRequired,\n        }),\n      ]),\n    }),\n  }).isRequired,\n  host: PropTypes.shape({\n    id: PropTypes.string,\n    plan: PropTypes.object,\n  }),\n  /** To disable the button */\n  disabled: PropTypes.bool,\n  /** Function called when users click on one of the \"Pay\" buttons */\n  onSubmit: PropTypes.func.isRequired,\n  /** If set, will be displayed in the pay modal */\n  error: PropTypes.string,\n};\n\nexport default PayExpenseButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { InfoCircle } from '@styled-icons/boxicons-regular/InfoCircle';\nimport { Ban as UnapproveIcon } from '@styled-icons/fa-solid/Ban';\nimport { Check as ApproveIcon } from '@styled-icons/fa-solid/Check';\nimport { Times as RejectIcon } from '@styled-icons/fa-solid/Times';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport PERMISSION_CODES, { ReasonMessage } from '../../lib/constants/permissions';\nimport { i18nGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport Link from '../Link';\nimport StyledButton from '../StyledButton';\nimport StyledTooltip from '../StyledTooltip';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nimport { expensePageExpenseFieldsFragment } from './graphql/fragments';\nimport DeleteExpenseButton from './DeleteExpenseButton';\nimport MarkExpenseAsUnpaidButton from './MarkExpenseAsUnpaidButton';\nimport PayExpenseButton from './PayExpenseButton';\nimport { SecurityChecksButton } from './SecurityChecksModal';\n\nconst processExpenseMutation = gql`\n  mutation ProcessExpense(\n    $id: String\n    $legacyId: Int\n    $action: ExpenseProcessAction!\n    $paymentParams: ProcessExpensePaymentParams\n  ) {\n    processExpense(expense: { id: $id, legacyId: $legacyId }, action: $action, paymentParams: $paymentParams) {\n      id\n      ...ExpensePageExpenseFields\n    }\n  }\n\n  ${expensePageExpenseFieldsFragment}\n`;\n\nexport const ButtonLabel = styled.span({ marginLeft: 6 });\n\n/**\n * A small helper to know if expense process buttons should be displayed\n */\nexport const hasProcessButtons = permissions => {\n  if (!permissions) {\n    return false;\n  }\n\n  return (\n    permissions.canApprove ||\n    permissions.canUnapprove ||\n    permissions.canReject ||\n    permissions.canPay ||\n    permissions.canMarkAsUnpaid ||\n    permissions.canMarkAsSpam ||\n    permissions.canDelete\n  );\n};\n\nconst messages = defineMessages({\n  markAsSpamWarning: {\n    id: 'Expense.MarkAsSpamWarning',\n    defaultMessage: 'This will prevent the submitter account to post new expenses. Are you sure?',\n  },\n});\n\nconst getErrorContent = (intl, error, host) => {\n  // TODO: The proper way to check for error types is with error.type, not the message\n  const message = error?.message;\n  if (message) {\n    if (message.startsWith('Insufficient Paypal balance')) {\n      return {\n        title: intl.formatMessage({ defaultMessage: 'Insufficient Paypal balance' }),\n        message: (\n          <React.Fragment>\n            <Link href={`/${host.slug}/admin`}>\n              <FormattedMessage\n                id=\"PayExpenseModal.RefillBalanceError\"\n                defaultMessage=\"Refill your balance from the Host dashboard\"\n              />\n            </Link>\n          </React.Fragment>\n        ),\n      };\n    }\n  }\n\n  return { message: i18nGraphqlException(intl, error) };\n};\n\nconst PermissionButton = ({ icon, label, permission, ...props }) => {\n  const intl = useIntl();\n  let button = (\n    <StyledButton {...props} disabled={!permission.allowed}>\n      {permission.reason ? <InfoCircle size={14} /> : icon}\n      {label}\n    </StyledButton>\n  );\n  const message = permission.reason && intl.formatMessage(ReasonMessage[permission.reason], permission.reasonDetails);\n  if (message) {\n    button = <StyledTooltip content={message}>{button}</StyledTooltip>;\n  }\n\n  return button;\n};\n\nPermissionButton.propTypes = {\n  icon: PropTypes.element.isRequired,\n  label: PropTypes.element.isRequired,\n  permission: PropTypes.shape({\n    allowed: PropTypes.bool,\n    reason: PropTypes.string,\n    reasonDetails: PropTypes.object,\n  }).isRequired,\n};\n\n/**\n * All the buttons to process an expense, displayed in a React.Fragment to let the parent\n * in charge of the layout.\n */\nconst ProcessExpenseButtons = ({\n  expense,\n  collective,\n  host,\n  permissions,\n  buttonProps,\n  onSuccess,\n  onModalToggle,\n  onDelete,\n}) => {\n  const [selectedAction, setSelectedAction] = React.useState(null);\n  const onUpdate = (cache, response) => onSuccess?.(response.data.processExpense, cache, selectedAction);\n  const mutationOptions = { context: API_V2_CONTEXT, update: onUpdate };\n  const [processExpense, { loading, error }] = useMutation(processExpenseMutation, mutationOptions);\n  const intl = useIntl();\n  const { addToast } = useToasts();\n\n  const triggerAction = async (action, paymentParams) => {\n    // Prevent submitting the action if another one is being submitted at the same time\n    if (loading) {\n      return;\n    }\n\n    setSelectedAction(action);\n\n    try {\n      const variables = { id: expense.id, legacyId: expense.legacyId, action, paymentParams };\n      await processExpense({ variables });\n      return true;\n    } catch (e) {\n      // Display a toast with light variant since we're in a modal\n      addToast({ type: TOAST_TYPE.ERROR, variant: 'light', ...getErrorContent(intl, e, host) });\n      return false;\n    }\n  };\n\n  const getButtonProps = action => {\n    const isSelectedAction = selectedAction === action;\n    return {\n      ...buttonProps,\n      disabled: loading && !isSelectedAction,\n      loading: loading && isSelectedAction,\n      onClick: () => triggerAction(action),\n    };\n  };\n\n  return (\n    <React.Fragment>\n      {(permissions.approve.allowed || permissions.approve.reason === PERMISSION_CODES.AUTHOR_CANNOT_APPROVE) && (\n        <PermissionButton\n          {...getButtonProps('APPROVE')}\n          buttonStyle=\"secondary\"\n          data-cy=\"approve-button\"\n          icon={<ApproveIcon size={12} />}\n          permission={permissions.approve}\n          label={\n            <ButtonLabel>\n              <FormattedMessage id=\"actions.approve\" defaultMessage=\"Approve\" />\n            </ButtonLabel>\n          }\n        />\n      )}\n      {permissions.canPay && (\n        <PayExpenseButton\n          {...getButtonProps('PAY')}\n          onClick={null}\n          onSubmit={triggerAction}\n          expense={expense}\n          collective={collective}\n          host={host}\n          error={error}\n        />\n      )}\n      {permissions.canReject && (\n        <StyledButton {...getButtonProps('REJECT')} buttonStyle=\"dangerSecondary\" data-cy=\"reject-button\">\n          <RejectIcon size={14} />\n          <ButtonLabel>\n            <FormattedMessage id=\"actions.reject\" defaultMessage=\"Reject\" />\n          </ButtonLabel>\n        </StyledButton>\n      )}\n      {permissions.canMarkAsSpam && (\n        <StyledButton\n          {...getButtonProps('MARK_AS_SPAM')}\n          buttonStyle=\"dangerSecondary\"\n          data-cy=\"spam-button\"\n          onClick={() => {\n            if (confirm(intl.formatMessage(messages.markAsSpamWarning))) {\n              triggerAction('MARK_AS_SPAM');\n            }\n          }}\n        >\n          <RejectIcon size={14} />\n          <ButtonLabel>\n            <FormattedMessage id=\"actions.spam\" defaultMessage=\"Mark as Spam\" />\n          </ButtonLabel>\n        </StyledButton>\n      )}\n\n      {permissions.canUnapprove && (\n        <StyledButton {...getButtonProps('UNAPPROVE')} buttonStyle=\"dangerSecondary\" data-cy=\"unapprove-button\">\n          <UnapproveIcon size={12} />\n          <ButtonLabel>\n            <FormattedMessage id=\"expense.unapprove.btn\" defaultMessage=\"Unapprove\" />\n          </ButtonLabel>\n        </StyledButton>\n      )}\n      {permissions.canUnschedulePayment && (\n        <StyledButton\n          {...getButtonProps('UNSCHEDULE_PAYMENT')}\n          buttonStyle=\"dangerSecondary\"\n          data-cy=\"unapprove-button\"\n        >\n          <UnapproveIcon size={12} />\n          <ButtonLabel>\n            <FormattedMessage id=\"expense.unschedulePayment.btn\" defaultMessage=\"Unschedule Payment\" />\n          </ButtonLabel>\n        </StyledButton>\n      )}\n      {permissions.canMarkAsUnpaid && (\n        <MarkExpenseAsUnpaidButton\n          data-cy=\"mark-as-unpaid-button\"\n          {...getButtonProps('MARK_AS_UNPAID')}\n          onClick={null}\n          onConfirm={shouldRefundPaymentProcessorFee =>\n            triggerAction('MARK_AS_UNPAID', { shouldRefundPaymentProcessorFee })\n          }\n        />\n      )}\n      {permissions.canDelete && (\n        <DeleteExpenseButton\n          buttonProps={getButtonProps()}\n          expense={expense}\n          onModalToggle={onModalToggle}\n          onDelete={onDelete}\n        />\n      )}\n      {expense?.securityChecks?.length && <SecurityChecksButton {...buttonProps} minWidth={0} expense={expense} />}\n    </React.Fragment>\n  );\n};\n\nProcessExpenseButtons.propTypes = {\n  permissions: PropTypes.shape({\n    canApprove: PropTypes.bool,\n    canUnapprove: PropTypes.bool,\n    canReject: PropTypes.bool,\n    canMarkAsSpam: PropTypes.bool,\n    canPay: PropTypes.bool,\n    canMarkAsUnpaid: PropTypes.bool,\n    canMarkAsIncomplete: PropTypes.bool,\n    canUnschedulePayment: PropTypes.bool,\n    canDelete: PropTypes.bool,\n    approve: PropTypes.shape({\n      allowed: PropTypes.bool,\n      reason: PropTypes.string,\n    }),\n  }).isRequired,\n  expense: PropTypes.shape({\n    id: PropTypes.string,\n    legacyId: PropTypes.number,\n    status: PropTypes.string,\n    securityChecks: PropTypes.arrayOf(\n      PropTypes.shape({\n        level: PropTypes.string,\n        scope: PropTypes.string,\n        message: PropTypes.string,\n      }),\n    ),\n  }).isRequired,\n  /** The account where the expense has been submitted */\n  collective: PropTypes.object.isRequired,\n  host: PropTypes.object,\n  /** Props passed to all buttons. Useful to customize sizes, spaces, etc. */\n  buttonProps: PropTypes.object,\n  showError: PropTypes.bool,\n  onSuccess: PropTypes.func,\n  /** Called when the expense gets deleted */\n  onDelete: PropTypes.func,\n  /** Called when a modal is opened/closed with a boolean like (isOpen) */\n  onModalToggle: PropTypes.func,\n  displayMarkAsIncomplete: PropTypes.bool,\n};\n\nexport const DEFAULT_PROCESS_EXPENSE_BTN_PROPS = {\n  buttonSize: 'small',\n  minWidth: 130,\n  mx: 2,\n  mt: 2,\n};\n\nProcessExpenseButtons.defaultProps = {\n  buttonProps: DEFAULT_PROCESS_EXPENSE_BTN_PROPS,\n};\n\nexport default ProcessExpenseButtons;\n","import { gql } from '@apollo/client';\n\nimport { collectiveNavbarFieldsFragment } from '../../collective-page/graphql/fragments';\n\nexport const loggedInAccountExpensePayoutFieldsFragment = gql`\n  fragment LoggedInAccountExpensePayoutFields on Individual {\n    id\n    slug\n    imageUrl\n    type\n    name\n    legalName\n    hasTwoFactorAuth\n    location {\n      id\n      address\n      country\n      structured\n    }\n    payoutMethods {\n      id\n      type\n      name\n      data\n      isSaved\n    }\n    adminMemberships: memberOf(role: ADMIN, includeIncognito: false, accountType: [ORGANIZATION, COLLECTIVE, FUND]) {\n      nodes {\n        id\n        account {\n          id\n          slug\n          imageUrl\n          type\n          name\n          legalName\n          isActive\n          isHost\n          policies {\n            REQUIRE_2FA_FOR_ADMINS\n          }\n          ... on AccountWithParent {\n            parent {\n              id\n              policies {\n                REQUIRE_2FA_FOR_ADMINS\n              }\n            }\n          }\n          ... on AccountWithHost {\n            host {\n              id\n              payoutMethods {\n                id\n                type\n                name\n                data\n                isSaved\n              }\n            }\n          }\n          ... on Organization {\n            host {\n              id\n              payoutMethods {\n                id\n                type\n                name\n                data\n                isSaved\n              }\n            }\n          }\n          location {\n            id\n            address\n            country\n            structured\n          }\n          payoutMethods {\n            id\n            type\n            name\n            data\n            isSaved\n          }\n          childrenAccounts {\n            nodes {\n              id\n              slug\n              imageUrl\n              type\n              name\n              isActive\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const expenseHostFields = gql`\n  fragment ExpenseHostFields on Host {\n    id\n    name\n    legalName\n    slug\n    type\n    currency\n    isHost\n    expensePolicy\n    website\n    settings\n    features {\n      id\n      MULTI_CURRENCY_EXPENSES\n      PAYPAL_PAYOUTS\n    }\n    paypalPreApproval {\n      id\n      balance {\n        currency\n        valueInCents\n      }\n    }\n    location {\n      id\n      address\n      country\n    }\n    transferwise {\n      id\n      availableCurrencies\n    }\n    supportedPayoutMethods\n    isTrustedHost\n    hasDisputedOrders\n    hasInReviewOrders\n    plan {\n      id\n    }\n  }\n`;\n\nexport const expensePageExpenseFieldsFragment = gql`\n  fragment ExpensePageExpenseFields on Expense {\n    id\n    legacyId\n    description\n    longDescription\n    currency\n    type\n    status\n    privateMessage\n    tags\n    amount\n    amountInAccountCurrency: amountV2(currencySource: ACCOUNT) {\n      valueInCents\n      currency\n      exchangeRate {\n        date\n        value\n        source\n        isApproximate\n      }\n    }\n    createdAt\n    invoiceInfo\n    requiredLegalDocuments\n    feesPayer\n    draft\n    items {\n      id\n      incurredAt\n      description\n      amount\n      url\n    }\n    taxes {\n      id\n      type\n      rate\n      idNumber\n    }\n    attachedFiles {\n      id\n      url\n      name\n      info {\n        id\n        name\n        size\n      }\n    }\n    payee {\n      id\n      slug\n      name\n      legalName\n      type\n      isAdmin\n      location {\n        id\n        address\n        country\n      }\n      payoutMethods {\n        id\n        type\n        name\n        data\n        isSaved\n      }\n\n      # For Collectives, Funds, Events and Projects\n      ... on AccountWithHost {\n        isApproved\n        host {\n          id\n          # For Expenses across hosts\n          payoutMethods {\n            id\n            type\n            name\n            data\n            isSaved\n          }\n        }\n      }\n\n      # For Fiscal Hosts\n      ... on Organization {\n        host {\n          id\n        }\n      }\n    }\n    payeeLocation {\n      id\n      address\n      country\n      structured\n    }\n    createdByAccount {\n      id\n      slug\n      name\n      type\n      imageUrl\n    }\n    host {\n      id\n      name\n      legalName\n      slug\n      type\n      website\n      location {\n        id\n        address\n        country\n      }\n    }\n    requestedByAccount {\n      id\n      slug\n      name\n      type\n      imageUrl\n    }\n    account {\n      id\n      legacyId\n      slug\n      name\n      type\n      imageUrl\n      backgroundImageUrl\n      isActive\n      description\n      settings\n      twitterHandle\n      currency\n      expensePolicy\n      supportedExpenseTypes\n      features {\n        id\n        ...NavbarFields\n        MULTI_CURRENCY_EXPENSES\n      }\n      expensesTags {\n        id\n        tag\n      }\n      location {\n        id\n        address\n        country\n      }\n\n      stats {\n        id\n        balanceWithBlockedFunds {\n          valueInCents\n          currency\n        }\n      }\n\n      ... on AccountWithParent {\n        parent {\n          id\n          slug\n          imageUrl\n          backgroundImageUrl\n          twitterHandle\n        }\n      }\n\n      ... on AccountWithHost {\n        isApproved\n        host {\n          id\n          ...ExpenseHostFields\n          transferwise {\n            id\n            availableCurrencies\n          }\n        }\n      }\n\n      # For Hosts with Budget capabilities\n\n      ... on Organization {\n        isHost\n        isActive\n        host {\n          id\n          ...ExpenseHostFields\n          transferwise {\n            id\n            availableCurrencies\n          }\n        }\n      }\n\n      ... on Event {\n        parent {\n          id\n          slug\n          name\n          type\n          imageUrl\n        }\n      }\n      ... on Project {\n        parent {\n          id\n          slug\n          name\n          type\n          imageUrl\n        }\n      }\n    }\n    payoutMethod {\n      id\n      type\n      data\n      isSaved\n    }\n    virtualCard {\n      id\n      name\n      last4\n    }\n    permissions {\n      id\n      canEdit\n      canEditTags\n      canDelete\n      canSeeInvoiceInfo\n      canApprove\n      canUnapprove\n      canReject\n      canMarkAsSpam\n      canPay\n      canMarkAsUnpaid\n      canMarkAsIncomplete\n      canComment\n      canUnschedulePayment\n      approve {\n        allowed\n        reason\n        reasonDetails\n      }\n    }\n    activities {\n      id\n      type\n      createdAt\n      data\n      individual {\n        id\n        type\n        slug\n        name\n        imageUrl\n      }\n    }\n    recurringExpense {\n      id\n      interval\n      endsAt\n    }\n    securityChecks {\n      level\n      message\n      scope\n      details\n    }\n  }\n\n  ${expenseHostFields}\n  ${collectiveNavbarFieldsFragment}\n`;\n\nexport const expensesListFieldsFragment = gql`\n  fragment ExpensesListFieldsFragment on Expense {\n    id\n    legacyId\n    description\n    status\n    createdAt\n    tags\n    amount\n    amountInAccountCurrency: amountV2(currencySource: ACCOUNT) {\n      valueInCents\n      currency\n      exchangeRate {\n        date\n        value\n        source\n        isApproximate\n      }\n    }\n    currency\n    type\n    requiredLegalDocuments\n    feesPayer\n    account {\n      id\n      name\n      slug\n      createdAt\n      currency\n      type\n      stats {\n        id\n        balanceWithBlockedFunds {\n          valueInCents\n          currency\n        }\n      }\n      ... on AccountWithParent {\n        parent {\n          id\n          slug\n        }\n      }\n    }\n    permissions {\n      id\n      canDelete\n      canApprove\n      canUnapprove\n      canReject\n      canMarkAsSpam\n      canPay\n      canMarkAsUnpaid\n      canMarkAsIncomplete\n      canSeeInvoiceInfo\n      canEditTags\n      canUnschedulePayment\n      approve {\n        allowed\n        reason\n        reasonDetails\n      }\n    }\n    payoutMethod {\n      id\n      type\n      data\n      isSaved\n    }\n    payee {\n      id\n      type\n      slug\n      name\n      imageUrl(height: 80)\n      isAdmin\n\n      # For Collectives, Funds, Events and Projects\n      ... on AccountWithHost {\n        isApproved\n        host {\n          id\n        }\n      }\n\n      # For Fiscal Hosts\n      ... on Organization {\n        host {\n          id\n        }\n      }\n    }\n    createdByAccount {\n      id\n      type\n      slug\n      name\n    }\n  }\n`;\n\nexport const expensesListAdminFieldsFragment = gql`\n  fragment ExpensesListAdminFieldsFragment on Expense {\n    id\n    payoutMethod {\n      id\n      type\n      data\n    }\n    items {\n      id\n      description\n      incurredAt\n      url\n      amount\n    }\n    taxes {\n      id\n      type\n      rate\n    }\n    attachedFiles {\n      id\n      url\n      name\n    }\n    securityChecks {\n      level\n      message\n      scope\n      details\n    }\n  }\n`;\n","import { TaxType } from '@opencollective/taxes';\nimport { isEmpty, isNil, sumBy, uniq } from 'lodash';\n\nimport { FEATURES, isFeatureEnabled } from '../../../lib/allowed-features';\nimport { CollectiveType } from '../../../lib/constants/collectives';\nimport { Currency, PayPalSupportedCurrencies } from '../../../lib/constants/currency';\nimport expenseTypes from '../../../lib/constants/expenseTypes';\nimport { PayoutMethodType } from '../../../lib/constants/payout-method';\n\nimport { validateTaxGST } from '../ExpenseGSTFormikFields';\nimport { validateTaxVAT } from '../ExpenseVATFormikFields';\n\nexport const checkRequiresAddress = values => {\n  const collectiveTypesRequiringAddress = [CollectiveType.INDIVIDUAL, CollectiveType.USER, CollectiveType.ORGANIZATION];\n  const expenseTypesRequiringAddress = [expenseTypes.INVOICE, expenseTypes.GRANT];\n\n  return (\n    expenseTypesRequiringAddress.includes(values.type) &&\n    (values.payee?.isNewUser ||\n      (values.payee &&\n        !values.payee.isInvite &&\n        (collectiveTypesRequiringAddress.includes(values.payee.type) || values.payee.isHost)))\n  );\n};\n\nexport const isTaxRateValid = rate => !isNil(rate) && rate >= 0 && rate <= 1;\n\nexport const getTaxAmount = (baseAmount, tax) => {\n  return Math.round(baseAmount * tax.rate);\n};\n\nexport const computeExpenseAmounts = (items, taxes) => {\n  const areAllItemsValid = items.every(item => !isNil(item.amount));\n  const activeTaxes = taxes?.filter(tax => !tax.isDisabled) || [];\n  const hasTaxes = Boolean(activeTaxes.length);\n  const areAllTaxesValid = !hasTaxes || activeTaxes.every(tax => isTaxRateValid(tax.rate));\n  const totalInvoiced = areAllItemsValid ? sumBy(items, 'amount') : null;\n  const totalAmount =\n    areAllItemsValid && areAllTaxesValid\n      ? totalInvoiced + sumBy(activeTaxes || [], tax => getTaxAmount(totalInvoiced, tax))\n      : null;\n\n  return { hasTaxes, totalInvoiced, totalAmount };\n};\n\nexport const getAmountWithoutTaxes = (totalAmount, taxes) => {\n  return totalAmount / (1 + sumBy(taxes, 'rate'));\n};\n\nexport const validateExpenseTaxes = (intl, taxes) => {\n  const enabledTaxes = taxes?.filter(tax => !tax.isDisabled) || [];\n  if (!enabledTaxes.length) {\n    return null;\n  } else {\n    const taxesErrors = enabledTaxes.map(tax => {\n      switch (tax.type) {\n        case TaxType.GST:\n          return validateTaxGST(intl, tax);\n        case TaxType.VAT:\n          return validateTaxVAT(intl, tax);\n        default:\n          return `Tax type ${tax.type} is not supported`; // No i18n because it's a developer error\n      }\n    });\n\n    const hasErrors = taxesErrors.some(errors => !isEmpty(errors));\n    return hasErrors ? taxesErrors : null;\n  }\n};\n\n/**\n * Returns the list of supported currencies for this expense / payout method.\n * The collective currency always comes first.\n */\nexport const getSupportedCurrencies = (collective, payoutMethod) => {\n  if (\n    !isFeatureEnabled(collective, FEATURES.MULTI_CURRENCY_EXPENSES) ||\n    !isFeatureEnabled(collective.host, FEATURES.MULTI_CURRENCY_EXPENSES) ||\n    payoutMethod?.type === PayoutMethodType.ACCOUNT_BALANCE\n  ) {\n    return [collective?.currency];\n  }\n\n  const isPayPal = payoutMethod?.type === PayoutMethodType.PAYPAL;\n  if (isPayPal) {\n    const defaultCurrency = PayPalSupportedCurrencies.includes(collective?.currency) ? collective.currency : 'USD';\n    return uniq([defaultCurrency, ...PayPalSupportedCurrencies]);\n  } else if (payoutMethod?.type === PayoutMethodType.OTHER) {\n    return Currency.includes(collective?.currency) ? uniq([collective?.currency, ...Currency]) : Currency;\n  } else {\n    return uniq(\n      [collective?.currency, collective?.host?.currency, payoutMethod?.currency, payoutMethod?.data?.currency].filter(\n        Boolean,\n      ),\n    );\n  }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { InfoCircle } from '@styled-icons/boxicons-regular/InfoCircle';\nimport { Form, Formik } from 'formik';\nimport { get } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport styled, { css } from 'styled-components';\n\nimport { formatCurrency } from '../../lib/currency-utils';\nimport { requireFields } from '../../lib/form-utils';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport useLoggedInUser from '../../lib/hooks/useLoggedInUser';\nimport { require2FAForAdmins } from '../../lib/policies';\nimport { getCollectivePageRoute } from '../../lib/url-helpers';\nimport { getCurrentDateInUTC } from '../../lib/utils';\n\nimport { collectivePageQuery, getCollectivePageQueryVariables } from '../collective-page/graphql/queries';\nimport { getBudgetSectionQuery, getBudgetSectionQueryVariables } from '../collective-page/sections/Budget';\nimport { DefaultCollectiveLabel } from '../CollectivePicker';\nimport CollectivePickerAsync from '../CollectivePickerAsync';\nimport Container from '../Container';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Flex } from '../Grid';\nimport Link from '../Link';\nimport LinkCollective from '../LinkCollective';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport StyledButton from '../StyledButton';\nimport StyledHr from '../StyledHr';\nimport StyledInput from '../StyledInput';\nimport StyledInputAmount from '../StyledInputAmount';\nimport StyledInputFormikField from '../StyledInputFormikField';\nimport StyledInputPercentage from '../StyledInputPercentage';\nimport StyledLink from '../StyledLink';\nimport StyledModal, { CollectiveModalHeader, ModalBody, ModalFooter } from '../StyledModal';\nimport StyledSelect from '../StyledSelect';\nimport StyledTooltip from '../StyledTooltip';\nimport { P, Span } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\nimport { TwoFactorAuthRequiredMessage } from '../TwoFactorAuthRequiredMessage';\n\nimport illustration from '../contribution-flow/fees-on-top-illustration.png';\n\nconst Illustration = styled.img.attrs({ src: illustration })`\n  width: 40px;\n  height: 40px;\n`;\n\nconst AddFundsModalContainer = styled(StyledModal)`\n  width: 100%;\n  max-width: 576px;\n  padding: 24px 30px;\n  ${props =>\n    props.showPlatformTipModal &&\n    css`\n      background-image: url('/static/images/platform-tip-background.svg');\n      background-repeat: no-repeat;\n      background-size: 435px;\n    `}\n`;\n\nconst AmountDetailsLine = ({ label, value, currency, isLargeAmount }) => (\n  <Flex justifyContent=\"space-between\" alignItems=\"center\">\n    <Span fontSize=\"12px\" lineHeight=\"18px\" fontWeight=\"500\">\n      <FormattedMessage id=\"withColon\" defaultMessage=\"{item}:\" values={{ item: label }} />\n    </Span>\n    <Span fontSize={isLargeAmount ? '18px' : '12px'} lineHeight={isLargeAmount ? '27px' : '18px'} fontWeight=\"500\">\n      <FormattedMoneyAmount amount={value} currency={currency} />\n    </Span>\n  </Flex>\n);\n\nAmountDetailsLine.propTypes = {\n  label: PropTypes.node,\n  currency: PropTypes.string.isRequired,\n  value: PropTypes.number,\n  isLargeAmount: PropTypes.bool,\n};\n\nconst addFundsMutation = gql`\n  mutation AddFunds(\n    $fromAccount: AccountReferenceInput!\n    $account: AccountReferenceInput!\n    $tier: TierReferenceInput\n    $amount: AmountInput!\n    $description: String!\n    $memo: String\n    $processedAt: DateTime\n    $hostFeePercent: Float!\n    $invoiceTemplate: String\n  ) {\n    addFunds(\n      account: $account\n      fromAccount: $fromAccount\n      amount: $amount\n      description: $description\n      memo: $memo\n      processedAt: $processedAt\n      hostFeePercent: $hostFeePercent\n      tier: $tier\n      invoiceTemplate: $invoiceTemplate\n    ) {\n      id\n      description\n      memo\n      processedAt\n      transactions {\n        id\n        type\n      }\n      fromAccount {\n        id\n        slug\n        name\n      }\n      toAccount {\n        id\n        slug\n        name\n        stats {\n          id\n          balance {\n            valueInCents\n          }\n        }\n      }\n      tier {\n        id\n        legacyId\n        slug\n        name\n      }\n    }\n  }\n`;\n\nconst addFundsTierFieldsFragment = gql`\n  fragment AddFundsTierFields on Tier {\n    id\n    slug\n    legacyId\n    name\n  }\n`;\n\nconst addFundsAccountQuery = gql`\n  query AddFundsAccount($slug: String!) {\n    account(slug: $slug) {\n      id\n      type\n      isHost\n      name\n      slug\n      currency\n      settings\n      ... on Organization {\n        tiers {\n          nodes {\n            id\n            ...AddFundsTierFields\n          }\n        }\n      }\n      ... on Host {\n        id\n        slug\n        name\n        settings\n        plan {\n          id\n          hostFees\n        }\n        policies {\n          REQUIRE_2FA_FOR_ADMINS\n        }\n        isTrustedHost\n      }\n      ... on AccountWithHost {\n        addedFundsHostFeePercent: hostFeePercent(paymentMethodType: HOST)\n        host {\n          id\n          slug\n          name\n          settings\n          plan {\n            id\n            hostFees\n          }\n          policies {\n            REQUIRE_2FA_FOR_ADMINS\n          }\n          isTrustedHost\n        }\n      }\n      ... on AccountWithContributions {\n        tiers {\n          nodes {\n            id\n            ...AddFundsTierFields\n          }\n        }\n      }\n    }\n  }\n  ${addFundsTierFieldsFragment}\n`;\n\nconst addPlatformTipMutation = gql`\n  mutation AddPlatformTip($amount: AmountInput!, $transaction: TransactionReferenceInput!) {\n    addPlatformTipToTransaction(amount: $amount, transaction: $transaction) {\n      id\n    }\n  }\n`;\n\nconst getInitialValues = values => ({\n  amount: null,\n  hostFeePercent: null,\n  description: '',\n  memo: null,\n  processedAt: getCurrentDateInUTC(),\n  fromAccount: null,\n  tier: null,\n  ...values,\n});\n\nconst validate = values => {\n  return requireFields(values, ['amount', 'fromAccount', 'description', 'processedAt']);\n};\n\n// Build an account reference. Compatible with accounts from V1 and V2.\nconst buildAccountReference = input => {\n  return typeof input.id === 'string' ? { id: input.id } : { legacyId: input.id };\n};\n\nconst msg = defineMessages({\n  noThankYou: {\n    id: 'NoThankYou',\n    defaultMessage: 'No thank you',\n  },\n  other: {\n    id: 'platformFee.Other',\n    defaultMessage: 'Other',\n  },\n});\n\nconst DEFAULT_PLATFORM_TIP_PERCENTAGES = [0.1, 0.15, 0.2];\n\nconst getOptionFromPercentage = (amount, currency, percentage) => {\n  const feeAmount = isNaN(amount) ? 0 : Math.round(amount * percentage);\n  return {\n    // Value must be unique, so we set a special key if feeAmount is 0\n    value: feeAmount || `${percentage}%`,\n    feeAmount,\n    percentage,\n    currency,\n    label: `${feeAmount / 100} ${currency} (${percentage * 100}%)`,\n  };\n};\n\nconst getOptions = (amount, currency, intl) => {\n  return [\n    ...DEFAULT_PLATFORM_TIP_PERCENTAGES.map(percentage => {\n      return getOptionFromPercentage(amount, currency, percentage);\n    }),\n    {\n      label: intl.formatMessage(msg.noThankYou),\n      value: 0,\n    },\n    {\n      label: intl.formatMessage(msg.other),\n      value: 'CUSTOM',\n    },\n  ];\n};\n\nconst getTiersOptions = (intl, tiers) => {\n  if (!tiers) {\n    return [];\n  }\n\n  return [\n    {\n      value: null,\n      label: intl.formatMessage({ defaultMessage: 'No tier' }),\n    },\n    ...tiers.map(tier => ({\n      value: tier,\n      label: `#${tier.legacyId} - ${tier.name}`,\n    })),\n  ];\n};\n\nconst Field = styled(StyledInputFormikField).attrs({\n  labelFontSize: '16px',\n  labelFontWeight: '700',\n})``;\n\nconst AddFundsModal = ({ collective, ...props }) => {\n  const { LoggedInUser } = useLoggedInUser();\n  const [fundDetails, setFundDetails] = useState({});\n  const { addToast } = useToasts();\n  const intl = useIntl();\n  const formatOptionLabel = option => {\n    if (option.currency) {\n      return (\n        <span>\n          {formatCurrency(option.feeAmount, option.currency, { locale: intl.locale })}{' '}\n          <Span color=\"black.500\">({option.percentage * 100}%)</Span>\n        </span>\n      );\n    } else {\n      return option.label;\n    }\n  };\n  const [customAmount, setCustomAmount] = useState(0);\n  const { data, loading } = useQuery(addFundsAccountQuery, {\n    context: API_V2_CONTEXT,\n    variables: { slug: collective.slug },\n  });\n  const account = data?.account;\n  const currency = account?.currency;\n  const host = account?.isHost ? account : account?.host;\n\n  const options = React.useMemo(\n    () => getOptions(fundDetails.fundAmount, currency, intl),\n    [fundDetails.fundAmount, currency],\n  );\n  const [selectedOption, setSelectedOption] = useState(options[3]);\n  const [submitAddFunds, { data: addFundsResponse, error: fundError }] = useMutation(addFundsMutation, {\n    context: API_V2_CONTEXT,\n    refetchQueries: [\n      {\n        context: API_V2_CONTEXT,\n        query: getBudgetSectionQuery(true, false, false),\n        variables: getBudgetSectionQueryVariables(collective.slug, host?.slug, false),\n      },\n      { query: collectivePageQuery, variables: getCollectivePageQueryVariables(collective.slug) },\n    ],\n    awaitRefetchQueries: true,\n  });\n\n  const [addPlatformTip, { error: platformTipError }] = useMutation(addPlatformTipMutation, {\n    context: API_V2_CONTEXT,\n  });\n\n  const tiersNodes = get(data, 'account.tiers.nodes');\n  const accountSettings = get(data, 'account.settings');\n  const tiersOptions = React.useMemo(\n    () => getTiersOptions(intl, tiersNodes, accountSettings),\n    [tiersNodes, accountSettings],\n  );\n\n  // No modal if logged-out\n  if (!LoggedInUser) {\n    return null;\n  }\n\n  // From the Collective page we pass host and collective as API v1 objects\n  // From the Host dashboard we pass host and collective as API v2 objects\n  const canAddHostFee = host?.plan?.hostFees && collective.id !== host?.id;\n  const hostFeePercent = account?.addedFundsHostFeePercent || collective.hostFeePercent;\n  const defaultHostFeePercent = canAddHostFee ? hostFeePercent : 0;\n  const canAddPlatformTip = host?.isTrustedHost;\n  const receiptTemplates = host?.settings?.invoice?.templates;\n\n  const receiptTemplateTitles = [];\n  if (receiptTemplates?.default?.title?.length > 0) {\n    receiptTemplateTitles.push({\n      value: 'default',\n      label: receiptTemplates?.default?.title,\n    });\n  }\n  if (receiptTemplates?.alternative?.title?.length > 0) {\n    receiptTemplateTitles.push({ value: 'alternative', label: receiptTemplates?.alternative?.title });\n  }\n\n  const handleClose = () => {\n    setFundDetails({ showPlatformTipModal: false });\n    setSelectedOption(options[3]);\n    setCustomAmount(0);\n    props.onClose();\n  };\n\n  return (\n    <AddFundsModalContainer\n      {...props}\n      trapFocus\n      showPlatformTipModal={fundDetails.showPlatformTipModal}\n      onClose={handleClose}\n    >\n      <CollectiveModalHeader collective={collective} onClick={handleClose} />\n      {loading ? (\n        <LoadingPlaceholder mt={2} height={200} />\n      ) : require2FAForAdmins(host) && !LoggedInUser.hasTwoFactorAuth ? (\n        <TwoFactorAuthRequiredMessage borderWidth={0} noTitle />\n      ) : (\n        <Formik\n          initialValues={getInitialValues({ hostFeePercent: defaultHostFeePercent, account: collective })}\n          enableReinitialize={true}\n          validate={validate}\n          onSubmit={async (values, formik) => {\n            if (!fundDetails.showPlatformTipModal) {\n              const defaultInvoiceTemplate = receiptTemplateTitles.length > 0 ? receiptTemplateTitles[0].value : null;\n              const result = await submitAddFunds({\n                variables: {\n                  ...values,\n                  amount: { valueInCents: values.amount },\n                  platformTip: { valueInCents: 0 },\n                  fromAccount: buildAccountReference(values.fromAccount),\n                  account: buildAccountReference(values.account),\n                  tier: !values.tier ? null : { id: values.tier.id },\n                  invoiceTemplate: values.invoiceTemplate?.value || defaultInvoiceTemplate,\n                  processedAt: values.processedAt ? new Date(values.processedAt) : null,\n                },\n              });\n\n              const resultOrder = result.data.addFunds;\n              setFundDetails({\n                showPlatformTipModal: true,\n                fundAmount: values.amount,\n                description: resultOrder.description,\n                memo: resultOrder.memo,\n                processedAt: resultOrder.processedAt,\n                source: resultOrder.fromAccount,\n                tier: resultOrder.tier,\n              });\n              /*\n               * Since `enableReinitialize` is used in this form, during the second step (platform tip step)\n               * the form values will be reset. The validate function in this form\n               * requires `amount`, `fromAccount` and `description` so we should\n               * set them as otherwise the form will not be submittable.\n               */\n              formik.setValues({\n                amount: values.amount,\n                fromAccount: resultOrder.fromAccount,\n                description: resultOrder.description,\n                processedAt: resultOrder.processedAt,\n              });\n            } else if (selectedOption.value !== 0) {\n              const creditTransaction = addFundsResponse.addFunds.transactions.filter(\n                transaction => transaction.type === 'CREDIT',\n              )[0];\n              await addPlatformTip({\n                variables: {\n                  ...values,\n                  amount: { valueInCents: selectedOption.value !== 'CUSTOM' ? selectedOption.value : customAmount },\n                  transaction: { id: creditTransaction.id },\n                },\n              });\n              handleClose();\n              addToast({\n                type: TOAST_TYPE.SUCCESS,\n                message: (\n                  <FormattedMessage id=\"AddFundsModal.Success\" defaultMessage=\"Platform tip successfully added\" />\n                ),\n              });\n            } else {\n              handleClose();\n            }\n          }}\n        >\n          {({ values, isSubmitting }) => {\n            const hostFeePercent = isNaN(values.hostFeePercent) ? defaultHostFeePercent : values.hostFeePercent;\n            const hostFee = Math.round(values.amount * (hostFeePercent / 100));\n\n            const defaultSources = [];\n            defaultSources.push({\n              value: host,\n              label: <DefaultCollectiveLabel value={host} />,\n            });\n            if (host?.id !== account.id) {\n              defaultSources.push({ value: account, label: <DefaultCollectiveLabel value={account} /> });\n            }\n\n            if (!fundDetails.showPlatformTipModal) {\n              return (\n                <Form data-cy=\"add-funds-form\">\n                  <h3>\n                    <FormattedMessage id=\"AddFundsModal.SubHeading\" defaultMessage=\"Add Funds to the Collective\" />\n                  </h3>\n                  <ModalBody>\n                    <Field\n                      name=\"fromAccount\"\n                      htmlFor=\"addFunds-fromAccount\"\n                      label={<FormattedMessage id=\"AddFundsModal.source\" defaultMessage=\"Source\" />}\n                      mt={3}\n                    >\n                      {({ form, field }) => (\n                        <CollectivePickerAsync\n                          inputId={field.id}\n                          data-cy=\"add-funds-source\"\n                          types={['USER', 'ORGANIZATION']}\n                          creatable\n                          error={field.error}\n                          createCollectiveOptionalFields={['location.address', 'location.country']}\n                          onBlur={() => form.setFieldTouched(field.name, true)}\n                          customOptions={defaultSources}\n                          onChange={({ value }) => form.setFieldValue(field.name, value)}\n                        />\n                      )}\n                    </Field>\n                    <Field\n                      name=\"tier\"\n                      htmlFor=\"addFunds-tier\"\n                      label={<FormattedMessage defaultMessage=\"Tier\" />}\n                      mt={3}\n                    >\n                      {({ form, field }) => (\n                        <StyledSelect\n                          inputId={field.id}\n                          data-cy=\"add-funds-tier\"\n                          error={field.error}\n                          onBlur={() => form.setFieldTouched(field.name, true)}\n                          onChange={({ value }) => form.setFieldValue(field.name, value)}\n                          isLoading={loading}\n                          options={tiersOptions}\n                          isSearchable={options.length > 10}\n                          value={tiersOptions.find(option =>\n                            !values.tier ? option.value === null : option.value?.id === values.tier.id,\n                          )}\n                        />\n                      )}\n                    </Field>\n                    <Field\n                      name=\"description\"\n                      htmlFor=\"addFunds-description\"\n                      label={<FormattedMessage id=\"Fields.description\" defaultMessage=\"Description\" />}\n                      mt={3}\n                    >\n                      {({ field }) => <StyledInput data-cy=\"add-funds-description\" {...field} />}\n                    </Field>\n                    <Field\n                      name=\"processedAt\"\n                      htmlFor=\"addFunds-processedAt\"\n                      inputType=\"date\"\n                      label={\n                        <span>\n                          <FormattedMessage id=\"expense.incurredAt\" defaultMessage=\"Date\" />\n                          {` `}\n                          <StyledTooltip\n                            content={() => <FormattedMessage defaultMessage=\"Date the funds were received.\" />}\n                          >\n                            <InfoCircle size={16} />\n                          </StyledTooltip>\n                        </span>\n                      }\n                      mt={3}\n                    >\n                      {({ field }) => <StyledInput data-cy=\"add-funds-processedAt\" {...field} />}\n                    </Field>\n                    <Field\n                      name=\"memo\"\n                      htmlFor=\"addFunds-memo\"\n                      label={\n                        <span>\n                          <FormattedMessage defaultMessage=\"Memo\" />\n                          {` `}\n                          <StyledTooltip\n                            content={() => (\n                              <FormattedMessage defaultMessage=\"This is a private note that will only be visible to the host.\" />\n                            )}\n                          >\n                            <InfoCircle size={16} />\n                          </StyledTooltip>\n                        </span>\n                      }\n                      required={false}\n                      mt={3}\n                    >\n                      {({ field }) => <StyledInput data-cy=\"add-funds-memo\" {...field} />}\n                    </Field>\n                    <Flex mt={3} flexWrap=\"wrap\">\n                      <Field\n                        name=\"amount\"\n                        htmlFor=\"addFunds-amount\"\n                        label={<FormattedMessage id=\"Fields.amount\" defaultMessage=\"Amount\" />}\n                        required\n                        flex=\"1 1\"\n                      >\n                        {({ form, field }) => (\n                          <StyledInputAmount\n                            id={field.id}\n                            data-cy=\"add-funds-amount\"\n                            currency={currency}\n                            placeholder=\"0.00\"\n                            error={field.error}\n                            value={field.value}\n                            maxWidth=\"100%\"\n                            onChange={value => form.setFieldValue(field.name, value)}\n                            onBlur={() => form.setFieldTouched(field.name, true)}\n                          />\n                        )}\n                      </Field>\n                      {canAddHostFee && (\n                        <Field\n                          name=\"hostFeePercent\"\n                          htmlFor=\"addFunds-hostFeePercent\"\n                          label={\n                            <span>\n                              <FormattedMessage defaultMessage=\"Host Fee\" />\n                              {` `}\n                              <StyledTooltip\n                                content={() => (\n                                  <FormattedMessage\n                                    id=\"AddFundsModal.hostFee.tooltip\"\n                                    defaultMessage=\"The default host fee percentage is set up in your host settings. The host fee is charged by the fiscal host to the collectives for the financial services provided.\"\n                                  />\n                                )}\n                              >\n                                <InfoCircle size={16} />\n                              </StyledTooltip>\n                            </span>\n                          }\n                          ml={3}\n                        >\n                          {({ form, field }) => (\n                            <StyledInputPercentage\n                              id={field.id}\n                              placeholder={defaultHostFeePercent}\n                              value={field.value}\n                              error={field.error}\n                              onChange={value => form.setFieldValue(field.name, value)}\n                              onBlur={() => form.setFieldTouched(field.name, true)}\n                            />\n                          )}\n                        </Field>\n                      )}\n                    </Flex>\n                    {receiptTemplateTitles.length > 1 && (\n                      <Container width=\"100%\">\n                        <Field\n                          name=\"invoiceTemplate\"\n                          htmlFor=\"addFunds-invoiceTemplate\"\n                          label={<FormattedMessage defaultMessage=\"Choose receipt\" />}\n                          mt={3}\n                        >\n                          {({ form, field }) => (\n                            <StyledSelect\n                              id={field.id}\n                              options={receiptTemplateTitles}\n                              defaultValue={receiptTemplateTitles[0]}\n                              onChange={value => form.setFieldValue(field.name, value)}\n                            />\n                          )}\n                        </Field>\n                      </Container>\n                    )}\n                    <P fontSize=\"14px\" lineHeight=\"17px\" fontWeight=\"500\" mt={4}>\n                      <FormattedMessage id=\"Details\" defaultMessage=\"Details\" />\n                    </P>\n                    <StyledHr my={2} borderColor=\"black.300\" />\n                    <AmountDetailsLine\n                      value={values.amount || 0}\n                      currency={currency}\n                      label={<FormattedMessage id=\"AddFundsModal.fundingAmount\" defaultMessage=\"Funding amount\" />}\n                    />\n                    {canAddHostFee && (\n                      <AmountDetailsLine\n                        value={hostFee}\n                        currency={currency}\n                        label={\n                          <FormattedMessage\n                            id=\"AddFundsModal.hostFees\"\n                            defaultMessage=\"Host fee charged to collective ({hostFees})\"\n                            values={{ hostFees: `${hostFeePercent}%` }}\n                          />\n                        }\n                      />\n                    )}\n                    <StyledHr my={2} borderColor=\"black.300\" />\n                    <AmountDetailsLine\n                      value={values.amount - hostFee}\n                      currency={currency}\n                      label={\n                        <FormattedMessage\n                          id=\"AddFundsModal.netAmount\"\n                          defaultMessage=\"Net amount received by collective\"\n                        />\n                      }\n                      isLargeAmount\n                    />\n                    <P fontSize=\"12px\" lineHeight=\"18px\" color=\"black.700\" mt={2}>\n                      <FormattedMessage\n                        id=\"AddFundsModal.disclaimer\"\n                        defaultMessage=\"By clicking add funds, you agree to set aside {amount} in your bank account on behalf of this collective.\"\n                        values={{ amount: formatCurrency(values.amount, currency, { locale: intl.locale }) }}\n                      />\n                    </P>\n                    {fundError && <MessageBoxGraphqlError error={fundError} mt={3} fontSize=\"13px\" />}\n                  </ModalBody>\n                  <ModalFooter isFullWidth>\n                    <Flex justifyContent=\"center\" flexWrap=\"wrap\">\n                      <StyledButton\n                        type=\"submit\"\n                        data-cy=\"add-funds-submit-btn\"\n                        buttonStyle=\"primary\"\n                        mx={2}\n                        mb={1}\n                        minWidth={120}\n                        loading={isSubmitting}\n                      >\n                        <FormattedMessage id=\"menu.addFunds\" defaultMessage=\"Add Funds\" />\n                      </StyledButton>\n                      <StyledButton mx={2} mb={1} minWidth={100} onClick={handleClose} type=\"button\">\n                        <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n                      </StyledButton>\n                    </Flex>\n                  </ModalFooter>\n                </Form>\n              );\n            } else {\n              return (\n                <Form>\n                  <ModalBody data-cy=\"funds-added\">\n                    <Container>\n                      <h3>\n                        <FormattedMessage id=\"AddFundsModal.FundsAdded\" defaultMessage=\"Funds Added ✅\" />\n                      </h3>\n                      <Container pb={2}>\n                        <FormattedMessage id=\"AddFundsModal.YouAdded\" defaultMessage=\"You added:\" />\n                        <ul>\n                          <li>\n                            <strong>{`${fundDetails.fundAmount / 100} ${currency}`}</strong>\n                          </li>\n                          <li>\n                            <FormattedMessage id=\"AddFundsModal.FromTheSource\" defaultMessage=\"From the source\" />{' '}\n                            <strong>\n                              <LinkCollective collective={fundDetails.source} />\n                            </strong>\n                          </li>\n                          <li>\n                            <FormattedMessage id=\"AddFundsModal.ForThePurpose\" defaultMessage=\"For the purpose of\" />{' '}\n                            <strong>{fundDetails.description}</strong>\n                          </li>\n                          {fundDetails.memo && (\n                            <li>\n                              <FormattedMessage defaultMessage=\"Memo\" />\n                              {': '}\n                              <strong>{fundDetails.memo}</strong>\n                            </li>\n                          )}\n                          {fundDetails.processedAt && (\n                            <li>\n                              <Span textTransform=\"capitalize\">\n                                <FormattedMessage id=\"processedAt\" defaultMessage=\"Fund received date\" />\n                              </Span>\n                              {': '}\n                              <strong>{intl.formatDate(fundDetails.processedAt, { timeZone: 'UTC' })}</strong>\n                            </li>\n                          )}\n                          {fundDetails.tier && (\n                            <li>\n                              <FormattedMessage defaultMessage=\"For the tier\" />{' '}\n                              <StyledLink\n                                as={Link}\n                                openInNewTab\n                                href={`${getCollectivePageRoute(collective)}/contribute/${fundDetails.tier.slug}-${\n                                  fundDetails.tier.legacyId\n                                }`}\n                              >\n                                <strong>{fundDetails.tier.name}</strong>\n                              </StyledLink>\n                            </li>\n                          )}\n                        </ul>\n                      </Container>\n                      <Container pb={2}>\n                        <FormattedMessage id=\"AddFundsModal.NeedHelp\" defaultMessage=\"Need Help?\" />{' '}\n                        <StyledLink href=\"/support\" buttonStyle=\"standard\" buttonSize=\"tiny\">\n                          <FormattedMessage id=\"error.contactSupport\" defaultMessage=\"Contact support\" />\n                        </StyledLink>\n                      </Container>\n                    </Container>\n                    {canAddPlatformTip && hostFee === 0 && (\n                      <Container>\n                        <StyledHr my={3} borderColor=\"black.300\" />\n                        <div>\n                          <P fontWeight=\"400\" fontSize=\"14px\" lineHeight=\"21px\" color=\"black.900\" my={32}>\n                            <FormattedMessage\n                              id=\"AddFundsModal.platformTipInfo\"\n                              defaultMessage=\"Since you are not charging a host fee to the collective, Open Collective is free to use. We rely on your generosity to keep this possible!\"\n                            />\n                          </P>\n                          <Flex justifyContent=\"space-between\" flexWrap={['wrap', 'nowrap']}>\n                            <Flex alignItems=\"center\">\n                              <Illustration alt=\"\" />\n                              <P fontWeight={500} fontSize=\"12px\" lineHeight=\"18px\" color=\"black.900\" mx={10}>\n                                <FormattedMessage\n                                  id=\"AddFundsModal.thankYou\"\n                                  defaultMessage=\"Thank you for supporting us. Platform tip will be deducted from the host budget:\"\n                                />\n                              </P>\n                            </Flex>\n                            <StyledSelect\n                              aria-label=\"Donation percentage\"\n                              data-cy=\"donation-percentage\"\n                              width=\"100%\"\n                              maxWidth={['100%', 190]}\n                              mt={[2, 0]}\n                              isSearchable={false}\n                              fontSize=\"15px\"\n                              options={options}\n                              onChange={setSelectedOption}\n                              formatOptionLabel={formatOptionLabel}\n                              value={selectedOption}\n                            />\n                          </Flex>\n                          {selectedOption.value === 'CUSTOM' && (\n                            <Flex justifyContent=\"flex-end\" mt={2}>\n                              <StyledInputAmount\n                                id=\"platformTip\"\n                                currency={currency}\n                                onChange={amount => setCustomAmount(amount)}\n                                defaultValue={options[1].value}\n                              />\n                            </Flex>\n                          )}\n                        </div>\n                        {platformTipError && <MessageBoxGraphqlError error={platformTipError} mt={3} fontSize=\"13px\" />}\n                      </Container>\n                    )}\n                  </ModalBody>\n                  <ModalFooter isFullWidth>\n                    <Flex justifyContent=\"center\" flexWrap=\"wrap\">\n                      <StyledButton\n                        type=\"submit\"\n                        data-cy=\"add-platform-tip-btn\"\n                        buttonStyle=\"primary\"\n                        mx={2}\n                        mb={1}\n                        minWidth={120}\n                        loading={isSubmitting}\n                      >\n                        {selectedOption.value !== 0 ? (\n                          <FormattedMessage id=\"AddFundsModal.tipAndFinish\" defaultMessage=\"Tip and Finish\" />\n                        ) : (\n                          <FormattedMessage id=\"Finish\" defaultMessage=\"Finish\" />\n                        )}\n                      </StyledButton>\n                      {!fundDetails.showPlatformTipModal && (\n                        <StyledButton mx={2} mb={1} minWidth={100} onClick={handleClose} type=\"button\">\n                          <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n                        </StyledButton>\n                      )}\n                    </Flex>\n                  </ModalFooter>\n                </Form>\n              );\n            }\n          }}\n        </Formik>\n      )}\n    </AddFundsModalContainer>\n  );\n};\n\nAddFundsModal.propTypes = {\n  collective: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    hostFeePercent: PropTypes.number,\n    slug: PropTypes.string,\n    policies: PropTypes.object,\n  }).isRequired,\n  onClose: PropTypes.func,\n};\n\nexport default AddFundsModal;\n","import React from 'react';\n\nimport CustomStyledIcon from './CustomStyledIcon';\n\n/**\n * Set color to `#00cdff` to use the default Transferwise color.\n */\nconst TransferwiseIcon = props => {\n  return (\n    <CustomStyledIcon size=\"64\" viewBox=\"-0.753 -0.753 9.424 9.407\" {...props}>\n      <path\n        d=\"M.7-.76l1.475 2.47L-.42 4.176h4.47l.42-.988H2.004l1.493-1.484L2.625.227h4.068L3.12 8.662h1.224L8.338-.76H.7\"\n        fill=\"currentColor\"\n        strokeWidth=\"0.25\"\n      />\n    </CustomStyledIcon>\n  );\n};\n\nexport default TransferwiseIcon;\n","import styled from 'styled-components';\n\nimport StyledButton from '../StyledButton';\n\nconst OCFPrimaryButton = styled(StyledButton)`\n  background: linear-gradient(180deg, #4f7d7f 0%, #396c6f 100%);\n  border-color: transparent;\n  color: #ffffff;\n  &:focus {\n    border: solid 2px #90f0bd;\n    background: linear-gradient(to bottom, #7a9899, #527d80 99%);\n  }\n  &:active {\n    background: linear-gradient(to bottom, #7a9899, #527d80 99%);\n  }\n  &:hover {\n    border-color: transparent;\n    background: linear-gradient(to bottom, #7a9899, #527d80 99%);\n  }\n`;\n\nexport default OCFPrimaryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport { ORDER_STATUS } from '../lib/constants/order-status';\nimport i18nOrderStatus from '../lib/i18n/order-status';\n\nimport I18nFormatters from './I18nFormatters';\nimport StyledTag from './StyledTag';\nimport StyledTooltip from './StyledTooltip';\n\nconst getTransactionStatusMsgType = transaction => {\n  if (transaction.isRefund) {\n    return 'success';\n  }\n  if (transaction.isOrderRejected && transaction.isRefunded) {\n    return 'error';\n  }\n  if (transaction.isRefunded || transaction.order?.status === ORDER_STATUS.PROCESSING) {\n    return 'grey';\n  }\n  if (transaction.order?.status === ORDER_STATUS.PENDING) {\n    return 'warning';\n  }\n\n  return 'success';\n};\n\nconst msg = defineMessages({\n  completed: {\n    id: 'Order.Status.Completed',\n    defaultMessage: 'Completed',\n  },\n  refunded: {\n    id: 'Order.Status.Refunded',\n    defaultMessage: 'Refunded',\n  },\n  rejected: {\n    id: 'expense.rejected',\n    defaultMessage: 'Rejected',\n  },\n});\n\nconst formatStatus = (intl, transaction) => {\n  if (transaction.isRefund) {\n    return intl.formatMessage(msg.completed);\n  } else if (transaction.isOrderRejected && transaction.isRefunded) {\n    return intl.formatMessage(msg.rejected);\n  } else if (transaction.isRefunded) {\n    return intl.formatMessage(msg.refunded);\n  } else if ([ORDER_STATUS.PROCESSING, ORDER_STATUS.PENDING].includes(transaction.order?.status)) {\n    return i18nOrderStatus(intl, transaction.order.status);\n  } else {\n    return intl.formatMessage(msg.completed);\n  }\n};\n\nconst tooltipMessages = defineMessages({\n  [ORDER_STATUS.PENDING]: {\n    id: 'Order.Status.Pending',\n    defaultMessage: 'Please follow the payment instructions in the confirmation email to complete your transaction.',\n  },\n  [ORDER_STATUS.PROCESSING]: {\n    id: 'Order.Status.Processing',\n    defaultMessage: \"We're waiting for a third-party service to confirm the transaction was completed.\",\n  },\n});\n\nconst TransactionStatusTag = ({ transaction, ...props }) => {\n  const intl = useIntl();\n\n  const tag = (\n    <StyledTag\n      type={getTransactionStatusMsgType(transaction)}\n      fontWeight=\"600\"\n      letterSpacing=\"0.8px\"\n      textTransform=\"uppercase\"\n      data-cy=\"expense-status-msg\"\n      {...props}\n    >\n      {formatStatus(intl, transaction)}\n    </StyledTag>\n  );\n\n  if ([ORDER_STATUS.PROCESSING, ORDER_STATUS.PENDING].includes(transaction.order?.status)) {\n    return (\n      <StyledTooltip content={() => intl.formatMessage(tooltipMessages[transaction.order.status], I18nFormatters)}>\n        {tag}\n      </StyledTooltip>\n    );\n  }\n  return tag;\n};\n\nTransactionStatusTag.propTypes = {\n  isRefund: PropTypes.bool,\n  isRefunded: PropTypes.bool,\n  isOrderRejected: PropTypes.bool,\n  isProcessingOrPending: PropTypes.bool,\n  transaction: PropTypes.shape({\n    type: PropTypes.string,\n    isRefund: PropTypes.bool,\n    isRefunded: PropTypes.bool,\n    isOrderRejected: PropTypes.bool,\n    isProcessingOrPending: PropTypes.bool,\n    order: PropTypes.shape({\n      status: PropTypes.string,\n    }),\n  }),\n};\n\nexport default TransactionStatusTag;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { Undo } from '@styled-icons/boxicons-regular/Undo';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport ConfirmationModal from '../ConfirmationModal';\nimport { Box, Flex } from '../Grid';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport StyledButton from '../StyledButton';\n\nexport const refundTransactionMutation = gql`\n  mutation RefundTransaction($transaction: TransactionReferenceInput!) {\n    refundTransaction(transaction: $transaction) {\n      id\n    }\n  }\n`;\n\nconst TransactionRefundButton = props => {\n  const [refundTransaction] = useMutation(refundTransactionMutation, {\n    context: API_V2_CONTEXT,\n  });\n  const [isEnabled, setEnabled] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\n  const handleRefundTransaction = async () => {\n    try {\n      await refundTransaction({ variables: { transaction: { id: props.id } } });\n    } catch (error) {\n      setError(error);\n      return;\n    }\n    props?.onMutationSuccess();\n    setEnabled(false);\n  };\n\n  const closeModal = () => {\n    setEnabled(false);\n    setError(null);\n  };\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Box>\n        <StyledButton\n          buttonSize=\"small\"\n          buttonStyle=\"secondary\"\n          minWidth={140}\n          background=\"transparent\"\n          textTransform=\"capitalize\"\n          onClick={() => setEnabled(true)}\n        >\n          <Flex alignItems=\"center\" justifyContent=\"space-evenly\">\n            <Undo size={16} />\n            <FormattedMessage id=\"transaction.refund.btn\" defaultMessage=\"refund\" />\n          </Flex>\n        </StyledButton>\n        {isEnabled && (\n          <ConfirmationModal\n            onClose={closeModal}\n            header={<FormattedMessage id=\"Refund\" defaultMessage=\"Refund\" />}\n            body={\n              <div>\n                <div>\n                  <FormattedMessage\n                    id=\"transaction.refund.info\"\n                    defaultMessage=\"The contributor will be refunded the full amount.\"\n                  />\n                </div>\n                {error && <MessageBoxGraphqlError mt=\"12px\" error={error} />}\n              </div>\n            }\n            continueLabel={\n              <Flex alignItems=\"center\" justifyContent=\"space-evenly\">\n                <Undo size={16} />\n                <FormattedMessage id=\"Refund\" defaultMessage=\"Refund\" />\n              </Flex>\n            }\n            continueHandler={handleRefundTransaction}\n          />\n        )}\n      </Box>\n    </Flex>\n  );\n};\n\nTransactionRefundButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  onMutationSuccess: PropTypes.func,\n};\n\nexport default TransactionRefundButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport StyledInputField from '../StyledInputField';\nimport StyledTextarea from '../StyledTextarea';\n\nconst MESSAGE_MAX_LENGTH = 500;\n\nconst messages = defineMessages({\n  rejectionReason: {\n    id: 'RejectionReason',\n    defaultMessage: 'Type your rejection reason here if you want.',\n  },\n});\n\nconst TransactionRejectMessageForm = ({ message, onChange }) => {\n  const intl = useIntl();\n  const dispatchChange = e => {\n    onChange(e.target.value);\n  };\n  return (\n    <div>\n      <StyledInputField\n        autoFocus\n        name=\"rejectionMessage\"\n        htmlFor=\"rejectionMessage\"\n        label={<FormattedMessage id=\"Contact.Message\" defaultMessage=\"Message\" />}\n        required={false}\n        my={3}\n      >\n        {inputProps => (\n          <StyledTextarea\n            {...inputProps}\n            resize=\"none\"\n            maxLength={MESSAGE_MAX_LENGTH}\n            minWidth={[290, 500]}\n            minHeight={100}\n            fontSize=\"14px\"\n            width=\"100%\"\n            placeholder={intl.formatMessage(messages.rejectionReason)}\n            value={message}\n            onChange={dispatchChange}\n          />\n        )}\n      </StyledInputField>\n    </div>\n  );\n};\n\nTransactionRejectMessageForm.propTypes = {\n  message: PropTypes.object,\n  onChange: PropTypes.func,\n};\n\nexport default TransactionRejectMessageForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { MinusCircle } from '@styled-icons/boxicons-regular/MinusCircle';\nimport { FormattedMessage } from 'react-intl';\n\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\n\nimport ConfirmationModal from '../ConfirmationModal';\nimport { Box, Flex } from '../Grid';\nimport MessageBox from '../MessageBox';\nimport MessageBoxGraphqlError from '../MessageBoxGraphqlError';\nimport StyledButton from '../StyledButton';\nimport StyledTooltip from '../StyledTooltip';\nimport { P } from '../Text';\n\nimport TransactionRejectMessageForm from './TransactionRejectMessageForm';\n\nconst tooltipContent = () => (\n  <div>\n    <P fontSize=\"12px\" lineHeight=\"18px\">\n      <FormattedMessage\n        id=\"transaction.reject.info\"\n        defaultMessage=\"Only reject if you want to remove the contributor from your Collective. This will refund their transaction, remove them from your Collective, and display the contribution as 'rejected'.\"\n      />\n    </P>\n  </div>\n);\n\nexport const rejectTransactionMutation = gql`\n  mutation RejectTransaction($transaction: TransactionReferenceInput!, $message: String) {\n    rejectTransaction(transaction: $transaction, message: $message) {\n      id\n    }\n  }\n`;\n\nconst TransactionRejectButton = props => {\n  const [rejectTransaction, { error: mutationError }] = useMutation(rejectTransactionMutation, {\n    context: API_V2_CONTEXT,\n  });\n  const [isEnabled, setEnabled] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const [message, setMessage] = React.useState('');\n\n  React.useEffect(() => {\n    setError(mutationError);\n  }, [mutationError]);\n\n  const handleRejectTransaction = async () => {\n    await rejectTransaction({\n      variables: {\n        transaction: { id: props.id },\n        message,\n      },\n    });\n    props.onMutationSuccess();\n    setEnabled(false);\n  };\n\n  const closeModal = () => {\n    setEnabled(false);\n    setError(null);\n  };\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Box>\n        <StyledTooltip content={tooltipContent}>\n          <StyledButton\n            buttonSize=\"small\"\n            buttonStyle=\"dangerSecondary\"\n            minWidth={140}\n            background=\"transparent\"\n            textTransform=\"capitalize\"\n            onClick={() => setEnabled(true)}\n            ml={props.canRefund ? 2 : 0}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-evenly\">\n              <MinusCircle size={16} />\n              <FormattedMessage id=\"actions.reject\" defaultMessage=\"Reject\" />\n            </Flex>\n          </StyledButton>\n        </StyledTooltip>\n        {isEnabled && (\n          <ConfirmationModal\n            onClose={closeModal}\n            header={<FormattedMessage id=\"RejectContribution\" defaultMessage=\"Reject and refund\" />}\n            body={\n              <React.Fragment>\n                <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n                  <MessageBox type=\"warning\" mx={2}>\n                    <FormattedMessage\n                      id=\"transaction.reject.info\"\n                      defaultMessage=\"Only reject if you want to remove the contributor from your Collective. This will refund their transaction, remove them from your Collective, and display the contribution as 'rejected'.\"\n                    />\n                    <br />\n                    <br />\n                    {props.canRefund ? (\n                      <FormattedMessage\n                        id=\"transaction.reject.info.canRefund\"\n                        defaultMessage=\"If you are only trying to refund a mistaken transaction, please use the 'Refund' button instead.\"\n                      />\n                    ) : (\n                      <FormattedMessage\n                        id=\"transaction.reject.info.cannotRefund\"\n                        defaultMessage=\"Please only use this option if you do not wish for this contributor to be a part of your Collective. This will remove them from your Collective.\"\n                      />\n                    )}\n                  </MessageBox>\n                  {error && <MessageBoxGraphqlError mt=\"12px\" error={error} />}\n                  <TransactionRejectMessageForm message={message} onChange={message => setMessage(message)} />\n                </Flex>\n              </React.Fragment>\n            }\n            continueLabel={\n              <Flex alignItems=\"center\" justifyContent=\"space-evenly\">\n                <MinusCircle size={16} />\n                <FormattedMessage id=\"transaction.reject.yes.btn\" defaultMessage=\"Yes, reject\" />\n              </Flex>\n            }\n            continueHandler={handleRejectTransaction}\n            isDanger\n          />\n        )}\n      </Box>\n    </Flex>\n  );\n};\n\nTransactionRejectButton.propTypes = {\n  id: PropTypes.string.isRequired,\n  canRefund: PropTypes.bool,\n  onMutationSuccess: PropTypes.func,\n};\n\nexport default TransactionRejectButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InfoCircle } from '@styled-icons/boxicons-regular/InfoCircle';\nimport { Info } from '@styled-icons/feather/Info';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled, { css } from 'styled-components';\n\nimport { ORDER_STATUS } from '../../lib/constants/order-status';\nimport { TransactionKind, TransactionTypes } from '../../lib/constants/transactions';\nimport { useAsyncCall } from '../../lib/hooks/useAsyncCall';\nimport { renderDetailsString, saveInvoice } from '../../lib/transactions';\n\nimport PayoutMethodTypeWithIcon from '../expenses/PayoutMethodTypeWithIcon';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport { I18nBold } from '../I18nFormatters';\nimport LinkCollective from '../LinkCollective';\nimport PaymentMethodTypeWithIcon from '../PaymentMethodTypeWithIcon';\nimport StyledButton from '../StyledButton';\nimport StyledLink from '../StyledLink';\nimport StyledTooltip from '../StyledTooltip';\nimport { P, Span } from '../Text';\n\nimport TransactionRefundButton from './TransactionRefundButton';\nimport TransactionRejectButton from './TransactionRejectButton';\n\nconst rejectAndRefundTooltipContent = (showRefundHelp, showRejectHelp) => (\n  <Box>\n    {showRefundHelp && (\n      <P fontSize=\"12px\" lineHeight=\"18px\" mb={showRejectHelp ? 3 : 0}>\n        <FormattedMessage\n          id=\"transaction.refund.helpText\"\n          defaultMessage=\"<bold>Refund:</bold> This action will reimburse the full amount back to your contributor. They can contribute again in the future.\"\n          values={{ bold: I18nBold }}\n        />\n      </P>\n    )}\n    {showRejectHelp && (\n      <P fontSize=\"12px\" lineHeight=\"18px\">\n        <FormattedMessage\n          id=\"transaction.reject.helpText\"\n          defaultMessage=\"<bold>Reject:</bold> This action prevents the contributor from contributing in the future and will reimburse the full amount back to them.\"\n          values={{ bold: I18nBold }}\n        />\n      </P>\n    )}\n  </Box>\n);\n\n// Check whether transfer is child collective to parent or if the transfer is from host to one of its collectives\nconst isInternalTransfer = (fromAccount, toAccount) => {\n  return fromAccount.parent?.id === toAccount.id || fromAccount.id === toAccount.host?.id;\n};\n\nconst DetailTitle = styled.p`\n  margin: 8px 8px 4px 8px;\n  color: #76777a;\n  font-weight: 500;\n  letter-spacing: 0.6px;\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 11px;\n`;\n\nconst DetailDescription = styled.div`\n  margin: 0 8px 12px 8px;\n  font-size: 12px;\n  color: #4e5052;\n  letter-spacing: -0.04px;\n`;\n\nconst DetailsContainer = styled(Flex)`\n  background: #f7f8fa;\n  font-size: 12px;\n  padding: 16px 24px;\n\n  ${props =>\n    props.isCompact &&\n    css`\n      padding: 16px 24px 16px 24px;\n    `}\n\n  @media (max-width: 40em) {\n    padding: 8px;\n  }\n`;\n\nconst TransactionDetails = ({ displayActions, transaction, onMutationSuccess }) => {\n  const intl = useIntl();\n  const { loading: loadingInvoice, callWith: downloadInvoiceWith } = useAsyncCall(saveInvoice, { useErrorToast: true });\n  const {\n    id,\n    type,\n    isRefunded,\n    isRefund,\n    toAccount,\n    fromAccount,\n    host,\n    uuid,\n    platformFee,\n    hostFee,\n    paymentMethod,\n    paymentProcessorFee,\n    payoutMethod,\n    amount,\n    netAmount,\n    permissions,\n    order,\n    expense,\n    isOrderRejected,\n    kind,\n  } = transaction;\n  const isCredit = type === TransactionTypes.CREDIT;\n  const hasOrder = order !== null;\n\n  // permissions\n  const showRefundButton = permissions?.canRefund && !isRefunded;\n  const showRejectButton = permissions?.canReject && !isOrderRejected;\n  const showDownloadInvoiceButton = permissions?.canDownloadInvoice && !isInternalTransfer(fromAccount, toAccount);\n  const hostFeeTransaction = transaction.relatedTransactions?.find(\n    t => t.kind === TransactionKind.HOST_FEE && t.type === TransactionTypes.CREDIT,\n  );\n  const paymentProcessorCover = transaction.relatedTransactions?.find(\n    t => t.kind === TransactionKind.PAYMENT_PROCESSOR_COVER && t.type === TransactionTypes.CREDIT,\n  );\n  const isProcessing = [ORDER_STATUS.PROCESSING, ORDER_STATUS.PENDING].includes(order?.status);\n\n  return (\n    <DetailsContainer flexWrap=\"wrap\" alignItems=\"flex-start\">\n      {!isProcessing && (\n        <Flex flexDirection=\"column\" width={[1, 0.35]}>\n          <DetailTitle>\n            <FormattedMessage id=\"transaction.details\" defaultMessage=\"transaction details\" />\n          </DetailTitle>\n          <DetailDescription>\n            {renderDetailsString({\n              amount,\n              platformFee,\n              hostFee,\n              paymentProcessorFee,\n              netAmount,\n              isCredit,\n              isRefunded,\n              hasOrder,\n              toAccount,\n              fromAccount,\n              taxAmount: transaction.taxAmount,\n              taxInfo: transaction.taxInfo,\n              intl,\n              kind,\n              expense,\n              isRefund,\n              paymentProcessorCover,\n            })}\n            {['CONTRIBUTION', 'ADDED_FUNDS', 'EXPENSE'].includes(transaction.kind) && hostFeeTransaction && (\n              <React.Fragment>\n                <br />\n                <FormattedMessage\n                  id=\"TransactionDetails.HostFee\"\n                  defaultMessage=\"This transaction includes {amount} host fees\"\n                  values={{\n                    amount: (\n                      <FormattedMoneyAmount\n                        amount={hostFeeTransaction.netAmount.valueInCents}\n                        currency={hostFeeTransaction.netAmount.currency}\n                        showCurrencyCode={false}\n                        amountStyles={null}\n                      />\n                    ),\n                  }}\n                />\n              </React.Fragment>\n            )}\n          </DetailDescription>\n          {order?.memo && (\n            <React.Fragment>\n              <DetailTitle>\n                <FormattedMessage defaultMessage=\"Memo\" />\n              </DetailTitle>\n              <DetailDescription>{order.memo}</DetailDescription>\n            </React.Fragment>\n          )}\n          {order?.processedAt &&\n            (transaction.kind === TransactionKind.ADDED_FUNDS ||\n              (!paymentMethod && transaction.kind === TransactionKind.CONTRIBUTION)) && (\n              <React.Fragment>\n                <DetailTitle>\n                  <span>\n                    <FormattedMessage id=\"expense.incurredAt\" defaultMessage=\"Date\" />\n                    {` `}\n                    <StyledTooltip content={() => <FormattedMessage defaultMessage=\"Date the funds were received.\" />}>\n                      <InfoCircle size={13} />\n                    </StyledTooltip>\n                  </span>\n                </DetailTitle>\n                <DetailDescription>\n                  {intl.formatDate(order.processedAt, { dateStyle: 'long', timeZone: 'UTC' })}\n                </DetailDescription>\n              </React.Fragment>\n            )}\n        </Flex>\n      )}\n      <Flex flexDirection=\"column\" width={[1, 0.35]}>\n        <Box>\n          {(host || paymentMethod) && (\n            <React.Fragment>\n              {host && (\n                <Box>\n                  <DetailTitle>\n                    <FormattedMessage id=\"Fiscalhost\" defaultMessage=\"Fiscal Host\" />\n                  </DetailTitle>\n                  <DetailDescription>\n                    <StyledLink as={LinkCollective} collective={host} />\n                  </DetailDescription>\n                </Box>\n              )}\n              {paymentMethod && (\n                <Box>\n                  <DetailTitle>\n                    <FormattedMessage id=\"PaidWith\" defaultMessage=\"Paid With\" />\n                  </DetailTitle>\n                  <DetailDescription>\n                    <PaymentMethodTypeWithIcon type={paymentMethod.type} fontSize={11} iconSize={16} />\n                  </DetailDescription>\n                </Box>\n              )}\n            </React.Fragment>\n          )}\n          {payoutMethod && (\n            <Box>\n              <DetailTitle>\n                <FormattedMessage id=\"PaidWith\" defaultMessage=\"Paid With\" />\n              </DetailTitle>\n              <DetailDescription>\n                <PayoutMethodTypeWithIcon\n                  type={payoutMethod.type}\n                  color={'inherit'}\n                  fontWeight={'inherit'}\n                  fontSize={'inherit'}\n                  iconSize={16}\n                />\n              </DetailDescription>\n            </Box>\n          )}\n        </Box>\n      </Flex>\n      {displayActions && ( // Let us overide so we can hide buttons in the collective page\n        <Flex flexDirection=\"column\" width={[1, 0.3]}>\n          <Flex flexWrap=\"wrap\" justifyContent={['flex-start', 'flex-end']} alignItems=\"center\" mt={[2, 0]}>\n            {(showRefundButton || showRejectButton) && (\n              <StyledTooltip content={rejectAndRefundTooltipContent(showRefundButton, showRejectButton)} mt={2}>\n                <Box mx={2}>\n                  <Info color=\"#1869F5\" size={20} />\n                </Box>\n              </StyledTooltip>\n            )}\n            {showRefundButton && (\n              <Span mb={2}>\n                <TransactionRefundButton id={id} onMutationSuccess={onMutationSuccess} />\n              </Span>\n            )}\n            {showRejectButton && (\n              <Span mb={2}>\n                <TransactionRejectButton\n                  id={id}\n                  canRefund={permissions?.canRefund && !isRefunded}\n                  onMutationSuccess={onMutationSuccess}\n                />\n              </Span>\n            )}\n            {showDownloadInvoiceButton && (\n              <StyledButton\n                buttonSize=\"small\"\n                loading={loadingInvoice}\n                onClick={downloadInvoiceWith({ transactionUuid: uuid, toCollectiveSlug: toAccount.slug })}\n                minWidth={140}\n                background=\"transparent\"\n                textTransform=\"capitalize\"\n                ml={2}\n                mb={2}\n                px=\"unset\"\n              >\n                {expense && <FormattedMessage id=\"DownloadInvoice\" defaultMessage=\"Download invoice\" />}\n                {order && <FormattedMessage id=\"DownloadReceipt\" defaultMessage=\"Download receipt\" />}\n              </StyledButton>\n            )}\n          </Flex>\n        </Flex>\n      )}\n    </DetailsContainer>\n  );\n};\n\nTransactionDetails.propTypes = {\n  displayActions: PropTypes.bool,\n  transaction: PropTypes.shape({\n    isRefunded: PropTypes.bool,\n    isRefund: PropTypes.bool,\n    kind: PropTypes.oneOf(Object.values(TransactionKind)),\n    isOrderRejected: PropTypes.bool,\n    fromAccount: PropTypes.shape({\n      id: PropTypes.string,\n      slug: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string,\n    }).isRequired,\n    host: PropTypes.shape({\n      id: PropTypes.string,\n      slug: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string,\n    }),\n    toAccount: PropTypes.shape({\n      id: PropTypes.string,\n      slug: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string,\n    }),\n    order: PropTypes.shape({\n      id: PropTypes.string,\n      status: PropTypes.string,\n      memo: PropTypes.string,\n      processedAt: PropTypes.string,\n    }),\n    expense: PropTypes.object,\n    id: PropTypes.string,\n    uuid: PropTypes.string,\n    type: PropTypes.string,\n    currency: PropTypes.string,\n    description: PropTypes.string,\n    createdAt: PropTypes.string,\n    taxAmount: PropTypes.object,\n    taxInfo: PropTypes.object,\n    paymentMethod: PropTypes.shape({\n      type: PropTypes.string,\n    }),\n    payoutMethod: PropTypes.shape({\n      type: PropTypes.string,\n    }),\n    amount: PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string,\n    }),\n    netAmount: PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string,\n    }),\n    platformFee: PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string,\n    }),\n    paymentProcessorFee: PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string,\n    }),\n    hostFee: PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string,\n    }),\n    permissions: PropTypes.shape({\n      canRefund: PropTypes.bool,\n      canDownloadInvoice: PropTypes.bool,\n      canReject: PropTypes.bool,\n    }),\n    usingGiftCardFromCollective: PropTypes.object,\n    relatedTransactions: PropTypes.array,\n  }),\n  isHostAdmin: PropTypes.bool,\n  isRoot: PropTypes.bool,\n  isToCollectiveAdmin: PropTypes.bool,\n  onMutationSuccess: PropTypes.func,\n};\n\nexport default TransactionDetails;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@styled-icons/feather/ChevronDown';\nimport { ChevronUp } from '@styled-icons/feather/ChevronUp';\nimport { MessageSquare } from '@styled-icons/feather/MessageSquare';\nimport { truncate } from 'lodash';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport expenseStatus from '../../lib/constants/expense-status';\nimport { ORDER_STATUS } from '../../lib/constants/order-status';\nimport { TransactionKind, TransactionTypes } from '../../lib/constants/transactions';\nimport { formatCurrency } from '../../lib/currency-utils';\nimport useLoggedInUser from '../../lib/hooks/useLoggedInUser';\nimport { i18nTransactionKind, i18nTransactionType } from '../../lib/i18n/transaction';\nimport { getCollectivePageRoute } from '../../lib/url-helpers';\n\nimport Avatar from '../Avatar';\nimport { CreditItem, DebitItem } from '../budget/DebitCreditList';\nimport Container from '../Container';\nimport DateTime from '../DateTime';\nimport DefinedTerm, { Terms } from '../DefinedTerm';\nimport ExpenseStatusTag from '../expenses/ExpenseStatusTag';\nimport { Box, Flex } from '../Grid';\nimport PrivateInfoIcon from '../icons/PrivateInfoIcon';\nimport Link from '../Link';\nimport LinkCollective from '../LinkCollective';\nimport StyledButton from '../StyledButton';\nimport StyledLink from '../StyledLink';\nimport StyledTag from '../StyledTag';\nimport StyledTooltip from '../StyledTooltip';\nimport Tags from '../Tags';\nimport { P, Span } from '../Text';\nimport TransactionSign from '../TransactionSign';\nimport TransactionStatusTag from '../TransactionStatusTag';\n\nimport TransactionDetails from './TransactionDetails';\n\nconst { CONTRIBUTION, ADDED_FUNDS, PLATFORM_TIP } = TransactionKind;\n\n/** To separate individual information below description */\nconst INFO_SEPARATOR = ' • ';\n\nexport const getDisplayedAmount = (transaction, collective) => {\n  const isCredit = transaction.type === TransactionTypes.CREDIT;\n  const hasOrder = transaction.order !== null;\n  const isExpense = transaction.kind === TransactionKind.EXPENSE;\n  const isSelf = transaction.fromAccount.slug === collective.slug;\n  const isProcessingOrPending =\n    hasOrder && [ORDER_STATUS.PROCESSING, ORDER_STATUS.PENDING].includes(transaction.order?.status);\n\n  if (isExpense) {\n    return transaction.netAmount;\n  } else if (isProcessingOrPending) {\n    return transaction.amount;\n  } else if (isCredit && hasOrder) {\n    // Credit from donations should display the full amount donated by the user\n    return transaction.amount;\n  } else if (transaction.isRefunded) {\n    if ((isSelf && !transaction.isRefund) || (transaction.isRefund && isCredit)) {\n      return transaction.netAmount;\n    } else {\n      return transaction.amount;\n    }\n  } else {\n    return transaction.netAmount;\n  }\n};\n\nconst ItemTitleWrapper = ({ expense, order, children }) => {\n  if (expense) {\n    return (\n      <StyledTooltip\n        content={<FormattedMessage id=\"Expense.GoToPage\" defaultMessage=\"Go to expense page\" />}\n        delayHide={0}\n      >\n        <StyledLink\n          as={Link}\n          underlineOnHover\n          href={`${getCollectivePageRoute(expense.account)}/expenses/${expense.legacyId}`}\n        >\n          {children}\n        </StyledLink>\n      </StyledTooltip>\n    );\n  } else if (order) {\n    return (\n      <StyledTooltip\n        content={<FormattedMessage id=\"Contribution.GoToPage\" defaultMessage=\"Go to contribution page\" />}\n        delayHide={0}\n      >\n        <StyledLink\n          as={Link}\n          underlineOnHover\n          href={`${getCollectivePageRoute(order.toAccount)}/orders/${order.legacyId}`}\n        >\n          {children}\n        </StyledLink>\n      </StyledTooltip>\n    );\n  } else {\n    return <React.Fragment>{children}</React.Fragment>;\n  }\n};\n\nItemTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n  expense: PropTypes.shape({\n    legacyId: PropTypes.number,\n    account: PropTypes.shape({\n      slug: PropTypes.string,\n    }),\n  }),\n  order: PropTypes.shape({\n    legacyId: PropTypes.number,\n    toAccount: PropTypes.shape({\n      slug: PropTypes.string,\n    }),\n  }),\n};\n\nconst KindTag = styled(StyledTag).attrs({\n  variant: 'rounded-left',\n  type: 'grey',\n  mb: '4px',\n  mr: '10px',\n  textTransform: 'uppercase',\n  fontSize: '10px',\n  fontWeight: '600',\n})``;\n\nconst getExpenseStatusTag = (expense, isRefund, isRefunded) => {\n  let expenseStatusLabel;\n  if (isRefunded) {\n    expenseStatusLabel = 'REFUNDED';\n  } else if (isRefund) {\n    expenseStatusLabel = 'COMPLETED';\n  } else {\n    expenseStatusLabel = expense?.status || expenseStatus.PAID;\n  }\n  return (\n    <ExpenseStatusTag\n      status={expenseStatusLabel}\n      fontSize=\"12px\"\n      fontWeight=\"bold\"\n      lineHeight=\"16px\"\n      letterSpacing=\"0.06em\"\n      px=\"6px\"\n      py=\"2px\"\n    />\n  );\n};\n\nconst TransactionItem = ({ displayActions, collective, transaction, onMutationSuccess }) => {\n  const {\n    toAccount,\n    fromAccount,\n    giftCardEmitterAccount,\n    order,\n    expense,\n    type,\n    kind,\n    description,\n    createdAt,\n    isRefunded,\n    isRefund,\n  } = transaction;\n\n  const { LoggedInUser } = useLoggedInUser();\n  const [isExpanded, setExpanded] = React.useState(false);\n  const intl = useIntl();\n\n  const hasOrder = order !== null;\n  const isExpense = kind === TransactionKind.EXPENSE;\n  const isCredit = type === TransactionTypes.CREDIT;\n  const Item = isCredit ? CreditItem : DebitItem;\n  const legacyCollectiveId = collective.legacyId || collective.id;\n  const isOwnUserProfile = LoggedInUser && LoggedInUser.CollectiveId === legacyCollectiveId;\n  const avatarCollective = isCredit ? fromAccount : toAccount;\n  const isProcessingOrPending = hasOrder && [ORDER_STATUS.PROCESSING, ORDER_STATUS.PENDING].includes(order?.status);\n\n  const displayedAmount = getDisplayedAmount(transaction, collective);\n\n  const transactionDetailsLink = () => {\n    return (\n      <StyledButton\n        data-cy=\"transaction-details\"\n        buttonSize=\"tiny\"\n        buttonStyle=\"secondary\"\n        isBorderless\n        onClick={() => setExpanded(!isExpanded)}\n      >\n        <Span whiteSpace=\"nowrap\">\n          {isExpanded ? (\n            <React.Fragment>\n              <FormattedMessage id=\"closeDetails\" defaultMessage=\"Close Details\" />\n              &nbsp;\n              <ChevronUp size=\"1em\" />\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Span whiteSpace=\"nowrap\">\n                <FormattedMessage id=\"viewDetails\" defaultMessage=\"View Details\" />\n                &nbsp;\n                <ChevronDown size=\"1em\" />\n              </Span>\n            </React.Fragment>\n          )}\n        </Span>\n      </StyledButton>\n    );\n  };\n\n  return (\n    <Item data-cy=\"transaction-item\">\n      <Box px={[16, 27]} py={16}>\n        <Flex flexWrap=\"wrap\" justifyContent=\"space-between\">\n          <Flex flex=\"1\" minWidth=\"60%\" mr={3}>\n            <Box mr={3}>\n              <LinkCollective collective={avatarCollective}>\n                <Avatar collective={avatarCollective} radius={40} />\n              </LinkCollective>\n            </Box>\n            <Box>\n              <Container\n                data-cy=\"transaction-description\"\n                fontWeight=\"500\"\n                fontSize={['14px', null, null, '16px']}\n                lineHeight={['20px', null, null, '24px']}\n              >\n                <ItemTitleWrapper expense={expense} order={order}>\n                  <Span title={description} color={description ? 'black.900' : 'black.600'}>\n                    {description ? (\n                      truncate(description, { length: 60 })\n                    ) : (\n                      <FormattedMessage id=\"NoDescription\" defaultMessage=\"No description provided\" />\n                    )}\n                  </Span>\n                </ItemTitleWrapper>\n                {isOwnUserProfile && transaction.fromAccount?.isIncognito && (\n                  <Span ml={1} css={{ verticalAlign: 'text-bottom' }}>\n                    <PrivateInfoIcon color=\"#969BA3\">\n                      <FormattedMessage\n                        id=\"PrivateTransaction\"\n                        defaultMessage=\"This incognito transaction is only visible to you\"\n                      />\n                    </PrivateInfoIcon>\n                  </Span>\n                )}\n              </Container>\n              <P mt=\"4px\" fontSize=\"12px\" lineHeight=\"20px\" color=\"black.700\" data-cy=\"transaction-details\">\n                {i18nTransactionType(intl, transaction.type)}\n                &nbsp;\n                {\n                  <Fragment>\n                    <FormattedMessage\n                      id=\"Transaction.from\"\n                      defaultMessage=\"from {name}\"\n                      values={{ name: <StyledLink as={LinkCollective} collective={fromAccount} /> }}\n                    />\n                    &nbsp;\n                  </Fragment>\n                }\n                {\n                  <FormattedMessage\n                    id=\"Transaction.to\"\n                    defaultMessage=\"to {name}\"\n                    values={{ name: <StyledLink as={LinkCollective} collective={toAccount} /> }}\n                  />\n                }\n                {giftCardEmitterAccount && (\n                  <React.Fragment>\n                    &nbsp;\n                    <FormattedMessage\n                      id=\"transaction.usingGiftCardFrom\"\n                      defaultMessage=\"using a {giftCard} from {collective}\"\n                      values={{\n                        giftCard: <DefinedTerm term={Terms.GIFT_CARD} textTransform=\"lowercase\" />,\n                        collective: <StyledLink as={LinkCollective} collective={giftCardEmitterAccount} />,\n                      }}\n                    />\n                  </React.Fragment>\n                )}\n                {INFO_SEPARATOR}\n                <DateTime value={createdAt} data-cy=\"transaction-date\" />\n                {isExpense && expense?.comments?.totalCount > 0 && (\n                  <React.Fragment>\n                    {INFO_SEPARATOR}\n                    <span>\n                      <MessageSquare size=\"16px\" />\n                      &nbsp;\n                      {expense.comments.totalCount}\n                    </span>\n                  </React.Fragment>\n                )}\n              </P>\n            </Box>\n          </Flex>\n          <Flex flexDirection={['row', 'column']} mt={[3, 0]} flexWrap=\"wrap\" alignItems={['center', 'flex-end']}>\n            <Container\n              display=\"flex\"\n              my={2}\n              mr={[3, 0]}\n              minWidth={100}\n              justifyContent=\"flex-end\"\n              data-cy=\"transaction-amount\"\n              fontSize=\"16px\"\n              ml=\"auto\"\n            >\n              <TransactionSign isCredit={isCredit} />\n              <Span fontWeight=\"bold\" color=\"black.900\" mr={1}>\n                {formatCurrency(Math.abs(displayedAmount.valueInCents), displayedAmount.currency, {\n                  locale: intl.locale,\n                })}\n              </Span>\n              <Span color=\"black.700\" textTransform=\"uppercase\">\n                {displayedAmount.currency}\n              </Span>\n            </Container>\n            {hasOrder && (\n              <TransactionStatusTag\n                transaction={transaction}\n                fontSize=\"12px\"\n                fontWeight=\"bold\"\n                lineHeight=\"16px\"\n                letterSpacing=\"0.06em\"\n                px=\"6px\"\n                py=\"2px\"\n              />\n            )}{' '}\n            {isExpense && getExpenseStatusTag(expense, isRefund, isRefunded)}\n          </Flex>\n        </Flex>\n        {hasOrder && [CONTRIBUTION, ADDED_FUNDS, PLATFORM_TIP].includes(transaction.kind) && (\n          <Container borderTop={['1px solid #E8E9EB', 'none']} mt={3} pt={[2, 0]}>\n            <KindTag>\n              {i18nTransactionKind(intl, transaction.kind)}\n              {Boolean(order?.legacyId) && ` #${order.legacyId}`}\n            </KindTag>\n            {(!isProcessingOrPending || transaction.paymentMethod) && transactionDetailsLink()}\n          </Container>\n        )}\n        {isExpense && (\n          <Container display=\"flex\" mt={3} pt={[2, 0]}>\n            <Tags expense={expense} />\n            {transactionDetailsLink()}\n          </Container>\n        )}\n        {!isExpense && (!hasOrder || ![CONTRIBUTION, ADDED_FUNDS, PLATFORM_TIP].includes(transaction.kind)) && (\n          <Container mt={3} pt={[2, 0]}>\n            <KindTag>{i18nTransactionKind(intl, transaction.kind)}</KindTag>\n          </Container>\n        )}\n      </Box>\n      {isExpanded && (hasOrder || isExpense) && (\n        <TransactionDetails\n          displayActions={displayActions}\n          transaction={transaction}\n          onMutationSuccess={onMutationSuccess}\n        />\n      )}\n    </Item>\n  );\n};\n\nTransactionItem.propTypes = {\n  /* Display Refund and Download buttons in transactions */\n  displayActions: PropTypes.bool,\n  transaction: PropTypes.shape({\n    isRefunded: PropTypes.bool,\n    isRefund: PropTypes.bool,\n    isOrderRejected: PropTypes.bool,\n    fromAccount: PropTypes.shape({\n      id: PropTypes.string,\n      slug: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string,\n      isIncognito: PropTypes.bool,\n    }).isRequired,\n    host: PropTypes.shape({\n      id: PropTypes.string,\n      slug: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string,\n    }),\n    toAccount: PropTypes.shape({\n      id: PropTypes.string,\n      slug: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string,\n    }),\n    giftCardEmitterAccount: PropTypes.shape({\n      id: PropTypes.string,\n      slug: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      imageUrl: PropTypes.string,\n    }),\n    order: PropTypes.shape({\n      id: PropTypes.string,\n      legacyId: PropTypes.number,\n      status: PropTypes.string,\n    }),\n    expense: PropTypes.shape({\n      id: PropTypes.string,\n      status: PropTypes.string,\n      legacyId: PropTypes.number,\n      comments: PropTypes.shape({\n        totalCount: PropTypes.number,\n      }),\n    }),\n    id: PropTypes.string,\n    uuid: PropTypes.string,\n    type: PropTypes.oneOf(Object.values(TransactionTypes)),\n    kind: PropTypes.oneOf(Object.values(TransactionKind)),\n    currency: PropTypes.string,\n    description: PropTypes.string,\n    createdAt: PropTypes.string,\n    hostFeeInHostCurrency: PropTypes.number,\n    platformFeeInHostCurrency: PropTypes.number,\n    paymentProcessorFeeInHostCurrency: PropTypes.number,\n    taxAmount: PropTypes.object,\n    amount: PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string,\n    }),\n    netAmount: PropTypes.shape({\n      valueInCents: PropTypes.number,\n      currency: PropTypes.string,\n    }),\n    netAmountInCollectiveCurrency: PropTypes.number,\n    usingGiftCardFromCollective: PropTypes.object,\n    paymentMethod: PropTypes.object,\n  }),\n  collective: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    legacyId: PropTypes.number,\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n  onMutationSuccess: PropTypes.func,\n};\n\nexport default TransactionItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { intersection, size } from 'lodash';\nimport { useIntl } from 'react-intl';\nimport { components as ReactSelectComponents } from 'react-select';\nimport styled from 'styled-components';\nimport { maxWidth } from 'styled-system';\n\nimport { TransactionKind } from '../../../lib/constants/transactions';\nimport { i18nTransactionKind } from '../../../lib/i18n/transaction';\n\nimport { StyledSelectFilter } from '../../StyledSelectFilter';\nimport { Span } from '../../Text';\n\n// (!) Remember that any changes made here should be applied to the cache in API > `getCacheKeyForBudgetOrTransactionsSections`\nexport const getDefaultKinds = () => {\n  return [\n    TransactionKind.ADDED_FUNDS,\n    TransactionKind.BALANCE_TRANSFER,\n    TransactionKind.CONTRIBUTION,\n    TransactionKind.EXPENSE,\n    TransactionKind.PLATFORM_TIP,\n  ];\n};\n\nconst optionsToQueryString = options => {\n  if (!options || options.length === size(TransactionKind)) {\n    return null;\n  } else {\n    return !options ? null : options.map(({ value }) => value).join(',');\n  }\n};\n\nexport const parseTransactionKinds = str => {\n  if (str === 'ALL') {\n    return Object.values(TransactionKind);\n  }\n\n  const result = str?.split(',');\n  if (!result?.length || result.length === size(TransactionKind)) {\n    return null;\n  } else {\n    return result?.length ? result : null;\n  }\n};\n\nconst TruncatedItemsList = styled(Span).attrs({\n  truncateOverflow: true,\n  pl: 2,\n  maxWidth: ['calc(100vw - 135px)', '75px', '175px', '200px'],\n})`\n  display: inline-block;\n  max-width: 75px;\n  ${maxWidth}\n`;\n\nconst TruncatedValueContainer = props => {\n  const { selectProps, children } = props;\n  const itemsList = (selectProps.value || []).map(({ label }) => label);\n  const itemsListStr = itemsList.join(', ');\n\n  return (\n    <ReactSelectComponents.SelectContainer {...props}>\n      <TruncatedItemsList title={itemsListStr}>{itemsListStr}</TruncatedItemsList>\n      {children}\n    </ReactSelectComponents.SelectContainer>\n  );\n};\n\nTruncatedValueContainer.propTypes = {\n  selectProps: PropTypes.object,\n  children: PropTypes.node,\n};\n\nconst REACT_SELECT_COMPONENT_OVERRIDE = {\n  ValueContainer: TruncatedValueContainer,\n  MultiValue: () => null, // Items will be displayed as a truncated string in `TruncatedValueContainer `\n};\n\nconst TransactionsKindFilter = ({ onChange, value, kinds, ...props }) => {\n  const intl = useIntl();\n  const getOption = (value, idx) => ({ label: i18nTransactionKind(intl, value), value, idx });\n  const displayedKinds = kinds && kinds.length ? kinds : getDefaultKinds();\n  const options = displayedKinds.map(getOption);\n  const selectedOptions = React.useMemo(\n    () => (!value ? intersection(getDefaultKinds(), displayedKinds) : parseTransactionKinds(value)).map(getOption),\n    [value],\n  );\n  return (\n    <StyledSelectFilter\n      isSearchable={false}\n      isClearable={false}\n      onChange={options => onChange(optionsToQueryString(options))}\n      value={selectedOptions}\n      options={options}\n      components={REACT_SELECT_COMPONENT_OVERRIDE}\n      closeMenuOnSelect={false}\n      hideSelectedOptions={false}\n      isMulti\n      maxWidth={['100%', 200, 300]}\n      minWidth={150}\n      {...props}\n    />\n  );\n};\n\nTransactionsKindFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  kinds: PropTypes.array,\n};\n\nexport default TransactionsKindFilter;\n","import { gql } from '@apollo/client';\n\nexport const transactionsQueryCollectionFragment = gql`\n  fragment TransactionsQueryCollectionFragment on TransactionCollection {\n    totalCount\n    offset\n    limit\n    kinds\n    paymentMethodTypes\n    nodes {\n      id\n      uuid\n      kind\n      amount {\n        currency\n        valueInCents\n      }\n      netAmount {\n        currency\n        valueInCents\n      }\n      taxAmount {\n        valueInCents\n        currency\n      }\n      taxInfo {\n        id\n        rate\n        type\n      }\n      platformFee {\n        currency\n        valueInCents\n      }\n      paymentProcessorFee {\n        currency\n        valueInCents\n      }\n      hostFee {\n        currency\n        valueInCents\n      }\n      type\n      description\n      createdAt\n      isRefunded\n      isRefund\n      isOrderRejected\n      toAccount {\n        id\n        name\n        slug\n        type\n        imageUrl\n        isIncognito\n        ... on AccountWithParent {\n          parent {\n            id\n            slug\n          }\n        }\n        settings\n        ... on Individual {\n          isGuest\n        }\n        ... on Collective {\n          host {\n            id\n            name\n            slug\n            type\n          }\n        }\n        ... on AccountWithHost {\n          hostFeePercent\n          platformFeePercent\n        }\n      }\n      fromAccount {\n        id\n        name\n        slug\n        type\n        imageUrl\n        isIncognito\n        ... on Event {\n          parent {\n            id\n          }\n        }\n        ... on Project {\n          parent {\n            id\n          }\n        }\n        ... on Individual {\n          isGuest\n        }\n        ... on AccountWithHost {\n          hostFeePercent\n          platformFeePercent\n        }\n      }\n      host {\n        id\n        name\n        slug\n        type\n        imageUrl\n      }\n      account {\n        id\n        isIncognito\n      }\n      giftCardEmitterAccount {\n        id\n        name\n        slug\n        type\n        imageUrl\n      }\n      permissions {\n        id\n        canRefund\n        canDownloadInvoice\n        canReject\n      }\n      paymentMethod {\n        id\n        type\n      }\n      payoutMethod {\n        id\n        type\n      }\n      order {\n        id\n        legacyId\n        status\n        memo\n        processedAt\n        toAccount {\n          id\n          slug\n        }\n      }\n      expense {\n        id\n        status\n        tags\n        type\n        feesPayer\n        amount\n        currency\n        legacyId\n        # limit: 1 as current best practice to avoid the API fetching entries it doesn't need\n        comments(limit: 1) {\n          totalCount\n        }\n        payoutMethod {\n          id\n          type\n        }\n        account {\n          id\n          slug\n        }\n        createdByAccount {\n          id\n          slug\n        }\n      }\n      relatedTransactions(kind: [HOST_FEE, PAYMENT_PROCESSOR_COVER]) {\n        id\n        type\n        kind\n        netAmount {\n          currency\n          valueInCents\n        }\n      }\n    }\n  }\n`;\n","/**\n * Constants for the expense status\n *\n *\n * pending -> rejected\n * pending -> approved -> paid\n *\n * TransferWise:\n * ... -> approved -> processing -> paid\n * ... -> approved -> processing -> error\n *\n * PayPal Payouts:\n * ... -> approved -> scheduled_for_payment -> paid\n * ... -> approved -> scheduled_for_payment -> error\n *\n * Submit on Behalf:\n * draft -> unverified -> pending -> ...\n *\n * COMPLETED and REFUNDED status are for displaying refunded expenses and refunds\n * in the transactions list (in both cases the expense status is APPROVED).\n */\n\nexport default {\n  DRAFT: 'DRAFT',\n  PENDING: 'PENDING',\n  APPROVED: 'APPROVED',\n  REJECTED: 'REJECTED',\n  PROCESSING: 'PROCESSING',\n  ERROR: 'ERROR',\n  PAID: 'PAID',\n  SCHEDULED_FOR_PAYMENT: 'SCHEDULED_FOR_PAYMENT',\n  SPAM: 'SPAM',\n  UNVERIFIED: 'UNVERIFIED',\n  INCOMPLETE: 'INCOMPLETE',\n} as const;\n","export default {\n  CHARGE: 'CHARGE',\n  INVOICE: 'INVOICE',\n  RECEIPT: 'RECEIPT',\n  GRANT: 'GRANT',\n  SETTLEMENT: 'SETTLEMENT',\n  UNCLASSIFIED: 'UNCLASSIFIED',\n} as const;\n","export const PayoutMethodType = {\n  ACCOUNT_BALANCE: 'ACCOUNT_BALANCE',\n  BANK_ACCOUNT: 'BANK_ACCOUNT',\n  PAYPAL: 'PAYPAL',\n  CREDIT_CARD: 'CREDIT_CARD',\n  OTHER: 'OTHER',\n};\n\n// Submit on Behalf placeholder. Not an actual Payout Method Type and only exists in the frontend.\nexport const INVITE = 'INVITE';\n\n// Virtual Card charge Expense method\nexport const VIRTUAL_CARD = 'VIRTUAL_CARD';\n\n// This is not internationalized on purpose\nexport const BANK_TRANSFER_DEFAULT_INSTRUCTIONS = `Thank you for your contribution! Here are the payment instructions. Be sure to include the reference details, so we can match your payment to the correct transaction. Sometimes it can take a few days for the funds to arrive and be confirmed. You will automatically be issued a receipt.\n\nAmount: {amount}\nReference: {reference}\nDetail: {collective}\n{account}\n`;\n","/**\n * Used to make sure the value stays memoized (because [] !== [])\n * See https://codesandbox.io/s/long-flower-mzsqx?file=/src/App.js\n */\nexport const EMPTY_ARRAY = Object.freeze([]);\n","import { get, isNull, merge, omit, omitBy } from 'lodash';\nimport memoizeOne from 'memoize-one';\n\nimport { CollectiveType } from './constants/collectives';\n\nconst { ORGANIZATION } = CollectiveType;\n\nexport const getPayoutProfiles = memoizeOne(loggedInAccount => {\n  if (!loggedInAccount) {\n    return [];\n  } else {\n    const payoutProfiles = [loggedInAccount];\n    for (const membership of get(loggedInAccount, 'adminMemberships.nodes', [])) {\n      if (\n        // Organizations\n        [ORGANIZATION].includes(membership.account.type) ||\n        // Relax available accounts\n        membership.account.isActive\n      ) {\n        // Push main account\n        payoutProfiles.push(omit(membership.account, ['childrenAccounts']));\n        // Push children and add Host if missing\n        for (const childrenAccount of membership.account.childrenAccounts.nodes) {\n          if (childrenAccount.isActive) {\n            payoutProfiles.push({ host: membership.account.host, ...childrenAccount });\n          }\n        }\n      }\n    }\n    return payoutProfiles;\n  }\n});\n\nexport const DEFAULT_SUPPORTED_EXPENSE_TYPES = { GRANT: false, INVOICE: true, RECEIPT: true };\n\nexport const getSupportedExpenseTypes = account => {\n  if (!account) {\n    return [];\n  }\n\n  const host = account.host;\n  const parent = account.parent || account.parentCollective;\n  if (account.supportedExpenseTypes || parent?.supportedExpenseTypes) {\n    // Easy case: the account uses the new supportedExpenseTypes field\n    return account.supportedExpenseTypes || parent.supportedExpenseTypes;\n  } else {\n    // Aggregate all configs, using the order of priority collective > parent > host\n    const getExpenseTypes = account => omitBy(account?.settings?.expenseTypes, isNull);\n    const defaultExpenseTypes = DEFAULT_SUPPORTED_EXPENSE_TYPES;\n    const aggregatedConfig = merge(defaultExpenseTypes, ...[host, parent, account].map(getExpenseTypes));\n    return Object.keys(aggregatedConfig).filter(key => aggregatedConfig[key]); // Return only the truthy ones\n  }\n};\n\n/**\n * Helper to determine whether an expense type is supported by an account\n */\nexport const isSupportedExpenseType = (account, expenseType) => {\n  const supportedTypes = getSupportedExpenseTypes(account);\n  return supportedTypes.includes(expenseType);\n};\n","import React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport { TOAST_TYPE, useToasts } from '../../components/ToastProvider';\n\nimport { formatErrorMessage } from '../errors';\n\nexport const useAsyncCall = (fn, { useErrorToast = false } = {}) => {\n  const [loading, setLoading] = React.useState(false);\n  const [data, setData] = React.useState();\n  const [error, setError] = React.useState();\n  const { addToast } = useToasts();\n  const intl = useIntl();\n\n  const callWith =\n    (...args) =>\n    async () => {\n      setLoading(true);\n      setError();\n      setData();\n      try {\n        const response = await fn(...args);\n        setData(response);\n      } catch (e) {\n        setError(e);\n        // eslint-disable-next-line no-console\n        console.error(e);\n        if (useErrorToast) {\n          addToast({ type: TOAST_TYPE.ERROR, message: formatErrorMessage(intl, e) });\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n  const call = (...args) => callWith(...args)();\n\n  return { loading, call, callWith, data, error };\n};\n","import { defineMessages } from 'react-intl';\n\nimport { Sections } from '../components/collective-page/_constants';\n\nconst I18N_SECTIONS = defineMessages({\n  [Sections.TOP_FINANCIAL_CONTRIBUTORS]: {\n    id: 'SectionContribute.TopContributors',\n    defaultMessage: 'Top financial contributors',\n  },\n  [Sections.CONNECTED_COLLECTIVES]: {\n    id: 'ConnectedCollectives',\n    defaultMessage: 'Connected Collectives',\n  },\n  [Sections.OUR_TEAM]: {\n    id: 'OurTeam',\n    defaultMessage: 'Our team',\n  },\n  [Sections.GOALS]: {\n    id: 'Goals',\n    defaultMessage: 'Goals',\n  },\n  [Sections.UPDATES]: {\n    id: 'updates',\n    defaultMessage: 'Updates',\n  },\n  [Sections.CONVERSATIONS]: {\n    id: 'conversations',\n    defaultMessage: 'Conversations',\n  },\n  [Sections.RECURRING_CONTRIBUTIONS]: {\n    id: 'Contributions.Recurring',\n    defaultMessage: 'Recurring Contributions',\n  },\n  [Sections.TICKETS]: {\n    id: 'section.tickets.title',\n    defaultMessage: 'Tickets',\n  },\n  [Sections.LOCATION]: {\n    id: 'SectionLocation.Title',\n    defaultMessage: 'Location',\n  },\n  // CONTRIBUTE/CONTRIBUTIONS\n  [Sections.CONTRIBUTE]: {\n    id: 'Contribute',\n    defaultMessage: 'Contribute',\n  },\n  [Sections.CONTRIBUTIONS]: {\n    id: 'Contributions',\n    defaultMessage: 'Contributions',\n  },\n  // EVENTS/PROJECTS\n  [Sections.EVENTS]: {\n    id: 'Events',\n    defaultMessage: 'Events',\n  },\n  [Sections.PROJECTS]: {\n    id: 'Projects',\n    defaultMessage: 'Projects',\n  },\n  // BUDGET/TRANSACTIONS\n  [Sections.TRANSACTIONS]: {\n    id: 'menu.transactions',\n    defaultMessage: 'Transactions',\n  },\n  [Sections.BUDGET]: {\n    id: 'section.budget.title',\n    defaultMessage: 'Budget',\n  },\n  [Sections.FINANCIAL_OVERVIEW]: {\n    id: 'section.financialOverview.title',\n    defaultMessage: 'Financial Overview',\n  },\n  [Sections.EXPENSES]: {\n    id: 'Expenses',\n    defaultMessage: 'Expenses',\n  },\n  // CONTRIBUTORS/PARTICIPANTS\n  [Sections.CONTRIBUTORS]: {\n    id: 'section.contributors.title',\n    defaultMessage: 'Contributors',\n  },\n  [Sections.PARTICIPANTS]: {\n    id: 'CollectivePage.NavBar.Participants',\n    defaultMessage: 'Participants',\n  },\n  // ABOUT\n  [Sections.ABOUT]: {\n    id: 'collective.about.title',\n    defaultMessage: 'About',\n  },\n});\n\nconst i18nCollectivePageSection = (intl, section) => {\n  return I18N_SECTIONS[section] ? intl.formatMessage(I18N_SECTIONS[section]) : section;\n};\n\nexport default i18nCollectivePageSection;\n","import React from 'react';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport expenseStatus from '../constants/expense-status';\nimport ExpenseTypes from '../constants/expenseTypes';\n\nconst i18nTypes = defineMessages({\n  ALL: {\n    id: 'AllExpenses',\n    defaultMessage: 'All expenses',\n  },\n  [ExpenseTypes.INVOICE]: {\n    id: 'Expense.Type.Invoice',\n    defaultMessage: 'Invoice',\n  },\n  [ExpenseTypes.RECEIPT]: {\n    id: 'ExpenseForm.ReceiptLabel',\n    defaultMessage: 'Reimbursement',\n  },\n  [ExpenseTypes.GRANT]: {\n    id: 'Expense.Type.FundingRequest',\n    defaultMessage: 'Grant',\n  },\n  [ExpenseTypes.UNCLASSIFIED]: {\n    id: 'Expense.Type.Unclassified',\n    defaultMessage: 'Unclassified',\n  },\n  [ExpenseTypes.CHARGE]: {\n    id: 'Expense.Type.Charge',\n    defaultMessage: 'Charge',\n  },\n  [ExpenseTypes.SETTLEMENT]: {\n    id: 'Expense.Type.Settlement',\n    defaultMessage: 'Settlement',\n  },\n});\n\nconst i18nStatus = defineMessages({\n  ALL: {\n    id: 'Expenses.AllShort',\n    defaultMessage: 'All',\n  },\n  [expenseStatus.DRAFT]: {\n    id: 'expense.draft',\n    defaultMessage: 'Draft',\n  },\n  [expenseStatus.PENDING]: {\n    id: 'expense.pending',\n    defaultMessage: 'Pending',\n  },\n  [expenseStatus.APPROVED]: {\n    id: 'expense.approved',\n    defaultMessage: 'Approved',\n  },\n  [expenseStatus.REJECTED]: {\n    id: 'expense.rejected',\n    defaultMessage: 'Rejected',\n  },\n  [expenseStatus.PAID]: {\n    id: 'expense.paid',\n    defaultMessage: 'Paid',\n  },\n  [expenseStatus.PROCESSING]: {\n    id: 'processing',\n    defaultMessage: 'Processing',\n  },\n  [expenseStatus.ERROR]: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  [expenseStatus.SCHEDULED_FOR_PAYMENT]: {\n    id: 'expense.scheduledForPayment',\n    defaultMessage: 'Scheduled for payment',\n  },\n  [expenseStatus.UNVERIFIED]: {\n    id: 'expense.pending',\n    defaultMessage: 'Pending',\n  },\n  READY_TO_PAY: {\n    id: 'expenses.ready',\n    defaultMessage: 'Ready to pay',\n  },\n  COMPLETED: {\n    id: 'expense.completed',\n    defaultMessage: 'Completed',\n  },\n  REFUNDED: {\n    id: 'Expense.Status.Refunded',\n    defaultMessage: 'Refunded',\n  },\n  [expenseStatus.INCOMPLETE]: {\n    defaultMessage: 'Incomplete',\n  },\n});\n\n/**\n * Translate the type of an expense\n */\nexport const i18nExpenseType = (intl, type, id) => {\n  let formattedType = i18nTypes[type] ? intl.formatMessage(i18nTypes[type]) : type;\n  if (id) {\n    formattedType = `${formattedType} #${id}`;\n  }\n  return formattedType;\n};\n\n/**\n * Translate the status of an expense\n */\nexport const i18nExpenseStatus = (intl, status) => {\n  return i18nStatus[status] ? intl.formatMessage(i18nStatus[status]) : status;\n};\n\nexport const RecurringExpenseIntervals = {\n  week: <FormattedMessage id=\"week\" defaultMessage=\"Weekly\" />,\n  month: <FormattedMessage id=\"Frequency.Monthly\" defaultMessage=\"Monthly\" />,\n  quarter: <FormattedMessage id=\"quarter\" defaultMessage=\"Quarterly\" />,\n  year: <FormattedMessage id=\"Frequency.Yearly\" defaultMessage=\"Yearly\" />,\n};\n\nexport const RecurringIntervalOptions = Object.keys(RecurringExpenseIntervals).reduce(\n  (values, key) => [...values, { value: key, label: RecurringExpenseIntervals[key] }],\n  [],\n);\n","import { defineMessages } from 'react-intl';\n\nimport { ORDER_STATUS } from '../constants/order-status';\n\nconst MESSAGES = defineMessages({\n  ALL: {\n    id: 'orders.all',\n    defaultMessage: 'All',\n  },\n  [ORDER_STATUS.CANCELLED]: {\n    id: 'Subscriptions.Cancelled',\n    defaultMessage: 'Cancelled',\n  },\n  [ORDER_STATUS.DISPUTED]: {\n    id: 'order.disputed',\n    defaultMessage: 'Disputed',\n  },\n  [ORDER_STATUS.ERROR]: {\n    id: 'Error',\n    defaultMessage: 'Error',\n  },\n  [ORDER_STATUS.EXPIRED]: {\n    id: 'order.expired',\n    defaultMessage: 'Expired',\n  },\n  [ORDER_STATUS.IN_REVIEW]: {\n    id: 'order.in_review',\n    defaultMessage: 'In Review',\n  },\n  [ORDER_STATUS.PENDING]: {\n    id: 'order.pending',\n    defaultMessage: 'Pending',\n  },\n  [ORDER_STATUS.NEW]: {\n    id: 'order.new',\n    defaultMessage: 'New',\n  },\n  [ORDER_STATUS.REQUIRE_CLIENT_CONFIRMATION]: {\n    id: 'order.require_client_confirmation',\n    defaultMessage: 'Require client confirmation',\n  },\n  [ORDER_STATUS.PLEDGED]: {\n    id: 'order.pledged',\n    defaultMessage: 'Pledged',\n  },\n  [ORDER_STATUS.ACTIVE]: {\n    id: 'Subscriptions.Active',\n    defaultMessage: 'Active',\n  },\n  [ORDER_STATUS.REFUNDED]: {\n    id: 'Order.Status.Refunded',\n    defaultMessage: 'Refunded',\n  },\n  [ORDER_STATUS.REJECTED]: {\n    id: 'order.rejected',\n    defaultMessage: 'Rejected',\n  },\n  [ORDER_STATUS.PAID]: {\n    id: 'order.paid',\n    defaultMessage: 'Paid',\n  },\n  [ORDER_STATUS.PROCESSING]: {\n    id: 'processing',\n    defaultMessage: 'Processing',\n  },\n});\n\nconst i18nOrderStatus = (intl, status) => {\n  const i18nMsg = MESSAGES[status];\n  return i18nMsg ? intl.formatMessage(i18nMsg) : status;\n};\n\nexport default i18nOrderStatus;\n","import { defineMessages } from 'react-intl';\n\nconst i18nTypes = defineMessages({\n  ALL: {\n    id: 'PaymentMethods.All',\n    defaultMessage: 'All',\n  },\n  ADAPTIVE: {\n    defaultMessage: 'PayPal Adaptive',\n  },\n  GIFTCARD: {\n    id: 'GiftCard',\n    defaultMessage: 'Gift Card',\n  },\n  CREDITCARD: {\n    id: 'CreditCard',\n    defaultMessage: 'Credit Card',\n  },\n  PREPAID: {\n    id: 'Prepaid',\n    defaultMessage: 'Prepaid Card',\n  },\n  COLLECTIVE: {\n    id: 'OpenCollectiveBalance',\n    defaultMessage: 'Open Collective Balance',\n  },\n  HOST: {\n    id: 'Host',\n    defaultMessage: 'Fiscal Host (Added Funds)',\n  },\n  MANUAL: {\n    id: 'Manual',\n    defaultMessage: 'Manual (Bank Transfer)',\n  },\n  CRYPTO: {\n    id: 'Crypto',\n    defaultMessage: 'Crypto',\n  },\n  PAYMENT: {\n    defaultMessage: 'PayPal payment',\n  },\n  SUBSCRIPTION: {\n    defaultMessage: 'PayPal subscription',\n  },\n  US_BANK_ACCOUNT: { id: 'ACH Debit', defaultMessage: 'ACH Debit' },\n  SEPA_DEBIT: { id: 'SEPADebit', defaultMessage: 'SEPA Debit' },\n  BACS_DEBIT: { id: 'BacsDebit', defaultMessage: 'Bacs Debit' },\n  BANCONTACT: { id: 'Stripe.PaymentMethod.Label.bancontact', defaultMessage: 'Bancontact' },\n  [null]: {\n    id: 'PaymentMethods.None',\n    defaultMessage: 'No payment method',\n  },\n  // For now, no need to support:\n  // - PAYMENT -> \"PayPal\" doesn't need translation\n  // - SUBSCRIPTION -> \"PayPal\" doesn't need translation\n  // - ALIPAY -> \"Alipay\" doesn't need translation\n});\n\n/**\n * Get only the (i18n) name of the payment method type.\n *\n * Ex: i18nPaymentMethodType(intl, 'giftcard') === 'Gift card'\n */\nexport const i18nPaymentMethodType = (intl, type) => {\n  return i18nTypes[type] ? intl.formatMessage(i18nTypes[type]) : type;\n};\n","import { defineMessages } from 'react-intl';\n\nimport { PayoutMethodType } from '../constants/payout-method';\n\nconst TypesI18n = defineMessages({\n  ALL: {\n    id: 'PayoutMethod.Type.All',\n    defaultMessage: 'All methods',\n  },\n  [PayoutMethodType.OTHER]: {\n    id: 'PayoutMethod.Type.Other',\n    defaultMessage: 'Other',\n  },\n  [PayoutMethodType.BANK_ACCOUNT]: {\n    id: 'PayoutMethod.Type.BankAccount',\n    defaultMessage: 'Bank transfer',\n  },\n  [PayoutMethodType.CREDIT_CARD]: {\n    id: 'PayoutMethod.Type.VirtualCard',\n    defaultMessage: 'Virtual Card',\n  },\n});\n\n/**\n * Translate a member role\n *\n * @param {object} `intl` - see `injectIntl`\n * @param {string} `type`\n */\nconst i18nPayoutMethodType = (intl, type, { aliasBankAccountToTransferWise } = {}) => {\n  if (!type) {\n    return intl.formatMessage(TypesI18n[PayoutMethodType.OTHER]);\n  } else if (type === PayoutMethodType.PAYPAL) {\n    return 'PayPal';\n  } else if (type === PayoutMethodType.BANK_ACCOUNT && aliasBankAccountToTransferWise) {\n    return 'Wise';\n  } else if (type === PayoutMethodType.ACCOUNT_BALANCE) {\n    return 'Open Collective';\n  }\n\n  const i18nMsg = TypesI18n[type];\n  return i18nMsg ? intl.formatMessage(i18nMsg) : type;\n};\n\nexport default i18nPayoutMethodType;\n","import { defineMessages } from 'react-intl';\n\nimport { TRANSACTION_SETTLEMENT_STATUS, TransactionKind, TransactionTypes } from '../constants/transactions';\n\nconst i18nTypes = defineMessages({\n  ALL: {\n    id: 'AllTransactions',\n    defaultMessage: 'All transactions',\n  },\n  [TransactionTypes.CREDIT]: {\n    id: 'Transaction.Type.Credit',\n    defaultMessage: 'Credit',\n  },\n  [TransactionTypes.DEBIT]: {\n    id: 'Expense.Type.Debit',\n    defaultMessage: 'Debit',\n  },\n});\n\nconst i18nKind = defineMessages({\n  ALL: {\n    id: 'SectionTransactions.All',\n    defaultMessage: 'All',\n  },\n  [TransactionKind.ADDED_FUNDS]: {\n    id: 'Transaction.kind.ADDED_FUNDS',\n    defaultMessage: 'Added funds',\n  },\n  [TransactionKind.CONTRIBUTION]: {\n    id: 'ContributionFlow.Contribution',\n    defaultMessage: 'Contribution',\n  },\n  [TransactionKind.EXPENSE]: {\n    id: 'Transaction.kind.EXPENSE',\n    defaultMessage: 'Expense',\n  },\n  [TransactionKind.HOST_FEE]: {\n    id: 'HostFee',\n    defaultMessage: 'Host fee',\n  },\n  [TransactionKind.HOST_FEE_SHARE]: {\n    id: 'Transaction.kind.HOST_FEE_SHARE',\n    defaultMessage: 'Platform share',\n  },\n  [TransactionKind.PAYMENT_PROCESSOR_COVER]: {\n    id: 'Transaction.kind.PAYMENT_PROCESSOR_COVER',\n    defaultMessage: 'Payment processor cover',\n  },\n  [TransactionKind.PAYMENT_PROCESSOR_FEE]: {\n    id: 'contribution.paymentFee',\n    defaultMessage: 'Payment processor fee',\n  },\n  [TransactionKind.PLATFORM_FEE]: {\n    id: 'PlatformFee',\n    defaultMessage: 'Platform fee',\n  },\n  [TransactionKind.PLATFORM_TIP]: {\n    id: 'Transaction.kind.PLATFORM_TIP',\n    defaultMessage: 'Platform tip',\n  },\n  [TransactionKind.PREPAID_PAYMENT_METHOD]: {\n    id: 'Transaction.kind.PREPAID_PAYMENT_METHOD',\n    defaultMessage: 'Prepaid payment method',\n  },\n  [TransactionKind.HOST_FEE_SHARE_DEBT]: {\n    id: 'Transaction.kind.HOST_FEE_SHARE_DEBT',\n    defaultMessage: 'Platform share (Owed)',\n  },\n  [TransactionKind.PLATFORM_TIP_DEBT]: {\n    id: 'Transaction.kind.PLATFORM_TIP_DEBT',\n    defaultMessage: 'Platform tip (Owed)',\n  },\n  [TransactionKind.BALANCE_TRANSFER]: {\n    id: 'Transaction.kind.BALANCE_TRANSFER',\n    defaultMessage: 'Balance transfer',\n  },\n});\n\nconst i18nSettlementStatus = defineMessages({\n  [TRANSACTION_SETTLEMENT_STATUS.OWED]: {\n    id: 'SettlementStatus.OWED',\n    defaultMessage: 'Owed',\n  },\n  [TRANSACTION_SETTLEMENT_STATUS.INVOICED]: {\n    id: 'SettlementStatus.INVOICED',\n    defaultMessage: 'Invoiced',\n  },\n  [TRANSACTION_SETTLEMENT_STATUS.SETTLED]: {\n    id: 'SettlementStatus.SETTLED',\n    defaultMessage: 'Settled',\n  },\n});\n\n/**\n * Translate the type of an transaction\n */\nexport const i18nTransactionType = (intl, type, id) => {\n  let formattedType = i18nTypes[type] ? intl.formatMessage(i18nTypes[type]) : type;\n  if (id) {\n    formattedType = `${formattedType} #${id}`;\n  }\n  return formattedType;\n};\n\n/**\n * Translate the type of an transaction\n */\nexport const i18nTransactionKind = (intl, type) => {\n  return i18nKind[type] ? intl.formatMessage(i18nKind[type]) : type;\n};\n\nexport const i18nTransactionSettlementStatus = (intl, status) => {\n  return i18nSettlementStatus[status] ? intl.formatMessage(i18nSettlementStatus[status]) : status;\n};\n","import PropTypes from 'prop-types';\n\nexport const AmountPropTypeShape = PropTypes.shape({\n  value: PropTypes.number,\n  valueInCents: PropTypes.number,\n  currency: PropTypes.string,\n  exchangeRate: PropTypes.shape({\n    value: PropTypes.number,\n    source: PropTypes.string,\n    date: PropTypes.string,\n    isApproximate: PropTypes.bool,\n  }),\n});\n","import React from 'react';\nimport { saveAs } from 'file-saver';\nimport { round } from 'lodash';\nimport { defineMessages, FormattedMessage } from 'react-intl';\n\nimport Container from '../components/Container';\n\nimport { TransactionKind } from './constants/transactions';\nimport { i18nTaxType } from './i18n/taxes';\nimport { get as fetch } from './api';\nimport { formatCurrency } from './currency-utils';\nimport { toIsoDateStr } from './date-utils';\nimport { createError, ERROR } from './errors';\nimport { getFromLocalStorage, LOCAL_STORAGE_KEYS } from './local-storage';\nimport { collectiveInvoiceURL, invoiceServiceURL, transactionInvoiceURL } from './url-helpers';\n\nconst messages = defineMessages({\n  hostFee: {\n    id: 'expense.hostFeeInCollectiveCurrency',\n    defaultMessage: 'host fee',\n  },\n  paymentProcessorFee: {\n    id: 'expense.paymentProcessorFeeInCollectiveCurrency',\n    defaultMessage: 'payment processor fee',\n  },\n  openCollectiveFee: {\n    id: 'transactions.openCollectiveFee',\n    defaultMessage: 'Open Collective fee',\n  },\n});\n\nexport const formatFee = (amount, totalAmount, name, feePercent, locale) => {\n  if (!amount?.valueInCents) {\n    return '';\n  }\n  const v =\n    amount.valueInCents < 0\n      ? ` - ${formatCurrency(Math.abs(amount.valueInCents), amount.currency, { locale })}`\n      : ` + ${formatCurrency(Math.abs(amount.valueInCents), amount.currency, { locale })}`;\n  // Don't calculate percentual value when dealing with different currencies\n  if (feePercent && amount.currency === totalAmount?.currency) {\n    const percentage = Math.abs(round((amount.valueInCents / totalAmount.valueInCents) * 100, 2));\n    // To avoid misinformation, only return with percentual value if feePercent is true or it matches the predicted feePercent value\n    if (feePercent === true || feePercent === percentage) {\n      return `${v} (${percentage}% ${name})`;\n    }\n  }\n  return `${v} (${name})`;\n};\n\nexport const renderDetailsString = ({\n  amount: _amount,\n  platformFee,\n  hostFee,\n  paymentProcessorFee,\n  netAmount: _netAmount,\n  taxAmount,\n  taxInfo,\n  isCredit,\n  hasOrder,\n  toAccount,\n  fromAccount,\n  intl,\n  kind,\n  expense,\n  isRefund,\n  paymentProcessorCover,\n}) => {\n  // Swap Amount and Net Amount for DEBITS\n  const amount = !isCredit && _netAmount ? _netAmount : _amount;\n  const amountString = formatCurrency(Math.abs(amount.valueInCents), amount.currency, { locale: intl.locale });\n  const expenseAmount = expense\n    ? formatCurrency(Math.abs(expense.amount), expense.currency, { locale: intl.locale })\n    : null;\n\n  const platformFeeString = formatFee(\n    platformFee,\n    amount,\n    intl.formatMessage(messages.openCollectiveFee),\n    isCredit && !hasOrder ? fromAccount.platformFeePercent : toAccount.platformFeePercent,\n    intl.locale,\n  );\n  const hostFeeString = formatFee(\n    hostFee,\n    amount,\n    intl.formatMessage(messages.hostFee),\n    isCredit && !hasOrder ? fromAccount.hostFeePercent : toAccount.hostFeePercent,\n    intl.locale,\n  );\n  const paymentProcessorFeeString = formatFee(\n    paymentProcessorFee,\n    amount,\n    intl.formatMessage(messages.paymentProcessorFee),\n    false,\n    intl.locale,\n  );\n\n  if (kind === TransactionKind.EXPENSE) {\n    const expensePaymentProcessorFee = formatCurrency(\n      Math.abs(paymentProcessorFee.valueInCents),\n      paymentProcessorFee.currency,\n      { locale: intl.locale },\n    );\n    const netExpenseAmount = formatCurrency(Math.abs(_netAmount.valueInCents), _netAmount.currency, {\n      locale: intl.locale,\n    });\n    const hasPaymentProcessorCover = paymentProcessorCover !== undefined;\n    const netPaymentProcessorCoverAmount = hasPaymentProcessorCover\n      ? formatCurrency(\n          Math.abs(paymentProcessorCover.netAmount.valueInCents),\n          paymentProcessorCover.netAmount.currency,\n          {\n            locale: intl.locale,\n          },\n        )\n      : null;\n    const payee = toAccount.name;\n    const payer = fromAccount.name;\n    const feesPayer = expense?.feesPayer || 'COLLECTIVE';\n\n    const paymentProcessorFeeString = (paymentProcessorFee, isRefund, feesPayer) => {\n      if (paymentProcessorFee.valueInCents === 0 || isRefund) {\n        return (\n          <FormattedMessage\n            defaultMessage=\"{isRefund, select, true {Refunded} other {}} Payment Processor Fee{hasPaymentProcessorCover, select, true { (covered by the Host)} false {} other {}}: {paymentProcessorFee}\"\n            values={{\n              isRefund,\n              paymentProcessorFee: hasPaymentProcessorCover\n                ? netPaymentProcessorCoverAmount\n                : expensePaymentProcessorFee,\n              hasPaymentProcessorCover,\n            }}\n          />\n        );\n      } else {\n        return (\n          <FormattedMessage\n            defaultMessage=\"Payment Processor Fee (paid by {collective}): {expensePaymentProcessorFee}\"\n            values={{ collective: feesPayer === 'PAYEE' ? payee : payer, expensePaymentProcessorFee }}\n          />\n        );\n      }\n    };\n\n    return (\n      <React.Fragment>\n        {expenseAmount && (\n          <Container mb={1}>\n            <FormattedMessage defaultMessage=\"Expense Amount: {expenseAmount}\" values={{ expenseAmount }} />\n          </Container>\n        )}\n        <Container mb={1}>{paymentProcessorFeeString(paymentProcessorFee, isRefund, feesPayer)}</Container>\n        {taxAmount && taxInfo && (\n          <FormattedMessage\n            defaultMessage=\"Includes {rate}% {taxName} ({amount})\"\n            values={{\n              rate: round(taxInfo.rate * 100, 2),\n              taxName: i18nTaxType(intl, taxInfo.type, 'short'),\n              amount: formatCurrency(taxAmount.valueInCents, taxAmount.currency, { locale: intl.locale }),\n            }}\n          />\n        )}\n        <Container>\n          <FormattedMessage\n            defaultMessage=\"Net Amount for {collectiveName}: {netExpenseAmount}\"\n            values={{ collectiveName: isCredit ? payee : payer, netExpenseAmount }}\n          />\n        </Container>\n      </React.Fragment>\n    );\n  } else {\n    const detailString = [amountString, hostFeeString, platformFeeString, paymentProcessorFeeString];\n    if (taxAmount) {\n      detailString.push(formatFee(taxAmount, amount, taxInfo?.id || 'Taxes', taxInfo?.percentage, intl.locale));\n    }\n    return detailString.concat(' ');\n  }\n};\n\nexport const getInvoiceUrl = ({ fromCollectiveSlug, toCollectiveSlug, transactionUuid, dateFrom, dateTo }) => {\n  return transactionUuid\n    ? transactionInvoiceURL(transactionUuid)\n    : collectiveInvoiceURL(fromCollectiveSlug, toCollectiveSlug, encodeURI(dateFrom), encodeURI(dateTo), 'pdf');\n};\n\nexport const getFilename = ({ fromCollectiveSlug, transactionUuid, toCollectiveSlug, dateFrom, dateTo, createdAt }) => {\n  if (transactionUuid) {\n    const createdAtString = toIsoDateStr(createdAt ? new Date(createdAt) : new Date());\n    return `${toCollectiveSlug || 'transaction'}_${createdAtString}_${transactionUuid}.pdf`;\n  } else {\n    const fromString = toIsoDateStr(dateFrom ? new Date(dateFrom) : new Date());\n    const toString = toIsoDateStr(dateTo ? new Date(dateTo) : new Date());\n    return `${fromCollectiveSlug}_${toCollectiveSlug}_${fromString}_${toString}.pdf`;\n  }\n};\n\nexport const saveInvoice = async ({\n  fromCollectiveSlug,\n  toCollectiveSlug,\n  transactionUuid,\n  dateFrom,\n  dateTo,\n  createdAt,\n}) => {\n  const invoiceUrl = getInvoiceUrl({\n    fromCollectiveSlug,\n    toCollectiveSlug,\n    transactionUuid,\n    dateFrom,\n    dateTo,\n    createdAt,\n  });\n  const getParams = { format: 'blob', allowExternal: invoiceServiceURL };\n  const accessToken = getFromLocalStorage(LOCAL_STORAGE_KEYS.ACCESS_TOKEN);\n  if (accessToken) {\n    getParams.headers = { Authorization: `Bearer ${accessToken}` };\n  }\n\n  let blob;\n  try {\n    blob = await fetch(invoiceUrl, getParams);\n  } catch {\n    throw createError(ERROR.NETWORK);\n  }\n\n  if (blob?.type !== 'application/pdf') {\n    throw createError(ERROR.UNKNOWN);\n  }\n\n  const filename = getFilename({ fromCollectiveSlug, toCollectiveSlug, transactionUuid, dateFrom, dateTo, createdAt });\n  return saveAs(blob, filename);\n};\n"],"names":["React","InfoCircle","FormattedMessage","useIntl","styled","AmountPropTypeShape","DateTime","FormattedMoneyAmount","Box","Flex","StyledTooltip","FX_RATE_SOURCE_LABEL","PAYPAL","OPENCOLLECTIVE","WISE","formatFxRateInfo","intl","value","date","source","isApproximate","ContentContainer","div","AmountWithExchangeRateInfo","amount","exchangeRate","currency","valueInCents","showCurrencyCode","Math","round","PropTypes","Span","getBaseFontSize","minFontSizeInPx","maxFontSizeInPx","maxLength","lengthThreshold","length","lengthRange","lengthReductionRatio","sizeRange","sizeReduction","formatResult","result","valueFormatter","Array","isArray","map","entry","AutosizeText","children","mobileRatio","baseFontSize","fontSize","propTypes","string","number","isRequired","func","AutosizedSpan","defaultProps","defineMessage","FormattedDate","getDateFromValue","dayjs","capitalize","TITLE_MESSAGE","defaultMessage","generateDateTitle","formatMessage","localTime","formatDate","dateStyle","timeStyle","utcTime","timeZone","newLine","props","useState","title","setTitle","useMemo","toISOString","themeGet","defineMessages","injectIntl","borderColor","color","typography","textTransform","Link","Terms","FISCAL_HOST","GIFT_CARD","HOST_FEE","PLATFORM_FEE","ESTIMATED_BUDGET","EXPENSE_TYPE","TOTAL_RAISED","TOTAL_INCOME","BALANCE","TranslatedTerms","id","TranslatedDefinitions","GiftCardLearnMoreLink","msg","TranslationParams","UnderlinedTerm","span","DefinedTerm","term","extraTooltipContent","Alipay","Paypal","PaypalIcon","CreditCard","ExchangeAlt","OtherIcon","PAYMENT_METHOD_TYPE","i18nPaymentMethodType","GiftCard","LoadingPlaceholder","PaymentMethodTypeWithIcon","isLoading","type","iconSize","GIFTCARD","CREDITCARD","ALIPAY","PAYMENT","SUBSCRIPTION","Fragment","gql","useMutation","useFormik","API_V2_CONTEXT","Container","HTMLContent","MessageBox","StyledButton","StyledCheckbox","StyledHr","StyledInput","StyledInputAmount","StyledInputField","StyledModal","ModalBody","ModalFooter","ModalHeader","StyledTextarea","P","TOAST_TYPE","useToasts","initialValues","agreement","notes","undefined","budget","purpose","requestVirtualCardMutation","RequestVirtualCardModal","hasPolicy","Boolean","host","settings","virtualcards","policy","addToast","context","requestNewVirtualCard","isCreating","loading","createError","error","formik","collective","onSubmit","values","variables","account","legacyId","onSuccess","SUCCESS","message","onClose","validate","errors","lenght","handleClose","setErrors","handleSubmit","touched","inputProps","setFieldValue","handleChange","checked","isValid","RequestVirtualCardBtn","showModal","setShowModal","onClick","css","FilterButton","attrs","buttonSize","buttonStyle","heignt","padding","theme","colors","black","primary","ButtonContainer","flexGrow","defaultGetLabel","filter","StyledFilters","filters","onChange","disabled","getLabel","selected","minButtonWidth","buttonHeight","buttonPadding","buttonGrow","flexProps","isSelected","toLowerCase","overflowX","StyledInputGroup","StyledInputPercentage","onBlur","isNaN","e","parseFloat","target","newValue","Plus","Times","PriceTags","Manager","Popper","Reference","useGlobalBlur","useKeyboardKey","ESCAPE_KEY","StyledCard","StyledTag","TagIcon","EditTag","variant","tabIndex","white","full","blue","active","Input","input","InputWrapper","TagWrapper","TagActionButton","button","AddTagButton","DeleteTagButton","messages","placeholder","editLabel","addLabel","getOptions","tags","tag","label","StyledInputTags","suggestedTags","renderUpdatedTags","defaultValue","inputRef","useRef","wrapperRef","scrollerRef","isOpen","setOpen","setTags","inputValue","setInputValue","availableSuggestedTags","st","some","t","useCallback","addTag","newTags","handleToggleInput","setTimeout","current","focus","removeTag","update","updatedTags","v","outside","callback","keyMatch","ref","key","preventDefault","placement","style","zIndex","newTag","trim","requestAnimationFrame","scrollTo","Number","MAX_SAFE_INTEGER","maxHeight","minWidth","memo","StyledSelect","getSelectFilterStyles","stylesFromProps","control","baseStyles","state","styles","background","borderRadius","fontWeight","isFocused","boxShadow","StyledSelectFilter","i18nGraphqlException","ExpenseTypeTag","setTagsMutation","TagsForAdmins","expense","order","tagList","referencedObject","ERROR","Tag","mb","mr","Tags","limit","getTagProps","canEdit","showUntagged","renderTag","extraTagProps","renderedTag","slice","join","count","TransactionSign","isCredit","verticalAlign","Download","FileText","imagePreview","PrivateInfoIcon","fadeInDown","StyledLink","StyledSpinner","ImageLink","openInNewTab","FileTextIcon","DownloadIcon","CardContainer","MainContainer","hasOnClick","FileName","PrivateIconContainer","formatFileSize","sizeInBytes","toFixed","UploadedFilePreview","isPrivate","isDownloading","url","size","alt","fileName","fileSize","showFileName","border","content","isText","childrenContainer","resizeWidth","width","fadeIn","DebitCreditItem","DebitCreditList","DebitCreditGradient","DebitItem","CreditItem","getAvatarBorderRadius","Avatar","LinkCollective","DualAvatarContainer","SecondaryAvatarContainer","AvatarWithLink","secondaryAccount","mainAvatar","ChevronDown","ReactDOM","expenseStatus","i18nExpenseStatus","getExpenseStatusMsgType","MarkExpenseAsIncompleteModal","ProcessExpenseButtons","ButtonLabel","ExpenseStatusTag","PopupContainer","Arrow","ChevronDownIcon","AdminExpenseStatusTag","showPopup","setShowPopup","isClosable","setClosable","showMarkAsIncompleteModal","setMarkAsIncompleteModal","hideProcessExpenseButtons","status","APPROVED","buttonProps","px","py","isBorderless","textAlign","document","getElementById","createPortal","arrowProps","permissions","canMarkAsIncomplete","body","Bullet","BulletSlider","nbItems","selectedIndex","keys","index","event","ArrowLeft","ArrowRight","FilesPreviewModal","setState","max","min","files","eventListener","addEventListener","selectPrevFile","selectNextFile","removeEventListener","item","setLoading","renderItemPreview","getItemOnClick","renderInfo","selectedItem","nbFiles","hasMultipleFiles","Component","saveAs","expenseTypes","ExpenseInvoiceDownloadHelper","generateInvoiceBlob","getExpenseInvoiceFilename","FileInfo","invoiceBlob","description","name","incurredAt","getFilesFromExpense","INVOICE","attachedFiles","items","ExpenseInvoicePreview","fileURL","ExpenseFilesPreviewModal","invoiceFile","setInvoiceFile","setInvoiceBlob","invoiceError","setInvoiceError","useEffect","then","file","URL","createObjectURL","revokeObjectURL","downloadInvoice","AlertTriangle","Maximize2","MaximizeIcon","toPx","getCollectivePageRoute","PayoutMethodTypeWithIcon","DEFAULT_PROCESS_EXPENSE_BTN_PROPS","hasProcessButtons","H3","DetailColumnHeader","ButtonsContainer","ExpenseContainer","getNbAttachedFiles","ExpenseBudgetItem","isInverted","showAmountSign","showProcessActions","view","onProcess","hasFilesPreview","showFilesPreview","featuredProfile","payee","isAdminView","isSubmitterView","isCharge","CHARGE","pendingReceipt","every","i","nbAttachedFiles","isExpensePaidOrRejected","REJECTED","PAID","includes","shouldDisplayStatusTagActions","isMultiCurrency","amountInAccountCurrency","createdByAccount","createdAt","balance","requiredLegalDocuments","isAdmin","payoutMethod","mx","Calendar","Expand","ShowChart","isIndividualAccount","CollectiveType","formatCurrency","getCurrencySymbol","StatTitle","StatAmount","StatContainer","$isMain","BudgetStats","stats","horizontal","locale","monthlyRecurring","activeRecurringContributions","monthly","yearly","isFund","FUND","isIndividual","isHost","borderTop","PROJECT","EVENT","consolidatedBalance","totalAmountRaised","totalNetAmountRaised","totalAmountReceived","yearlyBudget","abs","totalAmountSpent","totalPaidExpenses","Dimensions","ContainerSectionContent","maxWidth","MAX_SECTION_WIDTH","PADDING_X","m","useQuery","TransactionKind","EMPTY_ARRAY","expenseHostFields","expensesListFieldsFragment","Image","getDefaultKinds","transactionsQueryCollectionFragment","TransactionItem","withUser","budgetSectionAccountFieldsFragment","budgetSectionQuery","budgetSectionForIndividualQuery","budgetSectionWithHostQuery","getBudgetSectionQuery","hasHost","getBudgetSectionQueryVariables","collectiveSlug","hostSlug","slug","kind","EXPENSE","BudgetItemContainer","$isFirst","FILTERS","geFilterLabel","getBudgetItems","transactions","expenses","expenseIds","transactionsWithoutMatchingExpense","transaction","ViewAllLink","hasExpenses","hasTransactions","isFilterAll","SectionBudget","LoggedInUser","setFilter","budgetQueryResult","data","refetch","budgetItemsParams","allItems","idx","__typename","MaskedInput","StyledInputMask","render","useLazyQuery","CollectivePicker","FLAG_COLLECTIVE_PICKER_COLLECTIVE","CollectivePickerAsync","Grid","cardNumber","expiryDate","cvv","assignee","provider","cardName","assignNewVirtualCardMutation","collectiveMembersQuery","throttledCall","searchFunc","AssignVirtualCardModal","modalProps","assignNewVirtualCard","isBusy","getCollectiveUsers","isLoadingUsers","users","privateData","replace","expireDate","virtualCard","resetForm","handleCollectivePick","option","collectiveUsers","members","nodes","node","collectives","c","isActive","marginTop","bg","ml","VirtualCardLimitInterval","VirtualCardLimitIntervalDescriptionsI18n","ALL_TIME","DAILY","MONTHLY","PER_AUTHORIZATION","WEEKLY","YEARLY","VirtualCardLimitIntervalI18n","ExclamationCircle","roles","graphqlAmountValueInCents","useLoggedInUser","getI18nLink","editVirtualCardMutation","createVirtualCardMutation","VirtualCardPoliciesQuery","EditVirtualCardModal","policyData","isLoadingPolicy","MAXIMUM_VIRTUAL_CARD_LIMIT_AMOUNT_FOR_INTERVAL","policies","isEditing","formMutation","submitForm","isHostAdmin","hasRole","ADMIN","canEditLimit","limitAmount","spendingLimitAmount","limitInterval","spendingLimitInterval","maximumLimitForInterval","cardCollective","virtualCardLimitOptions","Object","interval","link","as","href","setFieldTouched","find","GST_RATE_PERCENT","TaxType","StyledInputFormikField","validateTaxGST","tax","GST","rate","idNumber","FORM_FIELD_REQUIRED","ExpenseGSTFormikFields","isOptional","taxes","field","examples","fetchFromPDFService","getErrorFromPdfService","expenseInvoiceUrl","getPrettyDate","utc","Date","split","prettyDate","invoiceUrl","downloadExpenseInvoice","onError","filename","useExpenseInvoiceDownloadHelper","disablePreview","setError","SETTLEMENT","shape","I18nFormatters","SPAM","PENDING","UNVERIFIED","SCHEDULED_FOR_PAYMENT","ExtendedTag","showTaxFormTag","showTaxFormMsg","tagProps","letterSpacing","i18nExpenseType","checkVATNumberFormat","verifyValueInRange","validateTaxVAT","VAT","FORM_FIELD_PATTERN","ExpenseVATFormikFields","expensePageExpenseFieldsFragment","reasonPlaceholder","processExpenseMutation","setMessage","mutationOptions","processExpense","onConfirm","action","PayoutMethodType","renderObject","object","entries","reduce","acc","payoutMethodHasData","OTHER","BANK_ACCOUNT","PRIVATE_DATA_PLACEHOLDER","getPmData","PayoutMethodData","showLabel","accountHolderName","details","University","BankIcon","INVITE","VIRTUAL_CARD","ACCOUNT_BALANCE","REASON_CODES","UNSUPPORTED_STATUS","UNSUPPORTED_USER_FEATURE","MINIMAL_CONDITION_NOT_MET","AUTHOR_CANNOT_APPROVE","ReasonMessage","Mutation","Trash2","IconTrash","ConfirmationModal","deleteExpenseMutation","removeExpenseFromCache","cache","deleteExpense","modify","fields","existingExpenses","readField","totalCount","DeleteExpenseButton","onDelete","isDisabled","onModalToggle","hasDeleteConfirm","setDeleteConfirm","showDeleteConfirm","MarkExpenseAsUnpaidButton","hasModal","setHasModal","refundPaymentProcessorFee","setRefundPaymentProcessorFee","Check","space","default","hasFeature","FEATURES","i18nPayoutMethodType","i18nTaxType","getAmountWithoutTaxes","getTaxAmount","StyledButtonSet","H4","quoteExpenseQuery","getPayoutLabel","aliasBankAccountToTransferWise","getPayoutOptionValue","payoutMethodType","isAuto","forceManual","transferwise","isPaypalPayouts","features","PAYPAL_PAYOUTS","supportedPayoutMethods","isWiseOTT","TRANSFERWISE_OTT","DEFAULT_VALUES","freeze","paymentProcessorFeeInHostCurrency","totalAmountPaidInHostCurrency","feesPayer","getCanCustomizeFeesPayer","isManualPayment","feeAmount","isRoot","isSupportedPayoutMethod","isFullBalance","isSameCurrency","AmountLine","Label","Amount","SectionLabel","p","getInitialValues","calculateAmounts","quote","totalAmount","paymentProcessorFee","effectiveRate","sourceAmount","paymentProcessorFeeAmount","PayExpenseModal","hasManualPayment","payoutMethodLabel","hasBankInfoWithoutWise","isScheduling","hasAutomaticManualPicker","canQuote","quoteQuery","skip","amountWithoutTaxes","amounts","setValues","isSubmitting","paymentMethod","ShieldFillCheck","ShieldFillExclamation","ChevronUp","StyledRoundButton","H1","SecurityCheckItem","LEVEL_TAG_STYLE","PASS","HIGH","MEDIUM","LOW","LEVEL_ORDER","Scope","USER","COLLECTIVE","PAYEE","PAYOUT_METHOD","expenseRequiresSecurityConfirmation","securityChecks","check","level","SecurityCheck","isExpanded","setExpanded","scope","I18nScopes","ALL","SecurityChecksModal","setScope","Indicator","RoundButton","LEVEL_BUTTON_STYLE","SecurityChecksButton","highRiskChecks","higherRisk","ShieldIcon","getAmountInCents","TransferwiseIcon","getDisabledMessage","expenseAmountInAccountCurrency","PayoutMethodTypeIcon","PayExpenseButton","hasSecurityModal","showSecurityModal","disabledMessage","requiresSecurityCheck","handleClick","success","Ban","UnapproveIcon","ApproveIcon","RejectIcon","PERMISSION_CODES","marginLeft","canApprove","canUnapprove","canReject","canPay","canMarkAsUnpaid","canMarkAsSpam","canDelete","markAsSpamWarning","getErrorContent","startsWith","PermissionButton","icon","permission","allowed","reason","reasonDetails","selectedAction","setSelectedAction","onUpdate","response","triggerAction","paymentParams","getButtonProps","isSelectedAction","approve","confirm","canUnschedulePayment","shouldRefundPaymentProcessorFee","mt","collectiveNavbarFieldsFragment","loggedInAccountExpensePayoutFieldsFragment","expensesListAdminFieldsFragment","isFeatureEnabled","Currency","PayPalSupportedCurrencies","checkRequiresAddress","collectiveTypesRequiringAddress","INDIVIDUAL","ORGANIZATION","expenseTypesRequiringAddress","GRANT","isNewUser","isInvite","isTaxRateValid","baseAmount","computeExpenseAmounts","areAllItemsValid","activeTaxes","hasTaxes","areAllTaxesValid","totalInvoiced","validateExpenseTaxes","enabledTaxes","taxesErrors","hasErrors","getSupportedCurrencies","MULTI_CURRENCY_EXPENSES","isPayPal","defaultCurrency","Form","Formik","requireFields","require2FAForAdmins","getCurrentDateInUTC","collectivePageQuery","getCollectivePageQueryVariables","DefaultCollectiveLabel","MessageBoxGraphqlError","CollectiveModalHeader","TwoFactorAuthRequiredMessage","illustration","Illustration","img","src","AddFundsModalContainer","showPlatformTipModal","AmountDetailsLine","isLargeAmount","addFundsMutation","addFundsTierFieldsFragment","addFundsAccountQuery","addPlatformTipMutation","hostFeePercent","processedAt","fromAccount","tier","buildAccountReference","noThankYou","other","DEFAULT_PLATFORM_TIP_PERCENTAGES","getOptionFromPercentage","percentage","getTiersOptions","tiers","Field","labelFontSize","labelFontWeight","AddFundsModal","fundDetails","setFundDetails","formatOptionLabel","customAmount","setCustomAmount","options","fundAmount","selectedOption","setSelectedOption","refetchQueries","query","awaitRefetchQueries","submitAddFunds","addFundsResponse","fundError","addPlatformTip","platformTipError","tiersNodes","accountSettings","tiersOptions","canAddHostFee","plan","hostFees","addedFundsHostFeePercent","defaultHostFeePercent","canAddPlatformTip","isTrustedHost","receiptTemplates","invoice","templates","receiptTemplateTitles","push","alternative","hasTwoFactorAuth","defaultInvoiceTemplate","platformTip","invoiceTemplate","resultOrder","addFunds","creditTransaction","hostFee","defaultSources","form","CustomStyledIcon","OCFPrimaryButton","ORDER_STATUS","i18nOrderStatus","getTransactionStatusMsgType","isRefund","isOrderRejected","isRefunded","PROCESSING","completed","refunded","rejected","formatStatus","tooltipMessages","TransactionStatusTag","Undo","refundTransactionMutation","TransactionRefundButton","refundTransaction","isEnabled","setEnabled","handleRefundTransaction","onMutationSuccess","closeModal","MESSAGE_MAX_LENGTH","rejectionReason","TransactionRejectMessageForm","dispatchChange","MinusCircle","tooltipContent","rejectTransactionMutation","TransactionRejectButton","rejectTransaction","mutationError","handleRejectTransaction","canRefund","Info","TransactionTypes","useAsyncCall","renderDetailsString","saveInvoice","I18nBold","rejectAndRefundTooltipContent","showRefundHelp","showRejectHelp","bold","isInternalTransfer","toAccount","parent","DetailTitle","DetailDescription","DetailsContainer","isCompact","TransactionDetails","displayActions","useErrorToast","loadingInvoice","downloadInvoiceWith","callWith","uuid","platformFee","netAmount","CREDIT","hasOrder","showRefundButton","showRejectButton","showDownloadInvoiceButton","canDownloadInvoice","hostFeeTransaction","relatedTransactions","paymentProcessorCover","PAYMENT_PROCESSOR_COVER","isProcessing","taxAmount","taxInfo","ADDED_FUNDS","CONTRIBUTION","transactionUuid","toCollectiveSlug","MessageSquare","i18nTransactionKind","i18nTransactionType","PLATFORM_TIP","INFO_SEPARATOR","getDisplayedAmount","isExpense","isSelf","isProcessingOrPending","ItemTitleWrapper","KindTag","getExpenseStatusTag","expenseStatusLabel","giftCardEmitterAccount","Item","legacyCollectiveId","isOwnUserProfile","CollectiveId","avatarCollective","displayedAmount","transactionDetailsLink","isIncognito","giftCard","comments","components","ReactSelectComponents","BALANCE_TRANSFER","optionsToQueryString","parseTransactionKinds","str","TruncatedItemsList","truncateOverflow","pl","TruncatedValueContainer","selectProps","itemsList","itemsListStr","REACT_SELECT_COMPONENT_OVERRIDE","ValueContainer","MultiValue","TransactionsKindFilter","kinds","getOption","displayedKinds","selectedOptions","DRAFT","INCOMPLETE","RECEIPT","UNCLASSIFIED","CREDIT_CARD","BANK_TRANSFER_DEFAULT_INSTRUCTIONS","memoizeOne","getPayoutProfiles","loggedInAccount","payoutProfiles","membership","childrenAccounts","childrenAccount","DEFAULT_SUPPORTED_EXPENSE_TYPES","getSupportedExpenseTypes","parentCollective","supportedExpenseTypes","getExpenseTypes","defaultExpenseTypes","aggregatedConfig","isSupportedExpenseType","expenseType","supportedTypes","formatErrorMessage","fn","setData","args","console","call","Sections","I18N_SECTIONS","TOP_FINANCIAL_CONTRIBUTORS","CONNECTED_COLLECTIVES","OUR_TEAM","GOALS","UPDATES","CONVERSATIONS","RECURRING_CONTRIBUTIONS","TICKETS","LOCATION","CONTRIBUTE","CONTRIBUTIONS","EVENTS","PROJECTS","TRANSACTIONS","BUDGET","FINANCIAL_OVERVIEW","EXPENSES","CONTRIBUTORS","PARTICIPANTS","ABOUT","i18nCollectivePageSection","section","ExpenseTypes","i18nTypes","i18nStatus","formattedType","RecurringExpenseIntervals","week","month","quarter","year","RecurringIntervalOptions","MESSAGES","CANCELLED","DISPUTED","EXPIRED","IN_REVIEW","NEW","REQUIRE_CLIENT_CONFIRMATION","PLEDGED","ACTIVE","REFUNDED","i18nMsg","ADAPTIVE","PREPAID","HOST","MANUAL","CRYPTO","US_BANK_ACCOUNT","SEPA_DEBIT","BACS_DEBIT","BANCONTACT","TypesI18n","TRANSACTION_SETTLEMENT_STATUS","DEBIT","i18nKind","HOST_FEE_SHARE","PAYMENT_PROCESSOR_FEE","PREPAID_PAYMENT_METHOD","HOST_FEE_SHARE_DEBT","PLATFORM_TIP_DEBT","i18nSettlementStatus","OWED","INVOICED","SETTLED","i18nTransactionSettlementStatus","bool","get","fetch","toIsoDateStr","getFromLocalStorage","LOCAL_STORAGE_KEYS","collectiveInvoiceURL","invoiceServiceURL","transactionInvoiceURL","openCollectiveFee","formatFee","feePercent","_amount","_netAmount","amountString","expenseAmount","platformFeeString","platformFeePercent","hostFeeString","paymentProcessorFeeString","expensePaymentProcessorFee","netExpenseAmount","hasPaymentProcessorCover","netPaymentProcessorCoverAmount","payer","taxName","collectiveName","detailString","concat","getInvoiceUrl","fromCollectiveSlug","dateFrom","dateTo","encodeURI","getFilename","createdAtString","fromString","toString","getParams","format","allowExternal","accessToken","ACCESS_TOKEN","headers","Authorization","blob","NETWORK","UNKNOWN"],"sourceRoot":""}