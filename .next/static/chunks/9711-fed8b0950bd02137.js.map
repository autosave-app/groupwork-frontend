{"version":3,"file":"static/chunks/9711-fed8b0950bd02137.js","mappings":"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","sources":["webpack://_N_E/./components/Pagination.js","webpack://_N_E/./components/PeriodFilterPresetsSelect.js","webpack://_N_E/./components/SearchBar.js","webpack://_N_E/./components/DateRange.js","webpack://_N_E/./components/filters/PeriodFilter.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { omit } from 'lodash';\nimport { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\n\nimport Container from './Container';\nimport { Flex } from './Grid';\nimport Link from './Link';\nimport StyledButton from './StyledButton';\nimport StyledInput from './StyledInput';\n\nconst Pagination = ({ route, limit, offset, total, scrollToTopOnChange, isDisabled, ignoredQueryParams }) => {\n  const router = useRouter();\n\n  if (!router) {\n    return null;\n  }\n\n  const totalPages = Math.ceil(total / limit);\n  const currentPage = offset / limit + 1;\n  const queryParams = ignoredQueryParams ? omit(router.query, ignoredQueryParams) : router.query;\n  route = route || router.asPath.split('?')[0];\n  isDisabled = isDisabled || totalPages <= 1;\n\n  const changePage = async ({ target, key }) => {\n    if (key && key !== 'Enter') {\n      return;\n    }\n\n    const { value } = target;\n    if (!value || !parseInt(value) || parseInt(value) === currentPage) {\n      return;\n    }\n    await router.push({ pathname: route, query: { ...queryParams, offset: (value - 1) * limit } });\n\n    if (scrollToTopOnChange) {\n      window.scrollTo(0, 0);\n    }\n  };\n\n  return (\n    <Flex alignItems=\"center\">\n      {currentPage > 1 && (\n        <Link\n          href={{ pathname: route, query: { ...queryParams, offset: offset - limit } }}\n          scroll={scrollToTopOnChange}\n        >\n          <StyledButton buttonSize=\"small\" disabled={isDisabled}>\n            <FormattedMessage id=\"Pagination.Prev\" defaultMessage=\"Previous\" />\n          </StyledButton>\n        </Link>\n      )}\n      <Container display=\"inline-block\" mx={2}>\n        <FormattedMessage\n          id=\"Pagination.Count\"\n          defaultMessage=\"Page {current} of {total}\"\n          values={{\n            current: (\n              <StyledInput\n                key={offset}\n                defaultValue={currentPage}\n                onBlur={changePage}\n                onKeyPress={changePage}\n                textAlign=\"center\"\n                mx={1}\n                px={1}\n                py={1}\n                width={30}\n                disabled={isDisabled}\n                type=\"text\"\n                pattern=\"[0-9]+\"\n                inputMode=\"numeric\"\n                data-cy=\"pagination-current\"\n              />\n            ),\n            total: <span data-cy=\"pagination-total\">{totalPages || 1}</span>,\n          }}\n        />\n      </Container>\n      {currentPage < totalPages && (\n        <Link\n          href={{ pathname: route, query: { ...queryParams, offset: offset + limit } }}\n          scroll={scrollToTopOnChange}\n        >\n          <StyledButton buttonSize=\"small\" disabled={isDisabled}>\n            <FormattedMessage id=\"Pagination.Next\" defaultMessage=\"Next\" />\n          </StyledButton>\n        </Link>\n      )}\n    </Flex>\n  );\n};\n\nPagination.propTypes = {\n  limit: PropTypes.number,\n  offset: PropTypes.number,\n  total: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  route: PropTypes.string,\n  /** By default, all query params will be transferred in the paginated link. This prop is useful to filter query params that are part of the URL. */\n  ignoredQueryParams: PropTypes.arrayOf(PropTypes.string),\n  /** Use this to scroll back on top when pagination changes */\n  scrollToTopOnChange: PropTypes.bool,\n};\n\nPagination.defaultProps = {\n  scrollToTopOnChange: true,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { stripTime } from '../lib/date-utils';\nimport dayjs from '../lib/dayjs';\n\nimport { StyledSelectFilter } from './StyledSelectFilter';\n\nconst getPastDateInterval = timeUnit => {\n  const from = dayjs().subtract(1, timeUnit).startOf(timeUnit);\n  return { from, to: from.endOf(timeUnit) };\n};\n\n/**\n * Some presets for time filters\n */\nexport const PERIOD_FILTER_PRESETS = {\n  allTime: {\n    label: <FormattedMessage defaultMessage=\"All time\" />,\n    getInterval: () => ({ from: null, to: null }),\n  },\n  today: {\n    label: <FormattedMessage defaultMessage=\"Today\" />,\n    getInterval: () => ({ from: dayjs().startOf('day'), to: dayjs().endOf('day') }),\n  },\n  thisMonth: {\n    label: <FormattedMessage defaultMessage=\"This Month\" />,\n    getInterval: () => ({ from: dayjs().startOf('month'), to: dayjs().endOf('day') }),\n  },\n  thisYear: {\n    label: <FormattedMessage defaultMessage=\"This Year\" />,\n    getInterval: () => ({ from: dayjs().startOf('year'), to: dayjs().endOf('day') }),\n  },\n  pastWeek: {\n    label: <FormattedMessage defaultMessage=\"Past Week\" />,\n    getInterval: () => getPastDateInterval('week'),\n  },\n  pastMonth: {\n    label: <FormattedMessage defaultMessage=\"Past Month\" />,\n    getInterval: () => getPastDateInterval('month'),\n  },\n  pastYear: {\n    label: <FormattedMessage defaultMessage=\"Past Year\" />,\n    getInterval: () => getPastDateInterval('year'),\n  },\n};\n\nconst PERIOD_FILTER_SELECT_STYLES = {\n  dropdownIndicator: { paddingTop: 0, paddingBottom: 0 },\n  option: { fontSize: '12px' },\n};\n\nconst getSelectedPeriodOptionFromInterval = ({ from, to }) => {\n  const isSameDay = (dayjsDate, otherDate) => (!dayjsDate && !otherDate) || dayjsDate?.isSame(otherDate, 'day');\n  const preset = Object.keys(PERIOD_FILTER_PRESETS).find(preset => {\n    const presetDetails = PERIOD_FILTER_PRESETS[preset];\n    const presetInterval = presetDetails.getInterval();\n    return isSameDay(presetInterval.from, from) && isSameDay(presetInterval.to, to);\n  });\n\n  if (preset) {\n    return { label: PERIOD_FILTER_PRESETS[preset].label, value: preset };\n  } else {\n    return { label: 'Custom', value: 'custom' };\n  }\n};\n\nconst periodSelectThemeBuilder = theme => ({ ...theme, spacing: { ...theme.spacing, controlHeight: 28 } });\n\nconst PeriodFilterPresetsSelect = ({ onChange, interval, inputId, formatDateFn }) => {\n  const intl = useIntl();\n  const selectedOption = React.useMemo(() => getSelectedPeriodOptionFromInterval(interval), [interval]);\n  const options = React.useMemo(() => {\n    return Object.keys(PERIOD_FILTER_PRESETS).map(presetKey => ({\n      value: presetKey,\n      label: PERIOD_FILTER_PRESETS[presetKey].label,\n    }));\n  }, [intl]);\n\n  return (\n    <StyledSelectFilter\n      inputId={inputId}\n      value={selectedOption}\n      options={options}\n      selectTheme={periodSelectThemeBuilder}\n      styles={PERIOD_FILTER_SELECT_STYLES}\n      onChange={({ value }) => {\n        if (value === 'custom') {\n          return interval;\n        } else {\n          const newInterval = { ...PERIOD_FILTER_PRESETS[value].getInterval() };\n          onChange({ ...interval, from: formatDateFn(newInterval.from), to: formatDateFn(newInterval.to) });\n        }\n      }}\n    />\n  );\n};\n\nPeriodFilterPresetsSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  inputId: PropTypes.string.isRequired,\n  interval: PropTypes.shape({\n    from: PropTypes.string,\n    to: PropTypes.string,\n  }).isRequired,\n  formatDateFn: PropTypes.func,\n};\n\nPeriodFilterPresetsSelect.defaultProps = {\n  formatDateFn: stripTime,\n};\n\nexport default PeriodFilterPresetsSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, useIntl } from 'react-intl';\n\nimport SearchForm from './SearchForm';\n\nconst messages = defineMessages({\n  searchPlaceholder: {\n    id: 'search.placeholder',\n    defaultMessage: 'Search...',\n  },\n});\n\n/**\n * A wrapper around `SearchForm` that holds state and interacts with parent\n * through `onSubmit`, rather than `onChange`.\n */\nconst SearchBar = ({ onSubmit, defaultValue, placeholder, ...props }) => {\n  const [value, setValue] = React.useState(defaultValue || '');\n  const intl = useIntl();\n\n  // Reset value when `defaultValue` change, to handle reset filters\n  React.useEffect(() => {\n    setValue(defaultValue || '');\n  }, [defaultValue]);\n\n  return (\n    <SearchForm\n      placeholder={placeholder || intl.formatMessage(messages.searchPlaceholder)}\n      value={value}\n      onChange={setValue}\n      onSubmit={event => {\n        event.preventDefault();\n        const searchInput = event.target.elements.q;\n        onSubmit(searchInput.value || null);\n      }}\n      {...props}\n    />\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  defaultValue: PropTypes.string,\n  placeholder: PropTypes.string,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\n\nimport dayjs from '../lib/dayjs';\n\nimport DateTime from './DateTime';\n\nconst OneLineDate = styled(DateTime)`\n  white-space: nowrap;\n  display: inline-block;\n`;\n\nconst getMessage = (from, to) => {\n  if (!from && !to) {\n    return <FormattedMessage id=\"DateRange.All\" defaultMessage=\"All\" />;\n  } else if (from && to) {\n    return (\n      <div>\n        <FormattedMessage\n          defaultMessage=\"{dateFrom} to {dateTo}\"\n          values={{\n            dateFrom: <OneLineDate value={from} dateStyle=\"medium\" />,\n            dateTo: <OneLineDate value={to} dateStyle=\"medium\" />,\n          }}\n        />\n      </div>\n    );\n  } else if (from) {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Since {date}\"\n        values={{ date: <OneLineDate value={from} dateStyle=\"medium\" /> }}\n      />\n    );\n  } else {\n    return (\n      <FormattedMessage\n        defaultMessage=\"Before {date}\"\n        values={{ date: <OneLineDate value={to} dateStyle=\"medium\" /> }}\n      />\n    );\n  }\n};\n\n/**\n * Small helper to display an internationalized date range. Both values are optional.\n * The results can be something like:\n * - All\n * - 01/01/21 to 05/05/22\n * - Since 01/01/21\n * - Before 05/05/22\n *\n * If isUTC is true, we also add a `(UTC)` to the end of the date.\n */\nexport const DateRange = ({ from, to, isUTC }) => {\n  const message = getMessage(from, to);\n  if (!isUTC || (!from && !to)) {\n    return message;\n  } else {\n    return <React.Fragment>{message} (UTC)</React.Fragment>;\n  }\n};\n\nDateRange.propTypes = {\n  from: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date), PropTypes.instanceOf(dayjs)]),\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date), PropTypes.instanceOf(dayjs)]),\n  isUTC: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ChevronDown } from '@styled-icons/boxicons-regular/ChevronDown';\nimport { InfoCircle } from '@styled-icons/boxicons-regular/InfoCircle';\nimport { has } from 'lodash';\nimport { defineMessage, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { isValidDate, parseDateInterval, stripTime } from '../../lib/date-utils';\nimport dayjs from '../../lib/dayjs';\n\nimport { DateRange } from '../DateRange';\nimport { Box, Flex } from '../Grid';\nimport PeriodFilterPresetsSelect from '../PeriodFilterPresetsSelect';\nimport PopupMenu from '../PopupMenu';\nimport StyledButton from '../StyledButton';\nimport StyledButtonSet from '../StyledButtonSet';\nimport StyledInput from '../StyledInput';\nimport StyledInputField from '../StyledInputField';\nimport StyledTooltip from '../StyledTooltip';\nimport { Span } from '../Text';\n\nconst DEFAULT_INTERVAL = { from: '', to: '', timezoneType: 'local' };\n\n/**\n * Get a date range as stored internally from a `value` prop, that can be either an object\n * like { from, to } or a stringified value (see `encodeDateInterval`).\n */\nconst getIntervalFromValue = value => {\n  const isIntervalObject = value => typeof value === 'object' && has(value, 'from') && has(value, 'to');\n  const intervalFromValue = isIntervalObject(value) ? { ...value } : parseDateInterval(value);\n  if (intervalFromValue.timezoneType === 'UTC') {\n    const toUTC = date => (date ? dayjs.utc(date) : null);\n    intervalFromValue.from = toUTC(intervalFromValue.from);\n    intervalFromValue.to = toUTC(intervalFromValue.to);\n  }\n\n  return {\n    from: stripTime(intervalFromValue.from),\n    to: stripTime(intervalFromValue.to),\n    timezoneType: intervalFromValue.timezoneType || 'local',\n  };\n};\n\n/**\n * Update `interval` with a new value for `from` or `to` and return the updated interval\n * as a new object.\n */\nconst getNewInterval = (interval, changeField, newValue) => {\n  const newInterval = { ...interval };\n  newInterval[changeField] = newValue;\n  return newInterval;\n};\n\n/**\n * Date is locally stored as '2020-01-01'. We need to force the time to make sure it's not modified\n * by timezones when parsed.\n */\nconst parseDateForDateRange = (dateStr, isEndOfDay) => {\n  if (!dateStr) {\n    return null;\n  } else if (!isEndOfDay) {\n    return new Date(`${dateStr}T00:00:00`);\n  } else {\n    return new Date(`${dateStr}T23:59:59`);\n  }\n};\n\nconst UTC_LABEL = defineMessage({ defaultMessage: 'Coordinated Universal Time' });\nconst getTimeZoneTypeName = (intl, timezone) => {\n  if (timezone === 'local') {\n    try {\n      return intl.timeZone || dayjs.tz.guess();\n    } catch {\n      return '';\n    }\n  } else if (timezone === 'UTC') {\n    return intl.formatMessage(UTC_LABEL);\n  } else {\n    return '';\n  }\n};\n\nconst TriggerContainer = styled(StyledButton)`\n  min-height: 38px;\n  outline: 0;\n  background: #f7f8fa;\n  padding: 0 16px;\n  width: 100%;\n  text-align: left;\n  font-size: 12px;\n  font-weight: 500;\n  color: hsl(0, 0%, 20%);\n\n  svg {\n    transition: color 0.2s;\n  }\n\n  &:hover {\n    border-color: #c4c7cc;\n    svg {\n      color: #999999;\n    }\n  }\n\n  &:active,\n  &:focus {\n    background: white;\n    color: hsl(0, 0%, 20%);\n    box-shadow: 0 0 0 2px black;\n  }\n`;\n\nconst PeriodFilter = ({ onChange, value, inputId, minDate, ...props }) => {\n  const intl = useIntl();\n  const intervalFromValue = React.useMemo(() => getIntervalFromValue(value), [value]);\n  const [tmpDateInterval, setTmpDateInterval] = React.useState(intervalFromValue);\n  const [isValidDateInterval, setIsValidDateInterval] = React.useState(true);\n  const formattedMin = stripTime(minDate);\n\n  const setDate = (changeField, date) => {\n    const newInterval = getNewInterval(tmpDateInterval, changeField, date);\n    setTmpDateInterval(newInterval);\n\n    // Add warning in case fromDate is after toDate\n    if (isValidDate(newInterval.from) && isValidDate(newInterval.to) && newInterval.from > newInterval.to) {\n      setIsValidDateInterval(false);\n    } else if (isValidDate(newInterval.from) && isValidDate(newInterval.to) && newInterval.from < newInterval.to) {\n      setIsValidDateInterval(true);\n    }\n  };\n\n  return (\n    <PopupMenu\n      placement=\"bottom-start\"\n      onClose={() => setTmpDateInterval(intervalFromValue)}\n      Button={({ onClick }) => (\n        <TriggerContainer onClick={onClick} id={inputId} data-cy=\"period-filter\" {...props}>\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <DateRange\n              from={parseDateForDateRange(intervalFromValue.from, false)}\n              to={parseDateForDateRange(intervalFromValue.to, true)}\n              isUTC={intervalFromValue.timezoneType === 'UTC'}\n            />\n            <ChevronDown size={25} color=\"#cccccc\" />\n          </Flex>\n        </TriggerContainer>\n      )}\n    >\n      {({ setOpen }) => (\n        <Box mx=\"8px\" my=\"8px\" width=\"190px\">\n          <Box mb={3}>\n            <PeriodFilterPresetsSelect\n              inputId={`${inputId}-presets-select`}\n              onChange={setTmpDateInterval}\n              interval={tmpDateInterval}\n            />\n          </Box>\n          <StyledInputField\n            name=\"timezoneType\"\n            mt=\"12px\"\n            labelFontSize=\"16px\"\n            labelFontWeight=\"700\"\n            label={\n              <Flex alignItems=\"center\">\n                <Span mr={1}>\n                  <FormattedMessage defaultMessage=\"Timezone\" />\n                </Span>\n                <StyledTooltip\n                  content={\n                    <FormattedMessage defaultMessage=\"By default, all dates are filtered and displayed using your local timezone. You can switch to UTC to indicate that the dates provided above use the Coordinated Universal Time format, which matches how email reports are generated\" />\n                  }\n                >\n                  <InfoCircle size={16} />\n                </StyledTooltip>\n              </Flex>\n            }\n          >\n            {inputProps => (\n              <StyledButtonSet\n                {...inputProps}\n                size=\"tiny\"\n                items={['local', 'UTC']}\n                buttonProps={{ p: 1, fontSize: '13px', fontWeight: 400 }}\n                selected={tmpDateInterval.timezoneType}\n                buttonPropsBuilder={({ item }) => ({ title: getTimeZoneTypeName(intl, item) })}\n                onChange={timezoneType => {\n                  setTmpDateInterval({ ...tmpDateInterval, timezoneType });\n                }}\n              >\n                {({ item }) => {\n                  switch (item) {\n                    case 'local':\n                      return <FormattedMessage defaultMessage=\"Local\" />;\n                    case 'UTC':\n                      return <FormattedMessage defaultMessage=\"UTC\" />;\n                  }\n                }}\n              </StyledButtonSet>\n            )}\n          </StyledInputField>\n          <StyledInputField\n            label={<FormattedMessage defaultMessage=\"Start date\" />}\n            labelFontWeight=\"700\"\n            labelProps={{ fontWeight: 'bold', fontSize: '16px' }}\n            name=\"dateFrom\"\n            mt=\"12px\"\n            labelFontSize=\"16px\"\n          >\n            {inputProps => (\n              <StyledInput\n                {...inputProps}\n                type=\"date\"\n                width=\"100%\"\n                closeOnSelect\n                lineHeight={1}\n                fontSize=\"13px\"\n                value={tmpDateInterval.from}\n                min={formattedMin}\n                onChange={e => setDate('from', e.target.value)}\n              />\n            )}\n          </StyledInputField>\n          <StyledInputField\n            label={<FormattedMessage defaultMessage=\"End date\" />}\n            labelFontWeight=\"700\"\n            labelProps={{ fontWeight: 'bold', fontSize: '16px' }}\n            name=\"dateTo\"\n            mt=\"12px\"\n            labelFontSize=\"16px\"\n          >\n            {inputProps => (\n              <StyledInput\n                {...inputProps}\n                type=\"date\"\n                width=\"100%\"\n                closeOnSelect\n                lineHeight={1}\n                fontSize=\"13px\"\n                value={tmpDateInterval.to}\n                min={formattedMin}\n                max={stripTime(new Date())}\n                onChange={e => setDate('to', e.target.value)}\n              />\n            )}\n          </StyledInputField>\n          {!isValidDateInterval && (\n            <Span display=\"block\" color=\"red.500\" pt={2} fontSize=\"10px\" lineHeight=\"14px\" aria-live=\"assertive\">\n              <FormattedMessage defaultMessage=\"Start Date should be before the End Date\" />\n            </Span>\n          )}\n          <Flex mt={2}>\n            <StyledButton\n              buttonSize=\"medium\"\n              mr={2}\n              mt=\"12px\"\n              flex=\"1\"\n              onClick={() => {\n                setTmpDateInterval(DEFAULT_INTERVAL);\n                setIsValidDateInterval(true);\n                setOpen(false);\n                onChange(null);\n              }}\n            >\n              <FormattedMessage id=\"Reset\" defaultMessage=\"Reset\" />\n            </StyledButton>\n            <StyledButton\n              buttonSize=\"medium\"\n              buttonStyle=\"primary\"\n              mt=\"12px\"\n              data-cy=\"btn-apply-period-filter\"\n              flex=\"1\"\n              onClick={() => {\n                onChange(tmpDateInterval);\n                setOpen(false);\n              }}\n            >\n              <FormattedMessage id=\"Apply\" defaultMessage=\"Apply\" />\n            </StyledButton>\n          </Flex>\n        </Box>\n      )}\n    </PopupMenu>\n  );\n};\n\nPeriodFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  /** The value, either as a string with the `dateFrom→dateTo` format or an object like { from, to }*/\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      from: PropTypes.string,\n      to: PropTypes.string,\n      timezoneType: PropTypes.string,\n    }),\n  ]),\n  inputId: PropTypes.string,\n  minDate: PropTypes.string,\n};\n\nexport default PeriodFilter;\n"],"names":["React","useRouter","FormattedMessage","Container","Flex","Link","StyledButton","StyledInput","Pagination","route","limit","offset","total","scrollToTopOnChange","isDisabled","ignoredQueryParams","router","totalPages","Math","ceil","currentPage","queryParams","query","asPath","split","changePage","target","key","value","parseInt","push","pathname","window","scrollTo","current","defaultProps","useIntl","stripTime","dayjs","StyledSelectFilter","getPastDateInterval","timeUnit","from","subtract","startOf","to","endOf","PERIOD_FILTER_PRESETS","allTime","label","getInterval","today","thisMonth","thisYear","pastWeek","pastMonth","pastYear","PERIOD_FILTER_SELECT_STYLES","dropdownIndicator","paddingTop","paddingBottom","option","fontSize","getSelectedPeriodOptionFromInterval","isSameDay","dayjsDate","otherDate","isSame","preset","Object","keys","find","presetDetails","presetInterval","periodSelectThemeBuilder","theme","spacing","controlHeight","PeriodFilterPresetsSelect","onChange","interval","inputId","formatDateFn","intl","selectedOption","useMemo","options","map","presetKey","newInterval","defineMessages","SearchForm","messages","searchPlaceholder","id","defaultMessage","SearchBar","onSubmit","defaultValue","placeholder","props","useState","setValue","useEffect","formatMessage","event","preventDefault","searchInput","elements","q","styled","DateTime","OneLineDate","getMessage","dateFrom","dateTo","date","DateRange","isUTC","message","ChevronDown","InfoCircle","defineMessage","isValidDate","parseDateInterval","Box","PopupMenu","StyledButtonSet","StyledInputField","StyledTooltip","Span","DEFAULT_INTERVAL","timezoneType","getIntervalFromValue","isIntervalObject","intervalFromValue","toUTC","utc","getNewInterval","changeField","newValue","parseDateForDateRange","dateStr","isEndOfDay","Date","UTC_LABEL","getTimeZoneTypeName","timezone","timeZone","tz","guess","TriggerContainer","PeriodFilter","minDate","tmpDateInterval","setTmpDateInterval","isValidDateInterval","setIsValidDateInterval","formattedMin","setDate","onClick","setOpen","inputProps","p","fontWeight","item","title","e"],"sourceRoot":""}