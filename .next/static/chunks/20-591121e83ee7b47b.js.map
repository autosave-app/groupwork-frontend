{"version":3,"file":"static/chunks/20-591121e83ee7b47b.js","mappings":"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","sources":["webpack://_N_E/./components/ContainerOverlay.js","webpack://_N_E/./components/LinkContributor.js","webpack://_N_E/./components/Map.js","webpack://_N_E/./components/Location.js","webpack://_N_E/./components/NotificationBar.js","webpack://_N_E/./components/PeriodFilterPresetsSelect.js","webpack://_N_E/./components/SendMoneyToCollectiveBtn.js","webpack://_N_E/./components/StyledProgressBar.js","webpack://_N_E/./components/collective-page/ContributeCardsContainer.js","webpack://_N_E/./components/collective-page/graphql/mutations.js","webpack://_N_E/./components/contribute-cards/Contribute.js","webpack://_N_E/./components/contribute-cards/ContributeCardContainer.js","webpack://_N_E/./components/contribute-cards/ContributeCrypto.js","webpack://_N_E/./components/contribute-cards/ContributeCustom.js","webpack://_N_E/./components/CollapsableText.js","webpack://_N_E/./components/contribute-cards/ContributeTier.js","webpack://_N_E/./components/contribute-cards/CreateNew.js","webpack://_N_E/./components/host-dashboard/ApplicationRejectionReasonModal.js","webpack://_N_E/./components/host-dashboard/AcceptRejectButtons.js","webpack://_N_E/./components/host-dashboard/ApplicationMessageModal.js","webpack://_N_E/./components/host-dashboard/applications/InfoSectionHeader.tsx","webpack://_N_E/./components/host-dashboard/ValidatedRepositoryInfo.js","webpack://_N_E/./components/host-dashboard/applications/PendingApplication.js","webpack://_N_E/./components/icons/CommentIcon.js","webpack://_N_E/./components/recurring-contributions/AddPaymentMethod.js","webpack://_N_E/./components/recurring-contributions/UpdatePaymentMethodPopUp.js","webpack://_N_E/./lib/charts.js","webpack://_N_E/./lib/constants/contribution-types.js","webpack://_N_E/./lib/i18n/member-role.js","webpack://_N_E/./lib/styled-components-shared-styles.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isNil } from 'lodash';\n\nimport Container from './Container';\n\n/**\n * A specialization of `Container` that displays itself above the content, in position\n * absolute, with a dark background and content centered.\n *\n * Accepts all the props from `Container`.\n */\nconst ContainerOverlay = ({ backgroundType, backgroundOpacity, ...props }) => {\n  const isDark = backgroundType === 'dark';\n  const defaultOpacity = isDark ? 0.5 : 0.75;\n  const opacity = !isNil(backgroundOpacity) ? backgroundOpacity : defaultOpacity;\n  const lightness = isDark ? '30' : '255';\n  return (\n    <Container\n      position=\"absolute\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      background={`rgba(${lightness}, ${lightness}, ${lightness}, ${opacity})`}\n      width=\"100%\"\n      height=\"100%\"\n      zIndex={9999}\n      {...props}\n    />\n  );\n};\n\nContainerOverlay.propTypes = {\n  backgroundType: PropTypes.oneOf(['dark', 'white']),\n  /** If omitted, will use 0.5 for dark and 0.75 for black */\n  backgroundOpacity: PropTypes.number,\n};\n\nContainerOverlay.defaultProps = {\n  backgroundType: 'white',\n};\n\nexport default ContainerOverlay;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Link from './Link';\n\n/**\n * `Contributor` type is meant to surface all types of contributors, even the one that\n * may not be registered yet on Open Collective -- for example, Github contributors.\n * The component will automatically fallback on displaying a `span` if the contributor\n * cannot be linked to on Open Collective.\n *\n * In the future it may also link to external profiles like Github.\n */\nconst LinkContributor = ({ contributor, children }) => {\n  if (contributor.isGuest) {\n    return children || <FormattedMessage id=\"profile.guest\" defaultMessage=\"Guest\" />;\n  } else if (contributor.isIncognito) {\n    return children || <FormattedMessage id=\"profile.incognito\" defaultMessage=\"Incognito\" />;\n  } else if (contributor.collectiveSlug) {\n    return <Link href={`/${contributor.collectiveSlug}`}>{children || contributor.name}</Link>;\n  } else {\n    return children || <span>{contributor.name}</span>;\n  }\n};\n\nLinkContributor.propTypes = {\n  /** The contributor to link to */\n  contributor: PropTypes.shape({\n    collectiveSlug: PropTypes.string,\n    name: PropTypes.string,\n    isIncognito: PropTypes.bool,\n    isGuest: PropTypes.bool,\n  }).isRequired,\n  /** By default we show the name in the link. Use this prop to override this */\n  children: PropTypes.node,\n};\n\nexport default LinkContributor;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport StyledLink from './StyledLink';\n\nconst tile2Long = (tile, zoom) => {\n  // see https://wiki.openstreetmap.org/wiki/Slippy_map_tilenames#ECMAScript_.28JavaScript.2FActionScript.2C_etc..29\n  return (tile / Math.pow(2, zoom)) * 360 - 180;\n};\n\nconst tile2Lat = (tile, zoom) => {\n  const n = Math.PI - (2 * Math.PI * tile) / Math.pow(2, zoom);\n  return (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n};\n\nconst long2tile = (long, zoom) => {\n  return Math.floor(((long + 180) / 360) * Math.pow(2, zoom));\n};\n\nconst lat2tile = (lat, zoom) => {\n  return Math.floor(\n    ((1 - Math.log(Math.tan((lat * Math.PI) / 180) + 1 / Math.cos((lat * Math.PI) / 180)) / Math.PI) / 2) *\n      Math.pow(2, zoom),\n  );\n};\n\nconst makeBbox = ({ x, y, zoom }) => {\n  // https://wiki.openstreetmap.org/wiki/Slippy_Map\n  const south = tile2Lat(y + 1, zoom);\n  const north = tile2Lat(y, zoom);\n  const west = tile2Long(x, zoom);\n  const east = tile2Long(x + 1, zoom);\n\n  return `${west}%2C${south}%2C${east}%2C${north}`;\n};\n\nconst Map = ({ lat, long }) => {\n  const [src, prepareMap] = useState(null);\n\n  useEffect(() => {\n    const zoom = 16;\n    const x = long2tile(long, zoom);\n    const y = lat2tile(lat, zoom);\n    const bbox = makeBbox({ x, y, zoom });\n\n    // Set iframe url after component has mounted to prevent https://github.com/opencollective/opencollective/issues/2845\n    const src = `https://www.openstreetmap.org/export/embed.html?bbox=${bbox}&marker=${lat}%2C${long}&layers=ND`;\n\n    prepareMap(src);\n  }, [lat, long]);\n\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <iframe title=\"Open Street Map\" width=\"100%\" height=\"100%\" frameBorder=\"0\" scrolling=\"no\" src={src}></iframe>\n      <StyledLink\n        openInNewTab\n        href={`https://www.openstreetmap.org/?mlat=${lat}&amp;mlon=${long}#map=16/${lat}/${long}`}\n      >\n        <FormattedMessage id=\"map.viewLarger\" defaultMessage=\"View Larger Map\" />\n      </StyledLink>\n    </div>\n  );\n};\n\nMap.propTypes = {\n  lat: PropTypes.number,\n  long: PropTypes.number,\n  address: PropTypes.string,\n};\n\nexport default Map;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components';\nimport { isURL } from 'validator';\n\nimport Container from './Container';\nimport { Flex } from './Grid';\nimport Map from './Map';\nimport StyledLink from './StyledLink';\nimport { P } from './Text';\n\nconst LocationSection = styled.section`\n  text-align: center;\n`;\n\nclass Location extends React.Component {\n  static propTypes = {\n    location: PropTypes.object,\n    showTitle: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    showTitle: true,\n  };\n\n  render() {\n    if (!this.props.location) {\n      return null;\n    }\n\n    const { name, address, lat, long, country } = this.props.location;\n    if (name === 'Online') {\n      if (address && isURL(address)) {\n        return (\n          <Flex flexDirection=\"Column\" alignItems=\"center\">\n            <P textAlign=\"center\">\n              <StyledLink openInNewTabNoFollow href={address}>\n                {address}\n              </StyledLink>\n            </P>\n          </Flex>\n        );\n      } else {\n        return (\n          <P textAlign=\"center\">\n            <FormattedMessage id=\"Location.online\" defaultMessage=\"Online\" />\n          </P>\n        );\n      }\n    } else if (!name && !address && !lat && !long && !country) {\n      return null;\n    }\n\n    return (\n      <LocationSection id=\"location\">\n        <Container margin=\"30px 10px\">\n          {this.props.showTitle && <h1>Location</h1>}\n          <Container font-size=\"1.7rem\" margin=\"5px 0px\">\n            {name}\n          </Container>\n          <Container className=\"address\" color=\"black.600\">\n            <StyledLink\n              href={`https://www.openstreetmap.org/?mlat=${lat}&amp;mlon=${long}#map=16/${lat}/${long}`}\n              openInNewTab\n            >\n              {address}\n              {country ? `, ${country}` : ''}\n            </StyledLink>\n          </Container>\n        </Container>\n        {lat && long && (\n          <div className=\"map\">\n            <Map lat={lat} long={long} />\n          </div>\n        )}\n      </LocationSection>\n    );\n  }\n}\n\nexport default Location;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Close } from '@styled-icons/material/Close';\nimport { themeGet } from '@styled-system/theme-get';\nimport styled from 'styled-components';\n\nimport Container from './Container';\nimport { Flex } from './Grid';\nimport Link from './Link';\nimport StyledLinkButton from './StyledLinkButton';\nimport { H1, P } from './Text';\n\nexport const NotificationBarLink = styled(Link)`\n  color: ${props => props.theme.colors.blue[900]};\n  font-weight: 700;\n  text-decoration-line: underline;\n  text-decoration-thickness: 2px;\n  font-size: 1.4rem;\n  line-height: 2rem;\n`;\n\nexport const NotificationBarButton = styled(StyledLinkButton)`\n  color: ${props => props.theme.colors.blue[900]};\n  font-weight: 700;\n  text-decoration-line: underline;\n  text-decoration-thickness: 2px;\n  font-size: 1.4rem;\n  line-height: 2rem;\n`;\n\nconst CloseIcon = styled(Close)`\n  font-size: 12px;\n  width: 24px;\n  height: 24px;\n  padding: 4px;\n  background: #fff;\n  color: ${props => props.theme.colors.blue[900]};\n  border-radius: 99999px;\n  cursor: pointer;\n`;\n\nconst NotificationBarContainer = styled(Container)`\n  background-color: ${props => getBackgroundColor(props.type)};\n  color: ${props => props.theme.colors.blue[900]};\n  position: relative;\n`;\n\nconst getBackgroundColor = type => {\n  switch (type) {\n    case 'warning':\n      return themeGet('colors.yellow.100');\n    case 'error':\n      return themeGet('colors.red.100');\n    case 'success':\n      return themeGet('colors.green.100');\n    case 'info':\n    default:\n      return themeGet('colors.blue.200');\n  }\n};\n\nconst NotificationBar = ({ title, description, type, actions, inline, dismiss }) => {\n  return (\n    <NotificationBarContainer\n      data-cy=\"notification-bar\"\n      type={type}\n      display=\"flex\"\n      alignItems=\"center\"\n      flexDirection=\"row\"\n      padding=\"12px 25px\"\n    >\n      <Container display=\"flex\" alignItems=\"center\" flexDirection=\"column\" textAlign=\"center\" flex=\"1\">\n        <Container maxWidth={inline ? '1200px' : '672px'}>\n          {title && (\n            <H1\n              fontSize=\"1.4rem\"\n              lineHeight=\"2rem\"\n              mx=\"4px\"\n              textAlign=\"center\"\n              letterSpacing=\"0px\"\n              {...(description && { mb: '6px' })}\n              {...(inline && { display: 'inline' })}\n            >\n              {title}\n            </H1>\n          )}\n          {description && (\n            <P\n              fontSize=\"1.4rem\"\n              lineHeight=\"2rem\"\n              textAlign=\"center\"\n              letterSpacing=\"0px\"\n              mx=\"4px\"\n              {...(inline && { display: 'inline' })}\n              {...(actions && { mb: '6px' })}\n            >\n              {description}\n            </P>\n          )}\n\n          {actions && (\n            <Container display={inline ? 'inline-flex' : 'block'} mx=\"4px\">\n              <Flex justifyContent=\"center\" gridGap=\"8px\">\n                {Array.isArray(actions) ? actions.map(action => action) : actions}\n              </Flex>\n            </Container>\n          )}\n        </Container>\n      </Container>\n\n      {dismiss && (\n        <StyledLinkButton onClick={dismiss}>\n          <CloseIcon />\n        </StyledLinkButton>\n      )}\n    </NotificationBarContainer>\n  );\n};\n\nNotificationBar.propTypes = {\n  title: PropTypes.node,\n  description: PropTypes.node,\n  type: PropTypes.oneOf(['info', 'success', 'error', 'warning']),\n  inline: PropTypes.bool,\n  actions: PropTypes.oneOf([PropTypes.node, PropTypes.arrayOf(PropTypes.node)]),\n  dismiss: PropTypes.func,\n};\n\nexport default NotificationBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport { stripTime } from '../lib/date-utils';\nimport dayjs from '../lib/dayjs';\n\nimport { StyledSelectFilter } from './StyledSelectFilter';\n\nconst getPastDateInterval = timeUnit => {\n  const from = dayjs().subtract(1, timeUnit).startOf(timeUnit);\n  return { from, to: from.endOf(timeUnit) };\n};\n\n/**\n * Some presets for time filters\n */\nexport const PERIOD_FILTER_PRESETS = {\n  allTime: {\n    label: <FormattedMessage defaultMessage=\"All time\" />,\n    getInterval: () => ({ from: null, to: null }),\n  },\n  today: {\n    label: <FormattedMessage defaultMessage=\"Today\" />,\n    getInterval: () => ({ from: dayjs().startOf('day'), to: dayjs().endOf('day') }),\n  },\n  thisMonth: {\n    label: <FormattedMessage defaultMessage=\"This Month\" />,\n    getInterval: () => ({ from: dayjs().startOf('month'), to: dayjs().endOf('day') }),\n  },\n  thisYear: {\n    label: <FormattedMessage defaultMessage=\"This Year\" />,\n    getInterval: () => ({ from: dayjs().startOf('year'), to: dayjs().endOf('day') }),\n  },\n  pastWeek: {\n    label: <FormattedMessage defaultMessage=\"Past Week\" />,\n    getInterval: () => getPastDateInterval('week'),\n  },\n  pastMonth: {\n    label: <FormattedMessage defaultMessage=\"Past Month\" />,\n    getInterval: () => getPastDateInterval('month'),\n  },\n  pastYear: {\n    label: <FormattedMessage defaultMessage=\"Past Year\" />,\n    getInterval: () => getPastDateInterval('year'),\n  },\n};\n\nconst PERIOD_FILTER_SELECT_STYLES = {\n  dropdownIndicator: { paddingTop: 0, paddingBottom: 0 },\n  option: { fontSize: '12px' },\n};\n\nconst getSelectedPeriodOptionFromInterval = ({ from, to }) => {\n  const isSameDay = (dayjsDate, otherDate) => (!dayjsDate && !otherDate) || dayjsDate?.isSame(otherDate, 'day');\n  const preset = Object.keys(PERIOD_FILTER_PRESETS).find(preset => {\n    const presetDetails = PERIOD_FILTER_PRESETS[preset];\n    const presetInterval = presetDetails.getInterval();\n    return isSameDay(presetInterval.from, from) && isSameDay(presetInterval.to, to);\n  });\n\n  if (preset) {\n    return { label: PERIOD_FILTER_PRESETS[preset].label, value: preset };\n  } else {\n    return { label: 'Custom', value: 'custom' };\n  }\n};\n\nconst periodSelectThemeBuilder = theme => ({ ...theme, spacing: { ...theme.spacing, controlHeight: 28 } });\n\nconst PeriodFilterPresetsSelect = ({ onChange, interval, inputId, formatDateFn }) => {\n  const intl = useIntl();\n  const selectedOption = React.useMemo(() => getSelectedPeriodOptionFromInterval(interval), [interval]);\n  const options = React.useMemo(() => {\n    return Object.keys(PERIOD_FILTER_PRESETS).map(presetKey => ({\n      value: presetKey,\n      label: PERIOD_FILTER_PRESETS[presetKey].label,\n    }));\n  }, [intl]);\n\n  return (\n    <StyledSelectFilter\n      inputId={inputId}\n      value={selectedOption}\n      options={options}\n      selectTheme={periodSelectThemeBuilder}\n      styles={PERIOD_FILTER_SELECT_STYLES}\n      onChange={({ value }) => {\n        if (value === 'custom') {\n          return interval;\n        } else {\n          const newInterval = { ...PERIOD_FILTER_PRESETS[value].getInterval() };\n          onChange({ ...interval, from: formatDateFn(newInterval.from), to: formatDateFn(newInterval.to) });\n        }\n      }}\n    />\n  );\n};\n\nPeriodFilterPresetsSelect.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  inputId: PropTypes.string.isRequired,\n  interval: PropTypes.shape({\n    from: PropTypes.string,\n    to: PropTypes.string,\n  }).isRequired,\n  formatDateFn: PropTypes.func,\n};\n\nPeriodFilterPresetsSelect.defaultProps = {\n  formatDateFn: stripTime,\n};\n\nexport default PeriodFilterPresetsSelect;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from '@apollo/client';\nimport { graphql } from '@apollo/client/react/hoc';\nimport { get, pick } from 'lodash';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport { formatCurrency } from '../lib/currency-utils';\nimport { API_V2_CONTEXT, gqlV1 } from '../lib/graphql/helpers';\nimport { compose } from '../lib/utils';\n\nimport { Flex } from './Grid';\nimport StyledButton from './StyledButton';\nimport { TOAST_TYPE, withToasts } from './ToastProvider';\n\nclass SendMoneyToCollectiveBtn extends React.Component {\n  static propTypes = {\n    amount: PropTypes.number.isRequired,\n    currency: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    fromCollective: PropTypes.object.isRequired,\n    toCollective: PropTypes.object.isRequired,\n    LoggedInUser: PropTypes.object.isRequired,\n    intl: PropTypes.object.isRequired,\n    data: PropTypes.object,\n    sendMoneyToCollective: PropTypes.func,\n    confirmTransfer: PropTypes.func,\n    isTransferApproved: PropTypes.bool,\n    customButton: PropTypes.function,\n    addToast: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n    this.state = {};\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isTransferApproved !== prevProps.isTransferApproved) {\n      this.onClick();\n    }\n  }\n\n  async onClick() {\n    const { currency, amount, fromCollective, toCollective, description, data, LoggedInUser } = this.props;\n    if (!LoggedInUser || !LoggedInUser.isAdminOfCollectiveOrHost(fromCollective) || !get(data, 'account')) {\n      return;\n    }\n    const paymentMethods = get(data, 'account.paymentMethods');\n    if (!paymentMethods || paymentMethods.length === 0) {\n      this.props.addToast({\n        type: TOAST_TYPE.ERROR,\n        message: <FormattedMessage defaultMessage=\"We couldn't find a payment method to make this transaction\" />,\n      });\n      return;\n    }\n    this.setState({ loading: true });\n    const order = {\n      amount: { valueInCents: amount, currency },\n      toAccount: pick(toCollective, ['slug']),\n      fromAccount: pick(fromCollective, ['slug']),\n      description,\n      paymentMethod: { id: paymentMethods[0].id },\n      frequency: 'ONETIME',\n      isBalanceTransfer: true,\n    };\n    try {\n      await this.props.sendMoneyToCollective({\n        variables: { order },\n        // We need to update the store manually because the response comes from API V2\n        update: (store, { data: { createOrder } }) => {\n          const balance = createOrder.order.fromAccount.stats.balance.valueInCents;\n          store.writeFragment({\n            fragment: collectiveBalanceFragment,\n            id: `CollectiveStatsType:${fromCollective.id}`,\n            data: { id: fromCollective.id, balance },\n          });\n        },\n      });\n      this.props.addToast({\n        type: TOAST_TYPE.SUCCESS,\n        message: (\n          <FormattedMessage\n            defaultMessage=\"Balance sent to {toCollectiveName}\"\n            values={{ toCollectiveName: toCollective.name }}\n          />\n        ),\n      });\n      this.setState({ loading: false });\n    } catch (e) {\n      this.setState({ loading: false });\n      this.props.addToast({\n        type: TOAST_TYPE.ERROR,\n        message: e.message,\n      });\n    }\n  }\n\n  render() {\n    const { amount, currency, toCollective, intl, customButton } = this.props;\n    const { locale } = intl;\n    return (\n      <div className=\"SendMoneyToCollectiveBtn\">\n        <Flex justifyContent=\"center\" mb={1}>\n          {customButton ? (\n            customButton({\n              onClick: this.props.confirmTransfer || this.onClick,\n              children: (\n                <Fragment>\n                  {this.state.loading && <FormattedMessage id=\"form.processing\" defaultMessage=\"processing\" />}\n                  {!this.state.loading && (\n                    <FormattedMessage\n                      id=\"SendMoneyToCollective.btn\"\n                      defaultMessage=\"Send {amount} to {collective}\"\n                      values={{\n                        amount: formatCurrency(amount, currency, locale),\n                        collective: toCollective.name,\n                      }}\n                    />\n                  )}\n                </Fragment>\n              ),\n            })\n          ) : (\n            <StyledButton onClick={this.props.confirmTransfer || this.onClick}>\n              {this.state.loading && <FormattedMessage id=\"form.processing\" defaultMessage=\"processing\" />}\n              {!this.state.loading && (\n                <FormattedMessage\n                  id=\"SendMoneyToCollective.btn\"\n                  defaultMessage=\"Send {amount} to {collective}\"\n                  values={{\n                    amount: formatCurrency(amount, currency, locale),\n                    collective: toCollective.name,\n                  }}\n                />\n              )}\n            </StyledButton>\n          )}\n        </Flex>\n      </div>\n    );\n  }\n}\n\nconst paymentMethodsQuery = gql`\n  query SendMoneyToCollectivePaymentMethods($slug: String) {\n    account(slug: $slug) {\n      id\n      paymentMethods(service: OPENCOLLECTIVE, type: COLLECTIVE) {\n        id\n        service\n        name\n      }\n    }\n  }\n`;\n\nconst addPaymentMethodsData = graphql(paymentMethodsQuery, {\n  options: props => ({\n    context: API_V2_CONTEXT,\n    variables: {\n      slug: get(props, 'fromCollective.slug'),\n    },\n  }),\n  skip: props => {\n    return !props.LoggedInUser;\n  },\n});\n\nconst collectiveBalanceFragment = gqlV1/* GraphQL */ `\n  fragment StatFieldsFragment on CollectiveStatsType {\n    id\n    balance\n  }\n`;\n\nconst sendMoneyToCollectiveMutation = gql`\n  mutation SendMoneyToCollective($order: OrderCreateInput!) {\n    createOrder(order: $order) {\n      order {\n        id\n        fromAccount {\n          id\n          stats {\n            id\n            balance {\n              valueInCents\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst addSendMoneyToCollectiveMutation = graphql(sendMoneyToCollectiveMutation, {\n  name: 'sendMoneyToCollective',\n  options: { context: API_V2_CONTEXT },\n});\n\nconst addGraphql = compose(addPaymentMethodsData, addSendMoneyToCollectiveMutation);\n\nexport default addGraphql(withToasts(injectIntl(SendMoneyToCollectiveBtn)));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { clamp } from 'lodash';\nimport styled from 'styled-components';\nimport { border, color, layout } from 'styled-system';\n\nconst BackgroundBar = styled.div`\n  position: relative;\n\n  ${layout}\n  ${color}\n  ${border}\n`;\n\nconst ProgressBar = styled.div`\n  position: absolute;\n\n  ${layout}\n  ${color}\n  ${border}\n`;\n\n/**\n * A progress bar that displays the current advancement.\n */\nconst StyledProgressBar = ({ percentage, color, backgroundColor, height, borderRadius }) => {\n  return (\n    <BackgroundBar bg={backgroundColor} height={height} borderRadius={borderRadius}>\n      <ProgressBar width={`${clamp(percentage, 0, 1) * 100}%`} bg={color} height={height} borderRadius={borderRadius} />\n    </BackgroundBar>\n  );\n};\n\nStyledProgressBar.propTypes = {\n  /** Current progress, between 0 and 1 */\n  percentage: PropTypes.number.isRequired,\n  /** Color of the unfilled bar */\n  backgroundColor: PropTypes.string,\n  /** Color of the filled bar */\n  color: PropTypes.string,\n  /** Height */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** Border-radius */\n  borderRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nStyledProgressBar.defaultProps = {\n  height: 4,\n  backgroundColor: 'rgba(9, 10, 10, 0.04)',\n  color: 'green.500',\n  borderRadius: 16,\n};\n\nexport default StyledProgressBar;\n","import PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { display } from 'styled-system';\n\nimport { CustomScrollbarCSS } from '../../lib/styled-components-shared-styles';\n\nimport { Dimensions } from './_constants';\n\n/** An horizontally scrollable container to display contribute cards cards */\nconst ContributeCardsContainer = styled.div`\n  ${display}\n  padding: 16px 0;\n  overflow-x: auto;\n  position: relative;\n\n  ${props =>\n    props.disableScroll &&\n    css`\n      overflow-x: hidden;\n    `}\n\n  ${props =>\n    !props.disableScrollSnapping &&\n    css`\n      scroll-behavior: smooth;\n      /* smartphones, touchscreens */\n      @media (hover: none) {\n        scroll-snap-type: x mandatory;\n      }\n    `}\n\n  ${CustomScrollbarCSS}\n\n  /** Hide scrollbar when not hovered */\n  &:not(:hover) {\n    &::-webkit-scrollbar-thumb {\n      background: transparent;\n    }\n\n    &::-webkit-scrollbar-track {\n      background: transparent;\n    }\n  }\n\n  /** Respect left margin / center cards on widescreens */\n  @supports (width: fit-content) {\n    @media (min-width: ${Dimensions.MAX_SECTION_WIDTH}px) {\n      margin: 0 auto;\n      min-width: ${Dimensions.MAX_SECTION_WIDTH}px;\n      width: fit-content;\n      max-width: 100%;\n    }\n  }\n  @supports not (width: fit-content) {\n    @media (min-width: ${Dimensions.MAX_SECTION_WIDTH}px) {\n      padding-left: calc((100% - ${Dimensions.MAX_SECTION_WIDTH + 10}px) / 2);\n    }\n  }\n`;\n\nContributeCardsContainer.defaultProps = {\n  display: 'flex',\n};\n\nContributeCardsContainer.propTypes = {\n  disableScrollSnapping: PropTypes.bool,\n};\n\n/** @component */\nexport default ContributeCardsContainer;\n","import { gql } from '@apollo/client';\n\nimport { gqlV1 } from '../../../lib/graphql/helpers';\n\nexport const editCollectiveSettingsMutation = gqlV1/* GraphQL */ `\n  mutation EditCollectiveSettings($id: Int!, $settings: JSON) {\n    editCollective(collective: { id: $id, settings: $settings }) {\n      id\n      settings\n    }\n  }\n`;\n\nexport const editAccountSettingMutation = gql`\n  mutation EditAccountSetting($collectiveId: Int!, $key: AccountSettingsKey!, $value: JSON!) {\n    editAccountSetting(account: { legacyId: $collectiveId }, key: $key, value: $value) {\n      id\n      settings\n    }\n  }\n`;\n\n/** A mutation used by child components to update the collective */\nexport const editCollectiveLongDescriptionMutation = gqlV1/* GraphQL */ `\n  mutation EditCollectiveLongDescription($id: Int!, $longDescription: String) {\n    editCollective(collective: { id: $id, longDescription: $longDescription }) {\n      id\n      longDescription\n    }\n  }\n`;\n\nexport const editCollectiveAvatarMutation = gqlV1/* GraphQL */ `\n  mutation EditCollectiveAvatar($id: Int!, $image: String) {\n    editCollective(collective: { id: $id, image: $image }) {\n      id\n      image\n      imageUrl(height: 256)\n    }\n  }\n`;\n\nexport const editCollectiveBackgroundMutation = gqlV1/* GraphQL */ `\n  mutation EditCollectiveBackground($id: Int!, $settings: JSON, $backgroundImage: String) {\n    editCollective(collective: { id: $id, settings: $settings, backgroundImage: $backgroundImage }) {\n      id\n      settings\n      backgroundImage\n      backgroundImageUrl\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport styled, { css } from 'styled-components';\n\nimport { ContributionTypes } from '../../lib/constants/contribution-types';\n\nimport { ContributorAvatar } from '../Avatar';\nimport Container from '../Container';\nimport { Box, Flex } from '../Grid';\nimport Link from '../Link';\nimport StyledButton from '../StyledButton';\nimport StyledHr from '../StyledHr';\nimport StyledTag from '../StyledTag';\nimport { P } from '../Text';\n\nimport {\n  CONTRIBUTE_CARD_BORDER_RADIUS,\n  CONTRIBUTE_CARD_WIDTH,\n  MAX_CONTRIBUTORS_PER_CONTRIBUTE_CARD,\n} from './constants';\n\n/** The main container */\nconst StyledContributeCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: ${CONTRIBUTE_CARD_WIDTH}px;\n  flex: 0 0 ${CONTRIBUTE_CARD_WIDTH}px;\n  height: 100%;\n  border-radius: ${CONTRIBUTE_CARD_BORDER_RADIUS}px;\n  border: 1px solid #dcdee0;\n  background: white;\n  transition: border-color 0.2s, box-shadow 0.2s, opacity 0.2s; // Opacity for DragNDrop\n\n  &:hover {\n    /* Primitives / OC Blue */\n    border: 1px solid ${props => props.theme.colors.primary[600]};\n\n    /* Drop Shadow / Z 300 */\n    box-shadow: 0px 8px 12px rgba(20, 20, 20, 0.16);\n  }\n`;\n\n/** Tier card banner */\nconst CoverImage = styled.div`\n  height: 104px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 16px;\n  position: relative;\n  border-radius: 16px 16px 0 0;\n\n  ${props => {\n    const primary = props.theme.colors.primary;\n    const radial = `radial-gradient(circle, ${primary[300]} 0%, ${primary[800]} 100%), `;\n    const image = props.image ? `url(${props.image}), ` : '';\n    const applyGrayscale = (isDisabled, contributionType) => {\n      if (isDisabled) {\n        return 'filter: grayscale(0.75);';\n      } else if (contributionType === ContributionTypes.EVENT_PASSED) {\n        return 'filter: grayscale(0.50);';\n      }\n    };\n\n    return css`\n      background: ${image} ${radial} ${primary[500]};\n      ${applyGrayscale(props.isDisabled, props.contributionType)}\n    `;\n  }};\n`;\n\n/** Tier's description */\nconst Description = styled.div`\n  overflow-wrap: break-word;\n  margin: 8px 0;\n  font-size: 14px;\n  letter-spacing: -0.2px;\n  line-height: 20px;\n  height: 100%;\n  flex: 1 1;\n\n  /* Neutral Tints / 700 */\n  color: #4e5052;\n`;\n\n/** Translations */\nconst I18nContributionType = defineMessages({\n  [ContributionTypes.FINANCIAL_CUSTOM]: {\n    id: 'ContributionType.Custom',\n    defaultMessage: 'Custom contribution',\n  },\n  [ContributionTypes.FINANCIAL_CRYPTO]: {\n    id: 'ContributionType.Crypto',\n    defaultMessage: 'Crypto contribution',\n  },\n  [ContributionTypes.FINANCIAL_ONE_TIME]: {\n    id: 'ContributionType.OneTime',\n    defaultMessage: 'One-time contribution',\n  },\n  [ContributionTypes.FINANCIAL_RECURRING]: {\n    id: 'ContributionType.Recurring',\n    defaultMessage: 'Recurring contribution',\n  },\n  [ContributionTypes.FINANCIAL_GOAL]: {\n    id: 'ContributionType.Goal',\n    defaultMessage: 'Goal',\n  },\n  [ContributionTypes.EVENT_PARTICIPATE]: {\n    id: 'ContributionType.Event',\n    defaultMessage: 'Event',\n  },\n  [ContributionTypes.EVENT_PASSED]: {\n    id: 'ContributionType.EventPassed',\n    defaultMessage: 'Past event',\n  },\n  [ContributionTypes.TIER_PASSED]: {\n    id: 'ContributionType.TierPassed',\n    defaultMessage: 'Past tier',\n  },\n  [ContributionTypes.PRODUCT]: {\n    id: 'ContributionType.Product',\n    defaultMessage: 'Product',\n  },\n  [ContributionTypes.TICKET]: {\n    id: 'ContributionType.Ticket',\n    defaultMessage: 'Ticket',\n  },\n  [ContributionTypes.MEMBERSHIP]: {\n    id: 'ContributionType.Membership',\n    defaultMessage: 'Membership',\n  },\n  [ContributionTypes.CHILD_COLLECTIVE]: {\n    id: 'ContributionType.ChildCollective',\n    defaultMessage: 'Connected Collective',\n  },\n  [ContributionTypes.PROJECT]: {\n    id: 'ContributionType.Project',\n    defaultMessage: 'Project',\n  },\n  [ContributionTypes.ARCHIVED_PROJECT]: {\n    id: 'ContributionType.ArchivedProject',\n    defaultMessage: 'Archived Project',\n  },\n});\n\nconst getContributeCTA = type => {\n  switch (type) {\n    case ContributionTypes.TICKET:\n      return <FormattedMessage id=\"ContributeCard.BtnEvent\" defaultMessage=\"RSVP\" />;\n    case ContributionTypes.EVENT_PARTICIPATE:\n    case ContributionTypes.EVENT_PASSED:\n      return <FormattedMessage id=\"ContributeCard.BtnViewEvent\" defaultMessage=\"View Event\" />;\n    case ContributionTypes.CHILD_COLLECTIVE:\n      return <FormattedMessage id=\"ContributeCard.SeeCollective\" defaultMessage=\"View Collective\" />;\n    case ContributionTypes.PROJECT:\n      return <FormattedMessage id=\"ContributeCard.SeeMore\" defaultMessage=\"See More\" />;\n    default:\n      return <FormattedMessage id=\"Contribute\" defaultMessage=\"Contribute\" />;\n  }\n};\n\nconst getFooterHeading = type => {\n  switch (type) {\n    case ContributionTypes.TICKET:\n    case ContributionTypes.EVENT_PARTICIPATE:\n      return <FormattedMessage id=\"ContributeCard.footer.ticket\" defaultMessage=\"Attending\" />;\n    case ContributionTypes.EVENT_PASSED:\n      return <FormattedMessage id=\"ContributeCard.footer.pastEvent\" defaultMessage=\"Attended by\" />;\n    default:\n      return <FormattedMessage id=\"ContributeCard.latestActivity\" defaultMessage=\"Latest activity by\" />;\n  }\n};\n\nconst getCTAButtonStyle = type => {\n  if (type === ContributionTypes.TICKET) {\n    return 'secondary';\n  } else if (type === ContributionTypes.EVENT_PASSED) {\n    return 'standard';\n  } else {\n    return 'primary';\n  }\n};\n\n/**\n * A contribute card with a \"Contribute\" call to action\n */\nconst ContributeCard = ({\n  intl,\n  title,\n  type,\n  route,\n  buttonText,\n  children,\n  contributors,\n  stats,\n  hideContributors,\n  image,\n  disableCTA,\n  hideCTA,\n  onClickEdit,\n  tier,\n  isPreview,\n  ...props\n}) => {\n  const totalContributors = (stats && stats.all) || (contributors && contributors.length) || 0;\n\n  if (isPreview) {\n    route = '#';\n  }\n\n  return (\n    <StyledContributeCard {...props}>\n      <CoverImage image={image} isDisabled={disableCTA} contributionType={type}>\n        <StyledTag\n          position=\"absolute\"\n          bottom=\"8px\"\n          left=\"16px\"\n          background=\"white\"\n          color=\"black.700\"\n          fontWeight=\"700\"\n          letterSpacing=\"0.06em\"\n          textTransform=\"uppercase\"\n          fontSize=\"12px\"\n        >\n          {intl.formatMessage(I18nContributionType[type])}\n        </StyledTag>\n      </CoverImage>\n      <Flex px={3} py={3} flexDirection=\"column\" justifyContent=\"space-between\" flex=\"1\">\n        <Flex flexDirection=\"column\" flex=\"1 1\">\n          <Container fontSize=\"20px\" mt={1} mb={2} fontWeight=\"bold\" data-cy=\"contribute-title\" color=\"black.900\">\n            {title}\n          </Container>\n          <Description data-cy=\"contribute-description\">{children}</Description>\n        </Flex>\n        <Box>\n          {!disableCTA && !hideCTA && (\n            <Link href={route}>\n              <StyledButton buttonStyle={getCTAButtonStyle(type)} width={1} mb={2} mt={3} data-cy=\"contribute-btn\">\n                {buttonText || getContributeCTA(type)}\n              </StyledButton>\n            </Link>\n          )}\n          {!hideContributors && (\n            <Box mt={3} height={60}>\n              {contributors && contributors.length > 0 && (\n                <React.Fragment>\n                  <Flex alignItems=\"center\" mt={3} mb={2}>\n                    <P\n                      color=\"black.700\"\n                      fontSize=\"12px\"\n                      lineHeight=\"16px\"\n                      fontWeight=\"500\"\n                      letterSpacing=\"0.06em\"\n                      pr={2}\n                      textTransform=\"uppercase\"\n                      whiteSpace=\"nowrap\"\n                    >\n                      {getFooterHeading(type)}\n                    </P>\n                    <StyledHr flex=\"1\" borderStyle=\"solid\" borderColor=\"#DCDEE0\" />\n                  </Flex>\n                  <Flex>\n                    {contributors.slice(0, MAX_CONTRIBUTORS_PER_CONTRIBUTE_CARD).map(contributor => (\n                      <Box key={contributor.id} mx={1}>\n                        {contributor.collectiveSlug ? (\n                          <Link href={`/${contributor.collectiveSlug}`} title={contributor.name}>\n                            <ContributorAvatar contributor={contributor} radius={32} />\n                          </Link>\n                        ) : (\n                          <ContributorAvatar contributor={contributor} radius={32} title={contributor.name} />\n                        )}\n                      </Box>\n                    ))}\n                    {totalContributors > MAX_CONTRIBUTORS_PER_CONTRIBUTE_CARD && (\n                      <Container ml={2} pt=\"0.7em\" fontSize=\"11px\" fontWeight=\"bold\" color=\"black.600\">\n                        + {totalContributors - MAX_CONTRIBUTORS_PER_CONTRIBUTE_CARD}\n                      </Container>\n                    )}\n                  </Flex>\n                </React.Fragment>\n              )}\n            </Box>\n          )}\n          {onClickEdit && (\n            <Box>\n              <StyledButton buttonStyle=\"secondary\" width={1} mb={2} mt={3} data-cy=\"edit-btn\" onClick={onClickEdit}>\n                <FormattedMessage\n                  defaultMessage=\"Edit {type, select, TICKET {Ticket} other {Tier}}\"\n                  values={{ type: tier.type }}\n                />\n              </StyledButton>\n            </Box>\n          )}\n        </Box>\n      </Flex>\n    </StyledContributeCard>\n  );\n};\n\nContributeCard.propTypes = {\n  /** Contribution title */\n  title: PropTypes.node.isRequired,\n  /** Type of the contribution */\n  type: PropTypes.oneOf(Object.values(ContributionTypes)).isRequired,\n  /** Route for the contribute button */\n  route: PropTypes.string.isRequired,\n  /** A custom button text to override the default one */\n  buttonText: PropTypes.string,\n  /** An image to display on the card hero */\n  image: PropTypes.string,\n  /** The card body */\n  children: PropTypes.node,\n  /** If true, the call to action will not be displayed */\n  disableCTA: PropTypes.bool,\n  hideCTA: PropTypes.bool,\n  /** Contributors */\n  contributors: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string,\n      collectiveSlug: PropTypes.string,\n    }),\n  ),\n  /** Contributors stats */\n  stats: PropTypes.shape({\n    all: PropTypes.number,\n    users: PropTypes.number,\n    organizations: PropTypes.number,\n  }),\n  /** If true, contributors will not be displayed */\n  hideContributors: PropTypes.bool,\n  /** @ignore from injectIntl */\n  intl: PropTypes.object.isRequired,\n  router: PropTypes.object,\n  tier: PropTypes.object,\n  collective: PropTypes.object,\n  isPreview: PropTypes.bool,\n  onClickEdit: PropTypes.func,\n};\n\nexport default injectIntl(ContributeCard);\n","import { css } from '@styled-system/css';\nimport styled from 'styled-components';\n\nimport { Box } from '../Grid';\n\nexport const CONTRIBUTE_CARD_PADDING_X = [15, 18];\n\nconst ContributeCardContainer = styled(Box).attrs({ px: CONTRIBUTE_CARD_PADDING_X })(\n  css({\n    scrollSnapAlign: ['center', null, 'start'],\n  }),\n);\n\nexport default ContributeCardContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { ContributionTypes } from '../../lib/constants/contribution-types';\nimport { getCollectivePageRoute } from '../../lib/url-helpers';\n\nimport Contribute from './Contribute';\n\nconst messages = defineMessages({\n  title: {\n    id: 'CollectivePage.Contribute.Crypto.title',\n    defaultMessage: 'Crypto Contribution',\n  },\n  description: {\n    id: 'CollectivePage.Contribute.Crypto.Description',\n    defaultMessage: 'Make a crypto contribution.',\n  },\n});\n\nconst ContributeCrypto = ({ intl, collective, contributors, stats, ...props }) => {\n  return (\n    <Contribute\n      route={`${getCollectivePageRoute(collective)}/donate/crypto`}\n      type={ContributionTypes.FINANCIAL_CRYPTO}\n      title={intl.formatMessage(messages.title)}\n      contributors={contributors}\n      stats={stats}\n      {...props}\n    >\n      {intl.formatMessage(messages.description)}\n    </Contribute>\n  );\n};\n\nContributeCrypto.propTypes = {\n  intl: PropTypes.object,\n  stats: PropTypes.object,\n  contributors: PropTypes.arrayOf(PropTypes.object),\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default injectIntl(ContributeCrypto);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { ContributionTypes } from '../../lib/constants/contribution-types';\nimport { getCollectivePageRoute } from '../../lib/url-helpers';\n\nimport Contribute from './Contribute';\n\nconst messages = defineMessages({\n  title: {\n    id: 'Donation',\n    defaultMessage: 'Donation',\n  },\n  description: {\n    id: 'CollectivePage.Contribute.Custom.Description',\n    defaultMessage: 'Make a custom one-time or recurring contribution.',\n  },\n});\n\nconst ContributeCustom = ({ intl, collective, contributors, stats, ...props }) => {\n  return (\n    <Contribute\n      route={`${getCollectivePageRoute(collective)}/donate`}\n      type={ContributionTypes.FINANCIAL_CUSTOM}\n      title={intl.formatMessage(messages.title)}\n      contributors={contributors}\n      stats={stats}\n      {...props}\n    >\n      {intl.formatMessage(messages.description)}\n    </Contribute>\n  );\n};\n\nContributeCustom.propTypes = {\n  intl: PropTypes.object,\n  stats: PropTypes.object,\n  contributors: PropTypes.arrayOf(PropTypes.object),\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default injectIntl(ContributeCustom);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { truncate } from 'lodash';\nimport { FormattedMessage } from 'react-intl';\n\nimport StyledLink from './StyledLink';\n\nconst CollapsableText = ({ text, maxLength }) => {\n  const [isCollapsed, setCollapsed] = React.useState(true);\n  if (!text) {\n    return null;\n  } else if (text.length <= maxLength) {\n    return <span>{text}</span>;\n  } else if (isCollapsed) {\n    return (\n      <span>\n        {truncate(text, { length: maxLength })}{' '}\n        <StyledLink\n          href=\"#\"\n          onClick={e => {\n            e.preventDefault();\n            e.stopPropagation();\n            setCollapsed(false);\n          }}\n        >\n          <FormattedMessage id=\"ContributeCard.ReadMore\" defaultMessage=\"Read more\" />\n        </StyledLink>\n      </span>\n    );\n  } else {\n    return (\n      <span>\n        {text}{' '}\n        <StyledLink\n          href=\"#\"\n          onClick={e => {\n            e.preventDefault();\n            e.stopPropagation();\n            setCollapsed(true);\n          }}\n        >\n          <FormattedMessage id=\"Hide\" defaultMessage=\"Hide\" />\n        </StyledLink>\n      </span>\n    );\n  }\n};\n\nCollapsableText.propTypes = {\n  maxLength: PropTypes.number.isRequired,\n  text: PropTypes.string,\n};\n\nexport default CollapsableText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { truncate } from 'lodash';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport { ContributionTypes } from '../../lib/constants/contribution-types';\nimport INTERVALS from '../../lib/constants/intervals';\nimport { TierTypes } from '../../lib/constants/tiers-types';\nimport { formatCurrency, getPrecisionFromAmount, graphqlAmountValueInCents } from '../../lib/currency-utils';\nimport { isPastEvent } from '../../lib/events';\nimport useLoggedInUser from '../../lib/hooks/useLoggedInUser';\nimport { isTierExpired } from '../../lib/tier-utils';\nimport { getCollectivePageRoute } from '../../lib/url-helpers';\nimport { capitalize } from '../../lib/utils';\n\nimport CollapsableText from '../CollapsableText';\nimport FormattedMoneyAmount from '../FormattedMoneyAmount';\nimport { Box, Flex } from '../Grid';\nimport Link from '../Link';\nimport StyledLink from '../StyledLink';\nimport StyledProgressBar from '../StyledProgressBar';\nimport StyledTooltip from '../StyledTooltip';\nimport { P, Span } from '../Text';\n\nimport Contribute from './Contribute';\n\nconst messages = defineMessages({\n  fallbackDescription: {\n    id: 'TierCard.DefaultDescription',\n    defaultMessage:\n      '{tierName, select, backer {Become a backer} sponsor {Become a sponsor} other {Join us}}{minAmount, select, 0 {} other { for {minAmountWithCurrency} {interval, select, month {per month} year {per year} other {}}}} and support us',\n  },\n});\n\nconst getContributionTypeFromTier = (tier, isPassed) => {\n  if (isPassed) {\n    return ContributionTypes.TIER_PASSED;\n  } else if (graphqlAmountValueInCents(tier.goal) > 0) {\n    return ContributionTypes.FINANCIAL_GOAL;\n  } else if (tier.type === TierTypes.PRODUCT) {\n    return ContributionTypes.PRODUCT;\n  } else if (tier.type === TierTypes.TICKET) {\n    return ContributionTypes.TICKET;\n  } else if (tier.type === TierTypes.MEMBERSHIP) {\n    return ContributionTypes.MEMBERSHIP;\n  } else if (tier.interval) {\n    if (tier.interval === INTERVALS.flexible) {\n      return ContributionTypes.FINANCIAL_CUSTOM;\n    } else {\n      return ContributionTypes.FINANCIAL_RECURRING;\n    }\n  } else {\n    return ContributionTypes.FINANCIAL_ONE_TIME;\n  }\n};\n\nconst TierTitle = ({ collective, tier }) => {\n  const name = capitalize(tier.name);\n  if (!tier.useStandalonePage) {\n    return name;\n  } else {\n    return (\n      <StyledTooltip\n        content={() => <FormattedMessage id=\"ContributeTier.GoToPage\" defaultMessage=\"Go to full details page\" />}\n      >\n        <StyledLink\n          as={Link}\n          href={`${getCollectivePageRoute(collective)}/contribute/${tier.slug}-${tier.legacyId || tier.id}`}\n          color=\"black.900\"\n          hoverColor=\"black.900\"\n          underlineOnHover\n        >\n          {name}\n        </StyledLink>\n      </StyledTooltip>\n    );\n  }\n};\n\nTierTitle.propTypes = {\n  collective: PropTypes.shape({\n    slug: PropTypes.string,\n  }),\n  tier: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    legacyId: PropTypes.number,\n    slug: PropTypes.string,\n    name: PropTypes.string,\n    useStandalonePage: PropTypes.bool,\n  }),\n};\n\nconst canContribute = (collective, LoggedInUser) => {\n  if (!collective.isActive) {\n    return false;\n  } else if (collective.type === 'EVENT') {\n    return !isPastEvent(collective) || Boolean(LoggedInUser.isAdminOfCollectiveOrHost(collective));\n  } else {\n    return true;\n  }\n};\n\nconst ContributeTier = ({ intl, collective, tier, isPreview, ...props }) => {\n  const { LoggedInUser } = useLoggedInUser();\n  const { stats } = tier;\n  const currency = tier.currency || collective.currency;\n  const isFlexibleAmount = tier.amountType === 'FLEXIBLE';\n  const isFlexibleInterval = tier.interval === INTERVALS.flexible;\n  const minAmount = isFlexibleAmount ? tier.minimumAmount : tier.amount;\n  const amountRaised = stats?.[tier.interval && !isFlexibleInterval ? 'totalRecurringDonations' : 'totalDonated'] || 0;\n  const tierIsExpired = isTierExpired(tier);\n  const tierType = getContributionTypeFromTier(tier, tierIsExpired);\n  const hasNoneLeft = stats?.availableQuantity === 0;\n  const canContributeToCollective = canContribute(collective, LoggedInUser);\n  const isDisabled = !canContributeToCollective || tierIsExpired || hasNoneLeft;\n  const tierLegacyId = tier.legacyId || tier.id;\n\n  let description = tier.description;\n  if (!tier.description) {\n    description = intl.formatMessage(messages.fallbackDescription, {\n      minAmount: minAmount || 0,\n      tierName: tier.name,\n      minAmountWithCurrency: minAmount && formatCurrency(minAmount, currency, { locale: intl.locale }),\n      interval: tier.interval ?? '',\n    });\n  }\n\n  return (\n    <Contribute\n      route={`${getCollectivePageRoute(collective)}/contribute/${tier.slug}-${tierLegacyId}/checkout`}\n      title={<TierTitle collective={collective} tier={tier} />}\n      type={tierType}\n      buttonText={tier.button}\n      contributors={tier.contributors}\n      stats={stats?.contributors}\n      data-cy=\"contribute-card-tier\"\n      isPreview={isPreview}\n      disableCTA={!isPreview && isDisabled}\n      tier={tier}\n      collective={collective}\n      {...props}\n    >\n      <Flex flexDirection=\"column\" justifyContent=\"space-between\" height=\"100%\">\n        <Box>\n          {tier.maxQuantity > 0 && (\n            <P fontSize=\"1.1rem\" color=\"#e69900\" textTransform=\"uppercase\" fontWeight=\"500\" letterSpacing=\"1px\" mb={2}>\n              <FormattedMessage\n                id=\"tier.limited\"\n                values={{\n                  maxQuantity: tier.maxQuantity,\n                  availableQuantity: (stats?.availableQuantity ?? tier.availableQuantity) || 0,\n                }}\n                defaultMessage=\"LIMITED: {availableQuantity} LEFT OUT OF {maxQuantity}\"\n              />\n            </P>\n          )}\n          <P mb={2} lineHeight=\"22px\">\n            {tier.useStandalonePage ? (\n              <React.Fragment>\n                {truncate(description, { length: 150 })}{' '}\n                <StyledLink\n                  as={Link}\n                  whiteSpace=\"nowrap\"\n                  href={\n                    isPreview ? '#' : `${getCollectivePageRoute(collective)}/contribute/${tier.slug}-${tierLegacyId}`\n                  }\n                >\n                  <FormattedMessage id=\"ContributeCard.ReadMore\" defaultMessage=\"Read more\" />\n                </StyledLink>\n              </React.Fragment>\n            ) : (\n              <CollapsableText text={description} maxLength={150} />\n            )}\n          </P>\n          {tierType === ContributionTypes.FINANCIAL_GOAL && (\n            <Box mb={1} mt={3}>\n              <P fontSize=\"12px\" color=\"black.600\" fontWeight=\"400\">\n                <FormattedMessage\n                  id=\"Tier.AmountRaised\"\n                  defaultMessage=\"{amount} of {goalWithInterval} raised\"\n                  values={{\n                    amount: (\n                      <FormattedMoneyAmount\n                        amountStyles={{ fontWeight: '700', color: 'black.700' }}\n                        amount={graphqlAmountValueInCents(amountRaised)}\n                        currency={currency}\n                        precision={getPrecisionFromAmount(graphqlAmountValueInCents(amountRaised))}\n                      />\n                    ),\n                    goalWithInterval: (\n                      <FormattedMoneyAmount\n                        amountStyles={{ fontWeight: '700', color: 'black.700' }}\n                        amount={graphqlAmountValueInCents(tier.goal)}\n                        currency={currency}\n                        interval={tier.interval !== INTERVALS.flexible ? tier.interval : null}\n                        precision={getPrecisionFromAmount(graphqlAmountValueInCents(tier.goal))}\n                      />\n                    ),\n                  }}\n                />\n                {` (${Math.round((amountRaised / graphqlAmountValueInCents(tier.goal)) * 100)}%)`}\n              </P>\n              <Box mt={1}>\n                <StyledProgressBar percentage={amountRaised / graphqlAmountValueInCents(tier.goal)} />\n              </Box>\n            </Box>\n          )}\n        </Box>\n        {!isDisabled && graphqlAmountValueInCents(minAmount) > 0 && (\n          <P mt={3} color=\"black.700\">\n            {isFlexibleAmount && (\n              <Span display=\"block\" fontSize=\"10px\" textTransform=\"uppercase\">\n                <FormattedMessage id=\"ContributeTier.StartsAt\" defaultMessage=\"Starts at\" />\n              </Span>\n            )}\n            <Span display=\"block\" data-cy=\"amount\">\n              <FormattedMoneyAmount\n                amount={graphqlAmountValueInCents(minAmount)}\n                interval={tier.interval && tier.interval !== INTERVALS.flexible ? tier.interval : null}\n                currency={currency}\n                amountStyles={{ fontSize: '24px', lineHeight: '32px', fontWeight: 'bold', color: 'black.900' }}\n                precision={getPrecisionFromAmount(graphqlAmountValueInCents(minAmount))}\n              />\n            </Span>\n          </P>\n        )}\n      </Flex>\n    </Contribute>\n  );\n};\n\nContributeTier.propTypes = {\n  collective: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n    isActive: PropTypes.bool,\n    parentCollective: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }),\n  }),\n  tier: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    legacyId: PropTypes.number,\n    slug: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    currency: PropTypes.string,\n    useStandalonePage: PropTypes.bool,\n    interval: PropTypes.string,\n    amountType: PropTypes.string,\n    endsAt: PropTypes.string,\n    button: PropTypes.string,\n    goal: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n    minimumAmount: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n    amount: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n    maxQuantity: PropTypes.number,\n    availableQuantity: PropTypes.number,\n    stats: PropTypes.shape({\n      totalRecurringDonations: PropTypes.number,\n      totalDonated: PropTypes.number,\n      contributors: PropTypes.object,\n      availableQuantity: PropTypes.number,\n    }),\n    contributors: PropTypes.arrayOf(PropTypes.object),\n  }),\n  /** @ignore */\n  intl: PropTypes.object.isRequired,\n  isPreview: PropTypes.bool,\n};\n\nexport default injectIntl(ContributeTier);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Flex } from '../Grid';\nimport Link from '../Link';\nimport StyledRoundButton from '../StyledRoundButton';\nimport { P } from '../Text';\n\nimport { CONTRIBUTE_CARD_BORDER_RADIUS, CONTRIBUTE_CARD_WIDTH } from './constants';\n\nconst CreateNewCard = styled(Link)`\n  display: block;\n  background: white;\n  height: 100%;\n  width: ${CONTRIBUTE_CARD_WIDTH}px;\n  border-radius: ${CONTRIBUTE_CARD_BORDER_RADIUS}px;\n  border: 1px dashed #c0c5cc;\n  padding: 32px;\n  cursor: pointer;\n\n  a {\n    text-decoration: none;\n    display: block;\n  }\n\n  &:hover {\n    background: ${props => props.theme.colors.black[50]};\n  }\n`;\n\n/**\n * A special card dedicated to admins to show them a `Create new ...` card (ex: Create new tier).\n */\nconst CreateNew = ({ route, children, ...props }) => {\n  return (\n    <CreateNewCard {...props} href={route}>\n      <Flex alignItems=\"center\" justifyContent=\"center\" height=\"100%\">\n        <Flex flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\n          <StyledRoundButton buttonStyle=\"primary\" fontSize={25}>\n            +\n          </StyledRoundButton>\n          <P mt={3} color=\"black.700\">\n            {children}\n          </P>\n        </Flex>\n      </Flex>\n    </CreateNewCard>\n  );\n};\n\nCreateNew.propTypes = {\n  /** The link to redirect to when users click */\n  route: PropTypes.string.isRequired,\n  /** The label/description */\n  children: PropTypes.node.isRequired,\n};\n\nexport default CreateNew;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Lock } from '@styled-icons/feather/Lock';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\n\nimport Avatar, { ContributorAvatar } from '../Avatar';\nimport Container from '../Container';\nimport { Box, Flex } from '../Grid';\nimport LinkCollective from '../LinkCollective';\nimport LinkContributor from '../LinkContributor';\nimport StyledButton from '../StyledButton';\nimport StyledLink from '../StyledLink';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport StyledTextarea from '../StyledTextarea';\nimport { P, Span } from '../Text';\n\nconst messages = defineMessages({\n  placeholder: {\n    id: 'appRejectionReason.placeholder',\n    defaultMessage: 'Why is this application being rejected?',\n  },\n});\n\nconst ApplicationRejectionReasonModal = ({ collective, onClose, onConfirm, ...modalProps }) => {\n  const [rejectionReason, setRejectionReason] = useState('');\n  const intl = useIntl();\n  const isLegacyAPI = !collective.admins;\n  const admins = collective.admins?.nodes || collective.coreContributors; // compatibility with GQLV1\n  const totalAdminCount = collective.admins?.totalCount || admins.length;\n\n  return (\n    <StyledModal onClose={onClose} width=\"576px\" {...modalProps}>\n      <ModalHeader hideCloseIcon>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', 'row']} width=\"100%\">\n          <Flex>\n            <Avatar collective={collective} radius={40} />\n            <Box ml={3}>\n              <P fontSize=\"16px\" lineHeight=\"24px\" fontWeight=\"bold\">\n                {collective.name}\n              </P>\n              {collective.website && (\n                <P fontSize=\"12px\" lineHeight=\"16px\" fontWeight=\"400\">\n                  <StyledLink href={collective.website} color=\"black.700\" openInNewTabNoFollow>\n                    {collective.website}\n                  </StyledLink>\n                </P>\n              )}\n            </Box>\n          </Flex>\n          {totalAdminCount > 0 && (\n            <Box mt={[3, 0]}>\n              <Flex alignItems=\"center\">\n                <Span color=\"black.500\" fontSize=\"12px\" fontWeight=\"500\" letterSpacing=\"0.06em\">\n                  <FormattedMessage id=\"Admins\" defaultMessage=\"Admins\" />\n                </Span>\n              </Flex>\n              <Flex mt={2} alignItems=\"center\">\n                {admins.slice(0, 6).map(admin => (\n                  <Box key={admin.id} mr={1}>\n                    {isLegacyAPI ? (\n                      <LinkContributor contributor={admin}>\n                        <ContributorAvatar contributor={admin} radius=\"24px\" />\n                      </LinkContributor>\n                    ) : (\n                      <LinkCollective collective={admin.account}>\n                        <Avatar collective={admin.account} radius=\"24px\" />\n                      </LinkCollective>\n                    )}\n                  </Box>\n                ))}\n                {totalAdminCount > 6 && (\n                  <Container ml={2} pt=\"0.7em\" fontSize=\"12px\" color=\"black.600\">\n                    + {totalAdminCount - 6}\n                  </Container>\n                )}\n              </Flex>\n            </Box>\n          )}\n        </Flex>\n      </ModalHeader>\n      <ModalBody>\n        <P color=\"red.900\" fontSize=\"16px\" lineHeight=\"24px\" mb={2} mt={26}>\n          <FormattedMessage\n            id=\"OptionalFieldLabel\"\n            defaultMessage=\"{field} (optional)\"\n            values={{\n              field: (\n                <FormattedMessage\n                  id=\"ApplicationRejectionReasonModal.Help\"\n                  defaultMessage=\"Help {accountName} understand why you rejected their application\"\n                  values={{ accountName: collective.name }}\n                />\n              ),\n            }}\n          />\n        </P>\n        <P color=\"black.700\" lineHeight=\"20px\" mb={2}>\n          <FormattedMessage\n            id=\"PrivateMessageToCollectiveAdmins\"\n            defaultMessage=\"The message will be sent as a private email to the admins.\"\n          />\n          &nbsp;&nbsp;\n          <Lock size=\"1.1em\" />\n        </P>\n        <Container>\n          <StyledTextarea\n            width=\"100%\"\n            resize=\"none\"\n            autoSize={true}\n            minHeight={200}\n            value={rejectionReason}\n            onChange={({ target }) => setRejectionReason(target.value)}\n            placeholder={intl.formatMessage(messages.placeholder)}\n          />\n          <P mt={1} fontSize=\"11px\" color=\"black.600\">\n            <FormattedMessage id=\"forms.optional\" defaultMessage=\"Optional\" />\n          </P>\n        </Container>\n      </ModalBody>\n      <ModalFooter isFullWidth>\n        <Container display=\"flex\" justifyContent=\"flex-end\">\n          <StyledButton buttonStyle=\"dangerSecondary\" mx={20} minWidth={95} onClick={onClose}>\n            <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n          </StyledButton>\n          <StyledButton buttonStyle=\"danger\" data-cy=\"action\" minWidth={95} onClick={() => onConfirm(rejectionReason)}>\n            <FormattedMessage id=\"actions.reject\" defaultMessage=\"Reject\" />\n          </StyledButton>\n        </Container>\n      </ModalFooter>\n    </StyledModal>\n  );\n};\n\nApplicationRejectionReasonModal.propTypes = {\n  collective: PropTypes.object.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ApplicationRejectionReasonModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { InfoCircle } from '@styled-icons/boxicons-regular/InfoCircle';\nimport { Ban } from '@styled-icons/fa-solid/Ban';\nimport { Check } from '@styled-icons/fa-solid/Check';\nimport { FormattedMessage } from 'react-intl';\n\nimport { Flex } from '../Grid';\nimport StyledButton from '../StyledButton';\nimport StyledTooltip from '../StyledTooltip';\nimport { Span } from '../Text';\n\nimport ApplicationRejectionReasonModal from './ApplicationRejectionReasonModal';\n\nconst AcceptRejectButtons = ({\n  collective,\n  isLoading,\n  onApprove,\n  onReject,\n  disabled,\n  disabledMessage,\n  customButton,\n}) => {\n  const [showRejectModal, setShowRejectModal] = useState(false);\n  const [action, setAction] = useState(null);\n  return (\n    <Flex alignItems=\"baseline\" gap=\"10px\">\n      {disabledMessage && (\n        <StyledTooltip content={disabledMessage}>\n          <Span color=\"black.600\">\n            <InfoCircle size={24} />\n          </Span>\n        </StyledTooltip>\n      )}\n      {customButton ? (\n        customButton({\n          onClick: () => {\n            setAction('APPROVE');\n            onApprove();\n          },\n          disabled: disabled || isLoading,\n          loading: isLoading && action === 'APPROVE',\n          children: <FormattedMessage id=\"actions.approve\" defaultMessage=\"Approve\" />,\n        })\n      ) : (\n        <StyledButton\n          minWidth={100}\n          buttonSize=\"tiny\"\n          buttonStyle=\"successSecondary\"\n          height={32}\n          disabled={disabled || isLoading}\n          loading={isLoading && action === 'APPROVE'}\n          data-cy={`${collective.slug}-approve`}\n          onClick={() => {\n            setAction('APPROVE');\n            onApprove();\n          }}\n        >\n          <Check size={12} />\n          &nbsp; <FormattedMessage id=\"actions.approve\" defaultMessage=\"Approve\" />\n        </StyledButton>\n      )}\n\n      {customButton ? (\n        customButton({\n          onClick: () => setShowRejectModal(true),\n          disabled: isLoading,\n          loading: isLoading && action === 'REJECT',\n          children: <FormattedMessage id=\"actions.reject\" defaultMessage=\"Reject\" />,\n        })\n      ) : (\n        <StyledButton\n          minWidth={100}\n          buttonSize=\"tiny\"\n          buttonStyle=\"dangerSecondary\"\n          height={32}\n          onClick={() => setShowRejectModal(true)}\n          disabled={isLoading}\n          loading={isLoading && action === 'REJECT'}\n          data-cy={`${collective.slug}-reject`}\n        >\n          <Ban size={12} />\n          &nbsp; <FormattedMessage id=\"actions.reject\" defaultMessage=\"Reject\" />\n        </StyledButton>\n      )}\n      {showRejectModal && (\n        <ApplicationRejectionReasonModal\n          collective={collective}\n          onClose={() => setShowRejectModal(false)}\n          onConfirm={message => {\n            setAction('REJECT');\n            setShowRejectModal(false);\n            onReject(message);\n          }}\n        />\n      )}\n    </Flex>\n  );\n};\n\nAcceptRejectButtons.propTypes = {\n  collective: PropTypes.shape({\n    id: PropTypes.number,\n    slug: PropTypes.string,\n  }),\n  isLoading: PropTypes.bool,\n  disabled: PropTypes.bool,\n  disabledMessage: PropTypes.string,\n  onApprove: PropTypes.func,\n  onReject: PropTypes.func,\n  customButton: PropTypes.func,\n};\n\nexport default AcceptRejectButtons;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Lock } from '@styled-icons/feather/Lock';\nimport { FormattedMessage } from 'react-intl';\n\nimport Avatar from '../Avatar';\nimport Container from '../Container';\nimport { Box, Flex } from '../Grid';\nimport LinkCollective from '../LinkCollective';\nimport StyledButton from '../StyledButton';\nimport StyledCheckbox from '../StyledCheckbox';\nimport StyledLink from '../StyledLink';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../StyledModal';\nimport StyledTextarea from '../StyledTextarea';\nimport { P, Span } from '../Text';\n\nconst ApplicationMessageModal = ({ collective, onClose, onConfirm, ...modalProps }) => {\n  const [message, setMessage] = useState('');\n  const [isPrivate, setIsPrivate] = useState(false);\n\n  return (\n    <StyledModal onClose={onClose} width=\"576px\" {...modalProps}>\n      <ModalHeader hideCloseIcon>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', 'row']} width=\"100%\">\n          <Flex>\n            <Avatar collective={collective} radius={40} />\n            <Box ml={3}>\n              <P fontSize=\"16px\" lineHeight=\"24px\" fontWeight=\"bold\">\n                {collective.name}\n              </P>\n              {collective.website && (\n                <P fontSize=\"12px\" lineHeight=\"16px\" fontWeight=\"400\">\n                  <StyledLink href={collective.website} color=\"black.700\" openInNewTabNoFollow>\n                    {collective.website}\n                  </StyledLink>\n                </P>\n              )}\n            </Box>\n          </Flex>\n          {collective.admins.totalCount > 0 && (\n            <Box mt={[3, 0]}>\n              <Flex alignItems=\"center\">\n                <Span color=\"black.500\" fontSize=\"12px\" fontWeight=\"500\" letterSpacing=\"0.06em\">\n                  <FormattedMessage id=\"Admins\" defaultMessage=\"Admins\" />\n                </Span>\n              </Flex>\n              <Flex mt={2} alignItems=\"center\">\n                {collective.admins.nodes.slice(0, 6).map(admin => (\n                  <Box key={admin.id} mr={1}>\n                    <LinkCollective collective={admin.account}>\n                      <Avatar collective={admin.account} radius=\"24px\" />\n                    </LinkCollective>\n                  </Box>\n                ))}\n                {collective.admins.totalCount > 6 && (\n                  <Container ml={2} pt=\"0.7em\" fontSize=\"12px\" color=\"black.600\">\n                    + {collective.admins.totalCount - 6}\n                  </Container>\n                )}\n              </Flex>\n            </Box>\n          )}\n        </Flex>\n      </ModalHeader>\n      <ModalBody>\n        <P fontSize=\"16px\" lineHeight=\"24px\" mb={2}>\n          <FormattedMessage\n            id=\"SendMessageTo\"\n            defaultMessage=\"Send a message to {accountName}\"\n            values={{ accountName: collective.name }}\n          />\n        </P>\n        <P color=\"black.700\" lineHeight=\"20px\" mb={2}>\n          <FormattedMessage\n            id=\"HostApplicationMessageInfo\"\n            defaultMessage=\"The message will be public by default. If you want it to be private, tick the private checkbox.\"\n          />\n        </P>\n        <Container>\n          <StyledTextarea\n            width=\"100%\"\n            resize=\"none\"\n            autoSize={true}\n            minHeight={200}\n            value={message}\n            onChange={({ target }) => setMessage(target.value)}\n            showCount\n            minLength={3}\n            maxLength={3000}\n          />\n          <Box mt={2}>\n            <StyledCheckbox\n              name=\"private\"\n              checked={isPrivate}\n              onChange={({ checked }) => setIsPrivate(checked)}\n              label={\n                <Span>\n                  <Lock size=\"1em\" />\n                  &nbsp;\n                  <Span css={{ verticalAlign: 'middle' }}>\n                    <FormattedMessage\n                      id=\"ApplicationMessageModal.Private\"\n                      defaultMessage=\"Private (email to the Collective admins)\"\n                    />\n                  </Span>\n                </Span>\n              }\n            />\n          </Box>\n        </Container>\n      </ModalBody>\n      <ModalFooter isFullWidth>\n        <Container display=\"flex\" justifyContent=\"flex-end\">\n          <StyledButton buttonStyle=\"secondary\" mx={20} minWidth={95} onClick={onClose}>\n            <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n          </StyledButton>\n          <StyledButton\n            buttonStyle=\"primary\"\n            data-cy=\"action\"\n            minWidth={95}\n            onClick={() => onConfirm(message, isPrivate, () => setMessage(''))}\n            disabled={!message}\n          >\n            <FormattedMessage id=\"SendMessage\" defaultMessage=\"Send message\" />\n          </StyledButton>\n        </Container>\n      </ModalFooter>\n    </StyledModal>\n  );\n};\n\nApplicationMessageModal.propTypes = {\n  collective: PropTypes.object.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ApplicationMessageModal;\n","import React from 'react';\n\nimport { Box, Flex } from '../../Grid';\nimport StyledHr from '../../StyledHr';\nimport { Span } from '../../Text';\n\ntype InfoSectionHeaderProps = {\n  children: React.ReactNode;\n  icon?: React.ReactNode;\n};\n\nexport const InfoSectionHeader = ({ children, icon = null }: InfoSectionHeaderProps) => (\n  <Flex alignItems=\"center\" mb={3}>\n    {icon && <Box mr={2}>{icon}</Box>}\n    <Span fontSize=\"11px\" fontWeight=\"500\" color=\"black.500\" textTransform=\"uppercase\" mr={2}>\n      {children}\n    </Span>\n    <StyledHr borderColor=\"black.200\" flex=\"1 1\" />\n  </Flex>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CheckShield } from '@styled-icons/boxicons-regular/CheckShield';\nimport { Ban } from '@styled-icons/fa-solid/Ban';\nimport { Check } from '@styled-icons/fa-solid/Check';\nimport dayjs from 'dayjs';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport spdxLicenses from 'spdx-license-list';\n\nimport Container from '../Container';\nimport { Flex } from '../Grid';\nimport StyledLink from '../StyledLink';\nimport { P, Span } from '../Text';\n\nimport { InfoSectionHeader } from './applications/InfoSectionHeader';\n\ndayjs.extend(relativeTime);\n\nconst FieldWithValidationBadge = ({ field, children }) => {\n  return (\n    <Flex alignItems=\"center\" gridGap=\"8px\">\n      {field.isValid ? <Check size=\"12\" color=\"#256643\" /> : <Ban size=\"12\" color=\"#cc2955\" />}\n      <P>{children({ field })}</P>\n    </Flex>\n  );\n};\n\nconst ValidatedFieldPropType = PropTypes.shape({\n  isValid: PropTypes.bool,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n});\n\nFieldWithValidationBadge.propTypes = {\n  field: ValidatedFieldPropType.isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nconst msg = defineMessages({\n  license: {\n    id: 'PendingApplication.RepoInfo.License',\n    defaultMessage: 'License: {license}',\n  },\n  licenseManually: {\n    id: 'PendingApplication.RepoInfo.LicenseManually',\n    defaultMessage: '(user specified \"{license}\" manually)',\n  },\n  lastCommitTimeAgo: {\n    id: 'PendingApplication.RepoInfo.LastCommitTimeAgo',\n    defaultMessage: 'Last commit {timeAgo}',\n  },\n  orgAccount: {\n    id: 'PendingApplication.RepoInfo.OrgAccount',\n    defaultMessage: 'Organization account',\n  },\n  personalAccount: {\n    id: 'PendingApplication.RepoInfo.PersonalAccount',\n    defaultMessage: 'Personal account',\n  },\n  isFork: {\n    id: 'PendingApplication.RepoInfo.IsFork',\n    defaultMessage: 'This is a fork',\n  },\n  isNotFork: {\n    id: 'PendingApplication.RepoInfo.IsNotFork',\n    defaultMessage: 'This is not a fork',\n  },\n  collaboratorsCount: {\n    id: 'PendingApplication.RepoInfo.CollaboratorsCount',\n    defaultMessage: '{count} collaborators',\n  },\n  starsCount: {\n    id: 'PendingApplication.RepoInfo.StarsCount',\n    defaultMessage: '{count} stars',\n  },\n  isRepoAdmin: {\n    id: 'PendingApplication.RepoInfo.IsRepoAdmin',\n    defaultMessage: 'User is admin of the repository',\n  },\n  isNotRepoAdmin: {\n    id: 'PendingApplication.RepoInfo.IsNotRepoAdmin',\n    defaultMessage: 'User is not admin of the repository',\n  },\n});\n\nfunction ValidatedRepositoryInfo({ customData }) {\n  const intl = useIntl();\n  const { repositoryUrl, licenseSpdxId, validatedRepositoryInfo } = customData;\n  return (\n    <Container mb={3}>\n      <InfoSectionHeader icon={<CheckShield size={16} color=\"#75777A\" />}>\n        <FormattedMessage id=\"PendingApplication.RepoInfo.Header\" defaultMessage=\"Validated repository information\" />\n      </InfoSectionHeader>\n      <Flex flexDirection=\"column\" gridGap={'6px'} mb={4}>\n        <P mb={1}>\n          <StyledLink href={repositoryUrl}>{repositoryUrl.split('//')[1]}</StyledLink>\n        </P>\n        <FieldWithValidationBadge field={validatedRepositoryInfo.fields.licenseSpdxId}>\n          {({ field }) => (\n            <React.Fragment>\n              {intl.formatMessage(msg.license, {\n                license:\n                  !field?.value || field.value === 'NOASSERTION'\n                    ? 'Not found'\n                    : `${field.value} (${spdxLicenses[field.value]?.name || 'Unknown'})`,\n              })}{' '}\n              {licenseSpdxId && licenseSpdxId !== field?.value && (\n                <Span color=\"black.600\">{intl.formatMessage(msg.licenseManually, { license: licenseSpdxId })}</Span>\n              )}\n            </React.Fragment>\n          )}\n        </FieldWithValidationBadge>\n        <FieldWithValidationBadge field={validatedRepositoryInfo.fields.lastCommitDate}>\n          {({ field }) =>\n            intl.formatMessage(msg.lastCommitTimeAgo, { timeAgo: field ? dayjs(field.value).fromNow() : 'not found' })\n          }\n        </FieldWithValidationBadge>\n        <FieldWithValidationBadge field={validatedRepositoryInfo.fields.isOwnedByOrg}>\n          {({ field }) => (field.value ? intl.formatMessage(msg.orgAccount) : intl.formatMessage(msg.personalAccount))}\n        </FieldWithValidationBadge>\n        <FieldWithValidationBadge field={validatedRepositoryInfo.fields.isFork}>\n          {({ field }) => (field.value ? intl.formatMessage(msg.isFork) : intl.formatMessage(msg.isNotFork))}\n        </FieldWithValidationBadge>\n        <FieldWithValidationBadge field={validatedRepositoryInfo.fields.collaboratorsCount}>\n          {({ field }) => intl.formatMessage(msg.collaboratorsCount, { count: field.value })}\n        </FieldWithValidationBadge>\n        <FieldWithValidationBadge field={validatedRepositoryInfo.fields.starsCount}>\n          {({ field }) => intl.formatMessage(msg.starsCount, { count: field.value })}\n        </FieldWithValidationBadge>\n        <FieldWithValidationBadge field={validatedRepositoryInfo.fields.isAdmin}>\n          {({ field }) => (field.value ? intl.formatMessage(msg.isRepoAdmin) : intl.formatMessage(msg.isNotRepoAdmin))}\n        </FieldWithValidationBadge>\n      </Flex>\n    </Container>\n  );\n}\n\nValidatedRepositoryInfo.propTypes = {\n  customData: PropTypes.shape({\n    repositoryUrl: PropTypes.string.isRequired,\n    licenseSpdxId: PropTypes.string,\n    validatedRepositoryInfo: PropTypes.shape({\n      fields: PropTypes.shape({\n        licenseSpdxId: ValidatedFieldPropType,\n        lastCommitDate: ValidatedFieldPropType,\n        isOwnedByOrg: ValidatedFieldPropType,\n        isFork: ValidatedFieldPropType,\n        collaboratorsCount: ValidatedFieldPropType,\n        starsCount: ValidatedFieldPropType,\n        isAdmin: ValidatedFieldPropType,\n      }).isRequired,\n    }).isRequired,\n  }),\n};\n\nexport default ValidatedRepositoryInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation } from '@apollo/client';\nimport { AlertTriangle } from '@styled-icons/feather/AlertTriangle';\nimport { ExternalLink } from '@styled-icons/feather/ExternalLink';\nimport { Mail } from '@styled-icons/feather/Mail';\nimport { get } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\nimport { padding } from 'styled-system';\n\nimport { getCollectiveMainTag } from '../../../lib/collective.lib';\nimport { i18nGraphqlException } from '../../../lib/errors';\nimport { API_V2_CONTEXT } from '../../../lib/graphql/helpers';\nimport { i18nOCFApplicationFormLabel } from '../../../lib/i18n/ocf-form';\nimport { CustomScrollbarCSS } from '../../../lib/styled-components-shared-styles';\n\nimport Avatar from '../../Avatar';\nimport Container from '../../Container';\nimport { Box, Flex } from '../../Grid';\nimport I18nCollectiveTags from '../../I18nCollectiveTags';\nimport CommentIcon from '../../icons/CommentIcon';\nimport Link from '../../Link';\nimport LinkCollective from '../../LinkCollective';\nimport { APPLICATION_DATA_AMOUNT_FIELDS } from '../../ocf-host-application/ApplicationForm';\nimport StyledCollectiveCard from '../../StyledCollectiveCard';\nimport StyledHr from '../../StyledHr';\nimport StyledLink from '../../StyledLink';\nimport StyledRoundButton from '../../StyledRoundButton';\nimport StyledTag from '../../StyledTag';\nimport StyledTooltip from '../../StyledTooltip';\nimport { P, Span } from '../../Text';\nimport { TOAST_TYPE, useToasts } from '../../ToastProvider';\nimport AcceptRejectButtons from '../AcceptRejectButtons';\nimport ApplicationMessageModal from '../ApplicationMessageModal';\nimport ValidatedRepositoryInfo from '../ValidatedRepositoryInfo';\n\nimport { InfoSectionHeader } from './InfoSectionHeader';\n\nconst ApplicationBody = styled.div`\n  height: 267px;\n  overflow-y: auto;\n\n  ${padding}\n  ${CustomScrollbarCSS}\n\n  @media (pointer: fine) {\n    &::-webkit-scrollbar {\n      width: 4px;\n      border-radius: 8px;\n    }\n  }\n`;\n\nconst CollectiveCardBody = styled.div`\n  padding: 8px 16px 16px 16px;\n  overflow-y: auto;\n  height: 100%;\n  ${CustomScrollbarCSS}\n  @media (pointer: fine) {\n    &::-webkit-scrollbar {\n      width: 4px;\n      border-radius: 8px;\n    }\n  }\n`;\n\nexport const processApplicationAccountFields = gql`\n  fragment ProcessHostApplicationFields on AccountWithHost {\n    isActive\n    approvedAt\n    isApproved\n    host {\n      id\n    }\n  }\n`;\n\nexport const processApplicationMutation = gql`\n  mutation ProcessHostApplication(\n    $host: AccountReferenceInput!\n    $account: AccountReferenceInput!\n    $action: ProcessHostApplicationAction!\n    $message: String\n  ) {\n    processHostApplication(host: $host, account: $account, action: $action, message: $message) {\n      account {\n        id\n        ... on AccountWithHost {\n          ...ProcessHostApplicationFields\n        }\n      }\n      conversation {\n        id\n        slug\n      }\n    }\n  }\n  ${processApplicationAccountFields}\n`;\n\nconst msg = defineMessages({\n  approved: {\n    id: 'HostApplication.Approved',\n    defaultMessage: '{name} has been approved',\n  },\n  rejected: {\n    id: 'HostApplication.Rejected',\n    defaultMessage: '{name} has been rejected',\n  },\n});\n\nconst ACTIONS = {\n  APPROVE: 'APPROVE',\n  REJECT: 'REJECT',\n  SEND_PRIVATE_MESSAGE: 'SEND_PRIVATE_MESSAGE',\n  SEND_PUBLIC_MESSAGE: 'SEND_PUBLIC_MESSAGE',\n};\n\nconst StatusTag = ({ status }) => {\n  const tagProps = { textTransform: 'uppercase', mr: 2 };\n\n  switch (status) {\n    case 'PENDING':\n      return (\n        <StyledTag {...tagProps} type=\"warning\">\n          <FormattedMessage id=\"Pending\" defaultMessage=\"Pending\" />\n        </StyledTag>\n      );\n    case 'APPROVED':\n      return (\n        <StyledTag {...tagProps} type=\"success\">\n          <FormattedMessage id=\"PendingApplication.Approved\" defaultMessage=\"Approved\" />\n        </StyledTag>\n      );\n    case 'REJECTED':\n      return (\n        <StyledTag {...tagProps} type=\"error\">\n          <FormattedMessage id=\"PendingApplication.Rejected\" defaultMessage=\"Rejected\" />\n        </StyledTag>\n      );\n    default:\n      return null;\n  }\n};\n\nStatusTag.propTypes = {\n  status: PropTypes.oneOf(['PENDING', 'REJECTED', 'APPROVED']),\n};\n\nconst getStatus = (isDone, latestAction) => {\n  if (!isDone) {\n    return 'PENDING';\n  } else if (latestAction === ACTIONS.REJECT) {\n    return 'REJECTED';\n  } else if (latestAction === ACTIONS.APPROVE) {\n    return 'APPROVED';\n  }\n};\n\nconst getSuccessToast = (intl, action, collective, result) => {\n  if (action === ACTIONS.SEND_PRIVATE_MESSAGE || action === ACTIONS.SEND_PUBLIC_MESSAGE) {\n    const conversation = get(result, 'data.processHostApplication.conversation');\n    return {\n      type: TOAST_TYPE.SUCCESS,\n      duration: 10000,\n      title: conversation ? (\n        <FormattedMessage id=\"Conversation.created\" defaultMessage=\"Conversation created\" />\n      ) : (\n        <FormattedMessage id=\"MessageSent\" defaultMessage=\"Message sent\" />\n      ),\n      message: conversation && (\n        <StyledLink\n          as={Link}\n          openInNewTab\n          href={`/${collective.slug}/conversations/${conversation.slug}-${conversation.id}`}\n        >\n          <FormattedMessage id=\"Conversation.view\" defaultMessage=\"View Conversation\" />\n          &nbsp;\n          <ExternalLink size=\"1em\" style={{ verticalAlign: 'middle' }} />\n        </StyledLink>\n      ),\n    };\n  } else if (action === ACTIONS.APPROVE) {\n    return {\n      type: TOAST_TYPE.SUCCESS,\n      message: intl.formatMessage(msg.approved, { name: collective.name }),\n    };\n  } else if (action === ACTIONS.REJECT) {\n    return {\n      type: TOAST_TYPE.SUCCESS,\n      message: intl.formatMessage(msg.rejected, { name: collective.name }),\n    };\n  } else {\n    return { type: TOAST_TYPE.SUCCESS };\n  }\n};\n\nconst UserInputContainer = styled(P).attrs({\n  fontSize: '14px',\n  lineHeight: '24px',\n  fontStyle: 'italic',\n  color: 'black.800',\n  fontWeight: '400',\n})``;\n\nconst PendingApplication = ({ host, application, ...props }) => {\n  const intl = useIntl();\n  const [isDone, setIsDone] = React.useState(false);\n  const [latestAction, setLatestAction] = React.useState(null);\n  const [showContactModal, setShowContactModal] = React.useState(false);\n  const { addToast } = useToasts();\n  const collective = application.account;\n  const [callProcessApplication, { loading }] = useMutation(processApplicationMutation, {\n    context: API_V2_CONTEXT,\n  });\n  const hasNothingToShow = !application.message && !application.customData;\n\n  const requiresMinimumNumberOfAdmins = host?.policies?.COLLECTIVE_MINIMUM_ADMINS?.numberOfAdmins > 1;\n  const hasEnoughAdmins =\n    requiresMinimumNumberOfAdmins &&\n    application.account.admins.totalCount >= host.policies.COLLECTIVE_MINIMUM_ADMINS.numberOfAdmins;\n  const hasEnoughInvitedAdmins =\n    requiresMinimumNumberOfAdmins &&\n    application.account.admins.totalCount + application.account.memberInvitations.length >=\n      host.policies.COLLECTIVE_MINIMUM_ADMINS.numberOfAdmins;\n\n  const processApplication = async (action, message, onSuccess) => {\n    setIsDone(false);\n    setLatestAction(action);\n    try {\n      const variables = { host: { id: host.id }, account: { id: collective.id }, action, message };\n      const result = await callProcessApplication({ variables });\n      addToast(getSuccessToast(intl, action, collective, result));\n      if (action === ACTIONS.APPROVE || action === ACTIONS.REJECT) {\n        setIsDone(true);\n      }\n      if (onSuccess) {\n        onSuccess();\n      }\n      return result;\n    } catch (e) {\n      addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(intl, e) });\n    }\n  };\n\n  return (\n    <Container\n      id={`application-${collective.legacyId}`}\n      display=\"flex\"\n      flexDirection={['column', 'row']}\n      border=\"1px solid #DCDEE0\"\n      borderRadius=\"16px\"\n    >\n      <StyledCollectiveCard\n        collective={collective}\n        bodyHeight={258}\n        width={['100%', 224]}\n        borderRadius={[16, '16px 0 0 16px']}\n        borderWidth=\"0\"\n        showWebsite\n        tag={\n          <Flex mt={12}>\n            <StatusTag status={getStatus(isDone, latestAction)} />\n            <StyledTag variant=\"rounded-right\">\n              <I18nCollectiveTags\n                tags={getCollectiveMainTag(get(collective, 'host.id'), collective.tags, collective.type)}\n              />\n            </StyledTag>\n          </Flex>\n        }\n        {...props}\n      >\n        <CollectiveCardBody>\n          {collective.admins.totalCount > 0 && (\n            <Box>\n              <Flex alignItems=\"center\">\n                <Span\n                  color=\"black.500\"\n                  fontSize=\"9px\"\n                  textTransform=\"uppercase\"\n                  fontWeight=\"500\"\n                  letterSpacing=\"0.06em\"\n                >\n                  <FormattedMessage id=\"Admins\" defaultMessage=\"Admins\" />\n                </Span>\n                <StyledHr borderColor=\"black.300\" flex=\"1 1\" ml={2} />\n              </Flex>\n              <Flex mt={2} alignItems=\"center\">\n                {collective.admins.nodes.slice(0, 6).map(admin => (\n                  <Box key={admin.id} mr={1}>\n                    <LinkCollective collective={admin.account}>\n                      <Avatar collective={admin.account} radius=\"24px\" />\n                    </LinkCollective>\n                  </Box>\n                ))}\n                {collective.admins.totalCount > 6 && (\n                  <Container ml={2} pt=\"0.7em\" fontSize=\"12px\" color=\"black.600\">\n                    + {collective.admins.totalCount - 6}\n                  </Container>\n                )}\n              </Flex>\n            </Box>\n          )}\n          {collective.description && (\n            <Box mt={3}>\n              <Flex alignItems=\"center\">\n                <Span\n                  color=\"black.500\"\n                  fontSize=\"9px\"\n                  textTransform=\"uppercase\"\n                  fontWeight=\"500\"\n                  letterSpacing=\"0.06em\"\n                >\n                  <FormattedMessage id=\"OurPurpose\" defaultMessage=\"Our purpose\" />\n                </Span>\n                <StyledHr borderColor=\"black.300\" flex=\"1 1\" ml={2} />\n              </Flex>\n              <P mt={1} fontSize=\"12px\" lineHeight=\"18px\" color=\"black.800\">\n                {collective.description}\n              </P>\n            </Box>\n          )}\n        </CollectiveCardBody>\n      </StyledCollectiveCard>\n      <Container\n        background=\"white\"\n        flex=\"1 1\"\n        borderLeft={[null, '1px solid #DCDEE0']}\n        borderRadius={[16, '0 16px 16px 0']}\n        minWidth={300}\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"space-between\"\n        height={332}\n      >\n        <Container px=\"4px\" position=\"relative\">\n          <ApplicationBody p={[12, 22]}>\n            {application.customData?.validatedRepositoryInfo && (\n              <ValidatedRepositoryInfo customData={application.customData} />\n            )}\n\n            {(application.message || hasNothingToShow) && (\n              <Box mb={3}>\n                <InfoSectionHeader icon={<CommentIcon size={16} />}>\n                  <FormattedMessage id=\"PendingApplication.Message\" defaultMessage=\"Message to Fiscal Host\" />\n                </InfoSectionHeader>\n                {application.message ? (\n                  <UserInputContainer as=\"q\">{application.message}</UserInputContainer>\n                ) : (\n                  <P color=\"black.500\">\n                    <FormattedMessage id=\"NoMessage\" defaultMessage=\"No message provided\" />\n                  </P>\n                )}\n              </Box>\n            )}\n\n            {application.customData &&\n              Object.keys(application.customData).map(key => {\n                // Don't show repository info twice as it is displayed on top in a special component\n                if (\n                  key === 'validatedRepositoryInfo' ||\n                  (key === 'repositoryUrl' && application.customData.validatedRepositoryInfo) ||\n                  (key === 'licenseSpdxId' && application.customData.validatedRepositoryInfo)\n                ) {\n                  return null;\n                }\n\n                return (\n                  <Container mb={3} key={key}>\n                    <InfoSectionHeader>{i18nOCFApplicationFormLabel(intl, key)}</InfoSectionHeader>\n                    <UserInputContainer>\n                      {/** Amount was previously stored as a number in cents */}\n                      {APPLICATION_DATA_AMOUNT_FIELDS.includes(key) && typeof application.customData[key] === 'number'\n                        ? `${application.customData[key] / 100}$`\n                        : application.customData[key]}\n                    </UserInputContainer>\n                  </Container>\n                );\n              })}\n          </ApplicationBody>\n        </Container>\n        {!isDone && (\n          <Container\n            display=\"flex\"\n            p={3}\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            borderTop=\"1px solid #DCDEE0\"\n            boxShadow=\"0px -2px 4px 0px rgb(49 50 51 / 6%)\"\n          >\n            <Flex alignItems=\"center\" gap=\"10px\">\n              <StyledRoundButton size={32} onClick={() => setShowContactModal(true)}>\n                <Mail size={15} color=\"#4E5052\" />\n              </StyledRoundButton>\n              {requiresMinimumNumberOfAdmins && hasEnoughInvitedAdmins && !hasEnoughAdmins && (\n                <StyledTooltip\n                  content={\n                    <FormattedMessage defaultMessage=\"This collective doesn’t satisfy the minimum admin requirements as admin invitations are still pending.\" />\n                  }\n                >\n                  <Span color=\"red.600\">\n                    <AlertTriangle size={24} />\n                  </Span>\n                </StyledTooltip>\n              )}\n            </Flex>\n            <AcceptRejectButtons\n              collective={collective}\n              isLoading={loading}\n              disabled={requiresMinimumNumberOfAdmins && !hasEnoughInvitedAdmins}\n              disabledMessage={\n                requiresMinimumNumberOfAdmins &&\n                !hasEnoughInvitedAdmins && (\n                  <FormattedMessage defaultMessage=\"You can not approve this collective as it doesn’t satisfy the minimum admin policy set by you.\" />\n                )\n              }\n              onApprove={() => processApplication(ACTIONS.APPROVE)}\n              onReject={message => processApplication(ACTIONS.REJECT, message)}\n            />\n          </Container>\n        )}\n      </Container>\n      {showContactModal && (\n        <ApplicationMessageModal\n          collective={collective}\n          onClose={() => setShowContactModal(false)}\n          onConfirm={(message, isPrivate, resetMessage) => {\n            setShowContactModal(false);\n            const action = isPrivate ? ACTIONS.SEND_PRIVATE_MESSAGE : ACTIONS.SEND_PUBLIC_MESSAGE;\n            processApplication(action, message, resetMessage);\n          }}\n        />\n      )}\n    </Container>\n  );\n};\n\nPendingApplication.propTypes = {\n  host: PropTypes.shape({\n    id: PropTypes.string,\n    policies: PropTypes.object,\n  }).isRequired,\n  application: PropTypes.shape({\n    message: PropTypes.string,\n    customData: PropTypes.object,\n    account: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      legacyId: PropTypes.number,\n      slug: PropTypes.string,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      isApproved: PropTypes.bool,\n      tags: PropTypes.array,\n      type: PropTypes.string,\n      host: PropTypes.shape({\n        id: PropTypes.string,\n      }),\n      memberInvitations: PropTypes.array,\n      admins: PropTypes.shape({\n        totalCount: PropTypes.number,\n        nodes: PropTypes.array,\n      }),\n    }).isRequired,\n  }),\n};\n\nexport default PendingApplication;\n","import { MessageSquare } from '@styled-icons/feather/MessageSquare';\nimport styled from 'styled-components';\n\nexport default styled(MessageSquare)`\n  transform: scaleX(-1);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport { FormattedMessage } from 'react-intl';\n\nimport {\n  GQLV2_SUPPORTED_PAYMENT_METHOD_TYPES,\n  PAYMENT_METHOD_SERVICE,\n  PAYMENT_METHOD_TYPE,\n} from '../../lib/constants/payment-methods';\nimport { getIntervalFromContributionFrequency } from '../../lib/date-utils';\n\nimport CreditCard from '../../components/icons/CreditCard';\n\nimport { Flex } from '../Grid';\nimport NewCreditCardForm from '../NewCreditCardForm';\nimport PayWithPaypalButton from '../PayWithPaypalButton';\nimport StyledButton from '../StyledButton';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\n/** Return the next charge date, or `undefined` if subscription is past due */\nexport const getSubscriptionStartDate = order => {\n  if (order.nextChargeDate && dayjs(order.nextChargeDate).isAfter(dayjs())) {\n    return order.nextChargeDate;\n  }\n};\n\nconst STRIPE = 'stripe';\n\nconst AddPaymentMethod = ({ onStripeReady, onPaypalSuccess, setNewPaymentMethodInfo, order, isSubmitting }) => {\n  const host = order.toAccount.host;\n  const hasStripe = host.supportedPaymentMethods.includes(GQLV2_SUPPORTED_PAYMENT_METHOD_TYPES.CREDIT_CARD);\n  const hasPaypal = host.supportedPaymentMethods.includes(GQLV2_SUPPORTED_PAYMENT_METHOD_TYPES.PAYPAL);\n  const defaultProvider = hasStripe && !hasPaypal ? STRIPE : null;\n  const [selectedProvider, setSelectedProvider] = React.useState(defaultProvider);\n  const { addToast } = useToasts();\n\n  if (!selectedProvider) {\n    return (\n      <Flex flexDirection=\"column\">\n        {hasStripe && (\n          <StyledButton\n            buttonSize=\"small\"\n            data-cy=\"add-pm-select-provider-credit-card-btn\"\n            onClick={() => setSelectedProvider(STRIPE)}\n            mb={2}\n          >\n            <CreditCard size={24} />\n            &nbsp;\n            <FormattedMessage id=\"CreditCard\" defaultMessage=\"Credit Card\" />\n          </StyledButton>\n        )}\n        {host.paypalClientId && (\n          <PayWithPaypalButton\n            totalAmount={order.totalAmount.valueInCents}\n            currency={order.totalAmount.currency}\n            interval={getIntervalFromContributionFrequency(order.frequency)}\n            host={host}\n            collective={order.toAccount}\n            tier={order.tier}\n            style={{ height: 45, size: 'small' }}\n            subscriptionStartDate={getSubscriptionStartDate(order)}\n            isSubmitting={isSubmitting}\n            onError={e => addToast({ type: TOAST_TYPE.ERROR, title: e.message })}\n            onSuccess={({ subscriptionId }) => {\n              onPaypalSuccess({\n                service: PAYMENT_METHOD_SERVICE.PAYPAL,\n                type: PAYMENT_METHOD_TYPE.SUBSCRIPTION,\n                paypalInfo: { subscriptionId },\n              });\n            }}\n          />\n        )}\n      </Flex>\n    );\n  } else if (selectedProvider === STRIPE) {\n    return (\n      <NewCreditCardForm\n        name=\"newCreditCardInfo\"\n        profileType={'USER'}\n        onChange={setNewPaymentMethodInfo}\n        onReady={onStripeReady}\n        hasSaveCheckBox={false}\n        isCompact\n      />\n    );\n  }\n};\n\nAddPaymentMethod.propTypes = {\n  setNewPaymentMethodInfo: PropTypes.func,\n  onStripeReady: PropTypes.func,\n  onPaypalSuccess: PropTypes.func,\n  isSubmitting: PropTypes.bool,\n  order: PropTypes.shape({\n    totalAmount: PropTypes.object,\n    frequency: PropTypes.string,\n    toAccount: PropTypes.object,\n    tier: PropTypes.object,\n  }),\n};\n\nexport default AddPaymentMethod;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql, useMutation, useQuery } from '@apollo/client';\nimport { CardElement } from '@stripe/react-stripe-js';\nimport { Lock } from '@styled-icons/boxicons-regular/Lock';\nimport { themeGet } from '@styled-system/theme-get';\nimport { first, get, merge, pick, uniqBy } from 'lodash';\nimport { defineMessages, FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { PAYMENT_METHOD_SERVICE } from '../../lib/constants/payment-methods';\nimport { getErrorFromGraphqlException } from '../../lib/errors';\nimport { API_V2_CONTEXT } from '../../lib/graphql/helpers';\nimport { getPaymentMethodName } from '../../lib/payment_method_label';\nimport { getPaymentMethodIcon, getPaymentMethodMetadata } from '../../lib/payment-method-utils';\nimport { getStripe, stripeTokenToPaymentMethod } from '../../lib/stripe';\n\nimport { Box, Flex } from '../Grid';\nimport I18nFormatters from '../I18nFormatters';\nimport LoadingPlaceholder from '../LoadingPlaceholder';\nimport { withStripeLoader } from '../StripeProvider';\nimport StyledButton from '../StyledButton';\nimport StyledHr from '../StyledHr';\nimport StyledRadioList from '../StyledRadioList';\nimport StyledRoundButton from '../StyledRoundButton';\nimport { P } from '../Text';\nimport { TOAST_TYPE, useToasts } from '../ToastProvider';\n\nimport AddPaymentMethod from './AddPaymentMethod';\n\nconst PaymentMethodBox = styled(Flex)`\n  border-top: 1px solid ${themeGet('colors.black.300')};\n`;\n\nconst messages = defineMessages({\n  updatePaymentMethod: {\n    id: 'subscription.menu.editPaymentMethod',\n    defaultMessage: 'Update payment method',\n  },\n  addPaymentMethod: {\n    id: 'subscription.menu.addPaymentMethod',\n    defaultMessage: 'Add new payment method',\n  },\n});\n\nconst paymentMethodFragment = gql`\n  fragment UpdatePaymentMethodFragment on PaymentMethod {\n    id\n    name\n    data\n    service\n    type\n    balance {\n      value\n      valueInCents\n      currency\n    }\n    account {\n      id\n    }\n  }\n`;\n\nconst paymentMethodsQuery = gql`\n  query UpdatePaymentMethodPopUpPaymentMethod($accountId: String!, $orderId: String!) {\n    account(id: $accountId) {\n      id\n      paymentMethods(type: [CREDITCARD, GIFTCARD, PREPAID, COLLECTIVE]) {\n        id\n        ...UpdatePaymentMethodFragment\n      }\n    }\n    order(order: { id: $orderId }) {\n      id\n      paymentMethod {\n        id\n        ...UpdatePaymentMethodFragment\n      }\n    }\n  }\n  ${paymentMethodFragment}\n`;\n\nconst updatePaymentMethodMutation = gql`\n  mutation UpdatePaymentMethod(\n    $order: OrderReferenceInput!\n    $paymentMethod: PaymentMethodReferenceInput\n    $paypalSubscriptionId: String\n  ) {\n    updateOrder(order: $order, paymentMethod: $paymentMethod, paypalSubscriptionId: $paypalSubscriptionId) {\n      id\n      status\n      paymentMethod {\n        id\n        service\n        name\n        type\n        data\n        expiryDate\n        balance {\n          value\n          valueInCents\n          currency\n        }\n      }\n    }\n  }\n`;\n\nconst paymentMethodResponseFragment = gql`\n  fragment paymentMethodResponseFragment on CreditCardWithStripeError {\n    paymentMethod {\n      id\n    }\n    stripeError {\n      message\n      response\n    }\n  }\n`;\n\nexport const addCreditCardMutation = gql`\n  mutation AddCreditCardRecurringContributions(\n    $creditCardInfo: CreditCardCreateInput!\n    $name: String!\n    $account: AccountReferenceInput!\n  ) {\n    addCreditCard(creditCardInfo: $creditCardInfo, name: $name, account: $account) {\n      ...paymentMethodResponseFragment\n    }\n  }\n  ${paymentMethodResponseFragment}\n`;\n\nexport const confirmCreditCardMutation = gql`\n  mutation ConfirmCreditCardRecurringContributions($paymentMethod: PaymentMethodReferenceInput!) {\n    confirmCreditCard(paymentMethod: $paymentMethod) {\n      ...paymentMethodResponseFragment\n    }\n  }\n  ${paymentMethodResponseFragment}\n`;\n\nconst mutationOptions = { context: API_V2_CONTEXT };\n\nconst sortAndFilterPaymentMethods = (paymentMethods, contribution, addedPaymentMethod, existingPaymentMethod) => {\n  if (!paymentMethods) {\n    return null;\n  }\n\n  const minBalance = contribution.amount.valueInCents;\n  const uniquePMs = uniqBy(paymentMethods, 'id');\n  const getIsDisabled = pm => pm.balance.valueInCents < minBalance;\n\n  // Make sure we always include the current payment method\n  if (existingPaymentMethod && !uniquePMs.some(pm => pm.id === existingPaymentMethod.id)) {\n    uniquePMs.unshift(existingPaymentMethod);\n  }\n\n  uniquePMs.sort((pm1, pm2) => {\n    // Put disabled PMs at the end\n    if (getIsDisabled(pm1) && !getIsDisabled(pm2)) {\n      return 1;\n    } else if (getIsDisabled(pm2) && !getIsDisabled(pm1)) {\n      return -1;\n    }\n\n    // If we've just added a PM, put it at the top of the list\n    if (addedPaymentMethod) {\n      if (addedPaymentMethod.id === pm1.id) {\n        return -1;\n      } else if (addedPaymentMethod.id === pm2.id) {\n        return 1;\n      }\n    }\n\n    // Put the PM that matches this recurring contribution just after the newly added\n    if (existingPaymentMethod) {\n      if (existingPaymentMethod.id === pm1.id) {\n        return -1;\n      } else if (existingPaymentMethod.id === pm2.id) {\n        return 1;\n      }\n    }\n\n    return 0;\n  });\n\n  return uniquePMs.map(pm => ({\n    key: `pm-${pm.id}`,\n    title: getPaymentMethodName(pm),\n    subtitle: getPaymentMethodMetadata(pm),\n    icon: getPaymentMethodIcon(pm),\n    paymentMethod: pm,\n    disabled: getIsDisabled(pm),\n    id: pm.id,\n    CollectiveId: pm.account?.id,\n  }));\n};\n\nconst useUpdatePaymentMethod = contribution => {\n  const { addToast } = useToasts();\n  const [submitUpdatePaymentMethod, { loading }] = useMutation(updatePaymentMethodMutation, mutationOptions);\n\n  return {\n    isSubmitting: loading,\n    updatePaymentMethod: async paymentMethod => {\n      const hasUpdate = !contribution.paymentMethod || paymentMethod.id !== contribution.paymentMethod.id;\n      try {\n        if (hasUpdate) {\n          const variables = { order: { id: contribution.id } };\n          if (paymentMethod.service === PAYMENT_METHOD_SERVICE.PAYPAL) {\n            variables.paypalSubscriptionId = paymentMethod.paypalInfo.subscriptionId;\n          } else {\n            variables.paymentMethod = { id: paymentMethod.value ? paymentMethod.value.id : paymentMethod.id };\n          }\n          await submitUpdatePaymentMethod({ variables });\n        }\n        addToast({\n          type: TOAST_TYPE.SUCCESS,\n          message: (\n            <FormattedMessage\n              id=\"subscription.createSuccessUpdated\"\n              defaultMessage=\"Your recurring contribution has been <strong>updated</strong>.\"\n              values={I18nFormatters}\n            />\n          ),\n        });\n      } catch (error) {\n        const errorMsg = getErrorFromGraphqlException(error).message;\n        addToast({ type: TOAST_TYPE.ERROR, message: errorMsg });\n        return false;\n      }\n    },\n  };\n};\n\nconst UpdatePaymentMethodPopUp = ({ contribution, onCloseEdit, loadStripe, account }) => {\n  const intl = useIntl();\n  const { addToast } = useToasts();\n\n  // state management\n  const [showAddPaymentMethod, setShowAddPaymentMethod] = useState(false);\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(null);\n  const [loadingSelectedPaymentMethod, setLoadingSelectedPaymentMethod] = useState(true);\n  const [stripe, setStripe] = useState(null);\n  const [stripeElements, setStripeElements] = useState(null);\n  const [newPaymentMethodInfo, setNewPaymentMethodInfo] = useState(null);\n  const [addedPaymentMethod, setAddedPaymentMethod] = useState(null);\n  const [addingPaymentMethod, setAddingPaymentMethod] = useState(false);\n  const { isSubmitting, updatePaymentMethod } = useUpdatePaymentMethod(contribution);\n\n  // GraphQL mutations and queries\n  const { data, refetch } = useQuery(paymentMethodsQuery, {\n    variables: { accountId: account.id, orderId: contribution.id },\n    context: API_V2_CONTEXT,\n    fetchPolicy: 'network-only',\n  });\n  const [submitAddPaymentMethod] = useMutation(addCreditCardMutation, mutationOptions);\n  const [submitConfirmPaymentMethodMutation] = useMutation(confirmCreditCardMutation, mutationOptions);\n\n  const handleAddPaymentMethodResponse = async response => {\n    const { paymentMethod, stripeError } = response;\n    if (stripeError) {\n      return handleStripeError(paymentMethod, stripeError);\n    } else {\n      return handleSuccess(paymentMethod);\n    }\n  };\n\n  const handleStripeError = async (paymentMethod, stripeError) => {\n    const { message, response } = stripeError;\n\n    if (!response) {\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        message: message,\n      });\n      setAddingPaymentMethod(false);\n      return false;\n    }\n\n    const stripe = await getStripe();\n    const result = await stripe.handleCardSetup(response.setupIntent.client_secret);\n    if (result.error) {\n      addToast({\n        type: TOAST_TYPE.ERROR,\n        message: result.error.message,\n      });\n      setAddingPaymentMethod(false);\n      return false;\n    } else {\n      try {\n        const response = await submitConfirmPaymentMethodMutation({\n          variables: { paymentMethod: { id: paymentMethod.id } },\n        });\n        return handleSuccess(response.data.confirmCreditCard.paymentMethod);\n      } catch (error) {\n        addToast({\n          type: TOAST_TYPE.ERROR,\n          message: error.message,\n        });\n        setAddingPaymentMethod(false);\n        return false;\n      }\n    }\n  };\n\n  const handleSuccess = paymentMethod => {\n    setAddingPaymentMethod(false);\n    refetch();\n    setAddedPaymentMethod(paymentMethod);\n    setShowAddPaymentMethod(false);\n    setLoadingSelectedPaymentMethod(true);\n  };\n\n  // load stripe on mount\n  useEffect(() => {\n    loadStripe();\n  }, []);\n\n  // data handling\n  const paymentMethods = get(data, 'account.paymentMethods', null);\n  const existingPaymentMethod = get(data, 'order.paymentMethod', null);\n  const filterPaymentMethodsParams = [paymentMethods, contribution, addedPaymentMethod, existingPaymentMethod];\n  const paymentOptions = React.useMemo(\n    () => sortAndFilterPaymentMethods(...filterPaymentMethodsParams),\n    filterPaymentMethodsParams,\n  );\n\n  useEffect(() => {\n    if (!paymentOptions) {\n      return;\n    }\n    if (selectedPaymentMethod === null && contribution.paymentMethod) {\n      setSelectedPaymentMethod(first(paymentOptions.filter(option => option.id === contribution.paymentMethod.id)));\n    } else if (addedPaymentMethod) {\n      setSelectedPaymentMethod(paymentOptions.find(option => option.id === addedPaymentMethod.id));\n    }\n    setLoadingSelectedPaymentMethod(false);\n  }, [paymentOptions, addedPaymentMethod]);\n\n  return (\n    <Fragment>\n      <Flex width={1} alignItems=\"center\" justifyContent=\"center\" minHeight={50} px={3}>\n        <P my={2} fontSize=\"12px\" textTransform=\"uppercase\" color=\"black.700\">\n          {showAddPaymentMethod\n            ? intl.formatMessage(messages.addPaymentMethod)\n            : intl.formatMessage(messages.updatePaymentMethod)}\n        </P>\n        <Flex flexGrow={1} alignItems=\"center\">\n          <StyledHr width=\"100%\" mx={2} />\n        </Flex>\n        {showAddPaymentMethod ? (\n          <Lock size={20} />\n        ) : (\n          <StyledRoundButton\n            size={24}\n            onClick={() => setShowAddPaymentMethod(true)}\n            data-cy=\"recurring-contribution-add-pm-button\"\n          >\n            +\n          </StyledRoundButton>\n        )}\n      </Flex>\n      {showAddPaymentMethod ? (\n        <Box px={1} pt={2} pb={3}>\n          <AddPaymentMethod\n            order={contribution}\n            isSubmitting={isSubmitting}\n            setNewPaymentMethodInfo={setNewPaymentMethodInfo}\n            onStripeReady={({ stripe, stripeElements }) => {\n              setStripe(stripe);\n              setStripeElements(stripeElements);\n            }}\n            onPaypalSuccess={async paypalPaymentMethod => {\n              await updatePaymentMethod(paypalPaymentMethod);\n              onCloseEdit();\n            }}\n          />\n        </Box>\n      ) : loadingSelectedPaymentMethod ? (\n        <LoadingPlaceholder height={100} />\n      ) : (\n        <StyledRadioList\n          id=\"PaymentMethod\"\n          name={`${contribution.id}-PaymentMethod`}\n          keyGetter=\"key\"\n          options={paymentOptions}\n          onChange={setSelectedPaymentMethod}\n          value={selectedPaymentMethod?.key}\n        >\n          {({ radio, value: { title, subtitle, icon } }) => (\n            <PaymentMethodBox minHeight={50} py={2} bg=\"white.full\" data-cy=\"recurring-contribution-pm-box\" px={3}>\n              <Flex alignItems=\"center\">\n                <Box as=\"span\" mr={3} flexWrap=\"wrap\">\n                  {radio}\n                </Box>\n                <Flex mr={2} css={{ flexBasis: '26px' }}>\n                  {icon}\n                </Flex>\n                <Flex flexDirection=\"column\" width=\"100%\">\n                  <P fontSize=\"12px\" fontWeight={subtitle ? 600 : 400} color=\"black.900\" overflowWrap=\"anywhere\">\n                    {title}\n                  </P>\n                  {subtitle && (\n                    <P fontSize=\"12px\" fontWeight={400} lineHeight=\"18px\" color=\"black.500\" overflowWrap=\"anywhere\">\n                      {subtitle}\n                    </P>\n                  )}\n                </Flex>\n              </Flex>\n            </PaymentMethodBox>\n          )}\n        </StyledRadioList>\n      )}\n      <Flex flexGrow={1 / 4} width={1} alignItems=\"center\" justifyContent=\"center\">\n        <Flex flexGrow={1} alignItems=\"center\">\n          <StyledHr width=\"100%\" />\n        </Flex>\n      </Flex>\n      <Flex flexGrow={1 / 4} width={1} alignItems=\"center\" justifyContent=\"center\" minHeight={50}>\n        {showAddPaymentMethod ? (\n          <Fragment>\n            <StyledButton\n              buttonSize=\"tiny\"\n              minWidth={75}\n              onClick={() => {\n                setNewPaymentMethodInfo(null);\n                onCloseEdit();\n              }}\n            >\n              <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n            </StyledButton>\n            <StyledButton\n              ml={2}\n              minWidth={75}\n              buttonSize=\"tiny\"\n              buttonStyle=\"secondary\"\n              disabled={newPaymentMethodInfo ? !newPaymentMethodInfo.value?.complete : true}\n              type=\"submit\"\n              loading={addingPaymentMethod}\n              data-cy=\"recurring-contribution-submit-pm-button\"\n              onClick={async () => {\n                setAddingPaymentMethod(true);\n                if (!stripe) {\n                  addToast({\n                    type: TOAST_TYPE.ERROR,\n                    message: (\n                      <FormattedMessage\n                        id=\"Stripe.Initialization.Error\"\n                        defaultMessage=\"There was a problem initializing the payment form. Please reload the page and try again.\"\n                      />\n                    ),\n                  });\n                  setAddingPaymentMethod(false);\n                  return false;\n                }\n                const cardElement = stripeElements.getElement(CardElement);\n                const { token, error } = await stripe.createToken(cardElement);\n\n                if (error) {\n                  addToast({ type: TOAST_TYPE.ERROR, message: error.message });\n                  return false;\n                }\n                const newStripePaymentMethod = stripeTokenToPaymentMethod(token);\n                const newCreditCardInfo = merge(newStripePaymentMethod.data, pick(newStripePaymentMethod, ['token']));\n                try {\n                  const res = await submitAddPaymentMethod({\n                    variables: {\n                      creditCardInfo: newCreditCardInfo,\n                      name: get(newStripePaymentMethod, 'name'),\n                      account: { id: account.id },\n                    },\n                  });\n                  return handleAddPaymentMethodResponse(res.data.addCreditCard);\n                } catch (error) {\n                  const errorMsg = getErrorFromGraphqlException(error).message;\n                  addToast({ type: TOAST_TYPE.ERROR, message: errorMsg });\n                  setAddingPaymentMethod(false);\n                  return false;\n                }\n              }}\n            >\n              <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n            </StyledButton>\n          </Fragment>\n        ) : (\n          <Fragment>\n            <StyledButton buttonSize=\"tiny\" minWidth={75} onClick={onCloseEdit}>\n              <FormattedMessage id=\"actions.cancel\" defaultMessage=\"Cancel\" />\n            </StyledButton>\n            <StyledButton\n              ml={2}\n              minWidth={75}\n              buttonSize=\"tiny\"\n              buttonStyle=\"secondary\"\n              loading={isSubmitting}\n              data-cy=\"recurring-contribution-update-pm-button\"\n              onClick={() => updatePaymentMethod(selectedPaymentMethod).then(onCloseEdit)}\n            >\n              <FormattedMessage id=\"actions.update\" defaultMessage=\"Update\" />\n            </StyledButton>\n          </Fragment>\n        )}\n      </Flex>\n    </Fragment>\n  );\n};\n\nUpdatePaymentMethodPopUp.propTypes = {\n  data: PropTypes.object,\n  contribution: PropTypes.object.isRequired,\n  onCloseEdit: PropTypes.func,\n  loadStripe: PropTypes.func.isRequired,\n  account: PropTypes.object.isRequired,\n};\n\nexport default withStripeLoader(UpdatePaymentMethodPopUp);\n","import { difference, flatten, get, groupBy, identity, uniq } from 'lodash';\n\n/**\n * If a date doesn't have any data attached, API returns nothing.\n * But we need to make sure all series show 0 in these cases rather than `NaN` which\n * is shown by default by Apex charts.\n */\nexport const alignSeries = (series, sort = (a, b) => new Date(a.x) - new Date(b.x)) => {\n  const indexesBySeries = series.map(singleSeries => singleSeries.data.map(d => d.x));\n  const uniqueIndexes = uniq(flatten(indexesBySeries));\n  indexesBySeries.forEach((_, idx) => {\n    const missingIndexes = difference(uniqueIndexes, indexesBySeries[idx]);\n    if (missingIndexes.length) {\n      series[idx].data.push(...missingIndexes.map(x => ({ x, y: 0 })));\n    }\n    series[idx].data.sort(sort);\n  });\n\n  return series;\n};\n\nexport const extractSeriesFromTimeSeries = (timeSeries, { x, y, group, groupNameTransformer = identity }) => {\n  const groups = groupBy(timeSeries, group);\n\n  const categories = Object.keys(groups);\n  const series = categories.map(name => {\n    const data = groups[name].map(value => ({ x: get(value, x), y: get(value, y) }));\n    return { name: groupNameTransformer(name), data };\n  });\n\n  return { series, categories };\n};\n\nexport const formatAmountForLegend = (value, currency, locale, isCompactNotation = true) => {\n  return new Intl.NumberFormat(locale, {\n    currency,\n    style: 'currency',\n    notation: isCompactNotation ? 'compact' : 'standard',\n  }).format(value);\n};\n","/** Defines contributions types */\nexport const ContributionTypes = {\n  FINANCIAL_CUSTOM: 'FINANCIAL_CUSTOM',\n  FINANCIAL_CRYPTO: 'FINANCIAL_CRYPTO',\n  FINANCIAL_ONE_TIME: 'FINANCIAL_ONE_TIME',\n  FINANCIAL_RECURRING: 'FINANCIAL_RECURRING',\n  FINANCIAL_GOAL: 'FINANCIAL_GOAL',\n  PRODUCT: 'PRODUCT',\n  TICKET: 'TICKET',\n  MEMBERSHIP: 'MEMBERSHIP',\n  EVENT_PARTICIPATE: 'EVENT_PARTICIPATE',\n  EVENT_PASSED: 'EVENT_PASSED',\n  TIER_PASSED: 'TIER_PASSED',\n  CHILD_COLLECTIVE: 'CHILD_COLLECTIVE',\n  PROJECT: 'PROJECT',\n  ARCHIVED_PROJECT: 'ARCHIVED_PROJECT',\n};\n\nexport default ContributionTypes;\n","import { defineMessages } from 'react-intl';\n\nimport roles from '../constants/roles';\n\nconst RolesTranslations = defineMessages({\n  [roles.HOST]: {\n    id: 'Member.Role.HOST',\n    defaultMessage: 'Host',\n  },\n  [roles.ADMIN]: {\n    id: 'Member.Role.ADMIN',\n    defaultMessage: 'Admin',\n  },\n  [roles.MEMBER]: {\n    id: 'Member.Role.MEMBER',\n    defaultMessage: 'Core Contributor',\n  },\n  [roles.CONTRIBUTOR]: {\n    id: 'Member.Role.CONTRIBUTOR',\n    defaultMessage: 'Contributor',\n  },\n  [roles.BACKER]: {\n    id: 'Member.Role.BACKER',\n    defaultMessage: 'Financial Contributor',\n  },\n  [roles.ATTENDEE]: {\n    id: 'Member.Role.ATTENDEE',\n    defaultMessage: 'Attendee',\n  },\n  [roles.FOLLOWER]: {\n    id: 'Member.Role.FOLLOWER',\n    defaultMessage: 'Follower',\n  },\n  [roles.ACCOUNTANT]: {\n    id: 'Member.Role.ACCOUNTANT',\n    defaultMessage: 'Accountant',\n  },\n  [roles.CONNECTED_COLLECTIVE]: {\n    id: 'Member.Role.ConnectedAccount',\n    defaultMessage: 'Connected',\n  },\n  [roles.CONNECTED_ACCOUNT]: {\n    id: 'Member.Role.ConnectedAccount',\n    defaultMessage: 'Connected',\n  },\n});\n\n/**\n * Translate a member role\n *\n * @param {func} `formatMessage` - see `injectIntl` or `useIntl`\n * @param {string} `role` - see `roles`\n */\nconst formatMemberRole = (intl, role) => {\n  const i18nMsg = RolesTranslations[role];\n  return i18nMsg ? intl.formatMessage(i18nMsg) : role;\n};\n\nexport default formatMemberRole;\n","import { css } from 'styled-components';\n\n/**\n * A custom scrollbar for Chrome, more prettier than the system one.\n */\nexport const CustomScrollbarCSS = css`\n  @media (pointer: fine) {\n    &::-webkit-scrollbar {\n      height: 8px;\n      margin: 0 16px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background: #d1d1d3;\n      border-radius: 16px;\n      &:hover {\n        background: #aaa;\n      }\n    }\n\n    &::-webkit-scrollbar-track {\n      background: #f2f3f4;\n      border-radius: 20px;\n    }\n\n    &::-webkit-scrollbar-button {\n      color: white;\n    }\n  }\n`;\n"],"names":["React","Container","ContainerOverlay","backgroundType","backgroundOpacity","props","isDark","defaultOpacity","opacity","lightness","defaultProps","FormattedMessage","Link","LinkContributor","contributor","children","isGuest","isIncognito","collectiveSlug","name","useEffect","useState","StyledLink","tile2Long","tile","zoom","Math","pow","tile2Lat","n","PI","atan","exp","long2tile","long","floor","lat2tile","lat","log","tan","cos","makeBbox","x","y","south","north","west","east","Map","src","prepareMap","bbox","width","height","styled","isURL","Flex","P","LocationSection","section","Location","location","address","country","showTitle","Component","Close","themeGet","StyledLinkButton","H1","NotificationBarLink","theme","colors","blue","NotificationBarButton","CloseIcon","NotificationBarContainer","getBackgroundColor","type","NotificationBar","title","description","actions","inline","dismiss","mb","display","Array","isArray","map","action","useIntl","stripTime","dayjs","StyledSelectFilter","getPastDateInterval","timeUnit","from","subtract","startOf","to","endOf","PERIOD_FILTER_PRESETS","allTime","label","getInterval","today","thisMonth","thisYear","pastWeek","pastMonth","pastYear","PERIOD_FILTER_SELECT_STYLES","dropdownIndicator","paddingTop","paddingBottom","option","fontSize","getSelectedPeriodOptionFromInterval","isSameDay","dayjsDate","otherDate","isSame","preset","Object","keys","find","presetDetails","presetInterval","value","periodSelectThemeBuilder","spacing","controlHeight","PeriodFilterPresetsSelect","onChange","interval","inputId","formatDateFn","intl","selectedOption","useMemo","options","presetKey","newInterval","Fragment","gql","graphql","injectIntl","formatCurrency","API_V2_CONTEXT","gqlV1","compose","StyledButton","TOAST_TYPE","withToasts","SendMoneyToCollectiveBtn","onClick","bind","state","prevProps","isTransferApproved","currency","amount","fromCollective","toCollective","data","LoggedInUser","isAdminOfCollectiveOrHost","paymentMethods","length","addToast","ERROR","message","setState","loading","order","valueInCents","toAccount","fromAccount","paymentMethod","id","frequency","isBalanceTransfer","sendMoneyToCollective","variables","update","store","createOrder","balance","stats","writeFragment","fragment","collectiveBalanceFragment","SUCCESS","toCollectiveName","customButton","locale","confirmTransfer","collective","paymentMethodsQuery","addPaymentMethodsData","context","slug","skip","sendMoneyToCollectiveMutation","addSendMoneyToCollectiveMutation","addGraphql","border","color","layout","BackgroundBar","div","ProgressBar","StyledProgressBar","percentage","backgroundColor","borderRadius","PropTypes","css","CustomScrollbarCSS","Dimensions","ContributeCardsContainer","disableScroll","disableScrollSnapping","MAX_SECTION_WIDTH","propTypes","bool","editCollectiveSettingsMutation","editAccountSettingMutation","editCollectiveLongDescriptionMutation","editCollectiveAvatarMutation","editCollectiveBackgroundMutation","defineMessages","ContributionTypes","ContributorAvatar","Box","StyledHr","StyledTag","CONTRIBUTE_CARD_BORDER_RADIUS","CONTRIBUTE_CARD_WIDTH","MAX_CONTRIBUTORS_PER_CONTRIBUTE_CARD","StyledContributeCard","primary","CoverImage","radial","image","applyGrayscale","isDisabled","contributionType","EVENT_PASSED","Description","I18nContributionType","FINANCIAL_CUSTOM","defaultMessage","FINANCIAL_CRYPTO","FINANCIAL_ONE_TIME","FINANCIAL_RECURRING","FINANCIAL_GOAL","EVENT_PARTICIPATE","TIER_PASSED","PRODUCT","TICKET","MEMBERSHIP","CHILD_COLLECTIVE","PROJECT","ARCHIVED_PROJECT","getContributeCTA","getFooterHeading","getCTAButtonStyle","ContributeCard","route","buttonText","contributors","hideContributors","disableCTA","hideCTA","onClickEdit","tier","isPreview","totalContributors","all","formatMessage","slice","CONTRIBUTE_CARD_PADDING_X","ContributeCardContainer","attrs","px","scrollSnapAlign","getCollectivePageRoute","Contribute","messages","ContributeCrypto","ContributeCustom","CollapsableText","text","maxLength","isCollapsed","setCollapsed","e","preventDefault","stopPropagation","INTERVALS","TierTypes","getPrecisionFromAmount","graphqlAmountValueInCents","isPastEvent","useLoggedInUser","isTierExpired","capitalize","FormattedMoneyAmount","StyledTooltip","Span","fallbackDescription","getContributionTypeFromTier","isPassed","goal","flexible","TierTitle","useStandalonePage","legacyId","canContribute","isActive","Boolean","ContributeTier","isFlexibleAmount","amountType","isFlexibleInterval","minAmount","minimumAmount","amountRaised","tierIsExpired","tierType","hasNoneLeft","availableQuantity","canContributeToCollective","tierLegacyId","tierName","minAmountWithCurrency","button","maxQuantity","fontWeight","goalWithInterval","round","lineHeight","StyledRoundButton","CreateNewCard","black","CreateNew","Lock","Avatar","LinkCollective","StyledModal","ModalBody","ModalFooter","ModalHeader","StyledTextarea","placeholder","ApplicationRejectionReasonModal","onClose","onConfirm","modalProps","rejectionReason","setRejectionReason","isLegacyAPI","admins","nodes","coreContributors","totalAdminCount","totalCount","website","admin","account","field","accountName","target","InfoCircle","Ban","Check","AcceptRejectButtons","isLoading","onApprove","onReject","disabled","disabledMessage","showRejectModal","setShowRejectModal","setAction","StyledCheckbox","ApplicationMessageModal","setMessage","isPrivate","setIsPrivate","checked","verticalAlign","InfoSectionHeader","icon","CheckShield","relativeTime","spdxLicenses","extend","FieldWithValidationBadge","isValid","msg","license","licenseManually","lastCommitTimeAgo","orgAccount","personalAccount","isFork","isNotFork","collaboratorsCount","starsCount","isRepoAdmin","isNotRepoAdmin","ValidatedRepositoryInfo","customData","repositoryUrl","licenseSpdxId","validatedRepositoryInfo","split","fields","lastCommitDate","timeAgo","fromNow","isOwnedByOrg","count","isAdmin","useMutation","AlertTriangle","ExternalLink","Mail","padding","getCollectiveMainTag","i18nGraphqlException","i18nOCFApplicationFormLabel","I18nCollectiveTags","CommentIcon","APPLICATION_DATA_AMOUNT_FIELDS","StyledCollectiveCard","useToasts","ApplicationBody","CollectiveCardBody","processApplicationAccountFields","processApplicationMutation","approved","rejected","ACTIONS","APPROVE","REJECT","SEND_PRIVATE_MESSAGE","SEND_PUBLIC_MESSAGE","StatusTag","status","tagProps","textTransform","mr","getStatus","isDone","latestAction","getSuccessToast","result","conversation","duration","UserInputContainer","fontStyle","PendingApplication","host","application","setIsDone","setLatestAction","showContactModal","setShowContactModal","callProcessApplication","hasNothingToShow","requiresMinimumNumberOfAdmins","policies","COLLECTIVE_MINIMUM_ADMINS","numberOfAdmins","hasEnoughAdmins","hasEnoughInvitedAdmins","memberInvitations","processApplication","onSuccess","tags","key","includes","resetMessage","MessageSquare","GQLV2_SUPPORTED_PAYMENT_METHOD_TYPES","PAYMENT_METHOD_SERVICE","PAYMENT_METHOD_TYPE","getIntervalFromContributionFrequency","CreditCard","NewCreditCardForm","PayWithPaypalButton","getSubscriptionStartDate","nextChargeDate","isAfter","STRIPE","AddPaymentMethod","onStripeReady","onPaypalSuccess","setNewPaymentMethodInfo","isSubmitting","hasStripe","supportedPaymentMethods","CREDIT_CARD","hasPaypal","PAYPAL","defaultProvider","selectedProvider","setSelectedProvider","paypalClientId","totalAmount","size","subscriptionId","service","SUBSCRIPTION","paypalInfo","useQuery","CardElement","getErrorFromGraphqlException","getPaymentMethodName","getPaymentMethodIcon","getPaymentMethodMetadata","getStripe","stripeTokenToPaymentMethod","I18nFormatters","LoadingPlaceholder","withStripeLoader","StyledRadioList","PaymentMethodBox","updatePaymentMethod","addPaymentMethod","paymentMethodFragment","updatePaymentMethodMutation","paymentMethodResponseFragment","addCreditCardMutation","confirmCreditCardMutation","mutationOptions","sortAndFilterPaymentMethods","contribution","addedPaymentMethod","existingPaymentMethod","minBalance","uniquePMs","getIsDisabled","pm","some","unshift","sort","pm1","pm2","subtitle","CollectiveId","useUpdatePaymentMethod","submitUpdatePaymentMethod","hasUpdate","paypalSubscriptionId","errorMsg","UpdatePaymentMethodPopUp","onCloseEdit","loadStripe","showAddPaymentMethod","setShowAddPaymentMethod","selectedPaymentMethod","setSelectedPaymentMethod","loadingSelectedPaymentMethod","setLoadingSelectedPaymentMethod","stripe","setStripe","stripeElements","setStripeElements","newPaymentMethodInfo","setAddedPaymentMethod","addingPaymentMethod","setAddingPaymentMethod","accountId","orderId","fetchPolicy","refetch","submitAddPaymentMethod","submitConfirmPaymentMethodMutation","handleAddPaymentMethodResponse","response","stripeError","handleStripeError","handleSuccess","handleCardSetup","setupIntent","client_secret","error","confirmCreditCard","filterPaymentMethodsParams","paymentOptions","filter","paypalPaymentMethod","radio","complete","cardElement","getElement","createToken","token","newStripePaymentMethod","newCreditCardInfo","creditCardInfo","res","addCreditCard","then","flexBasis","alignSeries","series","a","b","Date","indexesBySeries","singleSeries","d","uniqueIndexes","forEach","_","idx","missingIndexes","push","extractSeriesFromTimeSeries","timeSeries","group","groupNameTransformer","groups","categories","formatAmountForLegend","isCompactNotation","Intl","NumberFormat","style","notation","format","roles","RolesTranslations","HOST","ADMIN","MEMBER","CONTRIBUTOR","BACKER","ATTENDEE","FOLLOWER","ACCOUNTANT","CONNECTED_COLLECTIVE","CONNECTED_ACCOUNT","formatMemberRole","role","i18nMsg"],"sourceRoot":""}