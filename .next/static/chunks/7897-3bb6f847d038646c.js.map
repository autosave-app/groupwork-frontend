{"version":3,"file":"static/chunks/7897-3bb6f847d038646c.js","mappings":"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","sources":["webpack://_N_E/./components/CollectiveCard.js","webpack://_N_E/./components/Error.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { get } from 'lodash';\nimport { defineMessages, FormattedDate, FormattedMessage, injectIntl } from 'react-intl';\nimport styled from 'styled-components';\nimport { width } from 'styled-system';\n\nimport { defaultBackgroundImage } from '../lib/constants/collectives';\nimport { imagePreview } from '../lib/image-utils';\nimport { firstSentence } from '../lib/utils';\n\nimport Avatar from './Avatar';\nimport Container from './Container';\nimport Currency from './Currency';\nimport Link from './Link';\n\nconst CardWrapper = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  cursor: pointer;\n  vertical-align: top;\n  position: relative;\n  box-sizing: border-box;\n  width: 215px;\n  min-height: 380px;\n  border-radius: 15px;\n  background-color: #ffffff;\n  box-shadow: 0 1px 3px 0 rgba(45, 77, 97, 0.2);\n  overflow: hidden;\n  text-decoration: none !important;\n  ${width}\n`;\n\nconst NameWrapper = styled(Container)`\n  min-height: 20px;\n  font-size: 14px;\n  margin: 5px;\n  font-weight: 700;\n  text-align: center;\n  color: #303233;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst MembershipWrapper = styled(Container)`\n  border-top: 1px solid #f2f2f2;\n  padding: 1rem;\n  color: #303233;\n`;\n\nconst StatsWrapper = styled(MembershipWrapper)`\n  display: flex;\n  width: 100%;\n  box-sizing: border-box;\n  justify-content: space-around;\n`;\n\nconst ValueWrapper = styled(Container)`\n  font-weight: normal;\n  text-align: center;\n  color: #303233;\n  font-size: 1.4rem;\n  margin: 3px 2px 0px;\n  text-align: center;\n  margin: auto;\n`;\n\nconst LabelWrapper = styled(Container)`\n  font-size: 9px;\n  text-align: center;\n  font-weight: 300;\n  color: #a8afb3;\n  text-transform: uppercase;\n  text-align: center;\n  margin: auto;\n`;\n\nconst CommaList = styled.ul`\n  display: inline;\n  list-style: none;\n  padding: 0px;\n\n  li {\n    display: inline;\n  }\n\n  li::after {\n    content: ', ';\n  }\n\n  li:last-child::after {\n    content: '';\n  }\n`;\n\nclass CollectiveCard extends React.Component {\n  static propTypes = {\n    collective: PropTypes.object.isRequired,\n    membership: PropTypes.object,\n    memberships: PropTypes.array,\n    intl: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.messages = defineMessages({\n      'membership.role.host': {\n        id: 'Member.Role.HOST',\n        defaultMessage: 'Host',\n      },\n      'roles.admin.label': {\n        id: 'Member.Role.ADMIN',\n        defaultMessage: 'Admin',\n      },\n      'roles.member.label': {\n        id: 'Member.Role.MEMBER',\n        defaultMessage: 'Core Contributor',\n      },\n      'tier.name.sponsor': {\n        id: 'tier.name.sponsor',\n        defaultMessage: 'sponsor',\n      },\n      'tier.name.backer': {\n        id: 'tier.name.backer',\n        defaultMessage: 'backer',\n      },\n    });\n  }\n\n  render() {\n    const { intl, collective, membership } = this.props;\n    let { memberships } = this.props;\n    memberships = memberships || (membership ? [membership] : []);\n\n    const getTierName = membership => {\n      const tierName = get(membership, 'tier.name');\n      const role = get(membership, 'role');\n      if (!tierName) {\n        switch (role) {\n          case 'HOST':\n            return intl.formatMessage(this.messages['membership.role.host']);\n          case 'ADMIN':\n            return intl.formatMessage(this.messages['roles.admin.label']);\n          case 'MEMBER':\n            return intl.formatMessage(this.messages['roles.member.label']);\n          default:\n            if (collective.type === 'ORGANIZATION') {\n              return intl.formatMessage(this.messages['tier.name.sponsor']);\n            } else {\n              return intl.formatMessage(this.messages['tier.name.backer']);\n            }\n        }\n      }\n      return tierName;\n    };\n\n    const membershipDates = memberships.map(m => m.createdAt);\n    membershipDates.sort((a, b) => {\n      return b - a;\n    });\n\n    const oldestMembershipDate = membershipDates.length ? membershipDates[0] : null;\n    const roles = new Set(memberships.map(m => getTierName(m)));\n\n    const coverStyle = {};\n    const backgroundImage = imagePreview(\n      collective.backgroundImage || get(collective, 'parentCollective.backgroundImage'),\n      defaultBackgroundImage['COLLECTIVE'],\n      { width: 400 },\n    );\n\n    if (!coverStyle.backgroundImage && backgroundImage) {\n      coverStyle.backgroundImage = `url('${backgroundImage}')`;\n      coverStyle.backgroundSize = 'cover';\n      coverStyle.backgroundPosition = 'center center';\n    }\n\n    const truncatedDescription = collective.description && firstSentence(collective.description, 80);\n    const description = collective.description;\n\n    let route;\n    if (collective.type === 'EVENT') {\n      route = `/${collective.parentCollective?.slug || 'collective'}/events/${collective.slug}`;\n    } else {\n      route = `/${collective.slug}`;\n    }\n\n    const backersCount = get(collective, 'backers.totalCount');\n\n    return (\n      <Link href={route} target=\"_top\">\n        <CardWrapper className={`CollectiveCard ${collective.type}`} {...this.props}>\n          <Container position=\"relative\" overflow=\"hidden\" width=\"100%\" height=\"14rem\" borderBottom=\"5px solid #46b0ed\">\n            <Container\n              position=\"absolute\"\n              top=\"0\"\n              left=\"0\"\n              width=\"100%\"\n              height=\"100%\"\n              backgroundSize=\"cover\"\n              backgroundPosition=\"center\"\n              style={coverStyle}\n            />\n            <Container\n              display=\"flex\"\n              height=\"100%\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              position=\"absolute\"\n              left=\"0\"\n              right=\"0\"\n              top=\"0\"\n              bottom=\"0\"\n            >\n              <Avatar collective={collective} radius={65} />\n            </Container>\n          </Container>\n          <Container padding=\"1rem\" minHeight=\"11rem\">\n            <NameWrapper>{collective.name}</NameWrapper>\n            <Container\n              fontWeight=\"normal\"\n              textAlign=\"center\"\n              color=\"#787d80\"\n              fontSize=\"1.2rem\"\n              lineHeight=\"1.3\"\n              margin=\"0 5px\"\n              minHeight=\"50px\"\n              title={description}\n            >\n              {truncatedDescription}\n            </Container>\n          </Container>\n          <Container fontSize=\"1.1rem\" width=\"100%\" minHeight=\"6rem\" textAlign=\"center\">\n            {collective.type === 'COLLECTIVE' && backersCount > 0 && (\n              <StatsWrapper>\n                <div className=\"backers\">\n                  <ValueWrapper>{backersCount}</ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage\n                      id=\"collective.card.stats.backers\"\n                      defaultMessage=\"{n, plural, one {backer} other {backers}}\"\n                      values={{ n: backersCount }}\n                    />\n                  </LabelWrapper>\n                </div>\n                <div className=\"yearlyBudget\">\n                  <ValueWrapper>\n                    <Currency\n                      value={collective.stats.yearlyBudget.valueInCents}\n                      currency={collective.stats.yearlyBudget.currency}\n                    />\n                  </ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage id=\"collective.card.stats.yearlyBudget\" defaultMessage={'yearly budget'} />\n                  </LabelWrapper>\n                </div>\n              </StatsWrapper>\n            )}\n            {collective.memberOf && collective.memberOf.totalCount > 0 && collective.type === 'ORGANIZATION' && (\n              <StatsWrapper>\n                <div className=\"backers\">\n                  <ValueWrapper>{collective.memberOf.totalCount}</ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage\n                      id=\"collective.card.memberOf.count\"\n                      defaultMessage=\"Contributor to {n, plural, one {Collective} other {Collectives}}\"\n                      values={{ n: collective.memberOf.totalCount }}\n                    />\n                  </LabelWrapper>\n                </div>\n                <div className=\"yearlyBudget\">\n                  <ValueWrapper>\n                    <Currency\n                      value={collective.stats.totalAmountSpent.valueInCents}\n                      currency={collective.stats.totalAmountSpent.currency}\n                    />\n                  </ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage id=\"AmountContributed\" defaultMessage=\"Contributed\" />\n                  </LabelWrapper>\n                </div>\n              </StatsWrapper>\n            )}\n            {collective.stats && collective.stats.collectives && (\n              <StatsWrapper>\n                <div className=\"backers\">\n                  <ValueWrapper>{get(collective, 'stats.collectives.hosted')}</ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage\n                      id=\"collective.card.collectives.count\"\n                      defaultMessage=\"Hosted {n, plural, one {Collective} other {Collectives}}\"\n                      values={{ n: get(collective, 'stats.collectives.hosted') }}\n                    />\n                  </LabelWrapper>\n                </div>\n                <div className=\"currency\">\n                  <ValueWrapper>{collective.currency}</ValueWrapper>\n                  <LabelWrapper>\n                    <FormattedMessage id=\"currency\" defaultMessage=\"currency\" />\n                  </LabelWrapper>\n                </div>\n              </StatsWrapper>\n            )}\n            {roles && roles.size > 0 && (\n              <MembershipWrapper>\n                <Container\n                  minHeight=\"13px\"\n                  fontWeight=\"700\"\n                  letterSpacing=\"3px\"\n                  color=\"#75cc1f\"\n                  textTransform=\"uppercase\"\n                >\n                  <CommaList>\n                    {Array.from(roles).map(role => (\n                      <li key={role}>{role}</li>\n                    ))}\n                  </CommaList>\n                </Container>\n                {oldestMembershipDate && (\n                  <Container\n                    minHeight=\"18px\"\n                    fontSize=\"12px\"\n                    fontWeight=\"500\"\n                    lineHeight=\"1.5\"\n                    textAlign=\"center\"\n                    color=\"#aab0b3\"\n                    textTransform=\"capitalize\"\n                  >\n                    <FormattedMessage\n                      id=\"membership.since\"\n                      defaultMessage={'since {date}'}\n                      values={{\n                        date: <FormattedDate value={oldestMembershipDate} month=\"long\" year=\"numeric\" />,\n                      }}\n                    />\n                  </Container>\n                )}\n              </MembershipWrapper>\n            )}\n            {memberships.map(\n              membership =>\n                membership.role === 'BACKER' &&\n                get(membership, 'stats.totalDonations') > 0 && (\n                  <MembershipWrapper key={membership.id}>\n                    <Container fontSize=\"2rem\">\n                      <Currency\n                        value={get(membership, 'stats.totalDonations')}\n                        currency={get(membership, 'collective.currency')}\n                      />\n                    </Container>\n                    <FormattedMessage id=\"membership.totalDonations.title\" defaultMessage={'Amount contributed'} />\n                  </MembershipWrapper>\n                ),\n            )}\n          </Container>\n        </CardWrapper>\n      </Link>\n    );\n  }\n}\n\nexport default injectIntl(CollectiveCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { H1 } from './Text';\n\nconst ErrorComponent = ({ message }) => {\n  return (\n    <div className=\"Error\">\n      <H1 textAlign=\"center\" padding=\"8rem\">\n        {message || 'unknown error'}\n      </H1>\n    </div>\n  );\n};\n\nErrorComponent.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ErrorComponent;\n"],"names":["React","defineMessages","FormattedDate","FormattedMessage","injectIntl","styled","width","defaultBackgroundImage","imagePreview","firstSentence","Avatar","Container","Currency","Link","CardWrapper","NameWrapper","MembershipWrapper","StatsWrapper","ValueWrapper","LabelWrapper","CommaList","ul","CollectiveCard","props","messages","id","defaultMessage","intl","collective","membership","memberships","getTierName","tierName","role","formatMessage","type","membershipDates","map","m","createdAt","sort","a","b","oldestMembershipDate","length","roles","Set","coverStyle","backgroundImage","backgroundSize","backgroundPosition","truncatedDescription","description","route","parentCollective","slug","backersCount","name","n","stats","yearlyBudget","valueInCents","currency","memberOf","totalCount","totalAmountSpent","collectives","size","Array","from","date","Component","H1","ErrorComponent","message"],"sourceRoot":""}