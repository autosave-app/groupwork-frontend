{"version":3,"file":"static/chunks/2021.7cf235c06b2a3422.js","mappings":"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","sources":["webpack://_N_E/./lib/hooks/useElementSize.js","webpack://_N_E/./components/StyledInputSlider.js","webpack://_N_E/./components/collective-page/hero/HeroBackgroundCropperModal.js"],"sourcesContent":["import React from 'react';\n\nexport const useElementSize = ({ defaultWidth = 0, defaultHeight = 0 }) => {\n  const ref = React.useRef();\n  const [elementSize, setElementSize] = React.useState({ width: defaultWidth, height: defaultHeight });\n\n  React.useEffect(() => {\n    const resizeObserver = new ResizeObserver(entries => {\n      const { width, height } = entries[0].contentRect;\n      setElementSize({ width, height });\n    });\n\n    resizeObserver.observe(ref.current);\n    return () => resizeObserver.disconnect();\n  }, []);\n\n  return { ref, ...elementSize };\n};\n","import { get } from 'lodash';\nimport styled, { css } from 'styled-components';\n\nimport StyledInput from './StyledInput';\n\nconst StyledInputSlider = styled(StyledInput).attrs({\n  type: 'range',\n})`\n  /** Reset styles */\n  -webkit-appearance: none;\n  padding: 0;\n  font: inherit;\n  outline: none;\n  box-sizing: border-box;\n  cursor: pointer;\n\n  /** Custom styles for the track */\n  border-radius: 8px;\n  height: 4px;\n\n  /** Custom styles for the slider */\n  ${props => {\n    const color = get(props.theme, `colors.${props.color}`) || props.color;\n    return css`\n      /*Chrome*/\n      @media screen and (-webkit-min-device-pixel-ratio: 0) {\n        &::-webkit-slider-thumb {\n          border-radius: 100%;\n          height: 14px;\n          width: 14px;\n        }\n        /** FF*/\n        &::-moz-range-thumb {\n          border-radius: 100%;\n          height: 14px;\n          width: 14px;\n        }\n        /* IE*/\n        &::-ms-fill-lower {\n          border-radius: 100%;\n          height: 14px;\n          width: 14px;\n        }\n      }\n\n      /** Change thumb color only when not disabled */\n      &:not(:disabled) {\n        /*Chrome*/\n        @media screen and (-webkit-min-device-pixel-ratio: 0) {\n          &::-webkit-slider-thumb {\n            -webkit-appearance: none;\n            background: ${color};\n            border: 1px solid ${color};\n          }\n        }\n        /** FF*/\n        &::-moz-range-thumb {\n          background-color: ${color};\n          border: 1px solid ${color};\n        }\n        /* IE*/\n        &::-ms-fill-lower {\n          background-color: ${color};\n          border: 1px solid ${color};\n        }\n      }\n    `;\n  }}\n`;\n\nStyledInputSlider.defaultProps = {\n  color: 'primary.600',\n  backgroundColor: 'black.200',\n};\n\nexport default StyledInputSlider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/client';\nimport { Image as ImageIcon } from '@styled-icons/boxicons-regular/Image';\nimport { AngleDoubleDown } from '@styled-icons/fa-solid/AngleDoubleDown';\nimport { cloneDeep, get, set } from 'lodash';\nimport Dropzone from 'react-dropzone';\nimport Cropper from 'react-easy-crop';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { upload } from '../../../lib/api';\nimport { formatErrorMessage, getErrorFromXhrUpload, i18nGraphqlException } from '../../../lib/errors';\nimport { useElementSize } from '../../../lib/hooks/useElementSize';\nimport { mergeRefs } from '../../../lib/react-utils';\n\nimport Container from '../../Container';\nimport ContainerOverlay from '../../ContainerOverlay';\nimport { Box, Flex } from '../../Grid';\nimport StyledButton from '../../StyledButton';\nimport { DROPZONE_ACCEPT_IMAGES } from '../../StyledDropzone';\nimport StyledInputSlider from '../../StyledInputSlider';\nimport StyledModal, { ModalBody, ModalFooter, ModalHeader } from '../../StyledModal';\nimport { Span } from '../../Text';\nimport { TOAST_TYPE, useToasts } from '../../ToastProvider';\nimport { editCollectiveBackgroundMutation } from '../graphql/mutations';\n\nimport {\n  BASE_HERO_HEIGHT,\n  BASE_HERO_WIDTH,\n  DEFAULT_BACKGROUND_CROP,\n  getAlignedRight,\n  getCrop,\n  getZoom,\n  StyledHeroBackground,\n} from './HeroBackground';\n\nconst KEY_IMG_REMOVE = '__REMOVE__';\nconst BUTTONS_PROPS = { buttonSize: 'small', py: 1, my: 1, mx: 2, width: ['100%', 'auto'] };\n\nconst EmptyDropzoneContainer = styled.div`\n  border: 2px dashed #c3c6cb;\n  cursor: pointer;\n  box-sizing: border-box;\n  border-radius: 4px;\n  height: 122px;\n  text-align: center;\n  background: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover:not(:disabled) {\n    background: #f9f9f9;\n    border-color: ${props => props.theme.colors.primary[300]};\n  }\n\n  &:focus {\n    outline: 0;\n    border-color: ${props => props.theme.colors.primary[500]};\n  }\n`;\n\nconst HeroBackgroundCropperModal = ({ onClose, collective }) => {\n  const [isSubmitting, setSubmitting] = React.useState(false); // Not using Apollo to have a common flag with file upload\n  const intl = useIntl();\n  const { addToast } = useToasts();\n  const [editBackground] = useMutation(editCollectiveBackgroundMutation);\n  const containerSize = useElementSize({ defaultWidth: 600 });\n  const [mediaSize, setMediaSize] = React.useState();\n  const [crop, onCropChange] = React.useState(getCrop(collective));\n  const [zoom, onZoomChange] = React.useState(getZoom(collective));\n  const [isAlignedRight, setAlignedRight] = React.useState(getAlignedRight(collective));\n  const [uploadedImage, setUploadedImage] = React.useState();\n  const scale = containerSize.width / BASE_HERO_WIDTH;\n  const transform = scale ? `scale(${scale})` : undefined;\n  const minZoom = 0.25;\n  const maxZoom = 5;\n  const hasImage = Boolean(collective.backgroundImage ? uploadedImage !== KEY_IMG_REMOVE : uploadedImage);\n\n  const onDrop = ([file]) => {\n    onZoomChange(1);\n    onCropChange(DEFAULT_BACKGROUND_CROP);\n    setAlignedRight(true);\n    setUploadedImage(Object.assign(file, { preview: URL.createObjectURL(file) }));\n  };\n\n  return (\n    <StyledModal onClose={onClose} ignoreEscapeKey>\n      <ModalHeader mb={3}>\n        <Span fontSize=\"20px\" fontWeight=\"500\">\n          <FormattedMessage defaultMessage=\"Add cover image\" />\n        </Span>\n      </ModalHeader>\n\n      <Dropzone onDrop={onDrop} multiple={false} accept={DROPZONE_ACCEPT_IMAGES}>\n        {({ isDragActive, isDragAccept, getRootProps, getInputProps, open }) => {\n          const rootProps = getRootProps();\n          return (\n            <React.Fragment>\n              <ModalBody>\n                <Container position=\"relative\" width=\"510px\" maxWidth=\"100%\">\n                  <Container\n                    position=\"relative\"\n                    height={BASE_HERO_HEIGHT * scale}\n                    {...getRootProps()}\n                    ref={mergeRefs([containerSize.ref, rootProps.ref])}\n                    onClick={hasImage ? null : rootProps.onClick} // Invalidate click event if there's already an image\n                  >\n                    {isDragActive && (\n                      <ContainerOverlay>\n                        {isDragAccept ? (\n                          <React.Fragment>\n                            <Box mb={2}>\n                              <AngleDoubleDown size=\"32px\" />\n                            </Box>\n                            <FormattedMessage id=\"uploadImage.isDragActive\" defaultMessage=\"Drop it like it's hot 🔥\" />\n                          </React.Fragment>\n                        ) : (\n                          <FormattedMessage\n                            id=\"uploadImage.isDragReject\"\n                            defaultMessage=\"🚫 This file type is not accepted\"\n                          />\n                        )}\n                      </ContainerOverlay>\n                    )}\n                    <input data-cy=\"heroBackgroundDropzone\" {...getInputProps()} />\n                    {hasImage ? (\n                      <Container\n                        position=\"absolute\"\n                        width={BASE_HERO_WIDTH}\n                        height={BASE_HERO_HEIGHT}\n                        left={0}\n                        top={0}\n                        border=\"1px solid grey\"\n                        css={{ transform, transformOrigin: 'top left' }}\n                      >\n                        <StyledHeroBackground\n                          data-cy=\"collective-background-image-styledBackground\"\n                          backgroundImage={collective.backgroundImageUrl}\n                          isAlignedRight={isAlignedRight}\n                          isEditing={hasImage}\n                        >\n                          <Cropper\n                            image={uploadedImage ? uploadedImage.preview : collective.backgroundImageUrl}\n                            cropSize={{ width: BASE_HERO_WIDTH, height: BASE_HERO_HEIGHT }}\n                            crop={crop}\n                            zoom={zoom}\n                            minZoom={minZoom}\n                            maxZoom={maxZoom}\n                            zoomSpeed={0.5}\n                            restrictPosition={false}\n                            onCropChange={onCropChange}\n                            onZoomChange={onZoomChange}\n                            onMediaLoaded={mediaSize =>\n                              setMediaSize({ width: mediaSize.naturalWidth, height: mediaSize.naturalHeight })\n                            }\n                            style={{\n                              imageStyle: { minHeight: '0', minWidth: '0', maxHeight: 'none', maxWidth: 'none' },\n                              containerStyle: { cursor: hasImage ? 'move' : 'auto' },\n                            }}\n                          />\n                        </StyledHeroBackground>\n                      </Container>\n                    ) : (\n                      <EmptyDropzoneContainer>\n                        <Container maxWidth={268}>\n                          <FormattedMessage\n                            defaultMessage=\"Drag and drop your image or <Link>click here</Link> to select it.\"\n                            values={{ Link: msg => <Span color=\"blue.500\">{msg}</Span> }}\n                          />\n                        </Container>\n                      </EmptyDropzoneContainer>\n                    )}\n                  </Container>\n\n                  <Flex alignItems=\"center\" justifyContent=\"center\" mt={3}>\n                    <ImageIcon size={14} color=\"#75777A\" />\n                    <StyledInputSlider\n                      min={minZoom}\n                      max={maxZoom}\n                      value={zoom}\n                      step=\"0.01\"\n                      onChange={e => onZoomChange(e.target.value)}\n                      mx={2}\n                      width=\"200px\"\n                      disabled={!hasImage}\n                    />\n                    <ImageIcon size={22} color=\"#75777A\" />\n                  </Flex>\n                </Container>\n              </ModalBody>\n              <ModalFooter>\n                <Flex justifyContent=\"space-between\" flexWrap=\"wrap\" my={1}>\n                  <Flex flexWrap=\"wrap\" width={['100%', 'auto']}>\n                    <StyledButton\n                      {...BUTTONS_PROPS}\n                      buttonStyle=\"primary\"\n                      data-cy=\"heroBackgroundDropzoneSave\"\n                      py={1}\n                      minWidth={75}\n                      loading={isSubmitting}\n                      onClick={async () => {\n                        setSubmitting(true);\n\n                        // We intentionally use the raw image URL rather than image service here\n                        // because the `backgroundImage` column is not supposed to store the\n                        // images service address\n                        let imgURL = collective.backgroundImage;\n                        try {\n                          // Upload image if changed or remove it\n                          if (uploadedImage === KEY_IMG_REMOVE) {\n                            imgURL = null;\n                          } else if (uploadedImage) {\n                            imgURL = await upload(uploadedImage, 'ACCOUNT_BANNER');\n                          }\n                        } catch (e) {\n                          const error = getErrorFromXhrUpload(e);\n                          addToast({ type: TOAST_TYPE.ERROR, message: formatErrorMessage(intl, error) });\n                          return;\n                        } finally {\n                          setSubmitting(false);\n                        }\n\n                        // Update settings\n                        try {\n                          const result = await editBackground({\n                            variables: {\n                              id: collective.id,\n                              backgroundImage: imgURL,\n                              settings: set(cloneDeep(collective.settings), 'collectivePage.background', {\n                                crop,\n                                zoom,\n                                mediaSize,\n                                isAlignedRight,\n                              }),\n                            },\n                          });\n\n                          // Reset\n                          const base = get(result, 'data.editCollective.settings.collectivePage.background');\n                          onCropChange((base && base.crop) || DEFAULT_BACKGROUND_CROP);\n                          onZoomChange((base && base.zoom) || 1);\n                          setUploadedImage(null);\n\n                          // Show a toast and close the modal\n                          addToast({\n                            type: TOAST_TYPE.SUCCESS,\n                            title: <FormattedMessage defaultMessage=\"Cover updated\" />,\n                            message: (\n                              <FormattedMessage defaultMessage=\"The page might take a few seconds to fully update\" />\n                            ),\n                          });\n\n                          onClose();\n                        } catch (e) {\n                          addToast({ type: TOAST_TYPE.ERROR, message: i18nGraphqlException(intl, e) });\n                        } finally {\n                          setSubmitting(false);\n                        }\n                      }}\n                    >\n                      <FormattedMessage id=\"save\" defaultMessage=\"Save\" />\n                    </StyledButton>\n                    <StyledButton\n                      {...BUTTONS_PROPS}\n                      disabled={!hasImage || isSubmitting}\n                      onClick={() => {\n                        onCropChange(DEFAULT_BACKGROUND_CROP);\n                        onZoomChange(1);\n                        setUploadedImage(KEY_IMG_REMOVE);\n                      }}\n                    >\n                      <FormattedMessage id=\"Reset\" defaultMessage=\"Reset\" />\n                    </StyledButton>\n                  </Flex>\n                  <StyledButton {...BUTTONS_PROPS} onClick={open} disabled={isSubmitting}>\n                    <FormattedMessage defaultMessage=\"Upload new image\" />\n                  </StyledButton>\n                </Flex>\n              </ModalFooter>\n            </React.Fragment>\n          );\n        }}\n      </Dropzone>\n    </StyledModal>\n  );\n};\n\nHeroBackgroundCropperModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  collective: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    backgroundImage: PropTypes.string.isRequired,\n    backgroundImageUrl: PropTypes.string.isRequired,\n    settings: PropTypes.object,\n  }).isRequired,\n};\n\nexport default HeroBackgroundCropperModal;\n"],"names":["React","useElementSize","defaultWidth","defaultHeight","ref","useRef","useState","width","height","elementSize","setElementSize","useEffect","resizeObserver","ResizeObserver","entries","contentRect","observe","current","disconnect","styled","css","StyledInput","StyledInputSlider","attrs","type","props","color","theme","defaultProps","backgroundColor","useMutation","Image","ImageIcon","AngleDoubleDown","Dropzone","Cropper","FormattedMessage","useIntl","upload","formatErrorMessage","getErrorFromXhrUpload","i18nGraphqlException","mergeRefs","Container","ContainerOverlay","Box","Flex","StyledButton","DROPZONE_ACCEPT_IMAGES","StyledModal","ModalBody","ModalFooter","ModalHeader","Span","TOAST_TYPE","useToasts","editCollectiveBackgroundMutation","BASE_HERO_HEIGHT","BASE_HERO_WIDTH","DEFAULT_BACKGROUND_CROP","getAlignedRight","getCrop","getZoom","StyledHeroBackground","KEY_IMG_REMOVE","BUTTONS_PROPS","buttonSize","py","my","mx","EmptyDropzoneContainer","div","colors","primary","HeroBackgroundCropperModal","onClose","collective","isSubmitting","setSubmitting","intl","addToast","editBackground","containerSize","mediaSize","setMediaSize","crop","onCropChange","zoom","onZoomChange","isAlignedRight","setAlignedRight","uploadedImage","setUploadedImage","scale","transform","undefined","minZoom","maxZoom","hasImage","Boolean","backgroundImage","onDrop","file","Object","assign","preview","URL","createObjectURL","isDragActive","isDragAccept","getRootProps","getInputProps","open","rootProps","onClick","backgroundImageUrl","naturalWidth","naturalHeight","imageStyle","minHeight","minWidth","maxHeight","maxWidth","containerStyle","cursor","Link","msg","e","target","value","imgURL","error","ERROR","message","variables","id","settings","result","base","SUCCESS","title","transformOrigin"],"sourceRoot":""}