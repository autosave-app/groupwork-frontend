{"version":3,"file":"static/chunks/PledgedCollectivePage.c289df93adc03abe.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@styled-icons/fa-solid/ExternalLinkAlt/ExternalLinkAlt.esm.js","webpack://_N_E/./components/PledgeCard.js","webpack://_N_E/./components/PledgedCollectivePage.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { StyledIconBase } from '@styled-icons/styled-icon';\nexport var ExternalLinkAlt = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var attrs = {\n    \"fill\": \"currentColor\",\n    \"xmlns\": \"http://www.w3.org/2000/svg\"\n  };\n  return /*#__PURE__*/React.createElement(StyledIconBase, _extends({\n    iconAttrs: attrs,\n    iconVerticalAlign: \"middle\",\n    iconViewBox: \"0 0 512 512\"\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M352 0c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9L370.7 96 201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L416 141.3l41.4 41.4c9.2 9.2 22.9 11.9 34.9 6.9s19.8-16.6 19.8-29.6V32c0-17.7-14.3-32-32-32H352zM80 32C35.8 32 0 67.8 0 112v320c0 44.2 35.8 80 80 80h320c44.2 0 80-35.8 80-80V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v112c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16h112c17.7 0 32-14.3 32-32s-14.3-32-32-32H80z\"\n  }));\n});\nExternalLinkAlt.displayName = 'ExternalLinkAlt';\nexport var ExternalLinkAltDimensions = {\n  height: 512,\n  width: 512\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport Avatar from './Avatar';\nimport Container from './Container';\nimport FormattedMoneyAmount from './FormattedMoneyAmount';\nimport LinkCollective from './LinkCollective';\nimport { P, Span } from './Text';\n\nconst PledgeCard = ({ currency, fromCollective, interval, publicMessage, totalAmount }) => (\n  <Container bg=\"white\" borderRadius=\"8px\" border=\"1px solid\" borderColor=\"black.transparent.20\" minHeight=\"100%\">\n    <Container display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" pt={4}>\n      <Container bg=\"black.200\" height=\"1px\" width={0.25} />\n\n      <LinkCollective collective={fromCollective}>\n        <Avatar collective={fromCollective} radius={[52, null, 65]} />\n      </LinkCollective>\n\n      <Container bg=\"black.200\" height=\"1px\" width={0.25} />\n    </Container>\n\n    <P textAlign=\"center\" fontWeight=\"bold\" mt={3} px={2}>\n      <LinkCollective collective={fromCollective}>{fromCollective.name}</LinkCollective>\n    </P>\n\n    <P fontSize=\"10px\" lineHeight=\"16px\" textAlign=\"center\" mt={2} px={2} pb={2}>\n      <FormattedMessage id=\"PledgeCard.HasPledged\" defaultMessage=\"Has pledged:\" />\n      <br />\n      <Span fontSize=\"12px\">\n        <FormattedMoneyAmount\n          amount={totalAmount}\n          currency={currency}\n          interval={interval}\n          amountStyles={{ fontWeight: 'bold' }}\n          precision={0}\n        />\n      </Span>\n    </P>\n\n    <P color=\"black.600\" fontSize=\"10px\" textAlign=\"center\" mt={1} px={3} pb={4}>\n      {publicMessage}\n    </P>\n  </Container>\n);\n\nPledgeCard.propTypes = {\n  currency: PropTypes.string.isRequired,\n  fromCollective: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string,\n    isIncognito: PropTypes.bool,\n  }).isRequired,\n  interval: PropTypes.string,\n  publicMessage: PropTypes.string,\n  totalAmount: PropTypes.number.isRequired,\n};\n\nexport default PledgeCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport { ExternalLinkAlt } from '@styled-icons/fa-solid/ExternalLinkAlt';\nimport { FormattedMessage } from 'react-intl';\n\nimport { gqlV1 } from '../lib/graphql/helpers';\n\nimport Container from './Container';\nimport Currency from './Currency';\nimport { Box, Flex, Grid } from './Grid';\nimport I18nFormatters from './I18nFormatters';\nimport Image from './Image';\nimport Link from './Link';\nimport Loading from './Loading';\nimport MessageBox from './MessageBox';\nimport Page from './Page';\nimport PledgeCard from './PledgeCard';\nimport StyledLink from './StyledLink';\nimport { H2, H3, H5, P } from './Text';\nimport { withUser } from './UserProvider';\n\nconst defaultPledgedLogo = '/static/images/default-pledged-logo.svg';\n\nexport const pledgedCollectivePageQuery = gqlV1/* GraphQL */ `\n  query PledgedCollectivePage($id: Int!) {\n    Collective(id: $id) {\n      id\n      pledges: orders(status: PLEDGED) {\n        id\n        currency\n        interval\n        publicMessage\n        status\n        totalAmount\n        fromCollective {\n          id\n          name\n          imageUrl(height: 128)\n          slug\n          type\n          isIncognito\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Display a collective with all its pledges\n */\nconst PledgedCollectivePage = ({ collective }) => {\n  const { loading, error, data } = useQuery(pledgedCollectivePageQuery, { variables: { id: collective.id } });\n\n  if (loading) {\n    return (\n      <Container py={[5, 6]}>\n        <Loading />\n      </Container>\n    );\n  } else if (error) {\n    return (\n      <Container py={[5, 6]}>\n        <MessageBox type=\"error\" withIcon>\n          {error.toString()}\n        </MessageBox>\n      </Container>\n    );\n  }\n\n  const pledges = [...data.Collective.pledges].reverse().filter(pledge => pledge.fromCollective);\n  const pledgeStats = pledges.reduce(\n    (stats, { fromCollective, totalAmount }) => {\n      stats[fromCollective.type]++;\n      stats.total += totalAmount;\n      return stats;\n    },\n    {\n      USER: 0,\n      ORGANIZATION: 0,\n      COLLECTIVE: 0,\n      total: 0,\n    },\n  );\n\n  const website = collective.website || collective.repositoryUrl;\n  return (\n    <Page title={collective.name}>\n      <Container\n        background=\"linear-gradient(180deg, #DBECFF, #FFFFFF)\"\n        borderBottom=\"1px solid\"\n        borderColor=\"black.200\"\n        py={4}\n      >\n        <Flex alignItems=\"center\" flexDirection=\"column\">\n          <Image src={defaultPledgedLogo} alt=\"Pledged Collective\" height={128} width={128} />\n\n          <H2 as=\"h1\">{collective.name}</H2>\n\n          <Box mb={4} mt={3}>\n            <StyledLink href={website} color=\"primary.500\" fontSize=\"12px\" openInNewTabNoFollow>\n              <ExternalLinkAlt size=\"1em\" /> {website}\n            </StyledLink>\n          </Box>\n        </Flex>\n      </Container>\n\n      <Container display=\"flex\" justifyContent=\"center\" position=\"relative\" top={-30}>\n        <StyledLink\n          as={Link}\n          href={`/${collective.slug}/pledges/new`}\n          buttonStyle=\"primary\"\n          buttonSize=\"large\"\n          data-cy=\"makeAPledgeButton\"\n        >\n          <FormattedMessage id=\"menu.createPledge\" defaultMessage=\"Make a Pledge\" />\n        </StyledLink>\n      </Container>\n\n      <Container\n        display=\"flex\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        maxWidth={800}\n        mx=\"auto\"\n        mt={4}\n        px={3}\n        data-cy=\"pledgeStats\"\n      >\n        <H3 fontWeight=\"normal\">\n          <FormattedMessage\n            id=\"pledge.stats\"\n            values={{\n              both: pledgeStats.ORGANIZATION + pledgeStats.COLLECTIVE && pledgeStats.USER ? 1 : 0,\n              orgCount: pledgeStats.ORGANIZATION + pledgeStats.COLLECTIVE,\n              userCount: pledgeStats.USER,\n              totalCount: pledgeStats.ORGANIZATION + pledgeStats.COLLECTIVE + pledgeStats.USER,\n              currency: collective.currency,\n              amount: (\n                <Currency\n                  data-cy=\"currencyAmount\"\n                  fontWeight=\"bold\"\n                  value={pledgeStats.total}\n                  currency={collective.currency}\n                  precision={0}\n                />\n              ),\n            }}\n            defaultMessage=\"{orgCount, plural, =0 {} one {# organization} other {# organizations}} {both, plural, =0 {} other { and }} {userCount, plural, =0 {} one {# individual } other {# individuals }} {totalCount, plural, one {has } other {have }} already pledged a total of {amount} {currency}\"\n          />\n        </H3>\n\n        <P color=\"black.600\" fontSize=\"12px\" lineHeight=\"18px\" my={4}>\n          <FormattedMessage\n            id=\"pledge.definition\"\n            defaultMessage=\"A pledge is a way to show interest in supporting a cause or project that is not yet on Open Collective, just like {collective}. If they create a Collective, you will receive an email asking you to fulfill your pledge.\"\n            values={{ collective: <strong>{collective.name}</strong> }}\n          />\n        </P>\n      </Container>\n\n      <Grid\n        maxWidth={800}\n        mx=\"auto\"\n        mb={5}\n        px={3}\n        data-cy=\"contributersGrouped\"\n        gridTemplateColumns=\"repeat(auto-fill, minmax(165px, 1fr))\"\n        gridGap={24}\n      >\n        {pledges.map((pledge, index) => (\n          <Container position=\"relative\" key={pledge.id} data-cy=\"contributers\">\n            {index === 0 && (\n              <Container position=\"absolute\" right={15} top={-10}>\n                <Image src=\"/static/icons/first-pledge-badge.svg\" alt=\"first pledge\" width={32} height={32} />\n              </Container>\n            )}\n            <PledgeCard {...pledge} />\n          </Container>\n        ))}\n      </Grid>\n      <Box px={3}>\n        <Container\n          alignItems=\"center\"\n          border=\"1px solid\"\n          borderColor=\"primary.300\"\n          borderRadius=\"12px\"\n          display=\"flex\"\n          flexDirection={['column', null, 'row']}\n          maxWidth={800}\n          mb={5}\n          mx=\"auto\"\n          px={[3, null, 4]}\n          py={4}\n          width={1}\n        >\n          <Box>\n            <H5 textAlign=\"left\" fontWeight=\"normal\" mb={1}>\n              <FormattedMessage\n                id=\"pledge.ownerQuestion\"\n                defaultMessage=\"Do you own {collective}?\"\n                values={{ collective: <strong>{collective.name}</strong> }}\n              />\n            </H5>\n            <P fontSize=\"12px\" color=\"black.500\" mt={3}>\n              <FormattedMessage\n                id=\"pledge.contactToClaim\"\n                defaultMessage=\"To claim this Collective, contact <SupportLink>support</SupportLink>.\"\n                values={I18nFormatters}\n              />\n            </P>\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nPledgedCollectivePage.propTypes = {\n  collective: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    slug: PropTypes.string.isRequired,\n    currency: PropTypes.string.isRequired,\n    website: PropTypes.string,\n    repositoryUrl: PropTypes.string,\n  }).isRequired,\n};\n\nexport default withUser(PledgedCollectivePage);\n"],"names":["React","FormattedMessage","Avatar","Container","FormattedMoneyAmount","LinkCollective","P","Span","PledgeCard","currency","fromCollective","interval","publicMessage","totalAmount","name","fontWeight","useQuery","ExternalLinkAlt","gqlV1","Currency","Box","Flex","Grid","I18nFormatters","Image","Link","Loading","MessageBox","Page","StyledLink","H2","H3","H5","withUser","defaultPledgedLogo","pledgedCollectivePageQuery","PledgedCollectivePage","collective","variables","id","loading","error","data","toString","pledges","Collective","reverse","filter","pledge","pledgeStats","reduce","stats","type","total","USER","ORGANIZATION","COLLECTIVE","website","repositoryUrl","slug","both","orgCount","userCount","totalCount","amount","map","index"],"sourceRoot":""}